{"version":3,"sources":["webpack:///build.js","webpack:///webpack/bootstrap a9b69e54d08ef4409439","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/vue-konva/lib/utils/index.js","webpack:///./node_modules/vue/dist/vue.esm.js","webpack:///./node_modules/vue-konva/lib/utils/updatePicture.js","webpack:///./node_modules/events/events.js","webpack:///src/App.vue","webpack:///./src/main.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/vue-konva/lib/index.js","webpack:///./node_modules/vue-konva/lib/components/Stage.js","webpack:///./node_modules/vue-konva/lib/utils/applyNodeProps.js","webpack:///./node_modules/vue-konva/lib/components/KonvaNode.js","webpack:///./node_modules/konva/konva.js","webpack:///./src/App.vue","webpack:///./src/App.vue?9f37","webpack:///./src/App.vue?4f34","webpack:///./node_modules/css-loader/lib/css-base.js","webpack:///./node_modules/vue-style-loader/lib/addStylesClient.js","webpack:///./node_modules/vue-style-loader/lib/listToStyles.js","webpack:///./node_modules/vue-loader/lib/component-normalizer.js","webpack:///./src/App.vue?053e"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","_interopRequireDefault","obj","default","camelize","str","replace","letter","index","toLowerCase","toUpperCase","capitalizeFirstLetter","string","charAt","slice","getName","componentTag","componentPrefix","copy","JSON","parse","stringify","createListener","output","keys","forEach","eventName","findParentKonva","instance","re","StageEmitter","$parent","findKonvaNode","getNode","$children","length","applyNodeProps","updatePicture","undefined","_updatePicture","_updatePicture2","_applyNodeProps","_applyNodeProps2","__webpack_exports__","value","global","setImmediate","isUndef","v","isDef","isTrue","isFalse","isPrimitive","isObject","isPlainObject","_toString","isRegExp","isValidArrayIndex","val","parseFloat","String","Math","floor","isFinite","toString","toNumber","isNaN","makeMap","expectsLowerCase","map","create","list","split","remove","arr","item","indexOf","splice","hasOwn","key","cached","fn","cache","polyfillBind","ctx","boundFn","a","arguments","apply","_length","nativeBind","bind","toArray","start","ret","Array","extend","to","_from","toObject","res","noop","b","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","Date","getTime","keysA","keysB","looseIndexOf","once","called","isReserved","charCodeAt","def","writable","parsePath","path","bailRE","test","segments","isNative","Ctor","pushTarget","target","targetStack","push","Dep","popTarget","pop","createTextVNode","VNode","cloneVNode","vnode","cloned","tag","data","children","text","elm","context","componentOptions","asyncFactory","ns","isStatic","isComment","fnContext","fnOptions","fnScopeId","asyncMeta","isCloned","toggleObserving","shouldObserve","protoAugment","src","__proto__","copyAugment","observe","asRootData","ob","__ob__","Observer","isServerRendering","isExtensible","_isVue","vmCount","defineReactive$$1","customSetter","shallow","dep","getOwnPropertyDescriptor","setter","set","childOb","depend","dependArray","newVal","notify","max","del","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","concat","mergeAssets","normalizeProps","options","props","type","normalizeInject","inject","normalized","normalizeDirectives","dirs","directives","update","mergeOptions","parent","child","mergeField","strat","strats","defaultStrat","_base","extends","mixins","resolveAsset","id","warnMissing","assets","camelizedId","PascalCaseId","capitalize","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","hyphenate","stringIndex","getPropDefaultValue","prevShouldObserve","$options","_props","getType","match","isSameType","expectedTypes","len","handleError","err","info","cur","hooks","errorCaptured","capture","globalHandleError","config","errorHandler","logError","inBrowser","inWeex","console","error","flushCallbacks","pending","copies","callbacks","withMacroTask","_withTask","useMacroTask","nextTick","cb","_resolve","macroTimerFunc","microTimerFunc","Promise","resolve","traverse","_traverse","seenObjects","clear","seen","isA","isFrozen","depId","has","add","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","createOnceHandler","old","event","normalizeEvent","passive","params","mergeVNodeHook","hookKey","hook","wrappedHook","oldHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","node","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","base","hasSymbol","Symbol","toStringTag","createAsyncPlaceholder","factory","createEmptyVNode","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","renderCompleted","$forceUpdate","reject","reason","then","component","delay","setTimeout","timeout","isAsyncPlaceholder","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$on","remove$1","$off","_target","onceHandler","oldListeners","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","setActiveInstance","prevActiveInstance","activeInstance","initLifecycle","abstract","$root","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","mountComponent","el","hydrating","$el","render","callHook","updateComponent","_update","_render","Watcher","before","$vnode","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","emptyObject","_parentVnode","_vnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","j","$emit","resetSchedulerState","queue","activatedChildren","waiting","flushing","flushSchedulerQueue","watcher","sort","run","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","devtools","emit","queueActivatedComponent","queueWatcher","proxy","sourceKey","sharedPropertyDefinition","initState","_watchers","opts","initProps","methods","initMethods","initData","_data","computed","initComputed","watch","nativeWatch","initWatch","propsOptions","isRoot","getData","watchers","_computedWatchers","isSSR","userDef","computedWatcherOptions","defineComputed","shouldCache","createComputedGetter","createGetterInvoker","dirty","evaluate","handler","createWatcher","expOrFn","$watch","initProvide","provide","_provided","initInjections","result","resolveInject","Reflect","ownKeys","filter","provideKey","source","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","$createElement","resolveFilter","identity","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","keyCodes","bindObjectProps","asProp","isSync","isReservedAttribute","mustUseProp","domProps","camelizedKey","$event","renderStatic","isInFor","_staticTrees","tree","staticRenderFns","_renderProxy","markStatic","markOnce","isOnce","markStaticNode","bindObjectListeners","existing","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","_compiled","needNormalization","injections","_scopeId","_c","createElement","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","createComponent","cid","resolveConstructorOptions","model","transformModel","functional","nativeOn","installComponentHooks","createComponentInstanceForVnode","_isComponent","inlineTemplate","hooksToMerge","toMerge","componentVNodeHooks","_merged","mergeHook$1","f1","f2","callback","normalizationType","alwaysNormalize","ALWAYS_NORMALIZE","_createElement","is","SIMPLE_NORMALIZE","getTagNamespace","isReservedTag","parsePlatformTagName","pre","applyNS","registerDeepBindings","force","style","class","initRender","parentData","initInternalComponent","constructor","vnodeComponentOptions","_componentTag","super","superOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","Vue","_init","initUse","use","plugin","installedPlugins","_installedPlugins","args","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","ASSET_TYPES","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","componentInstance","$destroy","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","isSVG","isUnknownElement","unknownElementCache","document","HTMLUnknownElement","HTMLElement","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","namespaceMap","createTextNode","createComment","insertBefore","newNode","referenceNode","removeChild","appendChild","nextSibling","setTextContent","textContent","setStyleScope","scopeId","registerRef","isRemoval","ref","refs","refInFor","sameVnode","sameInputType","typeA","typeB","isTextInputType","createKeyToOldIdx","beginIdx","endIdx","updateDirectives","oldVnode","oldDir","dir","isCreate","emptyNode","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","oldValue","callHook$1","componentUpdated","inserted","callInsert","modifiers","emptyModifiers","getRawDirName","rawName","join","updateAttrs","inheritAttrs","oldAttrs","setAttr","isIE","isEdge","isXlink","removeAttributeNS","xlinkNS","getXlinkProp","isEnumeratedAttr","removeAttribute","baseSetAttr","isBooleanAttr","isFalsyAttrValue","setAttributeNS","isIE9","__ieph","blocker","stopImmediatePropagation","removeEventListener","addEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","parseFilters","exp","pushFilter","filters","lastFilterIndex","trim","prev","expression","inSingle","inDouble","inTemplateString","inRegex","curly","square","paren","validDivisionCharRE","wrapFilter","baseWarn","msg","pluckModuleFunction","_","addProp","plain","addAttr","addRawAttr","attrsMap","attrsList","addDirective","arg","addHandler","important","warn","right","middle","events","native","nativeEvents","newHandler","getBindingAttr","getStatic","dynamicValue","getAndRemoveAttr","staticValue","removeFromMap","genComponentModel","number","valueExpression","assignment","genAssignmentCode","parseModel","lastIndexOf","index$1","expressionPos","expressionEndPos","eof","chr","next","isStringStart","parseString","parseBracket","inBracket","stringQuote","_warn","warn$1","genSelect","genCheckboxModel","genRadioModel","genDefaultModel","valueBinding","trueValueBinding","falseValueBinding","selectedVal","code","lazy","needCompositionGuard","RANGE_TOKEN","normalizeEvents","CHECKBOX_RADIO_TOKEN","change","createOnceHandler$1","target$1","remove$2","add$1","supportsPassive","updateDOMListeners","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","parseStyleText","getStyle","checkChild","styleData","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","setProp","addClass","classList","whitespaceRE","getAttribute","removeClass","tar","resolveTransition","def$$1","css","autoCssTransition","nextFrame","raf","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","TRANSITION","transitionEndEvent","animationEndEvent","ended","end","onEnd","styles","getComputedStyle","transitionDelays","transitionProp","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationProp","animationDurations","animationTimeout","ANIMATION","hasTransform","transformRE","delays","durations","toMs","Number","enter","toggleDisplay","_leaveCb","cancelled","transition","_enterCb","nodeType","enterClass","enterToClass","enterActiveClass","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","isRootInsert","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","rm","performLeave","beforeLeave","leaveClass","leaveActiveClass","leaveToClass","explicitLeaveDuration","afterLeave","leaveCancelled","delayLeave","invokerFns","_enter","setSelected","binding","actuallySetSelected","isMultiple","option","getValue","selectedIndex","hasNoMatchingOption","onCompositionStart","onCompositionEnd","trigger","createEvent","initEvent","dispatchEvent","locateNode","getRealChild","compOptions","extractTransitionData","key$1","placeholder","h","rawChild","hasParentTransition","isSameChild","oldChild","callPendingCbs","_moveCb","recordPosition","newPos","getBoundingClientRect","applyTranslation","oldPos","pos","dx","left","dy","top","moved","transform","WebkitTransform","transitionDuration","parseText","delimiters","tagRE","buildRegex","defaultTagRE","tokenValue","tokens","rawTokens","exec","@binding","transformNode","classBinding","genData","transformNode$1","styleBinding","genData$1","decodeAttr","shouldDecodeNewlines","encodedAttrWithNewLines","encodedAttr","decodingMap","parseHTML","html","advance","substring","parseEndTag","lowerCasedTagName","stack","lowerCasedTag","lastTag","expectHTML","isUnaryTag$$1","isUnaryTag","no","canBeLeftOpenTag$$1","canBeLeftOpenTag","isPlainTextElement","endTagLength","stackedTag","reStackedTag","reCache","RegExp","rest$1","all","endTag","shouldIgnoreFirstNewline","chars","textEnd","comment","commentEnd","shouldKeepComment","conditionalComment","conditionalEnd","doctypeMatch","doctype","endTagMatch","curIndex","startTagMatch","startTagOpen","attr","startTagClose","attribute","unarySlash","isNonPhrasingTag","unary","shouldDecodeNewlinesForHref","rest","createASTElement","makeAttrsMap","template","closeElement","element","inVPre","platformIsPreTag","inPre","postTransforms","warn$2","isPreTag","platformMustUseProp","platformGetTagNamespace","transforms","preTransforms","root","currentParent","preserveWhitespace","comments","guardIESVGBug","isForbiddenTag","forbidden","processPre","processRawAttrs","processed","processFor","processIf","processOnce","processElement","if","elseif","else","addIfCondition","block","processIfConditions","slotScope","slotTarget","lastNode","isTextTag","decodeHTMLCached","processKey","processRef","processSlot","processComponent","processAttrs","checkInFor","parseFor","inMatch","forAliasRE","for","alias","stripParensRE","iteratorMatch","forIteratorRE","iterator1","iterator2","findPrevElement","condition","ifConditions","slotName","isProp","dirRE","hasBindings","parseModifiers","modifierRE","bindRE","camel","onRE","argMatch","argRE","ieNSBug","ieNSPrefix","preTransformNode","typeBinding","ifCondition","ifConditionExtra","hasElse","elseIfCondition","branch0","cloneASTElement","branch1","branch2","optimize","isStaticKey","genStaticKeysCached","staticKeys","isPlatformReservedTag","markStatic$1","markStaticRoots","genStaticKeys$1","static","i$1","l$1","staticInFor","staticRoot","isBuiltInTag","isDirectChildOfTemplateFor","genHandlers","genHandler","isMethodPath","simplePathRE","isFunctionExpression","fnExpRE","genModifierCode","modifierCode","genGuard","keyModifier","genKeyFilter","genFilterCode","keyVal","parseInt","keyCode","keyName","keyNames","wrapListeners","bind$1","wrapData","generate","ast","state","CodegenState","genElement","staticProcessed","genStatic","onceProcessed","genOnce","forProcessed","genFor","ifProcessed","genIf","genSlot","genComponent","maybeComponent","genData$2","genChildren","originalPreState","onceId","altGen","altEmpty","genIfConditions","conditions","genTernaryExp","altHelper","genDirectives","dataGenFns","genProps","genScopedSlots","genInlineTemplate","needRuntime","hasRuntime","gen","inlineRenderFns","genScopedSlot","genForScopedSlot","checkSkip","altGenElement","altGenNode","el$1","normalizationType$1","getNormalizationType","genNode","needsNormalization","some","genComment","genText","transformSpecialNewlines","bind$$1","componentName","createFunction","errors","createCompileToFunctionFn","compile","compiled","fnGenErrors","getShouldDecode","href","div","innerHTML","getOuterHTML","outerHTML","container","cloneNode","freeze","camelizeRE","hyphenateRE","SSR_ATTR","LIFECYCLE_HOOKS","optionMergeStrategies","silent","productionTip","performance","warnHandler","ignoredElements","isReservedAttr","async","_lifecycleHooks","hasProto","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIOS","_isServer","_Set","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","Set","uid","subs","addSub","sub","removeSub","addDep","raw","prototypeAccessors","defineProperties","arrayProto","arrayMethods","method","original","observeArray","arrayKeys","getOwnPropertyNames","walk","items","MessageChannel","channel","port","port2","port1","onmessage","postMessage","once$$1","uid$1","isRenderWatcher","deep","user","active","deps","newDeps","depIds","newDepIds","cleanupDeps","tmp","teardown","init","keepAlive","mountedNode","prepatch","$mount","insert","destroy","uid$3","_uid","_self","dataDef","propsDef","$set","$delete","immediate","hookRE","$once","cbs","prevEl","prevVnode","restoreActiveInstance","__patch__","__vue__","$nextTick","patternTypes","KeepAlive","include","exclude","created","destroyed","mounted","this$1","ref$1","builtInComponents","configDef","util","defineReactive","delete","ssrContext","version","emptyStyle","acceptValue","svg","math","isHTMLTag","nodeOps","baseModules","klass","cssText","listDelimiter","propertyDelimiter","cssVarRE","importantRE","setProperty","normalizedName","normalize","vendorNames","capName","hasTransition","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","requestAnimationFrame","activate","platformModules","patch","backend","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","parentElm","refElm","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","ch","removeAndInvokeRemoveHook","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","hydrate","postpatch","invokeInsertHook","initial","hasChildNodes","childrenMatch","firstChild","fullInvoke","isRenderedModule","isInitialPatch","isRealElement","hasAttribute","oldElm","patchable","i$2","vmodel","directive","_vOptions","prevOptions","curOptions","transition$$1","originalDisplay","__vOriginalDisplay","display","unbind","platformDirectives","transitionProps","mode","isNotTextNode","isVShowDirective","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","beforeMount","kept","prevChildren","rawChildren","transitionData","removed","c$1","updated","hasMove","_reflow","body","offsetHeight","propertyName","_hasMove","platformComponents","decoder","regexEscapeRE","open","close","klass$1","style$1","he","decode","ncname","qnameCapture","&lt;","&gt;","&quot;","&amp;","&#10;","&#9;","isIgnoreNewlineTag","model$1","modules$1","directives$1","baseOptions","reduce","esc","tab","space","up","down","stop","prevent","self","ctrl","alt","meta","baseDirectives","cloak","createCompiler","baseCompile","finalOptions","tips","tip","compileToFunctions","idToTemplate","mount","documentElement","drawingNode","getLayer","getStage","batchDraw","EventEmitter","_maxListeners","isFunction","isNumber","isUndefined","defaultMaxListeners","setMaxListeners","TypeError","er","Error","addListener","listener","newListener","warned","trace","removeListener","fired","position","removeAllListeners","listenerCount","evlistener","emitter","width","innerWidth","height","innerHeight","stageSize","title","subtitle","author","background","publisher","year","border","years","font","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_konva__","__WEBPACK_IMPORTED_MODULE_1_vue_konva___default","__WEBPACK_IMPORTED_MODULE_2__App_vue__","VueKonva","App","Timeout","clearFn","_id","_clearFn","scope","clearTimeout","setInterval","clearInterval","unref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","process","task","tasksByHandle","nextHandle","registerImmediate","handle","runIfPresent","currentlyRunningATask","doc","attachTo","getPrototypeOf","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","random","onGlobalMessage","attachEvent","script","onreadystatechange","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","array","browser","argv","versions","off","prependListener","prependOnceListener","cwd","chdir","umask","_extends","assign","_Stage","_Stage2","_KonvaNode","_KonvaNode2","_utils","Konva","KONVA_NODES","Stage","nodeName","k","_classCallCheck","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","_vue","_vue2","_EventEmitter","cacheConfig","_stage","uploadKonva","beforeDestroy","vueComponent","updatedProps","hasUpdates","propsToSkip","isEvent","propChanged","substr","EVENTS_NAMESPACE","toRemove","_key","_isEvent","toAdd","_eventName","setAttrs","_parentStage","_this2","parentKonva","initKonva","parentStage","_this3","setZIndex","nameNode","NodeClass","VueComponent","animationStage","newConfig","PI_OVER_180","PI","stages","idCounter","ids","names","shapes","listenClickTap","inDblClickWindow","isBrowser","isUnminified","enableTrace","traceArrMax","dblClickWindow","pixelRatio","dragDistance","angleDeg","showWarnings","Filters","isDragging","dd","DD","isDragReady","_addId","_removeId","_addName","_removeName","getAngle","angle","_detectIE","ua","msie","rv","edge","_parseUA","mobile","ieMobile","glob","WorkerGlobalScope","Collection","each","func","toCollection","collection","_mapMethod","methodName","mapMethods","prot","Transform","point","x","y","translate","scale","sx","sy","rotate","rad","cos","sin","m11","m12","m21","m22","getTranslation","skew","multiply","matrix","invert","m0","m1","m2","m3","m4","m5","getMatrix","setAbsolutePosition","yt","xt","PI_OVER_DEG180","DEG180_OVER_PI","COLORS","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","transparent","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","RGB_REGEX","Util","_isElement","_isFunction","_isObject","_isArray","_isNumber","_isString","_isBoolean","isValidSelector","selector","firstChar","_sign","createCanvasElement","canvas","_nodeCanvas","_isInDocument","_simplifyArray","retArr","round","_getImage","imageObj","Image","onload","_context","getContext","putImageData","toDataURL","_getRGBAString","alpha","_rgbToHex","r","_hexToRgb","hex","bigint","getRandomColor","randColor","getRGB","color","rgb","colorToRGBA","_namedColorToRBA","_hex3ColorToRGBA","_hex6ColorToRGBA","_rgbColorToRGBA","_rgbaColorToRGBA","parts","_merge","o1","o2","retObj","_clone","trimRight","trimLeft","haveIntersection","r1","r2","cloneObject","cloneArray","_degToRad","deg","_radToDeg","_capitalize","throw","oldProto","__super__","addMethods","_getControlPoints","x0","y0","x1","y1","x2","y2","t","d01","sqrt","pow","d12","fa","fb","_expandPoints","tension","cp","allPoints","_removeLastLetter","_inRange","_getProjectionToSegment","x3","y3","dist","pd2","u","_getProjectionToLine","pt","line","isClosed","pc","MAX_VALUE","p1","p2","proj","px","py","pdist","_prepareArrayForTween","startArray","endArray","temp","newStart","pr","_prepareToStringify","desc","visitedByCircularReferenceRemoval","getDevicePixelRatio","_pixelRatio","devicePixelRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","Canvas","conf","_canvas","padding","margin","getPixelRatio","setPixelRatio","previousRatio","setSize","getWidth","getHeight","setWidth","setHeight","mimeType","quality","message","SceneCanvas","SceneContext","HitCanvas","HitContext","hitCanvas","CONTEXT_METHODS","CONTEXT_PROPERTIES","Context","traceArr","_enableTrace","fillShape","shape","getFillEnabled","_fill","strokeShape","getStrokeEnabled","_stroke","fillStrokeShape","getTrace","relaxed","clearTrace","_trace","reset","getCanvas","setTransform","bounds","clearRect","_applyLineCap","lineCap","getLineCap","_applyOpacity","absOpacity","getAbsoluteOpacity","_applyLineJoin","lineJoin","getLineJoin","arc","beginPath","bezierCurveTo","clip","closePath","createImageData","createLinearGradient","createPattern","createRadialGradient","drawImage","isPointInPath","fill","fillRect","strokeRect","fillText","measureText","getImageData","lineTo","moveTo","rect","quadraticCurveTo","restore","save","setLineDash","mozDash","webkitLineDash","getLineDash","stroke","strokeText","that","origSetter","origMethod","_fillColor","_fillFunc","_fillPattern","fillPatternX","getFillPatternX","fillPatternY","getFillPatternY","fillPatternScale","getFillPatternScale","fillPatternRotation","getFillPatternRotation","fillPatternOffset","getFillPatternOffset","getFillPatternImage","getFillPatternRepeat","_fillLinearGradient","getFillLinearGradientStartPoint","getFillLinearGradientEndPoint","colorStops","getFillLinearGradientColorStops","grd","addColorStop","_fillRadialGradient","getFillRadialGradientStartPoint","getFillRadialGradientEndPoint","startRadius","getFillRadialGradientStartRadius","endRadius","getFillRadialGradientEndRadius","getFillRadialGradientColorStops","hasColor","fillPriority","getFillPriority","hasPattern","hasLinearGradient","hasRadialGradient","_strokeLinearGradient","getStrokeLinearGradientStartPoint","getStrokeLinearGradientEndPoint","getStrokeLinearGradientColorStops","dash","strokeScaleEnabled","getStrokeScaleEnabled","Text","hasStroke","dashEnabled","dashOffset","strokeWidth","getShadowForStrokeEnabled","_strokeFunc","_applyShadow","getShadowRGBA","blur","getShadowBlur","offset","getShadowOffset","getAbsoluteScale","ratio","scaleX","scaleY","min","abs","_applyGlobalCompositeOperation","globalCompositeOperation","getGlobalCompositeOperation","colorKey","_fillFuncHit","strokeHitEnabled","_strokeFuncHit","Factory","addGetterSetter","validator","after","addGetter","addSetter","addOverloadedGetterSetter","_setAttr","addComponentsGetterSetter","getAttr","oldVal","_fireChangeEvent","capitalizedAttr","addDeprecatedGetterSetter","backCompat","oldMethodName","newMethodName","deprecated","oldGetter","oldSetter","afterSetFilter","_filterUpToDate","Validators","RGBComponent","alphaComponent","_formatValue","getNumberValidator","getNumberOrAutoValidator","isAuto","getStringValidator","getFunctionValidator","getNumberArrayValidator","getBooleanValidator","SHAPE","CLONE_BLACK_LIST","TRANSFORM_CHANGE_STR","SCALE_CHANGE_STR","Node","eventListeners","_cache","_isUnderCache","_clearCache","_clearSelfAndDescendantCache","_getCache","privateGetter","getChildren","clearCache","getClientRect","skipTransform","relativeTo","getParent","drawBorder","cachedSceneCanvas","cachedFilterCanvas","cachedHitCanvas","sceneContext","hitContext","isCache","drawScene","drawHit","scene","hit","_transformedRect","minX","minY","maxX","maxY","points","trans","getAbsoluteTransform","transformed","_drawCachedSceneCanvas","cacheCanvas","_getCachedSceneCanvas","_drawCachedHitCanvas","cachedCanvas","imageData","sceneCanvas","filterCanvas","filterContext","evtStr","_delegate","baseEvent","_off","evt","fire","stopNode","targets","findAncestors","currentTarget","_setChildrenIndices","getId","subname","getAncestors","ancestors","getAttrs","isListening","_isListening","listening","getListening","isVisible","_isVisible","visible","getVisible","shouldDrawHit","layer","hitGraphEnabled","setVisible","hide","getZIndex","getAbsoluteZIndex","addChildren","getDepth","depth","setPosition","setX","setY","getPosition","getX","getY","getAbsolutePosition","absoluteMatrix","absoluteTransform","it","origTrans","_clearTransform","_setTransform","rotation","getRotation","getScaleX","getScaleY","offsetX","getOffsetX","offsetY","getOffsetY","skewX","getSkewX","skewY","getSkewY","move","changeX","changeY","_eachAncestorReverse","family","theta","setRotation","moveToTop","moveUp","moveDown","moveToBottom","zIndex","_getAbsoluteOpacity","getOpacity","newContainer","__originalRemove","defaultValue","className","getClassName","toJSON","includeSelf","_isMatch","findAncestor","sel","selectorArr","hasName","_get","_getStage","eventType","bubble","_fireAndBubble","_fire","_getAbsoluteTransform","at","transformsEnabled","getTransform","_getAbsoluteScale","_getTransform","allListeners","_toKonvaCanvas","box","stage","toCanvas","url","toImage","img","size","getSize","getDragDistance","evtName","evtListeners","setId","oldId","setName","oldNames","newNames","addName","oldName","newName","removeName","_setComponentAttr","compareShape","okayToRun","isAncestorOf","stopBubble","cancelBubble","draw","_createNode","rotateDeg","setRotationDeg","getRotationDeg","Grayscale","brightness","Brighten","Invert","BlurStack","filterGaussBlurRGBA","radius","yp","yi","yw","r_sum","g_sum","b_sum","a_sum","r_out_sum","g_out_sum","b_out_sum","a_out_sum","r_in_sum","g_in_sum","b_in_sum","a_in_sum","pg","pb","pa","rbs","pixels","widthMinus1","heightMinus1","radiusPlus1","sumFactor","stackStart","stackEnd","stackIn","stackOut","mul_sum","mul_table","shg_sum","shg_table","Blur","blurRadius","pixelAt","idata","idx","rgbDistance","rgbMean","pTab","backgroundMask","threshold","rgbv_no","rgbv_ne","rgbv_so","rgbv_se","thres","mean","mask","applyMask","erodeMask","sw","sh","weights","side","halfSide","maskResult","so","cy","cx","scy","scx","srcOff","wt","dilateMask","smoothEdgeMask","Mask","RGB","nPixels","RGBA","ia","HSV","saturation","hue","vsu","vsw","rr","rg","rb","gr","gg","gb","br","bg","bb","HSL","luminance","Emboss","strength","embossStrength","greyLevel","embossWhiteLevel","direction","embossDirection","blend","embossBlend","dirY","dirX","w","w4","otherY","offsetYOther","otherX","offsetOther","dR","dG","dB","dif","absDif","absG","absB","remap","fromValue","fromMin","fromMax","toMin","toMax","toValue","fromRange","toRange","Enhance","nSubPixels","rMin","rMax","gMin","gMax","bMin","bMax","enhanceAmount","enhance","rMid","rGoalMax","rGoalMin","gMid","gGoalMax","gGoalMin","bMid","bGoalMax","bGoalMin","Posterize","levels","Noise","amount","noise","half","Pixelate","xBinStart","xBinEnd","yBinStart","yBinEnd","xBin","yBin","pixelsInBin","pixelSize","ceil","nBinsX","nBinsY","Threshold","level","Sepia","or","og","Solarize","ToPolar","dst","opt","srcPixels","dstPixels","xSize","ySize","xMid","polarCenterX","yMid","polarCenterY","rSize","tSize","conversion","FromPolar","phaseShift","polarRotation","atan2","Kaleidoscope","xoff","srcPos","dstPos","power","kaleidoscopePower","kaleidoscopeAngle","tempCanvas","scratchData","minSectionSize","sectionSize","xStart","xEnd","xDelta","Contrast","adjust","contrast","Container","__init","filterFunc","results","removeChildren","destroyChildren","_validateAdd","anim","setLayers","find","_generalFind","findOne","_findByString","_findByFunction","clen","_getNodeById","_getNodesByName","addItems","_getDescendants","getAllIntersections","intersects","can","caching","_applyTransform","_drawChildren","clearHitCache","drawMethod","skipBuffer","clipX","clipY","clipWidth","getClipWidth","clipHeight","getClipHeight","clipFunc","getClipFunc","hasClip","getClipX","getClipY","layerUnderDrag","getLayers","selfRect","Infinity","skipShadow","skipStroke","hasVisible","_clearHasShadowCache","HAS_SHADOW","_clearGetShadowRGBACache","SHADOW_RGBA","Shape","hasShadow","_hasShadow","getShadowEnabled","getShadowOpacity","getShadowColor","getShadowOffsetX","getShadowOffsetY","_getShadowRGBA","rgba","shadowColor","hasFill","getFill","strokeEnabled","bufferHitCanvas","_useBufferCanvas","perfectDrawEnabled","getSelfRect","_centroid","applyStroke","fillAndStrokeWidth","fillAndStrokeHeight","applyShadow","shadowOffsetX","shadowOffsetY","preWidth","preHeight","shadowBlur","roundingOffset","bufferCanvas","bufferContext","drawFunc","sceneFunc","hitFunc","drawHitFromCache","alphaThreshold","hitImageData","hitData","rgbColorKey","hitWidth","hitHeight","dashArray","getDashArray","setDashArray","getDrawFunc","setDrawFunc","drawHitFunc","getDrawHitFunc","setDrawHitFunc","addEvent","content","UNDERSCORE","EVENTS","eventsLength","___init","_buildDOM","_bindContentEvents","_enableNestedTransforms","setContainer","getElementsByClassName","getElementById","_resizeDOM","layers","getContainer","getPointerPosition","pointerPos","getContent","layerCanvas","dataUrl","getIntersection","_setCanvasSize","_mouseover","_setPointerPosition","_mouseout","targetShape","_mousemove","_touchmove","movementX","movementY","cancelable","preventDefault","_mousedown","_touchstart","clickStartShape","_mouseup","_touchend","clickEndShape","fireDblClick","dblTimeout","justDragged","_contextmenu","tapStartShape","_wheel","contentPosition","_getContentPosition","touches","touch","clientX","clientY","userSelect","_onContent","typesStr","types","BaseLayer","createPNGStream","getHitCanvas","_hitImageData","INTERSECTION_OFFSETS","INTERSECTION_OFFSETS_LEN","Layer","____init","intersectionOffset","spiralSearchDistance","continueSearch","_getIntersection","antialiased","_getImageData","p3","getClearBeforeDraw","enableHitGraph","setHitGraphEnabled","disableHitGraph","FastLayer","Group","FRAF","requestAnimFrame","RAF","now","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","Animation","Anim","animIdCounter","frame","time","timeDiff","lastTime","lays","addLayer","isRunning","animations","_addAnimation","_removeAnimation","_updateFrameObject","frameRate","animRunning","_handleAnimation","_runFrames","layersLen","layerHash","_animationLoop","batchAnim","blacklist","easing","onFinish","yoyo","colorAttrs","Tween","propFunc","begin","finish","_pos","_change","prevPos","_time","_position","_startTime","_finish","pause","setTime","reverse","play","getTimer","onEnterFrame","seek","nodeId","Easings","Linear","tween","_tweenFunc","_addListeners","tweens","_addAttr","onReset","diff","tweenId","trueEnd","trueStart","endRGBA","closed","startRGBA","onPlay","onReverse","onPause","thisId","BackEaseIn","BackEaseOut","BackEaseInOut","ElasticEaseIn","asin","ElasticEaseOut","ElasticEaseInOut","BounceEaseOut","BounceEaseIn","BounceEaseInOut","EaseIn","EaseOut","EaseInOut","StrongEaseIn","StrongEaseOut","StrongEaseInOut","_drag","startPointerPos","_setDragPosition","_endDragBefore","dragEndNode","_endDragAfter","startDrag","ap","stopDrag","dbf","getDragBoundFunc","newNodePos","_lastPos","setDraggable","draggable","_dragChange","origRemove","_listenDrag","_dragCleanup","button","Rect","_sceneFunc","cornerRadius","getCornerRadius","PIx2","Circle","getRadius","setRadius","Ellipse","rx","getRadiusX","ry","getRadiusY","Ring","getInnerRadius","getOuterRadius","outerRadius","setOuterRadius","Wedge","getClockwise","getAngleDeg","setAngleDeg","Arc","clockwise","_hitFunc","cropWidth","cropHeight","image","getImage","getCropWidth","getCropHeight","getCropX","getCropY","fromURL","crossOrigin","getDummyContext","dummyContext","CONTEXT_2D","partialText","ATTR_CHANGE_LIST","attrChangeListLen","fillLinearGradientColorStops","fillRadialGradientColorStops","_setTextData","getPadding","textHeight","getTextHeight","lineHeightPx","getLineHeight","textArr","textArrLen","verticalAlign","getVerticalAlign","alignY","align","getAlign","totalWidth","letterSpacing","getLetterSpacing","textDecoration","fontSize","_getContextFont","spacesNumber","oneWord","lineWidth","lastLine","strokeStyle","li","_getTextSize","setText","getTextWidth","textWidth","metrics","getFontSize","getFontStyle","getFontFamily","getFontVariant","_addTextLine","_getTextWidth","latterSpacing","lines","getText","fixedWidth","fixedHeight","maxWidth","maxHeightPx","currentHeightPx","wrap","getWrap","shouldWrap","wrapAtWord","shouldAddEllipsis","getEllipsis","additionalWidth","low","high","matchWidth","mid","substrWidth","wrapIndex","nextChar","nextIsSpaceOrDash","Line","tp","getPoints","getTension","getClosed","bezier","getBezier","getTensionPoints","_getTensionPoints","_getTensionPointsClosed","firstControlPoints","lastControlPoints","Sprite","_updated","frameIndex","interval","_setInterval","getAnimation","ix4","getAnimations","offsets","frameOffsets","ix2","_updateIndex","getFrameRate","animation","getIndex","setIndex","Path","dataArray","parsePathData","pathLength","ca","command","dTheta","psi","fs","getLength","getPointAtLength","ii","getPointOnLine","getPointOnCubicBezier","getPointOnQuadraticBezier","getPointOnEllipticalArc","getLineLength","P1x","P1y","P2x","P2y","fromX","fromY","rise","ix","iy","pRise","pRun","pct","P3x","P3y","P4x","P4y","CB1","CB2","CB3","CB4","QB1","QB2","QB3","cosPsi","sinPsi","cs","cc","coords","cpx","cpy","jlen","parsed","prevCmd","ctlPtx","ctlPty","cmd","startX","startY","convertEndpointToCenterParameterization","calcLength","inc","psiDeg","xp","lambda","f","cxp","cyp","vMag","vRatio","vAngle","acos","TextPath","dummyCanvas","getKerning","setKerningFunc","getTextBaseline","glyphInfo","p0","kerningFunc","getKerningFunc","textFullWidth","fullPathWidth","pathCmd","charArr","pIndex","currentT","getNextPathSegment","pathData","findSegmentToFitCharacter","glyphWidth","currLen","attempts","cumulativePathLength","needNewSegment","kern","midpoint","transposeX","transposeY","RegularPolygon","sides","Star","innerRadius","numPoints","Label","_sync","getTag","pointerDirection","pointerWidth","pointerHeight","getPointerDirection","getPointerWidth","getPointerHeight","Tag","Arrow","PI2","fromTension","radians","pointerLength","pointerAtBeginning","isDashEnabled","getCursor","anchorName","isMirrored","ANGLES","validateResizers","ANCHORS_NAMES","REDRAW_CHANGE_STR","top-left","top-center","top-right","middle-right","middle-left","bottom-left","bottom-center","bottom-right","Transformer","_createElements","_handleMouseMove","_handleMouseUp","setNode","_node","detach","_resetTransformCache","_transforming","_getNodeRect","__getNodeRect","MAX_SAFE_INTEGER","ignoreStroke","_createBack","_createAnchor","anchor","_handleMouseDown","tr","cursor","_cursorChange","back","rotateEnabled","rotateAnchorOffset","movingResizer","hypotenuse","newHypotenuse","resizerNode","zeroPoint","newAbsPos","keepProportion","keepRatio","shiftKey","dAlpha","rot","newRotation","newAlpha","snaps","rotationSnaps","_fitNodeInto","absPos","getCenteredScaling","topLeft","bottomRight","topOffsetX","topOffsetY","bottomOffsetX","bottomOffsetY","_removeEvents","newAttrs","boundBoxFunc","getBoundBoxFunc","_settings","pure","forceUpdate","invertedScale","enabledAnchors","resizeEnabled","anchorSize","getAnchorSize","getAnchorStroke","getAnchorStrokeWidth","getAnchorFill","getAnchorCornerRadius","scaledRotateAnchorOffset","borderEnabled","getBorderStroke","getBorderStrokeWidth","getBorderDash","isTransforming","stopTransform","lineEnabled","rotateHandlerOffset","enabledHandlers","injectStyle","__WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0696fa07_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__","normalizeComponent","__vue_styles__","Component","locals","cssWithMappingToString","useSourceMap","cssMapping","btoa","sourceMapping","toComment","sources","sourceRoot","sourceMap","unescape","encodeURIComponent","mediaQuery","alreadyImportedModules","addStylesToDom","domStyle","stylesInDom","addStyle","createStyleElement","styleElement","head","ssrIdKey","isProduction","isOldIE","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","applyToTag","newObj","media","styleSheet","replaceText","cssNode","ssrId","hasDocument","DEBUG","listToStyles","getElementsByTagName","parentId","_isProduction","_options","newList","mayRemove","textStore","replacement","newStyles","part","rawScriptExports","compiledTemplate","functionalTemplate","injectStyles","moduleIdentifier","esModule","scriptExports","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","_vm","_h","aria-label","aria-describedby","input","$$selectedVal","background-color","border-radius","font-size","font-family","esExports"],"mappings":"CAAS,SAAUA,GCInB,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAE,OAGA,IAAAC,GAAAF,EAAAD,IACAI,EAAAJ,EACAK,GAAA,EACAH,WAUA,OANAJ,GAAAE,GAAAM,KAAAH,EAAAD,QAAAC,IAAAD,QAAAH,GAGAI,EAAAE,GAAA,EAGAF,EAAAD,QAvBA,GAAAD,KA4BAF,GAAAQ,EAAAT,EAGAC,EAAAS,EAAAP,EAGAF,EAAAU,EAAA,SAAAP,EAAAQ,EAAAC,GACAZ,EAAAa,EAAAV,EAAAQ,IACAG,OAAAC,eAAAZ,EAAAQ,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAf,GACA,GAAAQ,GAAAR,KAAAgB,WACA,WAA2B,MAAAhB,GAAA,SAC3B,WAAiC,MAAAA,GAEjC,OADAJ,GAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,MAAAR,QAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,SAGAzB,IAAA0B,EAAA,KDMM,SAAUtB,EAAQD,GEnExB,GAAAwB,EAGAA,GAAA,WACA,MAAAC,QAGA,KAEAD,KAAAE,SAAA,qBAAAC,MAAA,QACC,MAAAC,GAED,gBAAAC,UACAL,EAAAK,QAOA5B,EAAAD,QAAAwB,GF0EM,SAAUvB,EAAQD,EAASH,GAEjC,YG9EA,SAAAiC,GAAAC,GAAsC,MAAAA,MAAAd,WAAAc,GAAuCC,QAAAD,GAI7E,QAAAE,GAAAC,GACA,MAAAA,GAAAC,QAAA,+BAAAC,EAAAC,GACA,UAAAA,EAAAD,EAAAE,cAAAF,EAAAG,gBACGJ,QAAA,eAGH,QAAAK,GAAAC,GACA,MAAAA,GAAAC,OAAA,GAAAH,cAAAE,EAAAE,MAAA,GAGA,QAAAC,GAAAC,GACA,MAAAL,GAAAP,EAAAY,EAAAV,QAAAW,EAAA,UAGA,QAAAC,GAAAhB,GACA,MAAAiB,MAAAC,MAAAD,KAAAE,UAAAnB,IAGA,QAAAoB,GAAApB,GACA,GAAAqB,KAIA,OAHAzC,QAAA0C,KAAAtB,GAAAuB,QAAA,SAAAC,GACAH,EAAA,KAAAG,GAAAxB,EAAAwB,KAEAH,EAGA,QAAAI,GAAAC,GACA,QAAAC,GAAAD,GACA,MAAAA,GAAAE,aACAF,EAEAA,EAAAG,QACAF,EAAAD,EAAAG,YAIA,MAAAF,GAAAD,EAAAG,SAGA,QAAAC,GAAAJ,GACA,MAAAA,GAAAK,QACAL,EAAAK,UACG,IAAAL,EAAAM,UAAAC,OACH,KAEAH,EAAAJ,EAAAM,UAAA,IAjEA/D,EAAAiB,YAAA,EACAjB,EAAAiE,eAAAjE,EAAAkE,cAAAlE,EAAA8C,oBAAAqB,GACAnE,EAAA4C,UACA5C,EAAA+C,OACA/C,EAAAmD,iBACAnD,EAAAwD,kBACAxD,EAAA6D,eAEA,IAAAO,GAAqBvE,EAAQ,GAE7BwE,EAAAvC,EAAAsC,GAEAE,EAAsBzE,EAAQ,IAE9B0E,EAAAzC,EAAAwC,GAIAxB,EAAA9C,EAAA8C,gBAAA,GAmDA9C,GAAAkE,cAAAG,EAAArC,QACAhC,EAAAiE,eAAAM,EAAAvC,SHqGM,SAAU/B,EAAQuE,EAAqB3E,GAE7C,YI/KAc,QAAAC,eAAA4D,EAAA,cAAAC,OAAA,aAAAC,EAAAC,GAWA,QAAAC,GAAAC,GACA,WAAAV,KAAAU,GAAA,OAAAA,EAGA,QAAAC,GAAAD,GACA,WAAAV,KAAAU,GAAA,OAAAA,EAGA,QAAAE,GAAAF,GACA,WAAAA,EAGA,QAAAG,GAAAH,GACA,WAAAA,EAMA,QAAAI,GAAAR,GACA,MACA,gBAAAA,IACA,gBAAAA,IAEA,gBAAAA,IACA,iBAAAA,GASA,QAAAS,GAAAnD,GACA,cAAAA,GAAA,gBAAAA,GAgBA,QAAAoD,GAAApD,GACA,0BAAAqD,GAAAhF,KAAA2B,GAGA,QAAAsD,GAAAR,GACA,0BAAAO,GAAAhF,KAAAyE,GAMA,QAAAS,GAAAC,GACA,GAAAvE,GAAAwE,WAAAC,OAAAF,GACA,OAAAvE,IAAA,GAAA0E,KAAAC,MAAA3E,QAAA4E,SAAAL,GAMA,QAAAM,GAAAN,GACA,aAAAA,EACA,GACA,gBAAAA,GACAvC,KAAAE,UAAAqC,EAAA,QACAE,OAAAF,GAOA,QAAAO,GAAAP,GACA,GAAAvE,GAAAwE,WAAAD,EACA,OAAAQ,OAAA/E,GAAAuE,EAAAvE,EAOA,QAAAgF,GACA9D,EACA+D,GAIA,OAFAC,GAAAvF,OAAAwF,OAAA,MACAC,EAAAlE,EAAAmE,MAAA,KACAnG,EAAA,EAAiBA,EAAAkG,EAAApC,OAAiB9D,IAClCgG,EAAAE,EAAAlG,KAAA,CAEA,OAAA+F,GACA,SAAAV,GAAsB,MAAAW,GAAAX,EAAAjD,gBACtB,SAAAiD,GAAsB,MAAAW,GAAAX,IAgBtB,QAAAe,GAAAC,EAAAC,GACA,GAAAD,EAAAvC,OAAA,CACA,GAAA3B,GAAAkE,EAAAE,QAAAD,EACA,IAAAnE,GAAA,EACA,MAAAkE,GAAAG,OAAArE,EAAA,IASA,QAAAsE,GAAA5E,EAAA6E,GACA,MAAAvF,IAAAjB,KAAA2B,EAAA6E,GAMA,QAAAC,GAAAC,GACA,GAAAC,GAAApG,OAAAwF,OAAA,KACA,iBAAAjE,GAEA,MADA6E,GAAA7E,KACA6E,EAAA7E,GAAA4E,EAAA5E,KAoCA,QAAA8E,GAAAF,EAAAG,GACA,QAAAC,GAAAC,GACA,GAAAhH,GAAAiH,UAAApD,MACA,OAAA7D,GACAA,EAAA,EACA2G,EAAAO,MAAAJ,EAAAG,WACAN,EAAA1G,KAAA6G,EAAAE,GACAL,EAAA1G,KAAA6G,GAIA,MADAC,GAAAI,QAAAR,EAAA9C,OACAkD,EAGA,QAAAK,GAAAT,EAAAG,GACA,MAAAH,GAAAU,KAAAP,GAUA,QAAAQ,GAAArB,EAAAsB,GACAA,KAAA,CAGA,KAFA,GAAAxH,GAAAkG,EAAApC,OAAA0D,EACAC,EAAA,GAAAC,OAAA1H,GACAA,KACAyH,EAAAzH,GAAAkG,EAAAlG,EAAAwH,EAEA,OAAAC,GAMA,QAAAE,GAAAC,EAAAC,GACA,OAAAnB,KAAAmB,GACAD,EAAAlB,GAAAmB,EAAAnB,EAEA,OAAAkB,GAMA,QAAAE,GAAAzB,GAEA,OADA0B,MACA/H,EAAA,EAAiBA,EAAAqG,EAAAvC,OAAgB9D,IACjCqG,EAAArG,IACA2H,EAAAI,EAAA1B,EAAArG,GAGA,OAAA+H,GAUA,QAAAC,GAAAf,EAAAgB,EAAA7H,IA2BA,QAAA8H,GAAAjB,EAAAgB,GACA,GAAAhB,IAAAgB,EAAgB,QAChB,IAAAE,GAAAnD,EAAAiC,GACAmB,EAAApD,EAAAiD,EACA,KAAAE,IAAAC,EAwBG,OAAAD,IAAAC,GACH7C,OAAA0B,KAAA1B,OAAA0C,EAxBA,KACA,GAAAI,GAAAX,MAAAY,QAAArB,GACAsB,EAAAb,MAAAY,QAAAL,EACA,IAAAI,GAAAE,EACA,MAAAtB,GAAAnD,SAAAmE,EAAAnE,QAAAmD,EAAAuB,MAAA,SAAA9G,EAAA1B,GACA,MAAAkI,GAAAxG,EAAAuG,EAAAjI,KAEO,IAAAiH,YAAAwB,OAAAR,YAAAQ,MACP,MAAAxB,GAAAyB,YAAAT,EAAAS,SACO,IAAAL,GAAAE,EAQP,QAPA,IAAAI,GAAAlI,OAAA0C,KAAA8D,GACA2B,EAAAnI,OAAA0C,KAAA8E,EACA,OAAAU,GAAA7E,SAAA8E,EAAA9E,QAAA6E,EAAAH,MAAA,SAAA9B,GACA,MAAAwB,GAAAjB,EAAAP,GAAAuB,EAAAvB,MAMK,MAAAhF,GAEL,UAcA,QAAAmH,GAAAxC,EAAAhB,GACA,OAAArF,GAAA,EAAiBA,EAAAqG,EAAAvC,OAAgB9D,IACjC,GAAAkI,EAAA7B,EAAArG,GAAAqF,GAAkC,MAAArF,EAElC,UAMA,QAAA8I,GAAAlC,GACA,GAAAmC,IAAA,CACA,mBACAA,IACAA,GAAA,EACAnC,EAAAO,MAAA5F,KAAA2F,aAkIA,QAAA8B,GAAAhH,GACA,GAAA5B,IAAA4B,EAAA,IAAAiH,WAAA,EACA,aAAA7I,GAAA,KAAAA,EAMA,QAAA8I,GAAArH,EAAA6E,EAAArB,EAAAzE,GACAH,OAAAC,eAAAmB,EAAA6E,GACAnC,MAAAc,EACAzE,eACAuI,UAAA,EACAxI,cAAA,IAQA,QAAAyI,GAAAC,GACA,IAAAC,GAAAC,KAAAF,GAAA,CAGA,GAAAG,GAAAH,EAAAlD,MAAA,IACA,iBAAAtE,GACA,OAAA7B,GAAA,EAAmBA,EAAAwJ,EAAA1F,OAAqB9D,IAAA,CACxC,IAAA6B,EAAiB,MACjBA,KAAA2H,EAAAxJ,IAEA,MAAA6B,KA2DA,QAAA4H,GAAAC,GACA,wBAAAA,IAAA,cAAAH,KAAAG,EAAA/D,YA6KA,QAAAgE,GAAAC,GACAC,GAAAC,KAAAF,GACAG,GAAAH,SAGA,QAAAI,KACAH,GAAAI,MACAF,GAAAH,OAAAC,MAAA/F,OAAA,GA2DA,QAAAoG,GAAA7E,GACA,UAAA8E,QAAAlG,iBAAAsB,OAAAF,IAOA,QAAA+E,GAAAC,GACA,GAAAC,GAAA,GAAAH,IACAE,EAAAE,IACAF,EAAAG,KAIAH,EAAAI,UAAAJ,EAAAI,SAAAhI,QACA4H,EAAAK,KACAL,EAAAM,IACAN,EAAAO,QACAP,EAAAQ,iBACAR,EAAAS,aAWA,OATAR,GAAAS,GAAAV,EAAAU,GACAT,EAAAU,SAAAX,EAAAW,SACAV,EAAA5D,IAAA2D,EAAA3D,IACA4D,EAAAW,UAAAZ,EAAAY,UACAX,EAAAY,UAAAb,EAAAa,UACAZ,EAAAa,UAAAd,EAAAc,UACAb,EAAAc,UAAAf,EAAAe,UACAd,EAAAe,UAAAhB,EAAAgB,UACAf,EAAAgB,UAAA,EACAhB,EA4DA,QAAAiB,GAAAhH,GACAiH,GAAAjH,EAqDA,QAAAkH,GAAA7B,EAAA8B,GAEA9B,EAAA+B,UAAAD,EASA,QAAAE,GAAAhC,EAAA8B,EAAAvI,GACA,OAAAnD,GAAA,EAAAC,EAAAkD,EAAAW,OAAkC9D,EAAAC,EAAOD,IAAA,CACzC,GAAA0G,GAAAvD,EAAAnD,EACAkJ,GAAAU,EAAAlD,EAAAgF,EAAAhF,KASA,QAAAmF,GAAAtH,EAAAuH,GACA,GAAA9G,EAAAT,kBAAA4F,KAAA,CAGA,GAAA4B,EAeA,OAdAtF,GAAAlC,EAAA,WAAAA,EAAAyH,iBAAAC,IACAF,EAAAxH,EAAAyH,OAEAR,KACAU,OACAxE,MAAAY,QAAA/D,IAAAU,EAAAV,KACA9D,OAAA0L,aAAA5H,KACAA,EAAA6H,SAEAL,EAAA,GAAAE,IAAA1H,IAEAuH,GAAAC,GACAA,EAAAM,UAEAN,GAMA,QAAAO,GACAzK,EACA6E,EACArB,EACAkH,EACAC,GAEA,GAAAC,GAAA,GAAA1C,IAEA9I,EAAAR,OAAAiM,yBAAA7K,EAAA6E,EACA,KAAAzF,IAAA,IAAAA,EAAAN,aAAA,CAKA,GAAAJ,GAAAU,KAAAJ,IACA8L,EAAA1L,KAAA2L,GACArM,KAAAoM,GAAA,IAAAzF,UAAApD,SACAuB,EAAAxD,EAAA6E,GAGA,IAAAmG,IAAAL,GAAAX,EAAAxG,EACA5E,QAAAC,eAAAmB,EAAA6E,GACA9F,YAAA,EACAD,cAAA,EACAE,IAAA,WACA,GAAA0D,GAAAhE,IAAAL,KAAA2B,GAAAwD,CAUA,OATA0E,IAAAH,SACA6C,EAAAK,SACAD,IACAA,EAAAJ,IAAAK,SACApF,MAAAY,QAAA/D,IACAwI,EAAAxI,KAIAA,GAEAqI,IAAA,SAAAI,GACA,GAAAzI,GAAAhE,IAAAL,KAAA2B,GAAAwD,CAEA2H,KAAAzI,GAAAyI,OAAAzI,OAQAhE,IAAAoM,IACAA,EACAA,EAAAzM,KAAA2B,EAAAmL,GAEA3H,EAAA2H,EAEAH,GAAAL,GAAAX,EAAAmB,GACAP,EAAAQ,cAUA,QAAAL,GAAAhD,EAAAlD,EAAArB,GAMA,GAAAqC,MAAAY,QAAAsB,IAAAxE,EAAAsB,GAGA,MAFAkD,GAAA9F,OAAA0B,KAAA0H,IAAAtD,EAAA9F,OAAA4C,GACAkD,EAAApD,OAAAE,EAAA,EAAArB,GACAA,CAEA,IAAAqB,IAAAkD,MAAAlD,IAAAjG,QAAAS,WAEA,MADA0I,GAAAlD,GAAArB,EACAA,CAEA,IAAA0G,GAAA,EAAAC,MACA,OAAApC,GAAAwC,QAAAL,KAAAM,QAKAhH,EAEA0G,GAIAO,EAAAP,EAAAxH,MAAAmC,EAAArB,GACA0G,EAAAU,IAAAQ,SACA5H,IALAuE,EAAAlD,GAAArB,EACAA,GAUA,QAAA8H,GAAAvD,EAAAlD,GAMA,GAAAgB,MAAAY,QAAAsB,IAAAxE,EAAAsB,GAEA,WADAkD,GAAApD,OAAAE,EAAA,EAGA,IAAAqF,GAAA,EAAAC,MACApC,GAAAwC,QAAAL,KAAAM,SAOA5F,EAAAmD,EAAAlD,WAGAkD,GAAAlD,GACAqF,GAGAA,EAAAU,IAAAQ,UAOA,QAAAF,GAAAxI,GACA,OAAA7C,OAAA,GAAA1B,EAAA,EAAAC,EAAAsE,EAAAT,OAAiD9D,EAAAC,EAAOD,IACxD0B,EAAA6C,EAAAvE,GACA0B,KAAAsK,QAAAtK,EAAAsK,OAAAS,IAAAK,SACApF,MAAAY,QAAA5G,IACAqL,EAAArL,GAgCA,QAAA0L,GAAAxF,EAAAyF,GACA,IAAAA,EAAc,MAAAzF,EAGd,QAFAlB,GAAA4G,EAAAC,EACApK,EAAA1C,OAAA0C,KAAAkK,GACArN,EAAA,EAAiBA,EAAAmD,EAAAW,OAAiB9D,IAClC0G,EAAAvD,EAAAnD,GACAsN,EAAA1F,EAAAlB,GACA6G,EAAAF,EAAA3G,GACAD,EAAAmB,EAAAlB,GAGA4G,IAAAC,GACAtI,EAAAqI,IACArI,EAAAsI,IAEAH,EAAAE,EAAAC,GANAX,EAAAhF,EAAAlB,EAAA6G,EASA,OAAA3F,GAMA,QAAA4F,GACAC,EACAC,EACAC,GAEA,MAAAA,GAoBA,WAEA,GAAAC,GAAA,kBAAAF,GACAA,EAAAxN,KAAAyN,KACAD,EACAG,EAAA,kBAAAJ,GACAA,EAAAvN,KAAAyN,KACAF,CACA,OAAAG,GACAR,EAAAQ,EAAAC,GAEAA,GA7BAH,EAGAD,EAQA,WACA,MAAAL,GACA,kBAAAM,KAAAxN,KAAAqB,WAAAmM,EACA,kBAAAD,KAAAvN,KAAAqB,WAAAkM,IAVAC,EAHAD,EA2DA,QAAAK,GACAL,EACAC,GAEA,MAAAA,GACAD,EACAA,EAAAM,OAAAL,GACAhG,MAAAY,QAAAoF,GACAA,GACAA,GACAD,EAcA,QAAAO,GACAP,EACAC,EACAC,EACAjH,GAEA,GAAAqB,GAAAtH,OAAAwF,OAAAwH,GAAA,KACA,OAAAC,GAEA/F,EAAAI,EAAA2F,GAEA3F,EAyGA,QAAAkG,GAAAC,EAAAP,GACA,GAAAQ,GAAAD,EAAAC,KACA,IAAAA,EAAA,CACA,GACAnO,GAAAqF,EAAA/E,EADAyH,IAEA,IAAAL,MAAAY,QAAA6F,GAEA,IADAnO,EAAAmO,EAAArK,OACA9D,KAEA,iBADAqF,EAAA8I,EAAAnO,MAEAM,EAAAyB,GAAAsD,GACA0C,EAAAzH,IAAqB8N,KAAA,WAKlB,IAAAnJ,EAAAkJ,GACH,OAAAzH,KAAAyH,GACA9I,EAAA8I,EAAAzH,GACApG,EAAAyB,GAAA2E,GACAqB,EAAAzH,GAAA2E,EAAAI,GACAA,GACW+I,KAAA/I,EASX6I,GAAAC,MAAApG,GAMA,QAAAsG,GAAAH,EAAAP,GACA,GAAAW,GAAAJ,EAAAI,MACA,IAAAA,EAAA,CACA,GAAAC,GAAAL,EAAAI,SACA,IAAA5G,MAAAY,QAAAgG,GACA,OAAAtO,GAAA,EAAmBA,EAAAsO,EAAAxK,OAAmB9D,IACtCuO,EAAAD,EAAAtO,KAA+BqN,KAAAiB,EAAAtO,QAE5B,IAAAiF,EAAAqJ,GACH,OAAA5H,KAAA4H,GAAA,CACA,GAAAjJ,GAAAiJ,EAAA5H,EACA6H,GAAA7H,GAAAzB,EAAAI,GACAsC,GAAkB0F,KAAA3G,GAAYrB,IACnBgI,KAAAhI,KAcX,QAAAmJ,GAAAN,GACA,GAAAO,GAAAP,EAAAQ,UACA,IAAAD,EACA,OAAA/H,KAAA+H,GAAA,CACA,GAAAvF,GAAAuF,EAAA/H,EACA,mBAAAwC,KACAuF,EAAA/H,IAAqBY,KAAA4B,EAAAyF,OAAAzF,KAoBrB,QAAA0F,GACAC,EACAC,EACAnB,GAuCA,QAAAoB,GAAArI,GACA,GAAAsI,GAAAC,GAAAvI,IAAAwI,EACAhB,GAAAxH,GAAAsI,EAAAH,EAAAnI,GAAAoI,EAAApI,GAAAiH,EAAAjH,GAvBA,GAZA,kBAAAoI,KACAA,IAAAZ,SAGAD,EAAAa,EAAAnB,GACAU,EAAAS,EAAAnB,GACAa,EAAAM,IAMAA,EAAAK,QACAL,EAAAM,UACAP,EAAAD,EAAAC,EAAAC,EAAAM,QAAAzB,IAEAmB,EAAAO,QACA,OAAArP,GAAA,EAAAC,EAAA6O,EAAAO,OAAAvL,OAA8C9D,EAAAC,EAAOD,IACrD6O,EAAAD,EAAAC,EAAAC,EAAAO,OAAArP,GAAA2N,EAKA,IACAjH,GADAwH,IAEA,KAAAxH,IAAAmI,GACAE,EAAArI,EAEA,KAAAA,IAAAoI,GACArI,EAAAoI,EAAAnI,IACAqI,EAAArI,EAOA,OAAAwH,GAQA,QAAAoB,GACApB,EACAE,EACAmB,EACAC,GAGA,mBAAAD,GAAA,CAGA,GAAAE,GAAAvB,EAAAE,EAEA,IAAA3H,EAAAgJ,EAAAF,GAA2B,MAAAE,GAAAF,EAC3B,IAAAG,GAAA3N,GAAAwN,EACA,IAAA9I,EAAAgJ,EAAAC,GAAoC,MAAAD,GAAAC,EACpC,IAAAC,GAAAC,GAAAF,EACA,IAAAjJ,EAAAgJ,EAAAE,GAAqC,MAAAF,GAAAE,EASrC,OAPAF,GAAAF,IAAAE,EAAAC,IAAAD,EAAAE,IAcA,QAAAE,GACAnJ,EACAoJ,EACAC,EACApC,GAEA,GAAAqC,GAAAF,EAAApJ,GACAuJ,GAAAxJ,EAAAsJ,EAAArJ,GACAnC,EAAAwL,EAAArJ,GAEAwJ,EAAAC,GAAAC,QAAAJ,EAAA5B,KACA,IAAA8B,GAAA,EACA,GAAAD,IAAAxJ,EAAAuJ,EAAA,WACAzL,GAAA,MACK,SAAAA,OAAA8L,GAAA3J,GAAA,CAGL,GAAA4J,GAAAH,GAAA5K,OAAAyK,EAAA5B,OACAkC,EAAA,GAAAJ,EAAAI,KACA/L,GAAA,GAKA,OAAAN,KAAAM,EAAA,CACAA,EAAAgM,EAAA5C,EAAAqC,EAAAtJ,EAGA,IAAA8J,GAAAhF,EACAD,IAAA,GACAM,EAAAtH,GACAgH,EAAAiF,GASA,MAAAjM,GAMA,QAAAgM,GAAA5C,EAAAqC,EAAAtJ,GAEA,GAAAD,EAAAuJ,EAAA,YAGA,GAAA9G,GAAA8G,EAAAlO,OAYA,OAAA6L,MAAA8C,SAAAV,eACA9L,KAAA0J,EAAA8C,SAAAV,UAAArJ,QACAzC,KAAA0J,EAAA+C,OAAAhK,GAEAiH,EAAA+C,OAAAhK,GAIA,kBAAAwC,IAAA,aAAAyH,GAAAX,EAAA5B,MACAlF,EAAAhJ,KAAAyN,GACAzE,GAqFA,QAAAyH,IAAA/J,GACA,GAAAgK,GAAAhK,KAAAjB,WAAAiL,MAAA,qBACA,OAAAA,KAAA,MAGA,QAAAC,IAAA5J,EAAAgB,GACA,MAAA0I,IAAA1J,KAAA0J,GAAA1I,GAGA,QAAAkI,IAAA/B,EAAA0C,GACA,IAAApJ,MAAAY,QAAAwI,GACA,MAAAD,IAAAC,EAAA1C,GAAA,IAEA,QAAApO,GAAA,EAAA+Q,EAAAD,EAAAhN,OAA6C9D,EAAA+Q,EAAS/Q,IACtD,GAAA6Q,GAAAC,EAAA9Q,GAAAoO,GACA,MAAApO,EAGA,UAgDA,QAAAgR,IAAAC,EAAAtD,EAAAuD,GACA,GAAAvD,EAEA,IADA,GAAAwD,GAAAxD,EACAwD,IAAAzN,SAAA,CACA,GAAA0N,GAAAD,EAAAV,SAAAY,aACA,IAAAD,EACA,OAAApR,GAAA,EAAuBA,EAAAoR,EAAAtN,OAAkB9D,IACzC,IACA,GAAAsR,IAAA,IAAAF,EAAApR,GAAAE,KAAAiR,EAAAF,EAAAtD,EAAAuD,EACA,IAAAI,EAA0B,OACf,MAAA5P,GACX6P,GAAA7P,EAAAyP,EAAA,uBAMAI,GAAAN,EAAAtD,EAAAuD,GAGA,QAAAK,IAAAN,EAAAtD,EAAAuD,GACA,GAAAM,GAAAC,aACA,IACA,MAAAD,IAAAC,aAAAvR,KAAA,KAAA+Q,EAAAtD,EAAAuD,GACK,MAAAxP,GACLgQ,GAAAhQ,EAAA,4BAGAgQ,GAAAT,EAAAtD,EAAAuD,GAGA,QAAAQ,IAAAT,EAAAtD,EAAAuD,GAKA,IAAAS,KAAAC,IAAA,mBAAAC,SAGA,KAAAZ,EAFAY,SAAAC,MAAAb,GAWA,QAAAc,MACAC,IAAA,CACA,IAAAC,GAAAC,GAAAzP,MAAA,EACAyP,IAAApO,OAAA,CACA,QAAA9D,GAAA,EAAiBA,EAAAiS,EAAAnO,OAAmB9D,IACpCiS,EAAAjS,KAiEA,QAAAmS,IAAAvL,GACA,MAAAA,GAAAwL,YAAAxL,EAAAwL,UAAA,WACAC,IAAA,CACA,KACA,MAAAzL,GAAAO,MAAA,KAAAD,WACK,QACLmL,IAAA,KAKA,QAAAC,IAAAC,EAAAxL,GACA,GAAAyL,EAqBA,IApBAN,GAAApI,KAAA,WACA,GAAAyI,EACA,IACAA,EAAArS,KAAA6G,GACO,MAAArF,GACPsP,GAAAtP,EAAAqF,EAAA,gBAEKyL,IACLA,EAAAzL,KAGAiL,KACAA,IAAA,EACAK,GACAI,KAEAC,OAIAH,GAAA,mBAAAI,SACA,UAAAA,SAAA,SAAAC,GACAJ,EAAAI,IA+HA,QAAAC,IAAAxN,GACAyN,GAAAzN,EAAA0N,IACAA,GAAAC,QAGA,QAAAF,IAAAzN,EAAA4N,GACA,GAAAjT,GAAAmD,EACA+P,EAAAxL,MAAAY,QAAAjD,EACA,OAAA6N,IAAAlO,EAAAK,IAAA5E,OAAA0S,SAAA9N,gBAAA8E,KAAA,CAGA,GAAA9E,EAAA2G,OAAA,CACA,GAAAoH,GAAA/N,EAAA2G,OAAAS,IAAA8C,EACA,IAAA0D,EAAAI,IAAAD,GACA,MAEAH,GAAAK,IAAAF,GAEA,GAAAF,EAEA,IADAlT,EAAAqF,EAAAvB,OACA9D,KAAiB8S,GAAAzN,EAAArF,GAAAiT,OAIjB,KAFA9P,EAAA1C,OAAA0C,KAAAkC,GACArF,EAAAmD,EAAAW,OACA9D,KAAiB8S,GAAAzN,EAAAlC,EAAAnD,IAAAiT,IAqBjB,QAAAM,IAAAC,GACA,QAAAC,KACA,GAAAC,GAAAxM,UAEAsM,EAAAC,EAAAD,GACA,KAAA9L,MAAAY,QAAAkL,GAOA,MAAAA,GAAArM,MAAA,KAAAD,UALA,QADAoD,GAAAkJ,EAAA/Q,QACAzC,EAAA,EAAqBA,EAAAsK,EAAAxG,OAAmB9D,IACxCsK,EAAAtK,GAAAmH,MAAA,KAAAuM,GAQA,MADAD,GAAAD,MACAC,EAGA,QAAAE,IACAC,EACAC,EACAP,EACAQ,EACAC,EACApG,GAEA,GAAArN,GAAA6Q,EAAA6C,EAAAC,CACA,KAAA3T,IAAAsT,GACAzC,EAAAyC,EAAAtT,GACA0T,EAAAH,EAAAvT,GACA2T,EAAAC,GAAA5T,GACAoE,EAAAyM,KAKKzM,EAAAsP,IACLtP,EAAAyM,EAAAqC,OACArC,EAAAyC,EAAAtT,GAAAiT,GAAApC,IAEAtM,EAAAoP,EAAAnL,QACAqI,EAAAyC,EAAAtT,GAAAyT,EAAAE,EAAA3T,KAAA6Q,EAAA8C,EAAA3C,UAEAgC,EAAAW,EAAA3T,KAAA6Q,EAAA8C,EAAA3C,QAAA2C,EAAAE,QAAAF,EAAAG,SACKjD,IAAA6C,IACLA,EAAAR,IAAArC,EACAyC,EAAAtT,GAAA0T,GAGA,KAAA1T,IAAAuT,GACAnP,EAAAkP,EAAAtT,MACA2T,EAAAC,GAAA5T,GACAwT,EAAAG,EAAA3T,KAAAuT,EAAAvT,GAAA2T,EAAA3C,UAOA,QAAA+C,IAAAnL,EAAAoL,EAAAC,GAOA,QAAAC,KACAD,EAAApN,MAAA5F,KAAA2F,WAGAd,EAAAqN,EAAAD,IAAAgB,GAVAtL,YAAAiB,MACAjB,IAAAsB,KAAA+J,OAAArL,EAAAsB,KAAA+J,SAEA,IAAAd,GACAgB,EAAAvL,EAAAoL,EASA5P,GAAA+P,GAEAhB,EAAAF,IAAAiB,IAGA5P,EAAA6P,EAAAjB,MAAA3O,EAAA4P,EAAAC,SAEAjB,EAAAgB,EACAhB,EAAAD,IAAA1J,KAAA0K,IAGAf,EAAAF,IAAAkB,EAAAD,IAIAf,EAAAiB,QAAA,EACAxL,EAAAoL,GAAAb,EAKA,QAAAkB,IACAnK,EACAd,EACAa,GAKA,GAAAuF,GAAApG,EAAAwE,QAAAC,KACA,KAAAzJ,EAAAoL,GAAA,CAGA,GAAA/H,MACA6M,EAAApK,EAAAoK,MACAzG,EAAA3D,EAAA2D,KACA,IAAAvJ,EAAAgQ,IAAAhQ,EAAAuJ,GACA,OAAAzH,KAAAoJ,GAAA,CACA,GAAA+E,GAAAxE,GAAA3J,EAiBAoO,IAAA/M,EAAAoG,EAAAzH,EAAAmO,GAAA,IACAC,GAAA/M,EAAA6M,EAAAlO,EAAAmO,GAAA,GAGA,MAAA9M,IAGA,QAAA+M,IACA/M,EACAgN,EACArO,EACAmO,EACAG,GAEA,GAAApQ,EAAAmQ,GAAA,CACA,GAAAtO,EAAAsO,EAAArO,GAKA,MAJAqB,GAAArB,GAAAqO,EAAArO,GACAsO,SACAD,GAAArO,IAEA,CACK,IAAAD,EAAAsO,EAAAF,GAKL,MAJA9M,GAAArB,GAAAqO,EAAAF,GACAG,SACAD,GAAAF,IAEA,EAGA,SAiBA,QAAAI,IAAAxK,GACA,OAAAzK,GAAA,EAAiBA,EAAAyK,EAAA3G,OAAqB9D,IACtC,GAAA0H,MAAAY,QAAAmC,EAAAzK,IACA,MAAA0H,OAAAxG,UAAA6M,OAAA5G,SAAAsD,EAGA,OAAAA,GAOA,QAAAyK,IAAAzK,GACA,MAAA1F,GAAA0F,IACAP,EAAAO,IACA/C,MAAAY,QAAAmC,GACA0K,GAAA1K,OACAxG,GAGA,QAAAmR,IAAAC,GACA,MAAAzQ,GAAAyQ,IAAAzQ,EAAAyQ,EAAA3K,OAAA5F,EAAAuQ,EAAApK,WAGA,QAAAkK,IAAA1K,EAAA6K,GACA,GACAtV,GAAAI,EAAAmV,EAAAC,EADAzN,IAEA,KAAA/H,EAAA,EAAaA,EAAAyK,EAAA3G,OAAqB9D,IAClCI,EAAAqK,EAAAzK,GACA0E,EAAAtE,IAAA,iBAAAA,KACAmV,EAAAxN,EAAAjE,OAAA,EACA0R,EAAAzN,EAAAwN,GAEA7N,MAAAY,QAAAlI,GACAA,EAAA0D,OAAA,IACA1D,EAAA+U,GAAA/U,GAAAkV,GAAA,QAAAtV,GAEAoV,GAAAhV,EAAA,KAAAgV,GAAAI,KACAzN,EAAAwN,GAAArL,EAAAsL,EAAA9K,KAAAtK,EAAA,GAAAsK,MACAtK,EAAAqV,SAEA1N,EAAA+B,KAAA3C,MAAAY,EAAA3H,IAEK2E,EAAA3E,GACLgV,GAAAI,GAIAzN,EAAAwN,GAAArL,EAAAsL,EAAA9K,KAAAtK,GACO,KAAAA,GAEP2H,EAAA+B,KAAAI,EAAA9J,IAGAgV,GAAAhV,IAAAgV,GAAAI,GAEAzN,EAAAwN,GAAArL,EAAAsL,EAAA9K,KAAAtK,EAAAsK,OAGA7F,EAAA4F,EAAAiL,WACA9Q,EAAAxE,EAAAmK,MACA7F,EAAAtE,EAAAsG,MACA9B,EAAA0Q,KACAlV,EAAAsG,IAAA,UAAA4O,EAAA,IAAAtV,EAAA,MAEA+H,EAAA+B,KAAA1J,IAIA,OAAA2H,GAKA,QAAA4N,IAAAC,EAAAC,GAOA,OALAD,EAAA7U,YACA+U,IAAA,WAAAF,EAAAG,OAAAC,gBAEAJ,IAAA9T,SAEAkD,EAAA4Q,GACAC,EAAAlO,OAAAiO,GACAA,EAGA,QAAAK,IACAC,EACA1L,EACAI,EACAH,EACAF,GAEA,GAAA8K,GAAAc,IAGA,OAFAd,GAAAvK,aAAAoL,EACAb,EAAAhK,WAAoBb,OAAAI,UAAAH,WAAAF,OACpB8K,EAGA,QAAAe,IACAF,EACAG,EACAzL,GAEA,GAAA/F,EAAAqR,EAAApE,QAAAlN,EAAAsR,EAAAI,WACA,MAAAJ,GAAAI,SAGA,IAAA1R,EAAAsR,EAAAK,UACA,MAAAL,GAAAK,QAGA,IAAA1R,EAAAqR,EAAAM,UAAA5R,EAAAsR,EAAAO,aACA,MAAAP,GAAAO,WAGA,KAAA7R,EAAAsR,EAAAQ,UAGG,CACH,GAAAA,GAAAR,EAAAQ,UAAA9L,GACA+L,GAAA,EAEAC,EAAA,SAAAC,GACA,OAAA7W,GAAA,EAAAC,EAAAyW,EAAA5S,OAA0C9D,EAAAC,EAAOD,IACjD0W,EAAA1W,GAAA8W,cAGAD,KACAH,EAAA5S,OAAA,IAIA8O,EAAA9J,EAAA,SAAAf,GAEAmO,EAAAK,SAAAZ,GAAA5N,EAAAsO,GAGAM,GACAC,GAAA,KAIAG,EAAAjO,EAAA,SAAAkO,GAKApS,EAAAsR,EAAAI,aACAJ,EAAApE,OAAA,EACA8E,GAAA,MAIA7O,EAAAmO,EAAAtD,EAAAmE,EA6CA,OA3CA/R,GAAA+C,KACA,kBAAAA,GAAAkP,KAEAvS,EAAAwR,EAAAK,WACAxO,EAAAkP,KAAArE,EAAAmE,GAEOnS,EAAAmD,EAAAmP,YAAA,kBAAAnP,GAAAmP,UAAAD,OACPlP,EAAAmP,UAAAD,KAAArE,EAAAmE,GAEAnS,EAAAmD,EAAA+J,SACAoE,EAAAI,UAAAX,GAAA5N,EAAA+J,MAAAuE,IAGAzR,EAAAmD,EAAAyO,WACAN,EAAAO,YAAAd,GAAA5N,EAAAyO,QAAAH,GACA,IAAAtO,EAAAoP,MACAjB,EAAAM,SAAA,EAEAY,WAAA,WACA1S,EAAAwR,EAAAK,WAAA7R,EAAAwR,EAAApE,SACAoE,EAAAM,SAAA,EACAI,GAAA,KAEa7O,EAAAoP,OAAA,MAIbvS,EAAAmD,EAAAsP,UACAD,WAAA,WACA1S,EAAAwR,EAAAK,WACAQ,EAGA,OAGWhP,EAAAsP,WAKXV,GAAA,EAEAT,EAAAM,QACAN,EAAAO,YACAP,EAAAK,SAnFAL,EAAAQ,SAAA5M,KAAAc,GAyFA,QAAA0M,IAAAjC,GACA,MAAAA,GAAApK,WAAAoK,EAAAvK,aAKA,QAAAyM,IAAA9M,GACA,GAAA/C,MAAAY,QAAAmC,GACA,OAAAzK,GAAA,EAAmBA,EAAAyK,EAAA3G,OAAqB9D,IAAA,CACxC,GAAAI,GAAAqK,EAAAzK,EACA,IAAA4E,EAAAxE,KAAAwE,EAAAxE,EAAAyK,mBAAAyM,GAAAlX,IACA,MAAAA,IAUA,QAAAoX,IAAA7J,GACAA,EAAA8J,QAAAhX,OAAAwF,OAAA,MACA0H,EAAA+J,eAAA,CAEA,IAAAC,GAAAhK,EAAA8C,SAAAmH,gBACAD,IACAE,GAAAlK,EAAAgK,GAMA,QAAArE,IAAAW,EAAArN,GACAgD,GAAAkO,IAAA7D,EAAArN,GAGA,QAAAmR,IAAA9D,EAAArN,GACAgD,GAAAoO,KAAA/D,EAAArN,GAGA,QAAAmN,IAAAE,EAAArN,GACA,GAAAqR,GAAArO,EACA,gBAAAsO,KAEA,OADAtR,EAAAO,MAAA,KAAAD,YAEA+Q,EAAAD,KAAA/D,EAAAiE,IAKA,QAAAL,IACAlK,EACAgK,EACAQ,GAEAvO,GAAA+D,EACAgG,GAAAgE,EAAAQ,MAA+C7E,GAAAyE,GAAAhE,GAAApG,GAC/C/D,OAAA3F,GA4GA,QAAAmU,IACA3N,EACAG,GAEA,GAAAyN,KACA,KAAA5N,EACA,MAAA4N,EAEA,QAAArY,GAAA,EAAAC,EAAAwK,EAAA3G,OAAsC9D,EAAAC,EAAOD,IAAA,CAC7C,GAAA8O,GAAArE,EAAAzK,GACAwK,EAAAsE,EAAAtE,IAOA,IALAA,KAAAoK,OAAApK,EAAAoK,MAAA0D,YACA9N,GAAAoK,MAAA0D,KAIAxJ,EAAAlE,aAAAkE,EAAA5D,YAAAN,IACAJ,GAAA,MAAAA,EAAA8N,MAUAD,EAAAvW,UAAAuW,EAAAvW,aAAAgI,KAAAgF,OATA,CACA,GAAAxO,GAAAkK,EAAA8N,KACAA,EAAAD,EAAA/X,KAAA+X,EAAA/X,MACA,cAAAwO,EAAAvE,IACA+N,EAAAxO,KAAA3C,MAAAmR,EAAAxJ,EAAArE,cAEA6N,EAAAxO,KAAAgF,IAOA,OAAAyJ,KAAAF,GACAA,EAAAE,GAAA/P,MAAAgQ,WACAH,GAAAE,EAGA,OAAAF,GAGA,QAAAG,IAAAnD,GACA,MAAAA,GAAApK,YAAAoK,EAAAvK,cAAA,MAAAuK,EAAA3K,KAGA,QAAA+N,IACAjF,EACAzL,GAEAA,OACA,QAAA/H,GAAA,EAAiBA,EAAAwT,EAAA1P,OAAgB9D,IACjC0H,MAAAY,QAAAkL,EAAAxT,IACAyY,GAAAjF,EAAAxT,GAAA+H,GAEAA,EAAAyL,EAAAxT,GAAA0G,KAAA8M,EAAAxT,GAAA4G,EAGA,OAAAmB,GAQA,QAAA2Q,IAAA/K,GACA,GAAAgL,GAAAC,EAEA,OADAA,IAAAjL,EACA,WACAiL,GAAAD,GAIA,QAAAE,IAAAlL,GACA,GAAAO,GAAAP,EAAA8C,SAGA5B,EAAAX,EAAAW,MACA,IAAAA,IAAAX,EAAA4K,SAAA,CACA,KAAAjK,EAAA4B,SAAAqI,UAAAjK,EAAAnL,SACAmL,IAAAnL,OAEAmL,GAAAhL,UAAAiG,KAAA6D,GAGAA,EAAAjK,QAAAmL,EACAlB,EAAAoL,MAAAlK,IAAAkK,MAAApL,EAEAA,EAAA9J,aACA8J,EAAAqL,SAEArL,EAAAsL,SAAA,KACAtL,EAAAuL,UAAA,KACAvL,EAAAwL,iBAAA,EACAxL,EAAAyL,YAAA,EACAzL,EAAA0L,cAAA,EACA1L,EAAA2L,mBAAA,EAsFA,QAAAC,IACA5L,EACA6L,EACAC,GAEA9L,EAAA+L,IAAAF,EACA7L,EAAA8C,SAAAkJ,SACAhM,EAAA8C,SAAAkJ,OAAAxD,IAmBAyD,GAAAjM,EAAA,cAEA,IAAAkM,EA2CA,OAvBAA,GAAA,WACAlM,EAAAmM,QAAAnM,EAAAoM,UAAAN,IAOA,GAAAO,IAAArM,EAAAkM,EAAA7R,GACAiS,OAAA,WACAtM,EAAAyL,aAAAzL,EAAA0L,cACAO,GAAAjM,EAAA,mBAGG,GACH8L,GAAA,EAIA,MAAA9L,EAAAuM,SACAvM,EAAAyL,YAAA,EACAQ,GAAAjM,EAAA,YAEAA,EAGA,QAAAwM,IACAxM,EACAoC,EACA4H,EACAyC,EACAC,GAQA,GAAAC,MACAD,GACA1M,EAAA8C,SAAA8J,iBACAH,EAAA5P,KAAAgQ,aACA7M,EAAA8M,eAAAC,GAkBA,IAfA/M,EAAA8C,SAAAkK,aAAAP,EACAzM,EAAAuM,OAAAE,EAEAzM,EAAAiN,SACAjN,EAAAiN,OAAA/L,OAAAuL,GAEAzM,EAAA8C,SAAA8J,gBAAAF,EAKA1M,EAAAkN,OAAAT,EAAA5P,KAAAoK,OAAA8F,GACA/M,EAAAmN,WAAAnD,GAAA+C,GAGA3K,GAAApC,EAAA8C,SAAAtC,MAAA,CACA5C,GAAA,EAGA,QAFA4C,GAAAR,EAAA+C,OACAqK,EAAApN,EAAA8C,SAAAuK,cACAhb,EAAA,EAAmBA,EAAA+a,EAAAjX,OAAqB9D,IAAA,CACxC,GAAA0G,GAAAqU,EAAA/a,GACA8P,EAAAnC,EAAA8C,SAAAtC,KACAA,GAAAzH,GAAAmJ,EAAAnJ,EAAAoJ,EAAAC,EAAApC,GAEApC,GAAA,GAEAoC,EAAA8C,SAAAV,YAIA4H,KAAA+C,EACA,IAAAvC,GAAAxK,EAAA8C,SAAAmH,gBACAjK,GAAA8C,SAAAmH,iBAAAD,EACAE,GAAAlK,EAAAgK,EAAAQ,GAGAmC,IACA3M,EAAAsN,OAAA7C,GAAAiC,EAAAD,EAAAxP,SACA+C,EAAAmJ,gBAQA,QAAAoE,IAAAvN,GACA,KAAAA,QAAAjK,UACA,GAAAiK,EAAAuL,UAAuB,QAEvB,UAGA,QAAAiC,IAAAxN,EAAAyN,GACA,GAAAA,GAEA,GADAzN,EAAAwL,iBAAA,EACA+B,GAAAvN,GACA,WAEG,IAAAA,EAAAwL,gBACH,MAEA,IAAAxL,EAAAuL,WAAA,OAAAvL,EAAAuL,UAAA,CACAvL,EAAAuL,WAAA,CACA,QAAAlZ,GAAA,EAAmBA,EAAA2N,EAAA9J,UAAAC,OAAyB9D,IAC5Cmb,GAAAxN,EAAA9J,UAAA7D,GAEA4Z,IAAAjM,EAAA,cAIA,QAAA0N,IAAA1N,EAAAyN,GACA,KAAAA,IACAzN,EAAAwL,iBAAA,EACA+B,GAAAvN,KAIAA,EAAAuL,WAAA,CACAvL,EAAAuL,WAAA,CACA,QAAAlZ,GAAA,EAAmBA,EAAA2N,EAAA9J,UAAAC,OAAyB9D,IAC5Cqb,GAAA1N,EAAA9J,UAAA7D,GAEA4Z,IAAAjM,EAAA,gBAIA,QAAAiM,IAAAjM,EAAA4G,GAEA5K,GACA,IAAA2R,GAAA3N,EAAA8C,SAAA8D,EACA,IAAA+G,EACA,OAAAtb,GAAA,EAAAub,EAAAD,EAAAxX,OAAwC9D,EAAAub,EAAOvb,IAC/C,IACAsb,EAAAtb,GAAAE,KAAAyN,GACO,MAAAjM,GACPsP,GAAAtP,EAAAiM,EAAA4G,EAAA,SAIA5G,EAAA+J,eACA/J,EAAA6N,MAAA,QAAAjH,GAEAvK,IAkBA,QAAAyR,MACAtZ,GAAAuZ,GAAA5X,OAAA6X,GAAA7X,OAAA,EACAuP,MAIAuI,GAAAC,IAAA,EAMA,QAAAC,MACAD,IAAA,CACA,IAAAE,GAAAxM,CAcA,KAJAmM,GAAAM,KAAA,SAAA/U,EAAAgB,GAA8B,MAAAhB,GAAAsI,GAAAtH,EAAAsH,KAI9BpN,GAAA,EAAiBA,GAAAuZ,GAAA5X,OAAsB3B,KACvC4Z,EAAAL,GAAAvZ,IACA4Z,EAAA9B,QACA8B,EAAA9B,SAEA1K,EAAAwM,EAAAxM,GACA8D,GAAA9D,GAAA,KACAwM,EAAAE,KAmBA,IAAAC,GAAAP,GAAAlZ,QACA0Z,EAAAT,GAAAjZ,OAEAgZ,MAGAW,GAAAF,GACAG,GAAAF,GAIAG,IAAA9K,GAAA8K,UACAA,GAAAC,KAAA,SAIA,QAAAF,IAAAX,GAEA,IADA,GAAA1b,GAAA0b,EAAA5X,OACA9D,KAAA,CACA,GAAA+b,GAAAL,EAAA1b,GACA2N,EAAAoO,EAAApO,EACAA,GAAAsL,WAAA8C,GAAApO,EAAAyL,aAAAzL,EAAA0L,cACAO,GAAAjM,EAAA,YASA,QAAA6O,IAAA7O,GAGAA,EAAAuL,WAAA,EACAyC,GAAA7R,KAAA6D,GAGA,QAAAyO,IAAAV,GACA,OAAA1b,GAAA,EAAiBA,EAAA0b,EAAA5X,OAAkB9D,IACnC0b,EAAA1b,GAAAkZ,WAAA,EACAiC,GAAAO,EAAA1b,IAAA,GASA,QAAAyc,IAAAV,GACA,GAAAxM,GAAAwM,EAAAxM,EACA,UAAA8D,GAAA9D,GAAA,CAEA,GADA8D,GAAA9D,IAAA,EACAsM,GAEK,CAIL,IADA,GAAA7b,GAAA0b,GAAA5X,OAAA,EACA9D,EAAAmC,IAAAuZ,GAAA1b,GAAAuP,GAAAwM,EAAAxM,IACAvP,GAEA0b,IAAAlV,OAAAxG,EAAA,IAAA+b,OARAL,IAAA5R,KAAAiS,EAWAH,MACAA,IAAA,EAMAtJ,GAAAwJ,MAgOA,QAAAY,IAAA9S,EAAA+S,EAAAjW,GACAkW,GAAA/b,IAAA,WACA,MAAAU,MAAAob,GAAAjW,IAEAkW,GAAAhQ,IAAA,SAAAvH,GACA9D,KAAAob,GAAAjW,GAAArB,GAEA5E,OAAAC,eAAAkJ,EAAAlD,EAAAkW,IAGA,QAAAC,IAAAlP,GACAA,EAAAmP,YACA,IAAAC,GAAApP,EAAA8C,QACAsM,GAAA5O,OAAmB6O,GAAArP,EAAAoP,EAAA5O,OACnB4O,EAAAE,SAAqBC,GAAAvP,EAAAoP,EAAAE,SACrBF,EAAAvS,KACA2S,GAAAxP,GAEA9B,EAAA8B,EAAAyP,UAAyB,GAEzBL,EAAAM,UAAsBC,GAAA3P,EAAAoP,EAAAM,UACtBN,EAAAQ,OAAAR,EAAAQ,QAAAC,IACAC,GAAA9P,EAAAoP,EAAAQ,OAIA,QAAAP,IAAArP,EAAA+P,GACA,GAAA3N,GAAApC,EAAA8C,SAAAV,cACA5B,EAAAR,EAAA+C,UAGAvN,EAAAwK,EAAA8C,SAAAuK,aACA2C,GAAAhQ,EAAAjK,OAEAia,IACApS,GAAA,EAqCA,QAAA7E,KAAAgX,IAnCA,SAAAhX,GACAvD,EAAA2G,KAAApD,EACA,IAAAnC,GAAAsL,EAAAnJ,EAAAgX,EAAA3N,EAAApC,EAuBArB,GAAA6B,EAAAzH,EAAAnC,GAKAmC,IAAAiH,IACA+O,GAAA/O,EAAA,SAAAjH,IAIAA,EACA6E,IAAA,GAGA,QAAA4R,IAAAxP,GACA,GAAAnD,GAAAmD,EAAA8C,SAAAjG,IACAA,GAAAmD,EAAAyP,MAAA,kBAAA5S,GACAoT,GAAApT,EAAAmD,GACAnD,MACAvF,EAAAuF,KACAA,KAYA,KAJA,GAAArH,GAAA1C,OAAA0C,KAAAqH,GACA2D,EAAAR,EAAA8C,SAAAtC,MAEAnO,GADA2N,EAAA8C,SAAAwM,QACA9Z,EAAAW,QACA9D,KAAA,CACA,GAAA0G,GAAAvD,EAAAnD,EASAmO,IAAA1H,EAAA0H,EAAAzH,IAMKsC,EAAAtC,IACLgW,GAAA/O,EAAA,QAAAjH,GAIAmF,EAAArB,GAAA,GAGA,QAAAoT,IAAApT,EAAAmD,GAEAhE,GACA,KACA,MAAAa,GAAAtK,KAAAyN,KACG,MAAAjM,GAEH,MADAsP,IAAAtP,EAAAiM,EAAA,aAEG,QACH3D,KAMA,QAAAsT,IAAA3P,EAAA0P,GAEA,GAAAQ,GAAAlQ,EAAAmQ,kBAAArd,OAAAwF,OAAA,MAEA8X,EAAA7R,IAEA,QAAAxF,KAAA2W,GAAA,CACA,GAAAW,GAAAX,EAAA3W,GACAnG,EAAA,kBAAAyd,OAAAnd,GAQAkd,KAEAF,EAAAnX,GAAA,GAAAsT,IACArM,EACApN,GAAAyH,EACAA,EACAiW,KAOAvX,IAAAiH,IACAuQ,GAAAvQ,EAAAjH,EAAAsX,IAWA,QAAAE,IACAtU,EACAlD,EACAsX,GAEA,GAAAG,IAAAjS,IACA,mBAAA8R,IACApB,GAAA/b,IAAAsd,EACAC,GAAA1X,GACA2X,GAAAL,GACApB,GAAAhQ,IAAA5E,IAEA4U,GAAA/b,IAAAmd,EAAAnd,IACAsd,IAAA,IAAAH,EAAAnX,MACAuX,GAAA1X,GACA2X,GAAAL,EAAAnd,KACAmH,EACA4U,GAAAhQ,IAAAoR,EAAApR,KAAA5E,GAWAvH,OAAAC,eAAAkJ,EAAAlD,EAAAkW,IAGA,QAAAwB,IAAA1X,GACA,kBACA,GAAAqV,GAAAxa,KAAAuc,mBAAAvc,KAAAuc,kBAAApX,EACA,IAAAqV,EAOA,MANAA,GAAAuC,OACAvC,EAAAwC,WAEAxU,GAAAH,QACAmS,EAAAjP,SAEAiP,EAAAxX,OAKA,QAAA8Z,IAAAzX,GACA,kBACA,MAAAA,GAAA1G,KAAAqB,YAIA,QAAA2b,IAAAvP,EAAAsP,GACAtP,EAAA8C,SAAAtC,KACA,QAAAzH,KAAAuW,GAsBAtP,EAAAjH,GAAA,kBAAAuW,GAAAvW,GAAAsB,EAAAV,GAAA2V,EAAAvW,GAAAiH,GAIA,QAAA8P,IAAA9P,EAAA4P,GACA,OAAA7W,KAAA6W,GAAA,CACA,GAAAiB,GAAAjB,EAAA7W,EACA,IAAAgB,MAAAY,QAAAkW,GACA,OAAAxe,GAAA,EAAqBA,EAAAwe,EAAA1a,OAAoB9D,IACzCye,GAAA9Q,EAAAjH,EAAA8X,EAAAxe,QAGAye,IAAA9Q,EAAAjH,EAAA8X,IAKA,QAAAC,IACA9Q,EACA+Q,EACAF,EACAtQ,GASA,MAPAjJ,GAAAuZ,KACAtQ,EAAAsQ,EACAA,aAEA,gBAAAA,KACAA,EAAA7Q,EAAA6Q,IAEA7Q,EAAAgR,OAAAD,EAAAF,EAAAtQ,GAwDA,QAAA0Q,IAAAjR,GACA,GAAAkR,GAAAlR,EAAA8C,SAAAoO,OACAA,KACAlR,EAAAmR,UAAA,kBAAAD,GACAA,EAAA3e,KAAAyN,GACAkR,GAIA,QAAAE,IAAApR,GACA,GAAAqR,GAAAC,GAAAtR,EAAA8C,SAAAnC,OAAAX,EACAqR,KACAzT,GAAA,GACA9K,OAAA0C,KAAA6b,GAAA5b,QAAA,SAAAsD,GAYA4F,EAAAqB,EAAAjH,EAAAsY,EAAAtY,MAGA6E,GAAA,IAIA,QAAA0T,IAAA3Q,EAAAX,GACA,GAAAW,EAAA,CAUA,OARA0Q,GAAAve,OAAAwF,OAAA,MACA9C,EAAA2S,GACAoJ,QAAAC,QAAA7Q,GAAA8Q,OAAA,SAAA1Y,GAEA,MAAAjG,QAAAiM,yBAAA4B,EAAA5H,GAAA9F,aAEAH,OAAA0C,KAAAmL,GAEAtO,EAAA,EAAmBA,EAAAmD,EAAAW,OAAiB9D,IAAA,CAIpC,IAHA,GAAA0G,GAAAvD,EAAAnD,GACAqf,EAAA/Q,EAAA5H,GAAA2G,KACAiS,EAAA3R,EACA2R,GAAA,CACA,GAAAA,EAAAR,WAAArY,EAAA6Y,EAAAR,UAAAO,GAAA,CACAL,EAAAtY,GAAA4Y,EAAAR,UAAAO,EACA,OAEAC,IAAA5b,QAEA,IAAA4b,GACA,WAAAhR,GAAA5H,GAAA,CACA,GAAA6Y,GAAAjR,EAAA5H,GAAA5E,OACAkd,GAAAtY,GAAA,kBAAA6Y,GACAA,EAAArf,KAAAyN,GACA4R,GAMA,MAAAP,IASA,QAAAQ,IACAna,EACAsU,GAEA,GAAAlS,GAAAzH,EAAAC,EAAAkD,EAAAuD,CACA,IAAAgB,MAAAY,QAAAjD,IAAA,gBAAAA,GAEA,IADAoC,EAAA,GAAAC,OAAArC,EAAAvB,QACA9D,EAAA,EAAAC,EAAAoF,EAAAvB,OAA+B9D,EAAAC,EAAOD,IACtCyH,EAAAzH,GAAA2Z,EAAAtU,EAAArF,UAEG,oBAAAqF,GAEH,IADAoC,EAAA,GAAAC,OAAArC,GACArF,EAAA,EAAeA,EAAAqF,EAASrF,IACxByH,EAAAzH,GAAA2Z,EAAA3Z,EAAA,EAAAA,OAEG,IAAAgF,EAAAK,GAGH,IAFAlC,EAAA1C,OAAA0C,KAAAkC,GACAoC,EAAA,GAAAC,OAAAvE,EAAAW,QACA9D,EAAA,EAAAC,EAAAkD,EAAAW,OAAgC9D,EAAAC,EAAOD,IACvC0G,EAAAvD,EAAAnD,GACAyH,EAAAzH,GAAA2Z,EAAAtU,EAAAqB,KAAA1G,EAOA,OAJA4E,GAAA6C,KACAA,MAEA,EAAAiO,UAAA,EACAjO,EAQA,QAAAgY,IACAnf,EACAof,EACAvR,EACAwR,GAEA,GACAC,GADAC,EAAAte,KAAAkZ,aAAAna,EAEAuf,IACA1R,QACAwR,IAOAxR,EAAAxG,OAA8BgY,GAAAxR,IAE9ByR,EAAAC,EAAA1R,IAAAuR,GAEAE,EAAAre,KAAA0Z,OAAA3a,IAAAof,CAGA,IAAA9V,GAAAuE,KAAAmK,IACA,OAAA1O,GACArI,KAAAue,eAAA,YAA4CxH,KAAA1O,GAAegW,GAE3DA,EASA,QAAAG,IAAAxQ,GACA,MAAAD,GAAA/N,KAAAkP,SAAA,UAAAlB,GAAA,IAAAyQ,GAKA,QAAAC,IAAAC,EAAAC,GACA,MAAAzY,OAAAY,QAAA4X,IACA,IAAAA,EAAA3Z,QAAA4Z,GAEAD,IAAAC,EASA,QAAAC,IACAC,EACA3Z,EACA4Z,EACAC,EACAC,GAEA,GAAAC,GAAAjP,GAAAkP,SAAAha,IAAA4Z,CACA,OAAAE,IAAAD,IAAA/O,GAAAkP,SAAAha,GACAuZ,GAAAO,EAAAD,GACGE,EACHR,GAAAQ,EAAAJ,GACGE,EACHlQ,GAAAkQ,KAAA7Z,MADG,GAUH,QAAAia,IACAnW,EACAD,EACAhG,EACAqc,EACAC,GAEA,GAAAtc,EACA,GAAAS,EAAAT,GAKK,CACLmD,MAAAY,QAAA/D,KACAA,EAAAuD,EAAAvD,GAEA,IAAAwQ,EA2BA,QAAArO,KAAAnC,IA1BA,SAAAmC,GACA,GACA,UAAAA,GACA,UAAAA,GACAoa,GAAApa,GAEAqO,EAAAvK,MACS,CACT,GAAA4D,GAAA5D,EAAAoK,OAAApK,EAAAoK,MAAAxG,IACA2G,GAAA6L,GAAApP,GAAAuP,YAAAxW,EAAA6D,EAAA1H,GACA8D,EAAAwW,WAAAxW,EAAAwW,aACAxW,EAAAoK,QAAApK,EAAAoK,UAEA,GAAAqM,GAAAlf,GAAA2E,EACA,MAAAA,IAAAqO,IAAAkM,IAAAlM,MACAA,EAAArO,GAAAnC,EAAAmC,GAEAma,GAAA,EACArW,EAAAoJ,KAAApJ,EAAAoJ,QACA,UAAAqN,GAAA,SAAAC,GACA3c,EAAAmC,GAAAwa,KAMAxa,QAGA,MAAA8D,GAQA,QAAA2W,IACAhf,EACAif,GAEA,GAAAza,GAAApF,KAAA8f,eAAA9f,KAAA8f,iBACAC,EAAA3a,EAAAxE,EAGA,OAAAmf,KAAAF,EACAE,GAGAA,EAAA3a,EAAAxE,GAAAZ,KAAAkP,SAAA8Q,gBAAApf,GAAAjC,KACAqB,KAAAigB,aACA,KACAjgB,MAEAkgB,GAAAH,EAAA,aAAAnf,GAAA,GACAmf,GAOA,QAAAI,IACAJ,EACAnf,EACAuE,GAGA,MADA+a,IAAAH,EAAA,WAAAnf,GAAAuE,EAAA,IAAAA,EAAA,QACA4a,EAGA,QAAAG,IACAH,EACA5a,EACAib,GAEA,GAAAja,MAAAY,QAAAgZ,GACA,OAAAthB,GAAA,EAAmBA,EAAAshB,EAAAxd,OAAiB9D,IACpCshB,EAAAthB,IAAA,gBAAAshB,GAAAthB,IACA4hB,GAAAN,EAAAthB,GAAA0G,EAAA,IAAA1G,EAAA2hB,OAIAC,IAAAN,EAAA5a,EAAAib,GAIA,QAAAC,IAAAvM,EAAA3O,EAAAib,GACAtM,EAAArK,UAAA,EACAqK,EAAA3O,MACA2O,EAAAsM,SAKA,QAAAE,IAAArX,EAAAjG,GACA,GAAAA,EACA,GAAAU,EAAAV,GAKK,CACL,GAAAqP,GAAApJ,EAAAoJ,GAAApJ,EAAAoJ,GAAAjM,KAA4C6C,EAAAoJ,MAC5C,QAAAlN,KAAAnC,GAAA,CACA,GAAAud,GAAAlO,EAAAlN,GACAqb,EAAAxd,EAAAmC,EACAkN,GAAAlN,GAAAob,KAAA/T,OAAA+T,EAAAC,WAIA,MAAAvX,GAKA,QAAAwX,IAAApY,GACAA,EAAAqY,GAAAP,GACA9X,EAAAsY,GAAAtc,EACAgE,EAAAuY,GAAAxc,EACAiE,EAAAwY,GAAA5C,GACA5V,EAAAyY,GAAA5C,GACA7V,EAAA0Y,GAAApa,EACA0B,EAAA2Y,GAAA1Z,EACAe,EAAA4Y,GAAArB,GACAvX,EAAA6Y,GAAA1C,GACAnW,EAAA8Y,GAAAtC,GACAxW,EAAA+Y,GAAAhC,GACA/W,EAAAgZ,GAAA1Y,EACAN,EAAAiZ,GAAA1M,GACAvM,EAAAkZ,GAAArK,GACA7O,EAAAmZ,GAAAlB,GAKA,QAAAmB,IACAxY,EACA2D,EACA1D,EACAoE,EACAnF,GAEA,GAGAuZ,GAHA/U,EAAAxE,EAAAwE,OAIAzH,GAAAoI,EAAA,SACAoU,EAAAxiB,OAAAwF,OAAA4I,GAEAoU,EAAAC,UAAArU,IAKAoU,EAAApU,EAEAA,IAAAqU,UAEA,IAAAC,GAAAte,EAAAqJ,EAAAkV,WACAC,GAAAF,CAEA5hB,MAAAiJ,OACAjJ,KAAA4M,QACA5M,KAAAkJ,WACAlJ,KAAAsN,SACAtN,KAAAoW,UAAAnN,EAAAoJ,IAAA8G,GACAnZ,KAAA+hB,WAAArE,GAAA/Q,EAAAI,OAAAO,GACAtN,KAAA8W,MAAA,WAA4B,MAAAD,IAAA3N,EAAAoE,IAG5BsU,IAEA5hB,KAAAkP,SAAAvC,EAEA3M,KAAA0Z,OAAA1Z,KAAA8W,QACA9W,KAAAkZ,aAAAjQ,EAAAgQ,aAAAE,IAGAxM,EAAAqV,SACAhiB,KAAAiiB,GAAA,SAAAvc,EAAAgB,EAAA7H,EAAAC,GACA,GAAAgK,GAAAoZ,GAAAR,EAAAhc,EAAAgB,EAAA7H,EAAAC,EAAAgjB,EAKA,OAJAhZ,KAAA3C,MAAAY,QAAA+B,KACAA,EAAAe,UAAA8C,EAAAqV,SACAlZ,EAAAa,UAAA2D,GAEAxE,GAGA9I,KAAAiiB,GAAA,SAAAvc,EAAAgB,EAAA7H,EAAAC,GAAqC,MAAAojB,IAAAR,EAAAhc,EAAAgB,EAAA7H,EAAAC,EAAAgjB,IAMrC,QAAAK,IACAha,EACAqG,EACAvF,EACAyY,EACAxY,GAEA,GAAAyD,GAAAxE,EAAAwE,QACAC,KACA2B,EAAA5B,EAAAC,KACA,IAAAvJ,EAAAkL,GACA,OAAApJ,KAAAoJ,GACA3B,EAAAzH,GAAAmJ,EAAAnJ,EAAAoJ,EAAAC,GAAA2K,QAGA9V,GAAA4F,EAAAoK,QAA4B+O,GAAAxV,EAAA3D,EAAAoK,OAC5BhQ,EAAA4F,EAAA2D,QAA4BwV,GAAAxV,EAAA3D,EAAA2D,MAG5B,IAAAyV,GAAA,GAAAZ,IACAxY,EACA2D,EACA1D,EACAwY,EACAvZ,GAGAW,EAAA6D,EAAAyL,OAAAzZ,KAAA,KAAA0jB,EAAAJ,GAAAI,EAEA,IAAAvZ,YAAAF,IACA,MAAA0Z,IAAAxZ,EAAAG,EAAAoZ,EAAA/U,OAAAX,EAAA0V,EACG,IAAAlc,MAAAY,QAAA+B,GAAA,CAGH,OAFAyZ,GAAA5O,GAAA7K,OACAtC,EAAA,GAAAL,OAAAoc,EAAAhgB,QACA9D,EAAA,EAAmBA,EAAA8jB,EAAAhgB,OAAmB9D,IACtC+H,EAAA/H,GAAA6jB,GAAAC,EAAA9jB,GAAAwK,EAAAoZ,EAAA/U,OAAAX,EAAA0V,EAEA,OAAA7b,IAIA,QAAA8b,IAAAxZ,EAAAG,EAAAyY,EAAA/U,EAAA0V,GAIA,GAAAG,GAAA3Z,EAAAC,EASA,OARA0Z,GAAA7Y,UAAA+X,EACAc,EAAA5Y,UAAA+C,EAIA1D,EAAA8N,QACAyL,EAAAvZ,OAAAuZ,EAAAvZ,UAAmC8N,KAAA9N,EAAA8N,MAEnCyL,EAGA,QAAAJ,IAAA/b,EAAAyF,GACA,OAAA3G,KAAA2G,GACAzF,EAAA7F,GAAA2E,IAAA2G,EAAA3G,GA+EA,QAAAsd,IACAta,EACAc,EACAI,EACAH,EACAF,GAEA,IAAA7F,EAAAgF,GAAA,CAIA,GAAA2M,GAAAzL,EAAA6F,SAAAtB,KASA,IANAnK,EAAA0E,KACAA,EAAA2M,EAAA1O,OAAA+B,IAKA,kBAAAA,GAAA,CAQA,GAAAoB,EACA,IAAApG,EAAAgF,EAAAua,OACAnZ,EAAApB,MAEAzF,MADAyF,EAAA0M,GAAAtL,EAAAuL,EAAAzL,KAKA,MAAAqL,IACAnL,EACAN,EACAI,EACAH,EACAF,EAKAC,SAIA0Z,GAAAxa,GAGA9E,EAAA4F,EAAA2Z,QACAC,GAAA1a,EAAAwE,QAAA1D,EAIA,IAAAuF,GAAA4E,GAAAnK,EAAAd,EAAAa,EAGA,IAAA1F,EAAA6E,EAAAwE,QAAAmW,YACA,MAAAX,IAAAha,EAAAqG,EAAAvF,EAAAI,EAAAH,EAKA,IAAAkN,GAAAnN,EAAAoJ,EAKA,IAFApJ,EAAAoJ,GAAApJ,EAAA8Z,SAEAzf,EAAA6E,EAAAwE,QAAA4K,UAAA,CAKA,GAAAR,GAAA9N,EAAA8N,IACA9N,MACA8N,IACA9N,EAAA8N,QAKAiM,GAAA/Z,EAGA,IAAAlK,GAAAoJ,EAAAwE,QAAA5N,MAAAiK,CAQA,OAPA,IAAAJ,IACA,iBAAAT,EAAA,KAAApJ,EAAA,IAAAA,EAAA,IACAkK,MAAAvG,iBAAA2G,GACKlB,OAAAqG,YAAA4H,YAAApN,MAAAE,YACLK,KAMA,QAAA0Z,IACAna,EACAwE,GAEA,GAAAX,IACAuW,cAAA,EACA9J,aAAAtQ,EACAwE,UAGA6V,EAAAra,EAAAG,KAAAka,cAKA,OAJA9f,GAAA8f,KACAxW,EAAAyL,OAAA+K,EAAA/K,OACAzL,EAAAqT,gBAAAmD,EAAAnD,iBAEA,GAAAlX,GAAAQ,iBAAAnB,KAAAwE,GAGA,QAAAqW,IAAA/Z,GAEA,OADA4G,GAAA5G,EAAA+J,OAAA/J,EAAA+J,SACAvU,EAAA,EAAiBA,EAAA2kB,GAAA7gB,OAAyB9D,IAAA,CAC1C,GAAA0G,GAAAie,GAAA3kB,GACA8hB,EAAA1Q,EAAA1K,GACAke,EAAAC,GAAAne,EACAob,KAAA8C,GAAA9C,KAAAgD,UACA1T,EAAA1K,GAAAob,EAAAiD,GAAAH,EAAA9C,GAAA8C,IAKA,QAAAG,IAAAC,EAAAC,GACA,GAAAvQ,GAAA,SAAAzN,EAAAgB,GAEA+c,EAAA/d,EAAAgB,GACAgd,EAAAhe,EAAAgB,GAGA,OADAyM,GAAAoQ,SAAA,EACApQ,EAKA,QAAA0P,IAAAlW,EAAA1D,GACA,GAAAwF,GAAA9B,EAAAiW,OAAAjW,EAAAiW,MAAAnU,MAAA,QACAiE,EAAA/F,EAAAiW,OAAAjW,EAAAiW,MAAAlQ,OAAA,SACGzJ,EAAA2D,QAAA3D,EAAA2D,WAA+B6B,GAAAxF,EAAA2Z,MAAA5f,KAClC,IAAAqP,GAAApJ,EAAAoJ,KAAApJ,EAAAoJ,OACAkO,EAAAlO,EAAAK,GACAiR,EAAA1a,EAAA2Z,MAAAe,QACAtgB,GAAAkd,IAEApa,MAAAY,QAAAwZ,IACA,IAAAA,EAAAvb,QAAA2e,GACApD,IAAAoD,KAEAtR,EAAAK,IAAAiR,GAAAnX,OAAA+T,IAGAlO,EAAAK,GAAAiR,EAWA,QAAAzB,IACA7Y,EACAL,EACAC,EACAC,EACA0a,EACAC,GAUA,OARA1d,MAAAY,QAAAkC,IAAAzF,EAAAyF,MACA2a,EAAA1a,EACAA,EAAAD,EACAA,MAAAvG,IAEAY,EAAAugB,KACAD,EAAAE,IAEAC,GAAA1a,EAAAL,EAAAC,EAAAC,EAAA0a,GAGA,QAAAG,IACA1a,EACAL,EACAC,EACAC,EACA0a,GAEA,GAAAvgB,EAAA4F,IAAA5F,EAAA,EAAAoH,QAMA,MAAAmK,KAMA,IAHAvR,EAAA4F,IAAA5F,EAAA4F,EAAA+a,MACAhb,EAAAC,EAAA+a,KAEAhb,EAEA,MAAA4L,KAeAzO,OAAAY,QAAAmC,IACA,kBAAAA,GAAA,KAEAD,QACAA,EAAAgQ,aAAwB1Y,QAAA2I,EAAA,IACxBA,EAAA3G,OAAA,GAEAqhB,IAAAE,GACA5a,EAAAyK,GAAAzK,GACG0a,IAAAK,KACH/a,EAAAwK,GAAAxK,GAEA,IAAAJ,GAAAU,CACA,oBAAAR,GAAA,CACA,GAAAb,EACAqB,GAAAH,EAAAsP,QAAAtP,EAAAsP,OAAAnP,IAAAyG,GAAAiU,gBAAAlb,GAGAF,EAFAmH,GAAAkU,cAAAnb,GAEA,GAAAJ,IACAqH,GAAAmU,qBAAApb,GAAAC,EAAAC,MACAxG,UAAA2G,GAEKJ,KAAAob,MAAAhhB,EAAA8E,EAAA4F,EAAA1E,EAAA6F,SAAA,aAAAlG,IAOL,GAAAJ,IACAI,EAAAC,EAAAC,MACAxG,UAAA2G,GAPAoZ,GAAAta,EAAAc,EAAAI,EAAAH,EAAAF,OAYAF,GAAA2Z,GAAAzZ,EAAAC,EAAAI,EAAAH,EAEA,OAAA/C,OAAAY,QAAA+B,GACAA,EACGzF,EAAAyF,IACHzF,EAAAmG,IAAoB8a,GAAAxb,EAAAU,GACpBnG,EAAA4F,IAAsBsb,GAAAtb,GACtBH,GAEA8L,KAIA,QAAA0P,IAAAxb,EAAAU,EAAAgb,GAOA,GANA1b,EAAAU,KACA,kBAAAV,EAAAE,MAEAQ,MAAA9G,GACA8hB,GAAA,GAEAnhB,EAAAyF,EAAAI,UACA,OAAAzK,GAAA,EAAAC,EAAAoK,EAAAI,SAAA3G,OAA8C9D,EAAAC,EAAOD,IAAA,CACrD,GAAA8O,GAAAzE,EAAAI,SAAAzK,EACA4E,GAAAkK,EAAAvE,OACA7F,EAAAoK,EAAA/D,KAAAlG,EAAAkhB,IAAA,QAAAjX,EAAAvE,MACAsb,GAAA/W,EAAA/D,EAAAgb,IASA,QAAAD,IAAAtb,GACAxF,EAAAwF,EAAAwb,QACAnT,GAAArI,EAAAwb,OAEAhhB,EAAAwF,EAAAyb,QACApT,GAAArI,EAAAyb,OAMA,QAAAC,IAAAvY,GACAA,EAAAiN,OAAA,KACAjN,EAAA0T,aAAA,IACA,IAAAnT,GAAAP,EAAA8C,SACA2J,EAAAzM,EAAAuM,OAAAhM,EAAAyM,aACAiJ,EAAAxJ,KAAAxP,OACA+C,GAAAsN,OAAA7C,GAAAlK,EAAAqM,gBAAAqJ,GACAjW,EAAA8M,aAAAC,GAKA/M,EAAA6V,GAAA,SAAAvc,EAAAgB,EAAA7H,EAAAC,GAAiC,MAAAojB,IAAA9V,EAAA1G,EAAAgB,EAAA7H,EAAAC,GAAA,IAGjCsN,EAAAmS,eAAA,SAAA7Y,EAAAgB,EAAA7H,EAAAC,GAA6C,MAAAojB,IAAA9V,EAAA1G,EAAAgB,EAAA7H,EAAAC,GAAA,GAI7C,IAAA8lB,GAAA/L,KAAA5P,IAWA8B,GAAAqB,EAAA,SAAAwY,KAAAvR,OAAA8F,GAAA,SACApO,EAAAqB,EAAA,aAAAO,EAAA0J,kBAAA8C,GAAA,SA6HA,QAAA0L,IAAAzY,EAAAO,GACA,GAAA6O,GAAApP,EAAA8C,SAAAhQ,OAAAwF,OAAA0H,EAAA0Y,YAAAnY,SAEAkM,EAAAlM,EAAAyM,YACAoC,GAAAlO,OAAAX,EAAAW,OACAkO,EAAApC,aAAAP,CAEA,IAAAkM,GAAAlM,EAAAvP,gBACAkS,GAAAhN,UAAAuW,EAAAvW,UACAgN,EAAAnF,iBAAA0O,EAAA3O,UACAoF,EAAAxC,gBAAA+L,EAAA7b,SACAsS,EAAAwJ,cAAAD,EAAA/b,IAEA2D,EAAAyL,SACAoD,EAAApD,OAAAzL,EAAAyL,OACAoD,EAAAwE,gBAAArT,EAAAqT,iBAIA,QAAA2C,IAAAxa,GACA,GAAAwE,GAAAxE,EAAAwE,OACA,IAAAxE,EAAA8c,MAAA,CACA,GAAAC,GAAAvC,GAAAxa,EAAA8c,MAEA,IAAAC,IADA/c,EAAA+c,aACA,CAGA/c,EAAA+c,cAEA,IAAAC,GAAAC,GAAAjd,EAEAgd,IACA/e,EAAA+B,EAAAkd,cAAAF,GAEAxY,EAAAxE,EAAAwE,QAAAU,EAAA6X,EAAA/c,EAAAkd,eACA1Y,EAAA5N,OACA4N,EAAA2Y,WAAA3Y,EAAA5N,MAAAoJ,IAIA,MAAAwE,GAGA,QAAAyY,IAAAjd,GACA,GAAAod,GACAC,EAAArd,EAAAwE,QACA8Y,EAAAtd,EAAAkd,cACAK,EAAAvd,EAAAwd,aACA,QAAAxgB,KAAAqgB,GACAA,EAAArgB,KAAAugB,EAAAvgB,KACAogB,IAAsBA,MACtBA,EAAApgB,GAAAygB,GAAAJ,EAAArgB,GAAAsgB,EAAAtgB,GAAAugB,EAAAvgB,IAGA,OAAAogB,GAGA,QAAAK,IAAAJ,EAAAC,EAAAC,GAGA,GAAAvf,MAAAY,QAAAye,GAAA,CACA,GAAAhf,KACAkf,GAAAvf,MAAAY,QAAA2e,SACAD,EAAAtf,MAAAY,QAAA0e,QACA,QAAAhnB,GAAA,EAAmBA,EAAA+mB,EAAAjjB,OAAmB9D,KAEtCgnB,EAAAzgB,QAAAwgB,EAAA/mB,KAAA,GAAAinB,EAAA1gB,QAAAwgB,EAAA/mB,IAAA,IACA+H,EAAA+B,KAAAid,EAAA/mB,GAGA,OAAA+H,GAEA,MAAAgf,GAIA,QAAAK,IAAAlZ,GAMA3M,KAAA8lB,MAAAnZ,GAWA,QAAAoZ,IAAAF,GACAA,EAAAG,IAAA,SAAAC,GACA,GAAAC,GAAAlmB,KAAAmmB,oBAAAnmB,KAAAmmB,qBACA,IAAAD,EAAAlhB,QAAAihB,IAAA,EACA,MAAAjmB,KAIA,IAAAomB,GAAApgB,EAAAL,UAAA,EAQA,OAPAygB,GAAAC,QAAArmB,MACA,kBAAAimB,GAAAK,QACAL,EAAAK,QAAA1gB,MAAAqgB,EAAAG,GACK,kBAAAH,IACLA,EAAArgB,MAAA,KAAAwgB,GAEAF,EAAA3d,KAAA0d,GACAjmB,MAMA,QAAAumB,IAAAV,GACAA,EAAAW,MAAA,SAAAA,GAEA,MADAxmB,MAAA2M,QAAAU,EAAArN,KAAA2M,QAAA6Z,GACAxmB,MAMA,QAAAymB,IAAAZ,GAMAA,EAAAnD,IAAA,CACA,IAAAA,GAAA,CAKAmD,GAAAzf,OAAA,SAAAif,GACAA,OACA,IAAAqB,GAAA1mB,KACA2mB,EAAAD,EAAAhE,IACAkE,EAAAvB,EAAAwB,QAAAxB,EAAAwB,SACA,IAAAD,EAAAD,GACA,MAAAC,GAAAD,EAGA,IAAA5nB,GAAAsmB,EAAAtmB,MAAA2nB,EAAA/Z,QAAA5N,KAKA+nB,EAAA,SAAAna,GACA3M,KAAA8lB,MAAAnZ,GA6CA,OA3CAma,GAAAnnB,UAAAT,OAAAwF,OAAAgiB,EAAA/mB,WACAmnB,EAAAnnB,UAAAmlB,YAAAgC,EACAA,EAAApE,QACAoE,EAAAna,QAAAU,EACAqZ,EAAA/Z,QACA0Y,GAEAyB,EAAA,MAAAJ,EAKAI,EAAAna,QAAAC,OACAma,GAAAD,GAEAA,EAAAna,QAAAmP,UACAkL,GAAAF,GAIAA,EAAA1gB,OAAAsgB,EAAAtgB,OACA0gB,EAAAN,MAAAE,EAAAF,MACAM,EAAAd,IAAAU,EAAAV,IAIAiB,GAAAplB,QAAA,SAAAgL,GACAia,EAAAja,GAAA6Z,EAAA7Z,KAGA9N,IACA+nB,EAAAna,QAAA2Y,WAAAvmB,GAAA+nB,GAMAA,EAAA5B,aAAAwB,EAAA/Z,QACAma,EAAAzB,gBACAyB,EAAAnB,cAAAvf,KAAiC0gB,EAAAna,SAGjCia,EAAAD,GAAAG,EACAA,GAIA,QAAAC,IAAAG,GACA,GAAAta,GAAAsa,EAAAva,QAAAC,KACA,QAAAzH,KAAAyH,GACAuO,GAAA+L,EAAAvnB,UAAA,SAAAwF,GAIA,QAAA6hB,IAAAE,GACA,GAAApL,GAAAoL,EAAAva,QAAAmP,QACA,QAAA3W,KAAA2W,GACAa,GAAAuK,EAAAvnB,UAAAwF,EAAA2W,EAAA3W,IAMA,QAAAgiB,IAAAtB,GAIAoB,GAAAplB,QAAA,SAAAgL,GACAgZ,EAAAhZ,GAAA,SACAmB,EACAoZ,GAEA,MAAAA,IAOA,cAAAva,GAAAnJ,EAAA0jB,KACAA,EAAAroB,KAAAqoB,EAAAroB,MAAAiP,EACAoZ,EAAApnB,KAAA2M,QAAAiB,MAAAxH,OAAAghB,IAEA,cAAAva,GAAA,kBAAAua,KACAA,GAAwBrhB,KAAAqhB,EAAAha,OAAAga,IAExBpnB,KAAA2M,QAAAE,EAAA,KAAAmB,GAAAoZ,EACAA,GAdApnB,KAAA2M,QAAAE,EAAA,KAAAmB,MAwBA,QAAAqZ,IAAA7L,GACA,MAAAA,OAAArT,KAAAwE,QAAA5N,MAAAyc,EAAAxS,KAGA,QAAAse,IAAAC,EAAAxoB,GACA,MAAAoH,OAAAY,QAAAwgB,GACAA,EAAAviB,QAAAjG,IAAA,EACG,gBAAAwoB,GACHA,EAAA3iB,MAAA,KAAAI,QAAAjG,IAAA,IACG6E,EAAA2jB,IACHA,EAAAvf,KAAAjJ,GAMA,QAAAyoB,IAAAC,EAAA5J,GACA,GAAAvY,GAAAmiB,EAAAniB,MACA1D,EAAA6lB,EAAA7lB,KACAyX,EAAAoO,EAAApO,MACA,QAAAlU,KAAAG,GAAA,CACA,GAAAoiB,GAAApiB,EAAAH,EACA,IAAAuiB,EAAA,CACA,GAAA3oB,GAAAsoB,GAAAK,EAAApe,iBACAvK,KAAA8e,EAAA9e,IACA4oB,GAAAriB,EAAAH,EAAAvD,EAAAyX,KAMA,QAAAsO,IACAriB,EACAH,EACAvD,EACAgmB,GAEA,GAAAC,GAAAviB,EAAAH,IACA0iB,GAAAD,GAAAC,EAAA7e,MAAA4e,EAAA5e,KACA6e,EAAAC,kBAAAC,WAEAziB,EAAAH,GAAA,KACAN,EAAAjD,EAAAuD,GAsMA,QAAA6iB,IAAAlf,GAIA,IAHA,GAAAG,GAAAH,EAAAG,KACAgf,EAAAnf,EACAof,EAAApf,EACAzF,EAAA6kB,EAAAJ,qBACAI,IAAAJ,kBAAAzO,SACA6O,EAAAjf,OACAA,EAAAkf,GAAAD,EAAAjf,QAGA,MAAA5F,EAAA4kB,IAAA3a,SACA2a,KAAAhf,OACAA,EAAAkf,GAAAlf,EAAAgf,EAAAhf,MAGA,OAAAmf,IAAAnf,EAAAof,YAAApf,EAAAyb,OAGA,QAAAyD,IAAA5a,EAAAD,GACA,OACA+a,YAAA7b,GAAAe,EAAA8a,YAAA/a,EAAA+a,aACA3D,MAAArhB,EAAAkK,EAAAmX,QACAnX,EAAAmX,MAAApX,EAAAoX,OACApX,EAAAoX,OAIA,QAAA0D,IACAC,EACAC,GAEA,MAAAjlB,GAAAglB,IAAAhlB,EAAAilB,GACA9b,GAAA6b,EAAAE,GAAAD,IAGA,GAGA,QAAA9b,IAAA9G,EAAAgB,GACA,MAAAhB,GAAAgB,EAAAhB,EAAA,IAAAgB,EAAAhB,EAAAgB,GAAA,GAGA,QAAA6hB,IAAAvlB,GACA,MAAAmD,OAAAY,QAAA/D,GACAwlB,GAAAxlB,GAEAS,EAAAT,GACAylB,GAAAzlB,GAEA,gBAAAA,GACAA,EAGA,GAGA,QAAAwlB,IAAAxlB,GAGA,OADA0lB,GADAliB,EAAA,GAEA/H,EAAA,EAAAC,EAAAsE,EAAAT,OAAmC9D,EAAAC,EAAOD,IAC1C4E,EAAAqlB,EAAAH,GAAAvlB,EAAAvE,MAAA,KAAAiqB,IACAliB,IAAgBA,GAAA,KAChBA,GAAAkiB,EAGA,OAAAliB,GAGA,QAAAiiB,IAAAzlB,GACA,GAAAwD,GAAA,EACA,QAAArB,KAAAnC,GACAA,EAAAmC,KACAqB,IAAgBA,GAAA,KAChBA,GAAArB,EAGA,OAAAqB,GAuCA,QAAA0d,IAAAlb,GACA,MAAA2f,IAAA3f,GACA,MAIA,SAAAA,EACA,WADA,GAMA,QAAA4f,IAAA5f,GAEA,IAAAoH,GACA,QAEA,IAAA+T,GAAAnb,GACA,QAIA,IAFAA,IAAAnI,cAEA,MAAAgoB,GAAA7f,GACA,MAAA6f,IAAA7f,EAEA,IAAAiP,GAAA6Q,SAAA5G,cAAAlZ,EACA,OAAAA,GAAAhE,QAAA,QAEA6jB,GAAA7f,GACAiP,EAAA6M,cAAA1kB,OAAA2oB,oBACA9Q,EAAA6M,cAAA1kB,OAAA4oB,YAGAH,GAAA7f,GAAA,qBAAAhB,KAAAiQ,EAAA7T,YAWA,QAAA6kB,IAAAhR,GACA,mBAAAA,GAAA,CACA,GAAAiR,GAAAJ,SAAAK,cAAAlR,EACA,OAAAiR,IAIAJ,SAAA5G,cAAA,OAIA,MAAAjK,GAMA,QAAAmR,IAAAC,EAAAvgB,GACA,GAAAM,GAAA0f,SAAA5G,cAAAmH,EACA,kBAAAA,EACAjgB,GAGAN,EAAAG,MAAAH,EAAAG,KAAAoK,WAAA3Q,KAAAoG,EAAAG,KAAAoK,MAAAiW,UACAlgB,EAAAmgB,aAAA,uBAEAngB,GAGA,QAAAogB,IAAAC,EAAAJ,GACA,MAAAP,UAAAU,gBAAAE,GAAAD,GAAAJ,GAGA,QAAAM,IAAAxgB,GACA,MAAA2f,UAAAa,eAAAxgB,GAGA,QAAAygB,IAAAzgB,GACA,MAAA2f,UAAAc,cAAAzgB,GAGA,QAAA0gB,IAAA5B,EAAA6B,EAAAC,GACA9B,EAAA4B,aAAAC,EAAAC,GAGA,QAAAC,IAAAlW,EAAAvG,GACAuG,EAAAkW,YAAAzc,GAGA,QAAA0c,IAAAnW,EAAAvG,GACAuG,EAAAmW,YAAA1c,GAGA,QAAA0a,IAAAnU,GACA,MAAAA,GAAAmU,WAGA,QAAAiC,IAAApW,GACA,MAAAA,GAAAoW,YAGA,QAAAb,IAAAvV,GACA,MAAAA,GAAAuV,QAGA,QAAAc,IAAArW,EAAA3K,GACA2K,EAAAsW,YAAAjhB,EAGA,QAAAkhB,IAAAvW,EAAAwW,GACAxW,EAAAyV,aAAAe,EAAA,IAmCA,QAAAC,IAAAzhB,EAAA0hB,GACA,GAAArlB,GAAA2D,EAAAG,KAAAwhB,GACA,IAAApnB,EAAA8B,GAAA,CAEA,GAAAiH,GAAAtD,EAAAO,QACAohB,EAAA3hB,EAAAgf,mBAAAhf,EAAAM,IACAshB,EAAAte,EAAAqL,KACA+S,GACArkB,MAAAY,QAAA2jB,EAAAvlB,IACAN,EAAA6lB,EAAAvlB,GAAAslB,GACKC,EAAAvlB,KAAAslB,IACLC,EAAAvlB,OAAAzC,IAGAoG,EAAAG,KAAA0hB,SACAxkB,MAAAY,QAAA2jB,EAAAvlB,IAEOulB,EAAAvlB,GAAAH,QAAAylB,GAAA,GAEPC,EAAAvlB,GAAAoD,KAAAkiB,GAHAC,EAAAvlB,IAAAslB,GAMAC,EAAAvlB,GAAAslB,GAqBA,QAAAG,IAAAllB,EAAAgB,GACA,MACAhB,GAAAP,MAAAuB,EAAAvB,MAEAO,EAAAsD,MAAAtC,EAAAsC,KACAtD,EAAAgE,YAAAhD,EAAAgD,WACArG,EAAAqC,EAAAuD,QAAA5F,EAAAqD,EAAAuC,OACA4hB,GAAAnlB,EAAAgB,IAEApD,EAAAoC,EAAAqQ,qBACArQ,EAAA6D,eAAA7C,EAAA6C,cACApG,EAAAuD,EAAA6C,aAAAgH,QAMA,QAAAsa,IAAAnlB,EAAAgB,GACA,aAAAhB,EAAAsD,IAA0B,QAC1B,IAAAvK,GACAqsB,EAAAznB,EAAA5E,EAAAiH,EAAAuD,OAAA5F,EAAA5E,IAAA4U,QAAA5U,EAAAoO,KACAke,EAAA1nB,EAAA5E,EAAAiI,EAAAuC,OAAA5F,EAAA5E,IAAA4U,QAAA5U,EAAAoO,IACA,OAAAie,KAAAC,GAAAC,GAAAF,IAAAE,GAAAD,GAGA,QAAAE,IAAA/hB,EAAAgiB,EAAAC,GACA,GAAA1sB,GAAA0G,EACAV,IACA,KAAAhG,EAAAysB,EAAoBzsB,GAAA0sB,IAAa1sB,EACjC0G,EAAA+D,EAAAzK,GAAA0G,IACA9B,EAAA8B,KAAqBV,EAAAU,GAAA1G,EAErB,OAAAgG,GA6tBA,QAAA2mB,IAAAC,EAAAviB,IACAuiB,EAAApiB,KAAAkE,YAAArE,EAAAG,KAAAkE,aACAoL,GAAA8S,EAAAviB,GAIA,QAAAyP,IAAA8S,EAAAviB,GACA,GAQA3D,GAAAmmB,EAAAC,EARAC,EAAAH,IAAAI,GACAC,EAAA5iB,IAAA2iB,GACAE,EAAAC,GAAAP,EAAApiB,KAAAkE,WAAAke,EAAAhiB,SACAwiB,EAAAD,GAAA9iB,EAAAG,KAAAkE,WAAArE,EAAAO,SAEAyiB,KACAC,IAGA,KAAA5mB,IAAA0mB,GACAP,EAAAK,EAAAxmB,GACAomB,EAAAM,EAAA1mB,GACAmmB,GAQAC,EAAAS,SAAAV,EAAAtoB,MACAipB,GAAAV,EAAA,SAAAziB,EAAAuiB,GACAE,EAAA5jB,KAAA4jB,EAAA5jB,IAAAukB,kBACAH,EAAAxjB,KAAAgjB,KATAU,GAAAV,EAAA,OAAAziB,EAAAuiB,GACAE,EAAA5jB,KAAA4jB,EAAA5jB,IAAAwkB,UACAL,EAAAvjB,KAAAgjB,GAYA,IAAAO,EAAAvpB,OAAA,CACA,GAAA6pB,GAAA,WACA,OAAA3tB,GAAA,EAAqBA,EAAAqtB,EAAAvpB,OAA2B9D,IAChDwtB,GAAAH,EAAArtB,GAAA,WAAAqK,EAAAuiB,GAGAG,GACA1Y,GAAAhK,EAAA,SAAAsjB,GAEAA,IAYA,GARAL,EAAAxpB,QACAuQ,GAAAhK,EAAA,uBACA,OAAArK,GAAA,EAAqBA,EAAAstB,EAAAxpB,OAA8B9D,IACnDwtB,GAAAF,EAAAttB,GAAA,mBAAAqK,EAAAuiB,MAKAG,EACA,IAAArmB,IAAAwmB,GACAE,EAAA1mB,IAEA8mB,GAAAN,EAAAxmB,GAAA,SAAAkmB,IAAAK,GAQA,QAAAE,IACA1e,EACAd,GAEA,GAAA5F,GAAAtH,OAAAwF,OAAA,KACA,KAAAwI,EAEA,MAAA1G,EAEA,IAAA/H,GAAA8sB,CACA,KAAA9sB,EAAA,EAAaA,EAAAyO,EAAA3K,OAAiB9D,IAC9B8sB,EAAAre,EAAAzO,GACA8sB,EAAAc,YAEAd,EAAAc,UAAAC,IAEA9lB,EAAA+lB,GAAAhB,MACAA,EAAA5jB,IAAAoG,EAAA3B,EAAA8C,SAAA,aAAAqc,EAAAxsB,MAAA,EAGA,OAAAyH,GAGA,QAAA+lB,IAAAhB,GACA,MAAAA,GAAAiB,SAAAjB,EAAA,SAAArsB,OAAA0C,KAAA2pB,EAAAc,eAA4EI,KAAA,KAG5E,QAAAR,IAAAV,EAAAvY,EAAAlK,EAAAuiB,EAAAK,GACA,GAAArmB,GAAAkmB,EAAA5jB,KAAA4jB,EAAA5jB,IAAAqL,EACA,IAAA3N,EACA,IACAA,EAAAyD,EAAAM,IAAAmiB,EAAAziB,EAAAuiB,EAAAK,GACK,MAAAvrB,GACLsP,GAAAtP,EAAA2I,EAAAO,QAAA,aAAAkiB,EAAA,SAAAvY,EAAA,UAYA,QAAA0Z,IAAArB,EAAAviB,GACA,GAAA0S,GAAA1S,EAAAQ,gBACA,MAAAjG,EAAAmY,KAAA,IAAAA,EAAArT,KAAAwE,QAAAggB,cAGAxpB,EAAAkoB,EAAApiB,KAAAoK,QAAAlQ,EAAA2F,EAAAG,KAAAoK,QAAA,CAGA,GAAAlO,GAAAyK,EACAxG,EAAAN,EAAAM,IACAwjB,EAAAvB,EAAApiB,KAAAoK,UACAA,EAAAvK,EAAAG,KAAAoK,SAEAhQ,GAAAgQ,EAAA5I,UACA4I,EAAAvK,EAAAG,KAAAoK,MAAAjN,KAAwCiN,GAGxC,KAAAlO,IAAAkO,GACAzD,EAAAyD,EAAAlO,GACAynB,EAAAznB,KACAyK,GACAid,GAAAzjB,EAAAjE,EAAAyK,IAMAkd,IAAAC,KAAA1Z,EAAArQ,QAAA4pB,EAAA5pB,OACA6pB,GAAAzjB,EAAA,QAAAiK,EAAArQ,MAEA,KAAAmC,IAAAynB,GACAzpB,EAAAkQ,EAAAlO,MACA6nB,GAAA7nB,GACAiE,EAAA6jB,kBAAAC,GAAAC,GAAAhoB,IACOioB,GAAAjoB,IACPiE,EAAAikB,gBAAAloB,KAMA,QAAA0nB,IAAA5U,EAAA9S,EAAAnC,GACAiV,EAAAoR,QAAArkB,QAAA,QACAsoB,GAAArV,EAAA9S,EAAAnC,GACGuqB,GAAApoB,GAGHqoB,GAAAxqB,GACAiV,EAAAoV,gBAAAloB,IAIAnC,EAAA,oBAAAmC,GAAA,UAAA8S,EAAAoR,QACA,OACAlkB,EACA8S,EAAAsR,aAAApkB,EAAAnC,IAEGoqB,GAAAjoB,GACH8S,EAAAsR,aAAApkB,EAAAqoB,GAAAxqB,IAAA,UAAAA,EAAA,gBACGgqB,GAAA7nB,GACHqoB,GAAAxqB,GACAiV,EAAAgV,kBAAAC,GAAAC,GAAAhoB,IAEA8S,EAAAwV,eAAAP,GAAA/nB,EAAAnC,GAGAsqB,GAAArV,EAAA9S,EAAAnC,GAIA,QAAAsqB,IAAArV,EAAA9S,EAAAnC,GACA,GAAAwqB,GAAAxqB,GACAiV,EAAAoV,gBAAAloB,OACG,CAKH,GACA2nB,KAAAY,KACA,aAAAzV,EAAAoR,SAAA,UAAApR,EAAAoR,UACA,gBAAAlkB,IAAA8S,EAAA0V,OACA,CACA,GAAAC,GAAA,SAAAztB,GACAA,EAAA0tB,2BACA5V,EAAA6V,oBAAA,QAAAF,GAEA3V,GAAA8V,iBAAA,QAAAH,GAEA3V,EAAA0V,QAAA,EAEA1V,EAAAsR,aAAApkB,EAAAnC,IAWA,QAAAgrB,IAAA3C,EAAAviB,GACA,GAAAmP,GAAAnP,EAAAM,IACAH,EAAAH,EAAAG,KACAglB,EAAA5C,EAAApiB,IACA,MACA9F,EAAA8F,EAAAof,cACAllB,EAAA8F,EAAAyb,SACAvhB,EAAA8qB,IACA9qB,EAAA8qB,EAAA5F,cACAllB,EAAA8qB,EAAAvJ,SALA,CAYA,GAAAwJ,GAAAlG,GAAAlf,GAGAqlB,EAAAlW,EAAAmW,kBACA/qB,GAAA8qB,KACAD,EAAA1hB,GAAA0hB,EAAA3F,GAAA4F,KAIAD,IAAAjW,EAAAoW,aACApW,EAAAsR,aAAA,QAAA2E,GACAjW,EAAAoW,WAAAH,IAaA,QAAAI,IAAAC,GAoEA,QAAAC,MACAC,WAAAlmB,KAAAgmB,EAAArtB,MAAAwtB,EAAAjwB,GAAAkwB,QACAD,EAAAjwB,EAAA,EArEA,GAQAI,GAAA+vB,EAAAnwB,EAAAowB,EAAAJ,EARAK,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAV,EAAA,CAGA,KAAAjwB,EAAA,EAAaA,EAAA8vB,EAAAhsB,OAAgB9D,IAG7B,GAFAmwB,EAAA/vB,EACAA,EAAA0vB,EAAA7mB,WAAAjJ,GACAqwB,EACA,KAAAjwB,GAAA,KAAA+vB,IAAwCE,GAAA,OACnC,IAAAC,EACL,KAAAlwB,GAAA,KAAA+vB,IAAwCG,GAAA,OACnC,IAAAC,EACL,KAAAnwB,GAAA,KAAA+vB,IAAwCI,GAAA,OACnC,IAAAC,EACL,KAAApwB,GAAA,KAAA+vB,IAAwCK,GAAA,OACnC,IACL,MAAApwB,GACA,MAAA0vB,EAAA7mB,WAAAjJ,EAAA,IACA,MAAA8vB,EAAA7mB,WAAAjJ,EAAA,IACAywB,GAAAC,GAAAC,EASK,CACL,OAAAvwB,GACA,QAAAkwB,GAAA,CAAmC,MACnC,SAAAD,GAAA,CAAmC,MACnC,SAAAE,GAAA,CAA2C,MAC3C,SAAAI,GAA2B,MAC3B,SAAAA,GAA2B,MAC3B,SAAAD,GAA4B,MAC5B,SAAAA,GAA4B,MAC5B,UAAAD,GAA2B,MAC3B,UAAAA,IAEA,QAAArwB,EAAA,CAIA,IAHA,GAAAmb,GAAAvb,EAAA,EACAoB,MAAA,GAEcma,GAAA,GAEd,OADAna,EAAA0uB,EAAAttB,OAAA+Y,IADsBA,KAItBna,GAAAwvB,GAAArnB,KAAAnI,KACAovB,GAAA,aA5BAvsB,KAAAmsB,GAEAH,EAAAjwB,EAAA,EACAowB,EAAAN,EAAArtB,MAAA,EAAAzC,GAAAkwB,QAEAH,GAwCA,QAXA9rB,KAAAmsB,EACAA,EAAAN,EAAArtB,MAAA,EAAAzC,GAAAkwB,OACG,IAAAD,GACHF,IAQAC,EACA,IAAAhwB,EAAA,EAAeA,EAAAgwB,EAAAlsB,OAAoB9D,IACnCowB,EAAAS,GAAAT,EAAAJ,EAAAhwB,GAIA,OAAAowB,GAGA,QAAAS,IAAAf,EAAA1Q,GACA,GAAApf,GAAAof,EAAA7Y,QAAA,IACA,IAAAvG,EAAA,EAEA,aAAAof,EAAA,MAAA0Q,EAAA,GAEA,IAAAxvB,GAAA8e,EAAA3c,MAAA,EAAAzC,GACA2nB,EAAAvI,EAAA3c,MAAAzC,EAAA,EACA,cAAAM,EAAA,MAAAwvB,GAAA,MAAAnI,EAAA,IAAAA,KAMA,QAAAmJ,IAAAC,GACAlf,QAAAC,MAAA,mBAAAif,GAGA,QAAAC,IACAtxB,EACAgH,GAEA,MAAAhH,GACAA,EAAAsG,IAAA,SAAA7F,GAAgC,MAAAA,GAAAuG,KAAiB0Y,OAAA,SAAA6R,GAAuB,MAAAA,QAIxE,QAAAC,IAAA1X,EAAAlZ,EAAAiE,IACAiV,EAAArL,QAAAqL,EAAArL,WAAArE,MAAsCxJ,OAAAiE,UACtCiV,EAAA2X,OAAA,EAGA,QAAAC,IAAA5X,EAAAlZ,EAAAiE,IACAiV,EAAA5E,QAAA4E,EAAA5E,WAAA9K,MAAsCxJ,OAAAiE,UACtCiV,EAAA2X,OAAA,EAIA,QAAAE,IAAA7X,EAAAlZ,EAAAiE,GACAiV,EAAA8X,SAAAhxB,GAAAiE,EACAiV,EAAA+X,UAAAznB,MAAqBxJ,OAAAiE,UAGrB,QAAAitB,IACAhY,EACAlZ,EACAytB,EACAxpB,EACAktB,EACA7D,IAEApU,EAAA9K,aAAA8K,EAAA9K,gBAAA5E,MAAgDxJ,OAAAytB,UAAAxpB,QAAAktB,MAAA7D,cAChDpU,EAAA2X,OAAA,EAGA,QAAAO,IACAlY,EACAlZ,EACAiE,EACAqpB,EACA+D,EACAC,GAEAhE,KAAAlT,GAgBA,UAAApa,IACAstB,EAAAiE,OACAvxB,EAAA,oBACAstB,GAAAiE,OACKjE,EAAAkE,SACLxxB,EAAA,YAKAstB,EAAAtc,gBACAsc,GAAAtc,QACAhR,EAAA,IAAAA,GAEAstB,EAAA9kB,aACA8kB,GAAA9kB,KACAxI,EAAA,IAAAA,GAGAstB,EAAAzZ,gBACAyZ,GAAAzZ,QACA7T,EAAA,IAAAA,EAGA,IAAAyxB,EACAnE,GAAAoE,cACApE,GAAAoE,OACAD,EAAAvY,EAAAyY,eAAAzY,EAAAyY,kBAEAF,EAAAvY,EAAAuY,SAAAvY,EAAAuY,UAGA,IAAAG,IACA3tB,QAAA2rB,OAEAtC,KAAAlT,KACAwX,EAAAtE,YAGA,IAAAtS,GAAAyW,EAAAzxB,EAEAoH,OAAAY,QAAAgT,GACAqW,EAAArW,EAAAsM,QAAAsK,GAAA5W,EAAAxR,KAAAooB,GAEAH,EAAAzxB,GADGgb,EACHqW,GAAAO,EAAA5W,MAAA4W,GAEAA,EAGA1Y,EAAA2X,OAAA,EAGA,QAAAgB,IACA3Y,EACAlZ,EACA8xB,GAEA,GAAAC,GACAC,GAAA9Y,EAAA,IAAAlZ,IACAgyB,GAAA9Y,EAAA,UAAAlZ,EACA,UAAA+xB,EACA,MAAAxC,IAAAwC,EACG,SAAAD,EAAA,CACH,GAAAG,GAAAD,GAAA9Y,EAAAlZ,EACA,UAAAiyB,EACA,MAAAzvB,MAAAE,UAAAuvB,IASA,QAAAD,IACA9Y,EACAlZ,EACAkyB,GAEA,GAAAntB,EACA,WAAAA,EAAAmU,EAAA8X,SAAAhxB,IAEA,OADA4F,GAAAsT,EAAA+X,UACAvxB,EAAA,EAAAC,EAAAiG,EAAApC,OAAoC9D,EAAAC,EAAOD,IAC3C,GAAAkG,EAAAlG,GAAAM,SAAA,CACA4F,EAAAM,OAAAxG,EAAA,EACA,OAOA,MAHAwyB,UACAhZ,GAAA8X,SAAAhxB,GAEA+E,EAQA,QAAAotB,IACAjZ,EACAjV,EACAqpB,GAEA,GAAA5B,GAAA4B,MACA8E,EAAA1G,EAAA0G,OACAxC,EAAAlE,EAAAkE,KAGAyC,EADA,KAEAzC,KACAyC,EACA,8CAIAD,IACAC,EAAA,MAAAA,EAAA,IAEA,IAAAC,GAAAC,GAAAtuB,EAAAouB,EAEAnZ,GAAA2K,OACA5f,MAAA,IAAAA,EAAA,IACA6rB,WAAAttB,KAAAE,UAAAuB,GACA2gB,SAAA,mBAAwD0N,EAAA,KAOxD,QAAAC,IACAtuB,EACAquB,GAEA,GAAA7qB,GAAA+qB,GAAAvuB,EACA,eAAAwD,EAAArB,IACAnC,EAAA,IAAAquB,EAEA,QAAA7qB,EAAA,SAAAA,EAAA,SAAA6qB,EAAA,IAuBA,QAAAE,IAAAztB,GAMA,GAHAA,IAAA6qB,OACAnf,GAAA1L,EAAAvB,OAEAuB,EAAAkB,QAAA,QAAAlB,EAAA0tB,YAAA,KAAAhiB,GAAA,EAEA,MADAiiB,IAAA3tB,EAAA0tB,YAAA,KACAC,IAAA,GAEAlD,IAAAzqB,EAAA5C,MAAA,EAAAuwB,IACAtsB,IAAA,IAAArB,EAAA5C,MAAAuwB,GAAA,SAIAlD,IAAAzqB,EACAqB,IAAA,KAQA,KAHA1E,GAAAqD,EACA2tB,GAAAC,GAAAC,GAAA,GAEAC,MACAC,GAAAC,KAEAC,GAAAF,IACAG,GAAAH,IACK,KAAAA,IACLI,GAAAJ,GAIA,QACAtD,IAAAzqB,EAAA5C,MAAA,EAAAwwB,IACAvsB,IAAArB,EAAA5C,MAAAwwB,GAAA,EAAAC,KAIA,QAAAG,MACA,MAAArxB,IAAAiH,aAAA+pB,IAGA,QAAAG,MACA,MAAAH,KAAAjiB,GAGA,QAAAuiB,IAAAF,GACA,YAAAA,GAAA,KAAAA,EAGA,QAAAI,IAAAJ,GACA,GAAAK,GAAA,CAEA,KADAR,GAAAD,IACAG,MAEA,GADAC,EAAAC,KACAC,GAAAF,GACAG,GAAAH,OAKA,IAFA,KAAAA,GAAuBK,IACvB,KAAAL,GAAuBK,IACvB,IAAAA,EAAA,CACAP,GAAAF,EACA,QAKA,QAAAO,IAAAH,GAEA,IADA,GAAAM,GAAAN,GACAD,OACAC,EAAAC,QACAK,KAeA,QAAAvP,IACA3K,EACAsT,EACA6G,GAEAC,GAAAD,CACA,IAAApvB,GAAAuoB,EAAAvoB,MACAqpB,EAAAd,EAAAc,UACArjB,EAAAiP,EAAAjP,IACA6D,EAAAoL,EAAA8X,SAAAljB,IAaA,IAAAoL,EAAAtC,UAGA,MAFAub,IAAAjZ,EAAAjV,EAAAqpB,IAEA,CACG,eAAArjB,EACHspB,GAAAra,EAAAjV,EAAAqpB,OACG,cAAArjB,GAAA,aAAA6D,EACH0lB,GAAAta,EAAAjV,EAAAqpB,OACG,cAAArjB,GAAA,UAAA6D,EACH2lB,GAAAva,EAAAjV,EAAAqpB,OACG,cAAArjB,GAAA,aAAAA,EACHypB,GAAAxa,EAAAjV,EAAAqpB,OACG,KAAApc,GAAAkU,cAAAnb,GAGH,MAFAkoB,IAAAjZ,EAAAjV,EAAAqpB,IAEA,CAWA,UAGA,QAAAkG,IACAta,EACAjV,EACAqpB,GAEA,GAAA8E,GAAA9E,KAAA8E,OACAuB,EAAA9B,GAAA3Y,EAAA,iBACA0a,EAAA/B,GAAA3Y,EAAA,sBACA2a,EAAAhC,GAAA3Y,EAAA,uBACA0X,IAAA1X,EAAA,UACA,iBAAAjV,EAAA,QACAA,EAAA,IAAA0vB,EAAA,QACA,SAAAC,EACA,KAAA3vB,EAAA,IACA,OAAAA,EAAA,IAAA2vB,EAAA,MAGAxC,GAAAlY,EAAA,SACA,WAAAjV,EAAA,yCAEA2vB,EAAA,MAAAC,EAAA,qCAEAzB,EAAA,MAAAuB,EAAA,IAAAA,GAAA,6CAEwBpB,GAAAtuB,EAAA,wCACZsuB,GAAAtuB,EAAA,wDACDsuB,GAAAtuB,EAAA,WACX,SAIA,QAAAwvB,IACAva,EACAjV,EACAqpB,GAEA,GAAA8E,GAAA9E,KAAA8E,OACAuB,EAAA9B,GAAA3Y,EAAA,gBACAya,GAAAvB,EAAA,MAAAuB,EAAA,IAAAA,EACA/C,GAAA1X,EAAA,gBAAAjV,EAAA,IAAA0vB,EAAA,KACAvC,GAAAlY,EAAA,SAAAqZ,GAAAtuB,EAAA0vB,GAAA,SAGA,QAAAJ,IACAra,EACAjV,EACAqpB,GAEA,GAAA8E,GAAA9E,KAAA8E,OACA0B,EAAA,0JAGA1B,EAAA,sBAGA2B,EAAA,uBAAAD,EAAA,GACAC,KAAA,IAAAxB,GAAAtuB,EAFA,6DAGAmtB,GAAAlY,EAAA,SAAA6a,EAAA,SAGA,QAAAL,IACAxa,EACAjV,EACAqpB,GAEA,GAAAxf,GAAAoL,EAAA8X,SAAAljB,KAgBA4d,EAAA4B,MACA0G,EAAAtI,EAAAsI,KACA5B,EAAA1G,EAAA0G,OACAxC,EAAAlE,EAAAkE,KACAqE,GAAAD,GAAA,UAAAlmB,EACA6F,EAAAqgB,EACA,SACA,UAAAlmB,EACAomB,GACA,QAEA7B,EAAA,qBACAzC,KACAyC,EAAA,8BAEAD,IACAC,EAAA,MAAAA,EAAA,IAGA,IAAA0B,GAAAxB,GAAAtuB,EAAAouB,EACA4B,KACAF,EAAA,qCAA8CA,GAG9CnD,GAAA1X,EAAA,YAAAjV,EAAA,KACAmtB,GAAAlY,EAAAvF,EAAAogB,EAAA,UACAnE,GAAAwC,IACAhB,GAAAlY,EAAA,yBAUA,QAAAib,IAAA7gB,GAEA,GAAAhP,EAAAgP,EAAA4gB,KAAA,CAEA,GAAAvgB,GAAAoa,GAAA,gBACAza,GAAAK,MAAAlG,OAAA6F,EAAA4gB,IAAA5gB,EAAAK,cACAL,GAAA4gB,IAKA5vB,EAAAgP,EAAA8gB,OACA9gB,EAAA+gB,UAAA5mB,OAAA6F,EAAA8gB,IAAA9gB,EAAA+gB,kBACA/gB,GAAA8gB,KAMA,QAAAE,IAAA3gB,EAAAuK,EAAAlN,GACA,GAAA2G,GAAA4c,EACA,gBAAA3c,KAEA,OADAsG,EAAArX,MAAA,KAAAD,YAEA4tB,GAAA7gB,EAAAiE,EAAA5G,EAAA2G,IAKA,QAAA8c,IACA9gB,EACAuK,EACAlN,EACA6C,GAEAqK,EAAArM,GAAAqM,GACAqW,GAAAvF,iBACArb,EACAuK,EACAwW,IACS1jB,UAAA6C,WACT7C,GAIA,QAAAwjB,IACA7gB,EACAuK,EACAlN,EACA2G,IAEAA,GAAA4c,IAAAxF,oBACApb,EACAuK,EAAApM,WAAAoM,EACAlN,GAIA,QAAA2jB,IAAArI,EAAAviB,GACA,IAAA3F,EAAAkoB,EAAApiB,KAAAoJ,MAAAlP,EAAA2F,EAAAG,KAAAoJ,IAAA,CAGA,GAAAA,GAAAvJ,EAAAG,KAAAoJ,OACAC,EAAA+Y,EAAApiB,KAAAoJ,MACAihB,IAAAxqB,EAAAM,IACA8pB,GAAA7gB,GACAD,GAAAC,EAAAC,EAAAkhB,GAAAD,GAAAF,GAAAvqB,EAAAO,SACAiqB,OAAA5wB,IAUA,QAAAixB,IAAAtI,EAAAviB,GACA,IAAA3F,EAAAkoB,EAAApiB,KAAAwW,YAAAtc,EAAA2F,EAAAG,KAAAwW,UAAA,CAGA,GAAAta,GAAAyK,EACAxG,EAAAN,EAAAM,IACAwqB,EAAAvI,EAAApiB,KAAAwW,aACA7S,EAAA9D,EAAAG,KAAAwW,YAEApc,GAAAuJ,EAAAnC,UACAmC,EAAA9D,EAAAG,KAAAwW,SAAArZ,KAA2CwG,GAG3C,KAAAzH,IAAAyuB,GACAzwB,EAAAyJ,EAAAzH,MACAiE,EAAAjE,GAAA,GAGA,KAAAA,IAAAyH,GAAA,CAKA,GAJAgD,EAAAhD,EAAAzH,GAIA,gBAAAA,GAAA,cAAAA,EAAA,CAEA,GADA2D,EAAAI,WAA2BJ,EAAAI,SAAA3G,OAAA,GAC3BqN,IAAAgkB,EAAAzuB,GAAkC,QAGlC,KAAAiE,EAAAyqB,WAAAtxB,QACA6G,EAAA4gB,YAAA5gB,EAAAyqB,WAAA,IAIA,aAAA1uB,EAAA,CAGAiE,EAAA0qB,OAAAlkB,CAEA,IAAAmkB,GAAA5wB,EAAAyM,GAAA,GAAA5L,OAAA4L,EACAokB,IAAA5qB,EAAA2qB,KACA3qB,EAAApG,MAAA+wB,OAGA3qB,GAAAjE,GAAAyK,IAQA,QAAAokB,IAAA5qB,EAAA6qB,GACA,OAAA7qB,EAAA8qB,YACA,WAAA9qB,EAAAigB,SACA8K,GAAA/qB,EAAA6qB,IACAG,GAAAhrB,EAAA6qB,IAIA,QAAAE,IAAA/qB,EAAA6qB,GAGA,GAAAI,IAAA,CAGA,KAAOA,EAAAvL,SAAAwL,gBAAAlrB,EAA+C,MAAAjJ,IACtD,MAAAk0B,IAAAjrB,EAAApG,QAAAixB,EAGA,QAAAG,IAAAhrB,EAAAqC,GACA,GAAAzI,GAAAoG,EAAApG,MACAqpB,EAAAjjB,EAAAmrB,WACA,IAAAlxB,EAAAgpB,GAAA,CACA,GAAAA,EAAA0G,KAEA,QAEA,IAAA1G,EAAA8E,OACA,MAAA9sB,GAAArB,KAAAqB,EAAAoH,EAEA,IAAA4gB,EAAAsC,KACA,MAAA3rB,GAAA2rB,SAAAljB,EAAAkjB,OAGA,MAAA3rB,KAAAyI,EAwBA,QAAA+oB,IAAAvrB,GACA,GAAAwb,GAAAgQ,GAAAxrB,EAAAwb,MAGA,OAAAxb,GAAAyrB,YACAtuB,EAAA6C,EAAAyrB,YAAAjQ,GACAA,EAIA,QAAAgQ,IAAAE,GACA,MAAAxuB,OAAAY,QAAA4tB,GACApuB,EAAAouB,GAEA,gBAAAA,GACAC,GAAAD,GAEAA,EAOA,QAAAE,IAAA/rB,EAAAgsB,GACA,GACAC,GADAvuB,IAGA,IAAAsuB,EAEA,IADA,GAAA5M,GAAApf,EACAof,EAAAJ,oBACAI,IAAAJ,kBAAAzO,SAEA6O,EAAAjf,OACA8rB,EAAAP,GAAAtM,EAAAjf,QAEA7C,EAAAI,EAAAuuB,IAKAA,EAAAP,GAAA1rB,EAAAG,QACA7C,EAAAI,EAAAuuB,EAIA,KADA,GAAA9M,GAAAnf,EACAmf,IAAA3a,QACA2a,EAAAhf,OAAA8rB,EAAAP,GAAAvM,EAAAhf,QACA7C,EAAAI,EAAAuuB,EAGA,OAAAvuB,GA8CA,QAAAwuB,IAAA3J,EAAAviB,GACA,GAAAG,GAAAH,EAAAG,KACAglB,EAAA5C,EAAApiB,IAEA,MAAA9F,EAAA8F,EAAAyrB,cAAAvxB,EAAA8F,EAAAwb,QACAthB,EAAA8qB,EAAAyG,cAAAvxB,EAAA8qB,EAAAxJ,QADA,CAMA,GAAA7U,GAAA7Q,EACAkZ,EAAAnP,EAAAM,IACA6rB,EAAAhH,EAAAyG,YACAQ,EAAAjH,EAAAkH,iBAAAlH,EAAAxJ,UAGA2Q,EAAAH,GAAAC,EAEAzQ,EAAAgQ,GAAA3rB,EAAAG,KAAAwb,UAKA3b,GAAAG,KAAAksB,gBAAA9xB,EAAAohB,EAAAha,QACArE,KAAeqe,GACfA,CAEA,IAAA4Q,GAAAR,GAAA/rB,GAAA,EAEA,KAAA/J,IAAAq2B,GACAjyB,EAAAkyB,EAAAt2B,KACAu2B,GAAArd,EAAAlZ,EAAA,GAGA,KAAAA,IAAAs2B,IACAzlB,EAAAylB,EAAAt2B,MACAq2B,EAAAr2B,IAEAu2B,GAAArd,EAAAlZ,EAAA,MAAA6Q,EAAA,GAAAA,IAkBA,QAAA2lB,IAAAtd,EAAAiW,GAEA,GAAAA,QAAAS,QAKA,GAAA1W,EAAAud,UACAtH,EAAAlpB,QAAA,QACAkpB,EAAAtpB,MAAA6wB,IAAA5zB,QAAA,SAAAhD,GAAoD,MAAAoZ,GAAAud,UAAAzjB,IAAAlT,KAEpDoZ,EAAAud,UAAAzjB,IAAAmc,OAEG,CACH,GAAAte,GAAA,KAAAqI,EAAAyd,aAAA,iBACA9lB,GAAA5K,QAAA,IAAAkpB,EAAA,QACAjW,EAAAsR,aAAA,SAAA3Z,EAAAse,GAAAS,SASA,QAAAgH,IAAA1d,EAAAiW,GAEA,GAAAA,QAAAS,QAKA,GAAA1W,EAAAud,UACAtH,EAAAlpB,QAAA,QACAkpB,EAAAtpB,MAAA6wB,IAAA5zB,QAAA,SAAAhD,GAAoD,MAAAoZ,GAAAud,UAAA3wB,OAAAhG,KAEpDoZ,EAAAud,UAAA3wB,OAAAqpB,GAEAjW,EAAAud,UAAAjzB,QACA0V,EAAAoV,gBAAA,aAEG,CAGH,IAFA,GAAAzd,GAAA,KAAAqI,EAAAyd,aAAA,kBACAE,EAAA,IAAA1H,EAAA,IACAte,EAAA5K,QAAA4wB,IAAA,GACAhmB,IAAAlP,QAAAk1B,EAAA,IAEAhmB,KAAA+e,OACA/e,EACAqI,EAAAsR,aAAA,QAAA3Z,GAEAqI,EAAAoV,gBAAA,UAOA,QAAAwI,IAAAC,GACA,GAAAA,EAAA,CAIA,mBAAAA,GAAA,CACA,GAAAtvB,KAKA,QAJA,IAAAsvB,EAAAC,KACA3vB,EAAAI,EAAAwvB,GAAAF,EAAA/2B,MAAA,MAEAqH,EAAAI,EAAAsvB,GACAtvB,EACG,sBAAAsvB,GACHE,GAAAF,OADG,IAgDH,QAAAG,IAAA5wB,GACA6wB,GAAA,WACAA,GAAA7wB,KAIA,QAAA8wB,IAAAle,EAAAiW,GACA,GAAAkI,GAAAne,EAAAmW,qBAAAnW,EAAAmW,sBACAgI,GAAApxB,QAAAkpB,GAAA,IACAkI,EAAA7tB,KAAA2lB,GACAqH,GAAAtd,EAAAiW,IAIA,QAAAmI,IAAApe,EAAAiW,GACAjW,EAAAmW,oBACAvpB,EAAAoT,EAAAmW,mBAAAF,GAEAyH,GAAA1d,EAAAiW,GAGA,QAAAoI,IACAre,EACAse,EACAvlB,GAEA,GAAAyZ,GAAA+L,GAAAve,EAAAse,GACA1pB,EAAA4d,EAAA5d,KACAiJ,EAAA2U,EAAA3U,QACA2gB,EAAAhM,EAAAgM,SACA,KAAA5pB,EAAc,MAAAmE,IACd,IAAA0B,GAAA7F,IAAA6pB,GAAAC,GAAAC,GACAC,EAAA,EACAC,EAAA,WACA7e,EAAA6V,oBAAApb,EAAAqkB,GACA/lB,KAEA+lB,EAAA,SAAA52B,GACAA,EAAAkI,SAAA4P,KACA4e,GAAAJ,GACAK,IAIAjhB,YAAA,WACAghB,EAAAJ,GACAK,KAEGhhB,EAAA,GACHmC,EAAA8V,iBAAArb,EAAAqkB,GAKA,QAAAP,IAAAve,EAAAse,GACA,GASA1pB,GATAmqB,EAAA52B,OAAA62B,iBAAAhf,GAEAif,GAAAF,EAAAG,GAAA,cAAAvyB,MAAA,MACAwyB,GAAAJ,EAAAG,GAAA,iBAAAvyB,MAAA,MACAyyB,EAAAC,GAAAJ,EAAAE,GACAG,GAAAP,EAAAQ,GAAA,cAAA5yB,MAAA,MACA6yB,GAAAT,EAAAQ,GAAA,iBAAA5yB,MAAA,MACA8yB,EAAAJ,GAAAC,EAAAE,GAGA3hB,EAAA,EACA2gB,EAAA,CA8BA,OA5BAF,KAAAG,GACAW,EAAA,IACAxqB,EAAA6pB,GACA5gB,EAAAuhB,EACAZ,EAAAW,EAAA70B,QAEGg0B,IAAAoB,GACHD,EAAA,IACA7qB,EAAA8qB,GACA7hB,EAAA4hB,EACAjB,EAAAgB,EAAAl1B,SAGAuT,EAAA7R,KAAA0H,IAAA0rB,EAAAK,GACA7qB,EAAAiJ,EAAA,EACAuhB,EAAAK,EACAhB,GACAiB,GACA,KACAlB,EAAA5pB,EACAA,IAAA6pB,GACAU,EAAA70B,OACAk1B,EAAAl1B,OACA,IAMAsK,OACAiJ,UACA2gB,YACAmB,aANA/qB,IAAA6pB,IACAmB,GAAA7vB,KAAAgvB,EAAAG,GAAA,cASA,QAAAG,IAAAQ,EAAAC,GAEA,KAAAD,EAAAv1B,OAAAw1B,EAAAx1B,QACAu1B,IAAAtrB,OAAAsrB,EAGA,OAAA7zB,MAAA0H,IAAA/F,MAAA,KAAAmyB,EAAAtzB,IAAA,SAAA3F,EAAAL,GACA,MAAAu5B,IAAAl5B,GAAAk5B,GAAAF,EAAAr5B,OAQA,QAAAu5B,IAAAl4B,GACA,WAAAm4B,OAAAn4B,EAAAoB,MAAA,MAAAR,QAAA,UAKA,QAAAw3B,IAAApvB,EAAAqvB,GACA,GAAAlgB,GAAAnP,EAAAM,GAGA/F,GAAA4U,EAAAmgB,YACAngB,EAAAmgB,SAAAC,WAAA,EACApgB,EAAAmgB,WAGA,IAAAnvB,GAAA4sB,GAAA/sB,EAAAG,KAAAqvB,WACA,KAAAn1B,EAAA8F,KAKA5F,EAAA4U,EAAAsgB,WAAA,IAAAtgB,EAAAugB,SAAA,CA4BA,IAxBA,GAAAzC,GAAA9sB,EAAA8sB,IACAlpB,EAAA5D,EAAA4D,KACA4rB,EAAAxvB,EAAAwvB,WACAC,EAAAzvB,EAAAyvB,aACAC,EAAA1vB,EAAA0vB,iBACAC,EAAA3vB,EAAA2vB,YACAC,EAAA5vB,EAAA4vB,cACAC,EAAA7vB,EAAA6vB,kBACAC,EAAA9vB,EAAA8vB,YACAb,EAAAjvB,EAAAivB,MACAc,EAAA/vB,EAAA+vB,WACAC,EAAAhwB,EAAAgwB,eACAC,EAAAjwB,EAAAiwB,aACAC,EAAAlwB,EAAAkwB,OACAC,EAAAnwB,EAAAmwB,YACAC,EAAApwB,EAAAowB,gBACAC,EAAArwB,EAAAqwB,SAMAjwB,EAAAgO,GACAkiB,EAAAliB,GAAAsB,OACA4gB,KAAAjsB,QACAisB,IAAAjsB,OACAjE,EAAAkwB,EAAAlwB,OAGA,IAAAmwB,IAAAnwB,EAAAwO,aAAA/O,EAAA2wB,YAEA,KAAAD,GAAAL,GAAA,KAAAA,EAAA,CAIA,GAAAO,GAAAF,GAAAZ,EACAA,EACAH,EACAkB,EAAAH,GAAAV,EACAA,EACAH,EACAiB,EAAAJ,GAAAX,EACAA,EACAH,EAEAmB,EAAAL,EACAN,GAAAH,EACAA,EACAe,EAAAN,GACA,kBAAAL,KACAjB,EACA6B,EAAAP,EACAJ,GAAAJ,EACAA,EACAgB,EAAAR,EACAH,GAAAJ,EACAA,EAEAgB,EAAA51B,EACAZ,EAAA61B,GACAA,EAAApB,MACAoB,GAOAY,GAAA,IAAAnE,IAAArI,GACAyM,EAAAC,GAAAN,GAEA9oB,EAAAiH,EAAAsgB,SAAAhxB,EAAA,WACA2yB,IACA7D,GAAApe,EAAA2hB,GACAvD,GAAApe,EAAA0hB,IAEA3oB,EAAAqnB,WACA6B,GACA7D,GAAApe,EAAAyhB,GAEAM,KAAA/hB,IAEA8hB,KAAA9hB,GAEAA,EAAAsgB,SAAA,MAGAzvB,GAAAG,KAAAoxB,MAEAvnB,GAAAhK,EAAA,oBACA,GAAAwE,GAAA2K,EAAAgQ,WACAqS,EAAAhtB,KAAAitB,UAAAjtB,EAAAitB,SAAAzxB,EAAA3D,IACAm1B,IACAA,EAAAtxB,MAAAF,EAAAE,KACAsxB,EAAAlxB,IAAAgvB,UAEAkC,EAAAlxB,IAAAgvB,WAEA0B,KAAA7hB,EAAAjH,KAKA6oB,KAAA5hB,GACAiiB,IACA/D,GAAAle,EAAAyhB,GACAvD,GAAAle,EAAA0hB,GACA1D,GAAA,WACAI,GAAApe,EAAAyhB,GACA1oB,EAAAqnB,YACAlC,GAAAle,EAAA2hB,GACAO,IACAK,GAAAP,GACApkB,WAAA7E,EAAAipB,GAEA3D,GAAAre,EAAApL,EAAAmE,QAOAlI,EAAAG,KAAAoxB,OACAlC,OACA2B,KAAA7hB,EAAAjH,IAGAkpB,GAAAC,GACAnpB,MAIA,QAAAypB,IAAA3xB,EAAA4xB,GAsEA,QAAAC,KAEA3pB,EAAAqnB,aAIAvvB,EAAAG,KAAAoxB,MAAApiB,EAAAgQ,cACAhQ,EAAAgQ,WAAAsS,WAAAtiB,EAAAgQ,WAAAsS,cAA6DzxB,EAAA,KAAAA,GAE7D8xB,KAAA3iB,GACAiiB,IACA/D,GAAAle,EAAA4iB,GACA1E,GAAAle,EAAA6iB,GACA7E,GAAA,WACAI,GAAApe,EAAA4iB,GACA7pB,EAAAqnB,YACAlC,GAAAle,EAAA8iB,GACAZ,IACAK,GAAAQ,GACAnlB,WAAA7E,EAAAgqB,GAEA1E,GAAAre,EAAApL,EAAAmE,QAMAypB,KAAAxiB,EAAAjH,GACAkpB,GAAAC,GACAnpB,KAlGA,GAAAiH,GAAAnP,EAAAM,GAGA/F,GAAA4U,EAAAsgB,YACAtgB,EAAAsgB,SAAAF,WAAA,EACApgB,EAAAsgB,WAGA,IAAAtvB,GAAA4sB,GAAA/sB,EAAAG,KAAAqvB,WACA,IAAAn1B,EAAA8F,IAAA,IAAAgP,EAAAugB,SACA,MAAAkC,IAIA,KAAAr3B,EAAA4U,EAAAmgB,UAAA,CAIA,GAAArC,GAAA9sB,EAAA8sB,IACAlpB,EAAA5D,EAAA4D,KACAguB,EAAA5xB,EAAA4xB,WACAE,EAAA9xB,EAAA8xB,aACAD,EAAA7xB,EAAA6xB,iBACAF,EAAA3xB,EAAA2xB,YACAH,EAAAxxB,EAAAwxB,MACAQ,EAAAhyB,EAAAgyB,WACAC,EAAAjyB,EAAAiyB,eACAC,EAAAlyB,EAAAkyB,WACA7B,EAAArwB,EAAAqwB,SAEAY,GAAA,IAAAnE,IAAArI,GACAyM,EAAAC,GAAAK,GAEAO,EAAA32B,EACAZ,EAAA61B,GACAA,EAAAmB,MACAnB,GAOAtoB,EAAAiH,EAAAmgB,SAAA7wB,EAAA,WACA0Q,EAAAgQ,YAAAhQ,EAAAgQ,WAAAsS,WACAtiB,EAAAgQ,WAAAsS,SAAAzxB,EAAA3D,KAAA,MAEA+0B,IACA7D,GAAApe,EAAA8iB,GACA1E,GAAApe,EAAA6iB,IAEA9pB,EAAAqnB,WACA6B,GACA7D,GAAApe,EAAA4iB,GAEAK,KAAAjjB,KAEAyiB,IACAO,KAAAhjB,IAEAA,EAAAmgB,SAAA,MAGA+C,GACAA,EAAAR,GAEAA,KAsDA,QAAAH,IAAA12B,GACA,sBAAAA,KAAAQ,MAAAR,GASA,QAAAs2B,IAAA/0B,GACA,GAAAlC,EAAAkC,GACA,QAEA,IAAA+1B,GAAA/1B,EAAA4M,GACA,OAAA5O,GAAA+3B,GAEAhB,GACAj0B,MAAAY,QAAAq0B,GACAA,EAAA,GACAA,IAGA/1B,EAAAQ,SAAAR,EAAA9C,QAAA,EAIA,QAAA84B,IAAA3L,EAAA5mB,IACA,IAAAA,EAAAG,KAAAoxB,MACAnC,GAAApvB,GAuGA,QAAAwyB,IAAArjB,EAAAsjB,EAAAnvB,GACAovB,GAAAvjB,EAAAsjB,EAAAnvB,IAEA0gB,IAAAC,KACAlX,WAAA,WACA2lB,GAAAvjB,EAAAsjB,EAAAnvB,IACK,GAIL,QAAAovB,IAAAvjB,EAAAsjB,EAAAnvB,GACA,GAAApJ,GAAAu4B,EAAAv4B,MACAy4B,EAAAxjB,EAAAqR,QACA,KAAAmS,GAAAt1B,MAAAY,QAAA/D,GAAA,CASA,OADAkmB,GAAAwS,EACAj9B,EAAA,EAAAC,EAAAuZ,EAAAtL,QAAApK,OAAwC9D,EAAAC,EAAOD,IAE/C,GADAi9B,EAAAzjB,EAAAtL,QAAAlO,GACAg9B,EACAvS,EAAA5hB,EAAAtE,EAAA24B,GAAAD,KAAA,EACAA,EAAAxS,eACAwS,EAAAxS,gBAGA,IAAAviB,EAAAg1B,GAAAD,GAAA14B,GAIA,YAHAiV,EAAA2jB,gBAAAn9B,IACAwZ,EAAA2jB,cAAAn9B,GAMAg9B,KACAxjB,EAAA2jB,eAAA,IAIA,QAAAC,IAAA74B,EAAA2J,GACA,MAAAA,GAAA1F,MAAA,SAAAhI,GAAqC,OAAA0H,EAAA1H,EAAA+D,KAGrC,QAAA24B,IAAAD,GACA,gBAAAA,GACAA,EAAA5H,OACA4H,EAAA14B,MAGA,QAAA84B,IAAA37B,GACAA,EAAAkI,OAAA6rB,WAAA,EAGA,QAAA6H,IAAA57B,GAEAA,EAAAkI,OAAA6rB,YACA/zB,EAAAkI,OAAA6rB,WAAA,EACA8H,GAAA77B,EAAAkI,OAAA,UAGA,QAAA2zB,IAAA/jB,EAAApL,GACA,GAAA1M,GAAA2oB,SAAAmT,YAAA,aACA97B,GAAA+7B,UAAArvB,GAAA,MACAoL,EAAAkkB,cAAAh8B,GAMA,QAAAi8B,IAAAtzB,GACA,OAAAA,EAAAgf,mBAAAhf,EAAAG,MAAAH,EAAAG,KAAAqvB,WAEAxvB,EADAszB,GAAAtzB,EAAAgf,kBAAAzO,QAsFA,QAAAgjB,IAAAvzB,GACA,GAAAwzB,GAAAxzB,KAAAQ,gBACA,OAAAgzB,MAAAn0B,KAAAwE,QAAA4K,SACA8kB,GAAArmB,GAAAsmB,EAAApzB,WAEAJ,EAIA,QAAAyzB,IAAAloB,GACA,GAAApL,MACA0D,EAAA0H,EAAAnF,QAEA,QAAA/J,KAAAwH,GAAA6B,UACAvF,EAAA9D,GAAAkP,EAAAlP,EAIA,IAAAiR,GAAAzJ,EAAA0J,gBACA,QAAAmmB,KAAApmB,GACAnN,EAAAzI,GAAAg8B,IAAApmB,EAAAomB,EAEA,OAAAvzB,GAGA,QAAAwzB,IAAAC,EAAAC,GACA,oBAAA30B,KAAA20B,EAAA3zB,KACA,MAAA0zB,GAAA,cACA9vB,MAAA+vB,EAAArzB,iBAAAkF,YAKA,QAAAouB,IAAA9zB,GACA,KAAAA,IAAAwE,QACA,GAAAxE,EAAAG,KAAAqvB,WACA,SAKA,QAAAuE,IAAAtvB,EAAAuvB,GACA,MAAAA,GAAA33B,MAAAoI,EAAApI,KAAA23B,EAAA9zB,MAAAuE,EAAAvE,IA2QA,QAAA+zB,IAAAl+B,GAEAA,EAAAuK,IAAA4zB,SACAn+B,EAAAuK,IAAA4zB,UAGAn+B,EAAAuK,IAAAmvB,UACA15B,EAAAuK,IAAAmvB,WAIA,QAAA0E,IAAAp+B,GACAA,EAAAoK,KAAAi0B,OAAAr+B,EAAAuK,IAAA+zB,wBAGA,QAAAC,IAAAv+B,GACA,GAAAw+B,GAAAx+B,EAAAoK,KAAAq0B,IACAJ,EAAAr+B,EAAAoK,KAAAi0B,OACAK,EAAAF,EAAAG,KAAAN,EAAAM,KACAC,EAAAJ,EAAAK,IAAAR,EAAAQ,GACA,IAAAH,GAAAE,EAAA,CACA5+B,EAAAoK,KAAA00B,OAAA,CACA,IAAA79B,GAAAjB,EAAAuK,IAAAqb,KACA3kB,GAAA89B,UAAA99B,EAAA+9B,gBAAA,aAAAN,EAAA,MAAAE,EAAA,MACA39B,EAAAg+B,mBAAA,MA+EA,QAAAC,IACA50B,EACA60B,GAEA,GAAAC,GAAAD,EAAAE,GAAAF,GAAAG,EACA,IAAAF,EAAAj2B,KAAAmB,GAAA,CAOA,IAJA,GAGAkG,GAAAzO,EAAAw9B,EAHAC,KACAC,KACAtqB,EAAAiqB,EAAAjqB,UAAA,EAEA3E,EAAA4uB,EAAAM,KAAAp1B,IAAA,CACAvI,EAAAyO,EAAAzO,MAEAA,EAAAoT,IACAsqB,EAAA/1B,KAAA61B,EAAAj1B,EAAAjI,MAAA8S,EAAApT,IACAy9B,EAAA91B,KAAAhH,KAAAE,UAAA28B,IAGA,IAAA7P,GAAAD,GAAAjf,EAAA,GAAAsf,OACA0P,GAAA91B,KAAA,MAAAgmB,EAAA,KACA+P,EAAA/1B,MAAoBi2B,WAAAjQ,IACpBva,EAAApT,EAAAyO,EAAA,GAAA9M,OAMA,MAJAyR,GAAA7K,EAAA5G,SACA+7B,EAAA/1B,KAAA61B,EAAAj1B,EAAAjI,MAAA8S,IACAqqB,EAAA91B,KAAAhH,KAAAE,UAAA28B,MAGAvP,WAAAwP,EAAA5R,KAAA,KACA4R,OAAAC,IAMA,QAAAG,IAAAxmB,EAAAtL,GACA,GACA0b,IADA1b,EAAA0jB,KACAU,GAAA9Y,EAAA,SAYAoQ,KACApQ,EAAAoQ,YAAA9mB,KAAAE,UAAA4mB,GAEA,IAAAqW,GAAA9N,GAAA3Y,EAAA,WACAymB,KACAzmB,EAAAymB,gBAIA,QAAAC,IAAA1mB,GACA,GAAAhP,GAAA,EAOA,OANAgP,GAAAoQ,cACApf,GAAA,eAAAgP,EAAA,iBAEAA,EAAAymB,eACAz1B,GAAA,SAAAgP,EAAA,kBAEAhP,EAWA,QAAA21B,IAAA3mB,EAAAtL,GACA,GACA+nB,IADA/nB,EAAA0jB,KACAU,GAAA9Y,EAAA,SACA,IAAAyc,EAAA,CAaAzc,EAAAyc,YAAAnzB,KAAAE,UAAAmzB,GAAAF,IAGA,GAAAmK,GAAAjO,GAAA3Y,EAAA,WACA4mB,KACA5mB,EAAA4mB,gBAIA,QAAAC,IAAA7mB,GACA,GAAAhP,GAAA,EAOA,OANAgP,GAAAyc,cACAzrB,GAAA,eAAAgP,EAAA,iBAEAA,EAAA4mB,eACA51B,GAAA,UAAAgP,EAAA,mBAEAhP,EAiFA,QAAA81B,IAAA/7B,EAAAg8B,GACA,GAAA/8B,GAAA+8B,EAAAC,GAAAC,EACA,OAAAl8B,GAAAtC,QAAAuB,EAAA,SAAAoN,GAA6C,MAAA8vB,IAAA9vB,KAG7C,QAAA+vB,IAAAC,EAAA1yB,GA8HA,QAAA2yB,GAAA//B,GACAqB,GAAArB,EACA8/B,IAAAE,UAAAhgC,GAiEA,QAAAigC,GAAAnW,EAAApjB,EAAA6wB,GACA,GAAAwG,GAAAmC,CAKA,IAJA,MAAAx5B,IAAwBA,EAAArF,GACxB,MAAAk2B,IAAsBA,EAAAl2B,GAGtByoB,EAEA,IADAoW,EAAApW,EAAAxoB,cACAy8B,EAAAoC,EAAAn9B,OAAA,EAAkC+6B,GAAA,GAClCoC,EAAApC,GAAAqC,gBAAAF,EAD4CnC,SAO5CA,GAAA,CAGA,IAAAA,GAAA,GAEA,OAAA7+B,GAAAihC,EAAAn9B,OAAA,EAAoC9D,GAAA6+B,EAAU7+B,IAS9CkO,EAAAmqB,KACAnqB,EAAAmqB,IAAA4I,EAAAjhC,GAAAuK,IAAA/C,EAAA6wB,EAKA4I,GAAAn9B,OAAA+6B,EACAsC,EAAAtC,GAAAoC,EAAApC,EAAA,GAAAt0B,QACK,OAAAy2B,EACL9yB,EAAA1G,OACA0G,EAAA1G,MAAAojB,MAAA,EAAApjB,EAAA6wB,GAEK,MAAA2I,IACL9yB,EAAA1G,OACA0G,EAAA1G,MAAAojB,MAAA,EAAApjB,EAAA6wB,GAEAnqB,EAAAmqB,KACAnqB,EAAAmqB,IAAAzN,EAAApjB,EAAA6wB,IAxOA,IANA,GAKA7iB,GAAA2rB,EALAF,KACAG,EAAAlzB,EAAAkzB,WACAC,EAAAnzB,EAAAozB,YAAAC,GACAC,EAAAtzB,EAAAuzB,kBAAAF,GACAp/B,EAAA,EAEAy+B,GAAA,CAGA,GAFAprB,EAAAorB,EAEAO,GAAAO,GAAAP,GAgFK,CACL,GAAAQ,GAAA,EACAC,EAAAT,EAAA/+B,cACAy/B,EAAAC,GAAAF,KAAAE,GAAAF,GAAA,GAAAG,QAAA,kBAAAH,EAAA,gBACAI,EAAApB,EAAA3+B,QAAA4/B,EAAA,SAAAI,EAAAv3B,EAAAw3B,GAaA,MAZAP,GAAAO,EAAAp+B,OACA49B,GAAAE,IAAA,aAAAA,IACAl3B,IACAzI,QAAA,4BACAA,QAAA,mCAEAkgC,GAAAP,EAAAl3B,KACAA,IAAAjI,MAAA,IAEAyL,EAAAk0B,OACAl0B,EAAAk0B,MAAA13B,GAEA,IAEAvI,IAAAy+B,EAAA98B,OAAAk+B,EAAAl+B,OACA88B,EAAAoB,EACAjB,EAAAa,EAAAz/B,EAAAw/B,EAAAx/B,OArGA,CACA,GAAAkgC,GAAAzB,EAAAr6B,QAAA,IACA,QAAA87B,EAAA,CAEA,GAAAC,GAAA/4B,KAAAq3B,GAAA,CACA,GAAA2B,GAAA3B,EAAAr6B,QAAA,SAEA,IAAAg8B,GAAA,GACAr0B,EAAAs0B,mBACAt0B,EAAAo0B,QAAA1B,EAAAE,UAAA,EAAAyB,IAEA1B,EAAA0B,EAAA,EACA,WAKA,GAAAE,GAAAl5B,KAAAq3B,GAAA,CACA,GAAA8B,GAAA9B,EAAAr6B,QAAA,KAEA,IAAAm8B,GAAA,GACA7B,EAAA6B,EAAA,EACA,WAKA,GAAAC,GAAA/B,EAAAhwB,MAAAgyB,GACA,IAAAD,EAAA,CACA9B,EAAA8B,EAAA,GAAA7+B,OACA,UAIA,GAAA++B,GAAAjC,EAAAhwB,MAAAsxB,GACA,IAAAW,EAAA,CACA,GAAAC,GAAA3gC,CACA0+B,GAAAgC,EAAA,GAAA/+B,QACAi9B,EAAA8B,EAAA,GAAAC,EAAA3gC,EACA,UAIA,GAAA4gC,GA8EA,WACA,GAAAv7B,GAAAo5B,EAAAhwB,MAAAoyB,GACA,IAAAx7B,EAAA,CACA,GAAAoJ,IACAga,QAAApjB,EAAA,GACAoN,SACApN,MAAArF,EAEA0+B,GAAAr5B,EAAA,GAAA1D,OAEA,KADA,GAAAu0B,GAAA4K,IACA5K,EAAAuI,EAAAhwB,MAAAsyB,OAAAD,EAAArC,EAAAhwB,MAAAuyB,MACAtC,EAAAoC,EAAA,GAAAn/B,QACA8M,EAAAgE,MAAA9K,KAAAm5B,EAEA,IAAA5K,EAIA,MAHAznB,GAAAwyB,WAAA/K,EAAA,GACAwI,EAAAxI,EAAA,GAAAv0B,QACA8M,EAAAynB,IAAAl2B,EACAyO,KA/FA,IAAAmyB,EAAA,EAoGA,SAAAnyB,GACA,GAAAga,GAAAha,EAAAga,QACAwY,EAAAxyB,EAAAwyB,UAEAhC,KACA,MAAAD,GAAAkC,GAAAzY,IACAmW,EAAAI,GAEAK,EAAA5W,IAAAuW,IAAAvW,GACAmW,EAAAnW,GAQA,QAJA0Y,GAAAjC,EAAAzW,MAAAwY,EAEAnjC,EAAA2Q,EAAAgE,MAAA9Q,OACA8Q,EAAA,GAAAlN,OAAAzH,GACAD,EAAA,EAAmBA,EAAAC,EAAOD,IAAA,CAC1B,GAAA2nB,GAAA/W,EAAAgE,MAAA5U,GACAuE,EAAAojB,EAAA,IAAAA,EAAA,IAAAA,EAAA,OACA4Y,EAAA,MAAA3V,GAAA,SAAAjD,EAAA,GACAzZ,EAAAq1B,4BACAr1B,EAAAqyB,oBACA3rB,GAAA5U,IACAM,KAAAqnB,EAAA,GACApjB,MAAA+7B,GAAA/7B,EAAAg8B,IAIA+C,IACArC,EAAAn3B,MAAkBS,IAAAqgB,EAAAsW,cAAAtW,EAAAxoB,cAAAwS,UAClBusB,EAAAvW,GAGA1c,EAAA1G,OACA0G,EAAA1G,MAAAojB,EAAAhW,EAAA0uB,EAAA1yB,EAAApJ,MAAAoJ,EAAAynB,MAtIA0K,GACAZ,GAAAY,EAAAnY,QAAAgW,IACAC,EAAA,EAEA,WAIA,GAAAn2B,OAAA,GAAA84B,MAAA,GAAAnQ,MAAA,EACA,IAAAgP,GAAA,GAEA,IADAmB,EAAA5C,EAAAn+B,MAAA4/B,KAEAH,GAAA34B,KAAAi6B,IACAR,GAAAz5B,KAAAi6B,IACAlB,GAAA/4B,KAAAi6B,IACAf,GAAAl5B,KAAAi6B,KAGAnQ,EAAAmQ,EAAAj9B,QAAA,QACA,IACA87B,GAAAhP,EACAmQ,EAAA5C,EAAAn+B,MAAA4/B,EAEA33B,GAAAk2B,EAAAE,UAAA,EAAAuB,GACAxB,EAAAwB,GAGAA,EAAA,IACA33B,EAAAk2B,EACAA,EAAA,IAGA1yB,EAAAk0B,OAAA13B,GACAwD,EAAAk0B,MAAA13B,GA0BA,GAAAk2B,IAAAprB,EAAA,CACAtH,EAAAk0B,OAAAl0B,EAAAk0B,MAAAxB,EAIA,QAKAG,IAmJA,QAAA0C,IACAl5B,EACAqK,EACA/F,GAEA,OACAT,KAAA,EACA7D,MACAgnB,UAAA3c,EACA0c,SAAAoS,GAAA9uB,GACA/F,SACApE,aAOA,QAAA1H,IACA4gC,EACAz1B,GA6BA,QAAA01B,GAAAC,GAEAA,EAAAje,MACAke,GAAA,GAEAC,GAAAF,EAAAt5B,OACAy5B,GAAA,EAGA,QAAAhkC,GAAA,EAAmBA,EAAAikC,GAAAngC,OAA2B9D,IAC9CikC,GAAAjkC,GAAA6jC,EAAA31B,GArCAg2B,GAAAh2B,EAAA0jB,MAAAd,GAEAiT,GAAA71B,EAAAi2B,UAAA5C,GACA6C,GAAAl2B,EAAA6S,aAAAwgB,GACA8C,GAAAn2B,EAAAuX,iBAAA8b,GAEA+C,GAAAtT,GAAA9iB,EAAAxO,QAAA,iBACA6kC,GAAAvT,GAAA9iB,EAAAxO,QAAA,oBACAukC,GAAAjT,GAAA9iB,EAAAxO,QAAA,qBAEA6/B,GAAArxB,EAAAqxB,UAEA,IAEAiF,GACAC,EAHAxD,KACAyD,GAAA,IAAAx2B,EAAAw2B,mBAGAZ,GAAA,EACAE,GAAA,CA6MA,OArLArD,IAAAgD,GACA/R,KAAAsS,GACA9C,WAAAlzB,EAAAkzB,WACAE,WAAApzB,EAAAozB,WACAG,iBAAAvzB,EAAAuzB,iBACAlB,qBAAAryB,EAAAqyB,qBACAgD,4BAAAr1B,EAAAq1B,4BACAf,kBAAAt0B,EAAAy2B,SACAn9B,MAAA,SAAA+C,EAAAqK,EAAA0uB,GAGA,GAAAv4B,GAAA05B,KAAA15B,IAAAs5B,GAAA95B,EAIA8jB,KAAA,QAAAtjB,IACA6J,EAAAgwB,GAAAhwB,GAGA,IAAAivB,GAAAJ,GAAAl5B,EAAAqK,EAAA6vB,EACA15B,KACA84B,EAAA94B,MAGA85B,GAAAhB,KAAA33B,OACA23B,EAAAiB,WAAA,EASA,QAAA9kC,GAAA,EAAqBA,EAAAukC,GAAAzgC,OAA0B9D,IAC/C6jC,EAAAU,GAAAvkC,GAAA6jC,EAAA31B,IAAA21B,CA4DA,IAzDAC,IACAiB,GAAAlB,GACAA,EAAAje,MACAke,GAAA,IAGAC,GAAAF,EAAAt5B,OACAy5B,GAAA,GAEAF,EACAkB,GAAAnB,GACOA,EAAAoB,YAEPC,GAAArB,GACAsB,GAAAtB,GACAuB,GAAAvB,GAEAwB,GAAAxB,EAAA31B,IAqBAs2B,EAGOvD,EAAAn9B,QAEP0gC,EAAAc,KAAAzB,EAAA0B,QAAA1B,EAAA2B,OAEAC,GAAAjB,GACA1U,IAAA+T,EAAA0B,OACAG,MAAA7B,IARAW,EAAAX,EAkBAY,IAAAZ,EAAAiB,UACA,GAAAjB,EAAA0B,QAAA1B,EAAA2B,KACAG,GAAA9B,EAAAY,OACS,IAAAZ,EAAA+B,UAAA,CACTnB,EAAAtT,OAAA,CACA,IAAA7wB,GAAAujC,EAAAgC,YAAA,aACWpB,EAAAjqB,cAAAiqB,EAAAjqB,iBAA6Dla,GAAAujC,MAExEY,GAAAh6B,SAAAX,KAAA+5B,GACAA,EAAAh1B,OAAA41B,CAGAnB,GAIAM,EAAAC,IAHAY,EAAAZ,EACA5C,EAAAn3B,KAAA+5B,KAMAxL,IAAA,WAEA,GAAAwL,GAAA5C,IAAAn9B,OAAA,GACAgiC,EAAAjC,EAAAp5B,SAAAo5B,EAAAp5B,SAAA3G,OAAA,EACAgiC,IAAA,IAAAA,EAAA13B,MAAA,MAAA03B,EAAAp7B,OAAAs5B,GACAH,EAAAp5B,SAAAR,MAGAg3B,EAAAn9B,QAAA,EACA2gC,EAAAxD,IAAAn9B,OAAA,GACA8/B,EAAAC,IAGAzB,MAAA,SAAA13B,GACA,GAAA+5B,KAgBApW,IACA,aAAAoW,EAAAl6B,KACAk6B,EAAAnT,SAAA0M,cAAAtzB,GAFA,CAMA,GAAAD,GAAAg6B,EAAAh6B,QAKA,IAJAC,EAAAs5B,GAAAt5B,EAAAwlB,OACA6V,GAAAtB,GAAA/5B,EAAAs7B,GAAAt7B,GAEAg6B,GAAAj6B,EAAA3G,OAAA,OACA,CACA,GAAAiE,IACA+7B,GAAA,MAAAp5B,IAAA3C,EAAAu3B,GAAA50B,EAAA60B,KACA90B,EAAAX,MACAsE,KAAA,EACAgiB,WAAAroB,EAAAqoB,WACAwP,OAAA73B,EAAA63B,OACAl1B,SAES,MAAAA,GAAAD,EAAA3G,QAAA,MAAA2G,IAAA3G,OAAA,GAAA4G,MACTD,EAAAX,MACAsE,KAAA,EACA1D,YAKA43B,QAAA,SAAA53B,GACA+5B,EAAAh6B,SAAAX,MACAsE,KAAA,EACA1D,OACAO,WAAA,OAIAu5B,EAGA,QAAAO,IAAAvrB,GACA,MAAA8Y,GAAA9Y,EAAA,WACAA,EAAAoM,KAAA,GAIA,QAAAof,IAAAxrB,GACA,GAAAvZ,GAAAuZ,EAAA+X,UAAAztB,MACA,IAAA7D,EAEA,OADA2U,GAAA4E,EAAA5E,MAAA,GAAAlN,OAAAzH,GACAD,EAAA,EAAmBA,EAAAC,EAAOD,IAC1B4U,EAAA5U,IACAM,KAAAkZ,EAAA+X,UAAAvxB,GAAAM,KACAiE,MAAAzB,KAAAE,UAAAwW,EAAA+X,UAAAvxB,GAAAuE,YAGGiV,GAAAoM,MAEHpM,EAAA2X,OAAA,GAIA,QAAAkU,IAAAxB,EAAA31B,GACA+3B,GAAApC,GAIAA,EAAA1S,OAAA0S,EAAAn9B,MAAAm9B,EAAAtS,UAAAztB,OAEAoiC,GAAArC,GACAsC,GAAAtC,GACAuC,GAAAvC,EACA,QAAA7jC,GAAA,EAAiBA,EAAAskC,GAAAxgC,OAAuB9D,IACxC6jC,EAAAS,GAAAtkC,GAAA6jC,EAAA31B,IAAA21B,CAEAwC,IAAAxC,GAGA,QAAAoC,IAAAzsB,GACA,GAAAsW,GAAAqC,GAAA3Y,EAAA,MACA,IAAAsW,EAAA,CAgBAtW,EAAA9S,IAAAopB,GAIA,QAAAoW,IAAA1sB,GACA,GAAAwS,GAAAmG,GAAA3Y,EAAA,MACAwS,KACAxS,EAAAwS,MACAxS,EAAA0S,SAAAoa,GAAA9sB,IAIA,QAAA0rB,IAAA1rB,GACA,GAAAsW,EACA,IAAAA,EAAAwC,GAAA9Y,EAAA,UACA,GAAAzR,GAAAw+B,GAAAzW,EACA/nB,IACAJ,EAAA6R,EAAAzR,IAWA,QAAAw+B,IAAAzW,GACA,GAAA0W,GAAA1W,EAAAlf,MAAA61B,GACA,IAAAD,EAAA,CACA,GAAAz+B,KACAA,GAAA2+B,IAAAF,EAAA,GAAAtW,MACA,IAAAyW,GAAAH,EAAA,GAAAtW,OAAAjuB,QAAA2kC,GAAA,IACAC,EAAAF,EAAA/1B,MAAAk2B,GAUA,OATAD,IACA9+B,EAAA4+B,QAAA1kC,QAAA6kC,GAAA,IAAA5W,OACAnoB,EAAAg/B,UAAAF,EAAA,GAAA3W,OACA2W,EAAA,KACA9+B,EAAAi/B,UAAAH,EAAA,GAAA3W,SAGAnoB,EAAA4+B,QAEA5+B,GAGA,QAAAo9B,IAAA3rB,GACA,GAAAsW,GAAAwC,GAAA9Y,EAAA,OACA,IAAAsW,EACAtW,EAAA8rB,GAAAxV,EACA2V,GAAAjsB,GACAsW,MACA4V,MAAAlsB,QAEG,CACH,MAAA8Y,GAAA9Y,EAAA,YACAA,EAAAgsB,MAAA,EAEA,IAAAD,GAAAjT,GAAA9Y,EAAA,YACA+rB,KACA/rB,EAAA+rB,WAKA,QAAAI,IAAAnsB,EAAA3K,GACA,GAAAshB,GAAA8W,GAAAp4B,EAAApE,SACA0lB,MAAAmV,IACAG,GAAAtV,GACAL,IAAAtW,EAAA+rB,OACAG,MAAAlsB,IAUA,QAAAytB,IAAAx8B,GAEA,IADA,GAAAzK,GAAAyK,EAAA3G,OACA9D,KAAA,CACA,OAAAyK,EAAAzK,GAAAoO,KACA,MAAA3D,GAAAzK,EAQAyK,GAAAR,OAKA,QAAAw7B,IAAAjsB,EAAA0tB,GACA1tB,EAAA2tB,eACA3tB,EAAA2tB,iBAEA3tB,EAAA2tB,aAAAr9B,KAAAo9B,GAGA,QAAA9B,IAAA5rB,GAEA,MADA8Y,GAAA9Y,EAAA,YAEAA,EAAA1Q,MAAA,GAIA,QAAAq9B,IAAA3sB,GACA,YAAAA,EAAAjP,IACAiP,EAAA4tB,SAAAjV,GAAA3Y,EAAA,YAQG,CACH,GAAAosB,EACA,cAAApsB,EAAAjP,KACAq7B,EAAAtT,GAAA9Y,EAAA,SAWAA,EAAAosB,aAAAtT,GAAA9Y,EAAA,gBACKosB,EAAAtT,GAAA9Y,EAAA,iBAULA,EAAAosB,YAEA,IAAAC,GAAA1T,GAAA3Y,EAAA,OACAqsB,KACArsB,EAAAqsB,WAAA,OAAAA,EAAA,YAAAA,EAGA,aAAArsB,EAAAjP,KAAAiP,EAAAosB,WACAxU,GAAA5X,EAAA,OAAAqsB,KAMA,QAAAO,IAAA5sB,GACA,GAAAsjB,IACAA,EAAA3K,GAAA3Y,EAAA,SACAA,EAAAtC,UAAA4lB,GAEA,MAAAxK,GAAA9Y,EAAA,qBACAA,EAAAkL,gBAAA,GAIA,QAAA2hB,IAAA7sB,GACA,GACAxZ,GAAAC,EAAAK,EAAAytB,EAAAxpB,EAAAqpB,EAAAyZ,EADAnhC,EAAAsT,EAAA+X,SAEA,KAAAvxB,EAAA,EAAAC,EAAAiG,EAAApC,OAA8B9D,EAAAC,EAAOD,IAGrC,GAFAM,EAAAytB,EAAA7nB,EAAAlG,GAAAM,KACAiE,EAAA2B,EAAAlG,GAAAuE,MACA+iC,GAAA/9B,KAAAjJ,GAQA,GANAkZ,EAAA+tB,aAAA,EAEA3Z,EAAA4Z,GAAAlnC,GACAstB,IACAttB,IAAA2B,QAAAwlC,GAAA,KAEAC,GAAAn+B,KAAAjJ,GACAA,IAAA2B,QAAAylC,GAAA,IACAnjC,EAAAsrB,GAAAtrB,GACA8iC,GAAA,EASAzZ,IACAA,EAAA5d,OACAq3B,GAAA,EAEA,eADA/mC,EAAAyB,GAAAzB,MACuCA,EAAA,cAEvCstB,EAAA+Z,QACArnC,EAAAyB,GAAAzB,IAEAstB,EAAAjX,MACA+a,GACAlY,EACA,UAAAzX,GAAAzB,GACAuyB,GAAAtuB,EAAA,YAIA8iC,IACA7tB,EAAAtC,WAAAktB,GAAA5qB,EAAAjP,IAAAiP,EAAA8X,SAAAljB,KAAA9N,GAEA4wB,GAAA1X,EAAAlZ,EAAAiE,GAEA6sB,GAAA5X,EAAAlZ,EAAAiE,OAEO,IAAAqjC,GAAAr+B,KAAAjJ,GACPA,IAAA2B,QAAA2lC,GAAA,IACAlW,GAAAlY,EAAAlZ,EAAAiE,EAAAqpB,GAAA,EAAAsW,QACO,CACP5jC,IAAA2B,QAAAqlC,GAAA,GAEA,IAAAO,GAAAvnC,EAAAsQ,MAAAk3B,IACArW,EAAAoW,KAAA,EACApW,KACAnxB,IAAAmC,MAAA,IAAAgvB,EAAA3tB,OAAA,KAEA0tB,GAAAhY,EAAAlZ,EAAAytB,EAAAxpB,EAAAktB,EAAA7D,OAKK,CAaLwD,GAAA5X,EAAAlZ,EAAAwC,KAAAE,UAAAuB,KAGAiV,EAAAtC,WACA,UAAA5W,GACA8jC,GAAA5qB,EAAAjP,IAAAiP,EAAA8X,SAAAljB,KAAA9N,IACA4wB,GAAA1X,EAAAlZ,EAAA,SAMA,QAAAgmC,IAAA9sB,GAEA,IADA,GAAA3K,GAAA2K,EACA3K,GAAA,CACA,OAAA5K,KAAA4K,EAAA63B,IACA,QAEA73B,YAEA,SAGA,QAAA24B,IAAAlnC,GACA,GAAAsQ,GAAAtQ,EAAAsQ,MAAA62B,GACA,IAAA72B,EAAA,CACA,GAAAnJ,KAEA,OADAmJ,GAAAxN,QAAA,SAAAjD,GAAgCsH,EAAAtH,EAAAsC,MAAA,SAChCgF,GAIA,QAAAi8B,IAAA9uB,GAEA,OADA5O,MACAhG,EAAA,EAAAC,EAAA2U,EAAA9Q,OAAmC9D,EAAAC,EAAOD,IAO1CgG,EAAA4O,EAAA5U,GAAAM,MAAAsU,EAAA5U,GAAAuE,KAEA,OAAAyB,GAIA,QAAA+/B,IAAAvsB,GACA,iBAAAA,EAAAjP,KAAA,UAAAiP,EAAAjP,IAGA,QAAAs6B,IAAArrB,GACA,MACA,UAAAA,EAAAjP,KACA,WAAAiP,EAAAjP,OACAiP,EAAA8X,SAAAljB,MACA,oBAAAoL,EAAA8X,SAAAljB,MASA,QAAAw2B,IAAAhwB,GAEA,OADA7M,MACA/H,EAAA,EAAiBA,EAAA4U,EAAA9Q,OAAkB9D,IAAA,CACnC,GAAAijC,GAAAruB,EAAA5U,EACA+nC,IAAAx+B,KAAA05B,EAAA3iC,QACA2iC,EAAA3iC,KAAA2iC,EAAA3iC,KAAA2B,QAAA+lC,GAAA,IACAjgC,EAAA+B,KAAAm5B,IAGA,MAAAl7B,GAqBA,QAAAkgC,IAAAzuB,EAAAtL,GACA,aAAAsL,EAAAjP,IAAA,CACA,GAAAvE,GAAAwT,EAAA8X,QACA,KAAAtrB,EAAA,WACA,MAGA,IAAAkiC,EAQA,KAPAliC,EAAA,UAAAA,EAAA,kBACAkiC,EAAA/V,GAAA3Y,EAAA,SAEAxT,EAAAoI,MAAA85B,IAAAliC,EAAA,YACAkiC,EAAA,IAAAliC,EAAA,oBAGAkiC,EAAA,CACA,GAAAC,GAAA7V,GAAA9Y,EAAA,WACA4uB,EAAAD,EAAA,MAAAA,EAAA,OACAE,EAAA,MAAA/V,GAAA9Y,EAAA,aACA8uB,EAAAhW,GAAA9Y,EAAA,gBAEA+uB,EAAAC,GAAAhvB,EAEA0rB,IAAAqD,GACAlX,GAAAkX,EAAA,mBACAlD,GAAAkD,EAAAr6B,GACAq6B,EAAAtD,WAAA,EACAsD,EAAAjD,GAAA,IAAA4C,EAAA,iBAAAE,EACA3C,GAAA8C,GACAzY,IAAAyY,EAAAjD,GACAI,MAAA6C,GAGA,IAAAE,GAAAD,GAAAhvB,EACA8Y,IAAAmW,EAAA,YACApX,GAAAoX,EAAA,gBACApD,GAAAoD,EAAAv6B,GACAu3B,GAAA8C,GACAzY,IAAA,IAAAoY,EAAA,cAAAE,EACA1C,MAAA+C,GAGA,IAAAC,GAAAF,GAAAhvB,EAeA,OAdA8Y,IAAAoW,EAAA,YACArX,GAAAqX,EAAA,QAAAR,GACA7C,GAAAqD,EAAAx6B,GACAu3B,GAAA8C,GACAzY,IAAAqY,EACAzC,MAAAgD,IAGAL,EACAE,EAAA/C,MAAA,EACO8C,IACPC,EAAAhD,OAAA+C,GAGAC,IAKA,QAAAC,IAAAhvB,GACA,MAAAiqB,IAAAjqB,EAAAjP,IAAAiP,EAAA+X,UAAA9uB,QAAA+W,EAAA3K,QAeA,QAAAnE,IAAA8O,EAAAsT,GACAA,EAAAvoB,OACA2sB,GAAA1X,EAAA,oBAAAsT,EAAA,WAMA,QAAA8T,IAAApnB,EAAAsT,GACAA,EAAAvoB,OACA2sB,GAAA1X,EAAA,kBAAAsT,EAAA,WA2CA,QAAA6b,IAAAnE,EAAAt2B,GACAs2B,IACAoE,GAAAC,GAAA36B,EAAA46B,YAAA,IACAC,GAAA76B,EAAAwX,eAAA6b,GAEAyH,GAAAxE,GAEAyE,GAAAzE,GAAA,IAGA,QAAA0E,IAAA/lC,GACA,MAAA2C,GACA,2DACA3C,EAAA,IAAAA,EAAA,KAIA,QAAA6lC,IAAA3zB,GAEA,GADAA,EAAA8zB,OAAAn+B,GAAAqK,GACA,IAAAA,EAAAjH,KAAA,CAIA,IACA26B,GAAA1zB,EAAA9K,MACA,SAAA8K,EAAA9K,KACA,MAAA8K,EAAAic,SAAA,mBAEA,MAEA,QAAAtxB,GAAA,EAAAC,EAAAoV,EAAA5K,SAAA3G,OAA6C9D,EAAAC,EAAOD,IAAA,CACpD,GAAA8O,GAAAuG,EAAA5K,SAAAzK,EACAgpC,IAAAl6B,GACAA,EAAAq6B,SACA9zB,EAAA8zB,QAAA,GAGA,GAAA9zB,EAAA8xB,aACA,OAAAiC,GAAA,EAAAC,EAAAh0B,EAAA8xB,aAAArjC,OAAuDslC,EAAAC,EAAWD,IAAA,CAClE,GAAA1D,GAAArwB,EAAA8xB,aAAAiC,GAAA1D,KACAsD,IAAAtD,GACAA,EAAAyD,SACA9zB,EAAA8zB,QAAA,KAOA,QAAAF,IAAA5zB,EAAA+L,GACA,OAAA/L,EAAAjH,KAAA,CAOA,IANAiH,EAAA8zB,QAAA9zB,EAAAvM,QACAuM,EAAAi0B,YAAAloB,GAKA/L,EAAA8zB,QAAA9zB,EAAA5K,SAAA3G,SACA,IAAAuR,EAAA5K,SAAA3G,QACA,IAAAuR,EAAA5K,SAAA,GAAA2D,MAGA,YADAiH,EAAAk0B,YAAA,EAKA,IAFAl0B,EAAAk0B,YAAA,EAEAl0B,EAAA5K,SACA,OAAAzK,GAAA,EAAAC,EAAAoV,EAAA5K,SAAA3G,OAA+C9D,EAAAC,EAAOD,IACtDipC,GAAA5zB,EAAA5K,SAAAzK,GAAAohB,KAAA/L,EAAAqxB,IAGA,IAAArxB,EAAA8xB,aACA,OAAAiC,GAAA,EAAAC,EAAAh0B,EAAA8xB,aAAArjC,OAAuDslC,EAAAC,EAAWD,IAClEH,GAAA5zB,EAAA8xB,aAAAiC,GAAA1D,MAAAtkB,IAMA,QAAApW,IAAAqK,GACA,WAAAA,EAAAjH,OAGA,IAAAiH,EAAAjH,SAGAiH,EAAAuQ,MACAvQ,EAAAkyB,aACAlyB,EAAAiwB,IAAAjwB,EAAAqxB,KACA8C,GAAAn0B,EAAA9K,OACAw+B,GAAA1zB,EAAA9K,MACAk/B,GAAAp0B,KACA5U,OAAA0C,KAAAkS,GAAA7M,MAAAogC,OAIA,QAAAa,IAAAp0B,GACA,KAAAA,EAAAxG,QAAA,CAEA,GADAwG,IAAAxG,OACA,aAAAwG,EAAA9K,IACA,QAEA,IAAA8K,EAAAqxB,IACA,SAGA,SAwDA,QAAAgD,IACA3X,EACAtoB,GAEA,GAAA1B,GAAA0B,EAAA,aAAkC,MAClC,QAAAnJ,KAAAyxB,GACAhqB,GAAA,IAAAzH,EAAA,KAAAqpC,GAAArpC,EAAAyxB,EAAAzxB,IAAA,GAEA,OAAAyH,GAAAtF,MAAA,UAGA,QAAAknC,IACArpC,EACAke,GAEA,IAAAA,EACA,oBAGA,IAAA9W,MAAAY,QAAAkW,GACA,UAAAA,EAAAxY,IAAA,SAAAwY,GAAmD,MAAAmrB,IAAArpC,EAAAke,KAAoCwP,KAAA,QAGvF,IAAA4b,GAAAC,GAAAtgC,KAAAiV,EAAAja,OACAulC,EAAAC,GAAAxgC,KAAAiV,EAAAja,MAEA,IAAAia,EAAAoP,UAKG,CACH,GAAAyG,GAAA,GACA2V,EAAA,GACA7mC,IACA,QAAAuD,KAAA8X,GAAAoP,UACA,GAAAqc,GAAAvjC,GACAsjC,GAAAC,GAAAvjC,GAEAga,GAAAha,IACAvD,EAAA2G,KAAApD,OAEO,cAAAA,EAAA,CACP,GAAAknB,GAAApP,EAAA,SACAwrB,IAAAE,IACA,6BACA9qB,OAAA,SAAA+qB,GAA4C,OAAAvc,EAAAuc,KAC5CnkC,IAAA,SAAAmkC,GAAyC,gBAAAA,EAAA,QACzCnc,KAAA,WAGA7qB,GAAA2G,KAAApD,EAGAvD,GAAAW,SACAuwB,GAAA+V,GAAAjnC,IAGA6mC,IACA3V,GAAA2V,EAOA,2BAA8B3V,GAL9BuV,EACA,UAAAprB,EAAA,iBACAsrB,EACA,WAAAtrB,EAAA,kBACAA,EAAAja,OAC8B,IAvC9B,MAAAqlC,IAAAE,EACAtrB,EAAAja,MAEA,oBAA8Bia,EAAA,UAwC9B,QAAA4rB,IAAAjnC,GACA,mCAAAA,EAAA6C,IAAAqkC,IAAArc,KAAA,sBAGA,QAAAqc,IAAA3jC,GACA,GAAA4jC,GAAAC,SAAA7jC,EAAA,GACA,IAAA4jC,EACA,0BAAAA,CAEA,IAAAE,GAAA9pB,GAAAha,GACA+jC,EAAAC,GAAAhkC,EACA,OACA,qBACA5D,KAAAE,UAAA0D,GAAA,IACA5D,KAAAE,UAAAwnC,GAAA,eAEA1nC,KAAAE,UAAAynC,GACA,IAMA,QAAA72B,IAAA4F,EAAAsT,GAIAtT,EAAAmxB,cAAA,SAAAtW,GAAsC,YAAAA,EAAA,IAAAvH,EAAA,WAKtC,QAAA8d,IAAApxB,EAAAsT,GACAtT,EAAAqxB,SAAA,SAAAxW,GACA,YAAAA,EAAA,KAAA7a,EAAA,SAAAsT,EAAA,WAAAA,EAAAc,WAAAd,EAAAc,UAAA5d,KAAA,iBAAA8c,EAAAc,WAAAd,EAAAc,UAAAjX,KAAA,iBAiCA,QAAAm0B,IACAC,EACA78B,GAEA,GAAA88B,GAAA,GAAAC,IAAA/8B,EAEA,QACAyL,OAAA,sBAFAoxB,EAAAG,GAAAH,EAAAC,GAAA,aAEyB,IACzBzpB,gBAAAypB,EAAAzpB,iBAIA,QAAA2pB,IAAA1xB,EAAAwxB,GAKA,GAJAxxB,EAAA3K,SACA2K,EAAAoM,IAAApM,EAAAoM,KAAApM,EAAA3K,OAAA+W,KAGApM,EAAA+vB,aAAA/vB,EAAA2xB,gBACA,MAAAC,IAAA5xB,EAAAwxB,EACG,IAAAxxB,EAAA1Q,OAAA0Q,EAAA6xB,cACH,MAAAC,IAAA9xB,EAAAwxB,EACG,IAAAxxB,EAAAktB,MAAAltB,EAAA+xB,aACH,MAAAC,IAAAhyB,EAAAwxB,EACG,IAAAxxB,EAAA8rB,KAAA9rB,EAAAiyB,YACH,MAAAC,IAAAlyB,EAAAwxB,EACG,iBAAAxxB,EAAAjP,KAAAiP,EAAAqsB,YAAAmF,EAAAplB,IAEA,aAAApM,EAAAjP,IACH,MAAAohC,IAAAnyB,EAAAwxB,EAGA,IAAA3W,EACA,IAAA7a,EAAAtC,UACAmd,EAAAuX,GAAApyB,EAAAtC,UAAAsC,EAAAwxB,OACK,CACL,GAAAxgC,KACAgP,EAAA2X,OAAA3X,EAAAoM,KAAAolB,EAAAa,eAAAryB,MACAhP,EAAAshC,GAAAtyB,EAAAwxB,GAGA,IAAAvgC,GAAA+O,EAAAkL,eAAA,KAAAqnB,GAAAvyB,EAAAwxB,GAAA,EACA3W,GAAA,OAAA7a,EAAA,SAAAhP,EAAA,IAAAA,EAAA,KAAAC,EAAA,IAAAA,EAAA,QAGA,OAAAzK,GAAA,EAAmBA,EAAAgrC,EAAA1G,WAAAxgC,OAA6B9D,IAChDq0B,EAAA2W,EAAA1G,WAAAtkC,GAAAwZ,EAAA6a,EAEA,OAAAA,GArBA,MAAA0X,IAAAvyB,EAAAwxB,IAAA,SA0BA,QAAAI,IAAA5xB,EAAAwxB,GACAxxB,EAAA2xB,iBAAA,CAIA,IAAAa,GAAAhB,EAAAplB,GAMA,OALApM,GAAAoM,MACAolB,EAAAplB,IAAApM,EAAAoM,KAEAolB,EAAAzpB,gBAAAzX,KAAA,qBAA0CohC,GAAA1xB,EAAAwxB,GAAA,KAC1CA,EAAAplB,IAAAomB,EACA,OAAAhB,EAAAzpB,gBAAAzd,OAAA,IAAA0V,EAAA8vB,YAAA,gBAIA,QAAAgC,IAAA9xB,EAAAwxB,GAEA,GADAxxB,EAAA6xB,eAAA,EACA7xB,EAAA8rB,KAAA9rB,EAAAiyB,YACA,MAAAC,IAAAlyB,EAAAwxB,EACG,IAAAxxB,EAAA8vB,YAAA,CAGH,IAFA,GAAA5iC,GAAA,GACAmI,EAAA2K,EAAA3K,OACAA,GAAA,CACA,GAAAA,EAAA63B,IAAA,CACAhgC,EAAAmI,EAAAnI,GACA,OAEAmI,WAEA,MAAAnI,GAMA,MAAAwkC,GAAA1xB,EAAAwxB,GAAA,IAAAA,EAAAiB,SAAA,IAAAvlC,EAAA,IAFAwkC,GAAA1xB,EAAAwxB,GAIA,MAAAI,IAAA5xB,EAAAwxB,GAIA,QAAAU,IACAlyB,EACAwxB,EACAkB,EACAC,GAGA,MADA3yB,GAAAiyB,aAAA,EACAW,GAAA5yB,EAAA2tB,aAAA1kC,QAAAuoC,EAAAkB,EAAAC,GAGA,QAAAC,IACAC,EACArB,EACAkB,EACAC,GAcA,QAAAG,GAAA9yB,GACA,MAAA0yB,GACAA,EAAA1yB,EAAAwxB,GACAxxB,EAAA1Q,KACAwiC,GAAA9xB,EAAAwxB,GACAE,GAAA1xB,EAAAwxB,GAjBA,IAAAqB,EAAAvoC,OACA,MAAAqoC,IAAA,MAGA,IAAAjF,GAAAmF,EAAA52B,OACA,OAAAyxB,GAAApX,IACA,IAAAoX,EAAA,SAAAoF,EAAApF,EAAAxB,OAAA,IAAA0G,GAAAC,EAAArB,EAAAkB,EAAAC,GAEA,GAAAG,EAAApF,EAAAxB,OAaA,QAAA8F,IACAhyB,EACAwxB,EACAkB,EACAK,GAEA,GAAAzc,GAAAtW,EAAAktB,IACAC,EAAAntB,EAAAmtB,MACAI,EAAAvtB,EAAAutB,UAAA,IAAAvtB,EAAA,aACAwtB,EAAAxtB,EAAAwtB,UAAA,IAAAxtB,EAAA,YAiBA,OADAA,GAAA+xB,cAAA,GACAgB,GAAA,WAAAzc,EAAA,cACA6W,EAAAI,EAAAC,EAAA,aACAkF,GAAAhB,IAAA1xB,EAAAwxB,GACA,KAGA,QAAAc,IAAAtyB,EAAAwxB,GACA,GAAAxgC,GAAA,IAIAiE,EAAA+9B,GAAAhzB,EAAAwxB,EACAv8B,KAAajE,GAAAiE,EAAA,KAGb+K,EAAA9S,MACA8D,GAAA,OAAAgP,EAAA,SAGAA,EAAAwS,MACAxhB,GAAA,OAAAgP,EAAA,SAEAA,EAAA0S,WACA1hB,GAAA,kBAGAgP,EAAAoM,MACApb,GAAA,aAGAgP,EAAAtC,YACA1M,GAAA,QAAAgP,EAAA,SAGA,QAAAxZ,GAAA,EAAiBA,EAAAgrC,EAAAyB,WAAA3oC,OAA6B9D,IAC9CwK,GAAAwgC,EAAAyB,WAAAzsC,GAAAwZ,EA+BA,IA5BAA,EAAA5E,QACApK,GAAA,UAAoBkiC,GAAAlzB,EAAA5E,OAAA,MAGpB4E,EAAArL,QACA3D,GAAA,aAAuBkiC,GAAAlzB,EAAArL,OAAA,MAGvBqL,EAAAuY,SACAvnB,GAAAk/B,GAAAlwB,EAAAuY,QAAA,QAEAvY,EAAAyY,eACAznB,GAAAk/B,GAAAlwB,EAAAyY,cAAA,QAIAzY,EAAAqsB,aAAArsB,EAAAosB,YACAp7B,GAAA,QAAAgP,EAAA,gBAGAA,EAAAgB,cACAhQ,GAAAmiC,GAAAnzB,EAAAgB,YAAAwwB,GAAA,KAGAxxB,EAAA2K,QACA3Z,GAAA,gBAAoBgP,EAAA2K,MAAA,mBAAA3K,EAAA2K,MAAA,wBAAA3K,EAAA2K,MAAA,iBAGpB3K,EAAAkL,eAAA,CACA,GAAAA,GAAAkoB,GAAApzB,EAAAwxB,EACAtmB,KACAla,GAAAka,EAAA,KAYA,MATAla,KAAAvI,QAAA,aAEAuX,EAAAqxB,WACArgC,EAAAgP,EAAAqxB,SAAArgC,IAGAgP,EAAAmxB,gBACAngC,EAAAgP,EAAAmxB,cAAAngC,IAEAA,EAGA,QAAAgiC,IAAAhzB,EAAAwxB,GACA,GAAAv8B,GAAA+K,EAAA9K,UACA,IAAAD,EAAA,CACA,GAEAzO,GAAAC,EAAA6sB,EAAA+f,EAFA9kC,EAAA,eACA+kC,GAAA,CAEA,KAAA9sC,EAAA,EAAAC,EAAAwO,EAAA3K,OAA8B9D,EAAAC,EAAOD,IAAA,CACrC8sB,EAAAre,EAAAzO,GACA6sC,GAAA,CACA,IAAAE,GAAA/B,EAAAt8B,WAAAoe,EAAAxsB,KACAysC,KAGAF,IAAAE,EAAAvzB,EAAAsT,EAAAke,EAAApZ,OAEAib,IACAC,GAAA,EACA/kC,GAAA,UAAe+kB,EAAA,mBAAAA,EAAA,aAAAA,EAAAvoB,MAAA,WAAAuoB,EAAA,sBAAAhqB,KAAAE,UAAA8pB,EAAAvoB,OAAA,KAAAuoB,EAAA2E,IAAA,SAAA3E,EAAA,aAAAA,EAAAc,UAAA,cAAA9qB,KAAAE,UAAA8pB,EAAAc,WAAA,UAGf,MAAAkf,GACA/kC,EAAAtF,MAAA,cADA,IAKA,QAAAmqC,IAAApzB,EAAAwxB,GACA,GAAAD,GAAAvxB,EAAA/O,SAAA,EAMA,QAAAsgC,EAAA38B,KAAA,CACA,GAAA4+B,GAAAlC,GAAAC,EAAAC,EAAA98B,QACA,4CAA+C8+B,EAAA,6BAAiCA,EAAAzrB,gBAAAvb,IAAA,SAAAquB,GAA4E,oBAAqBA,EAAA,MAAkBrG,KAAA,WAInM,QAAA2e,IACAt0B,EACA2yB,GAEA,yBAAAvqC,OAAA0C,KAAAkV,GAAArS,IAAA,SAAAU,GACA,MAAAumC,IAAAvmC,EAAA2R,EAAA3R,GAAAskC,KACKhd,KAAA,UAGL,QAAAif,IACAvmC,EACA8S,EACAwxB,GAEA,MAAAxxB,GAAAktB,MAAAltB,EAAA+xB,aACA2B,GAAAxmC,EAAA8S,EAAAwxB,GAQA,QAAYtkC,EAAA,gBANZnB,OAAAiU,EAAAosB,WAAA,aACA,aAAApsB,EAAAjP,IACAiP,EAAA8rB,GACA,IAAA9rB,EAAA,SAAAuyB,GAAAvyB,EAAAwxB,IAAA,0BACAe,GAAAvyB,EAAAwxB,IAAA,YACAE,GAAA1xB,EAAAwxB,IAAA,KAIA,QAAAkC,IACAxmC,EACA8S,EACAwxB,GAEA,GAAAlb,GAAAtW,EAAAktB,IACAC,EAAAntB,EAAAmtB,MACAI,EAAAvtB,EAAAutB,UAAA,IAAAvtB,EAAA,aACAwtB,EAAAxtB,EAAAwtB,UAAA,IAAAxtB,EAAA,YAEA,OADAA,GAAA+xB,cAAA,EACA,OAAAzb,EAAA,cACA6W,EAAAI,EAAAC,EAAA,YACAiG,GAAAvmC,EAAA8S,EAAAwxB,GACA,KAGA,QAAAe,IACAvyB,EACAwxB,EACAmC,EACAC,EACAC,GAEA,GAAA5iC,GAAA+O,EAAA/O,QACA,IAAAA,EAAA3G,OAAA,CACA,GAAAwpC,GAAA7iC,EAAA,EAEA,QAAAA,EAAA3G,QACAwpC,EAAA5G,KACA,aAAA4G,EAAA/iC,KACA,SAAA+iC,EAAA/iC,IACA,CACA,GAAA4a,GAAAgoB,EACAnC,EAAAa,eAAAyB,GAAA,UACA,EACA,WAAAF,GAAAlC,IAAAoC,EAAAtC,GAAA7lB,EAEA,GAAAooB,GAAAJ,EACAK,GAAA/iC,EAAAugC,EAAAa,gBACA,EACAkB,EAAAM,GAAAI,EACA,WAAAhjC,EAAAzE,IAAA,SAAA5F,GAA8C,MAAA2sC,GAAA3sC,EAAA4qC,KAAwBhd,KAAA,UAAAuf,EAAA,IAAAA,EAAA,KAQtE,QAAAC,IACA/iC,EACAohC,GAGA,OADA9jC,GAAA,EACA/H,EAAA,EAAiBA,EAAAyK,EAAA3G,OAAqB9D,IAAA,CACtC,GAAAwZ,GAAA/O,EAAAzK,EACA,QAAAwZ,EAAApL,KAAA,CAGA,GAAAs/B,GAAAl0B,IACAA,EAAA2tB,cAAA3tB,EAAA2tB,aAAAwG,KAAA,SAAAvtC,GAA+D,MAAAstC,IAAAttC,EAAAslC,SAAsC,CACrG39B,EAAA,CACA,QAEA8jC,EAAAryB,IACAA,EAAA2tB,cAAA3tB,EAAA2tB,aAAAwG,KAAA,SAAAvtC,GAA+D,MAAAyrC,GAAAzrC,EAAAslC,YAC/D39B,EAAA,IAGA,MAAAA,GAGA,QAAA2lC,IAAAl0B,GACA,WAAAvV,KAAAuV,EAAAktB,KAAA,aAAAltB,EAAAjP,KAAA,SAAAiP,EAAAjP,IAGA,QAAAkjC,IAAAp4B,EAAA21B,GACA,WAAA31B,EAAAjH,KACA88B,GAAA71B,EAAA21B,GACG,IAAA31B,EAAAjH,MAAAiH,EAAApK,UACH2iC,GAAAv4B,GAEAw4B,GAAAx4B,GAIA,QAAAw4B,IAAAnjC,GACA,iBAAAA,EAAA0D,KACA1D,EAAA0lB,WACA0d,GAAAhrC,KAAAE,UAAA0H,UAAA,IAGA,QAAAkjC,IAAAtL,GACA,YAAAx/B,KAAAE,UAAAs/B,EAAA53B,MAAA,IAGA,QAAAihC,IAAAnyB,EAAAwxB,GACA,GAAA5D,GAAA5tB,EAAA4tB,UAAA,YACA38B,EAAAshC,GAAAvyB,EAAAwxB,GACAjjC,EAAA,MAAAq/B,GAAA38B,EAAA,IAAAA,EAAA,IACAmK,EAAA4E,EAAA5E,OAAA,IAA6B4E,EAAA5E,MAAA5O,IAAA,SAAAiB,GAAgC,MAAAlF,IAAAkF,EAAA3G,MAAA,IAAA2G,EAAA,QAAiD+mB,KAAA,SAC9G+f,EAAAv0B,EAAA8X,SAAA,SAUA,QATA1c,IAAAm5B,GAAAtjC,IACA1C,GAAA,SAEA6M,IACA7M,GAAA,IAAA6M,GAEAm5B,IACAhmC,IAAA6M,EAAA,gBAAAm5B,GAEAhmC,EAAA,IAIA,QAAA6jC,IACAoC,EACAx0B,EACAwxB,GAEA,GAAAvgC,GAAA+O,EAAAkL,eAAA,KAAAqnB,GAAAvyB,EAAAwxB,GAAA,EACA,aAAAgD,EAAA,IAAAlC,GAAAtyB,EAAAwxB,IAAAvgC,EAAA,IAAAA,EAAA,QAGA,QAAAiiC,IAAAv+B,GAEA,OADApG,GAAA,GACA/H,EAAA,EAAiBA,EAAAmO,EAAArK,OAAkB9D,IAAA,CACnC,GAAAgQ,GAAA7B,EAAAnO,EAGA+H,IAAA,IAAAiI,EAAA,UAAA89B,GAAA99B,EAAAzL,OAAA,IAGA,MAAAwD,GAAAtF,MAAA,MAIA,QAAAqrC,IAAApjC,GACA,MAAAA,GACAzI,QAAA,qBACAA,QAAA,qBAkHA,QAAAgsC,IAAA5Z,EAAA6Z,GACA,IACA,UAAA1sC,UAAA6yB,GACG,MAAApjB,GAEH,MADAi9B,GAAApkC,MAAiBmH,MAAAojB,SACjBrsB,GAIA,QAAAmmC,IAAAC,GACA,GAAAvnC,GAAApG,OAAAwF,OAAA,KAEA,iBACA09B,EACAz1B,EACAP,GAEAO,EAAAvG,KAAuBuG,EACvBA,GAAA0jB,WACA1jB,GAAA0jB,IAqBA,IAAAlrB,GAAAwH,EAAAqxB,WACAh6B,OAAA2I,EAAAqxB,YAAAoE,EACAA,CACA,IAAA98B,EAAAH,GACA,MAAAG,GAAAH,EAIA,IAAA2nC,GAAAD,EAAAzK,EAAAz1B,GAiBAnG,KACAumC,IAyBA,OAxBAvmC,GAAA4R,OAAAs0B,GAAAI,EAAA10B,OAAA20B,GACAvmC,EAAAwZ,gBAAA8sB,EAAA9sB,gBAAAvb,IAAA,SAAAquB,GACA,MAAA4Z,IAAA5Z,EAAAia,KAsBAznC,EAAAH,GAAAqB,GAuFA,QAAAwmC,IAAAC,GAGA,MAFAC,QAAApkB,SAAA5G,cAAA,OACAgrB,GAAAC,UAAAF,EAAA,iCACAC,GAAAC,UAAAnoC,QAAA,SAAqC,EAwFrC,QAAAooC,IAAAn1B,GACA,GAAAA,EAAAo1B,UACA,MAAAp1B,GAAAo1B,SAEA,IAAAC,GAAAxkB,SAAA5G,cAAA,MAEA,OADAorB,GAAArjB,YAAAhS,EAAAs1B,WAAA,IACAD,EAAAH;;;;;AAn0VA,GAAAh0B,IAAAja,OAAAsuC,WA6CA7pC,GAAAzE,OAAAS,UAAAyE,SAmEA6jC,GAAA1jC,EAAA,qBAKAgb,GAAAhb,EAAA,8BAiBA3E,GAAAV,OAAAS,UAAAC,eAmBA6tC,GAAA,SACAjtC,GAAA4E,EAAA,SAAA3E,GACA,MAAAA,GAAAC,QAAA+sC,GAAA,SAAA/d,EAAA7wB,GAAkD,MAAAA,KAAAiC,cAAA,OAMlDuN,GAAAjJ,EAAA,SAAA3E,GACA,MAAAA,GAAAQ,OAAA,GAAAH,cAAAL,EAAAS,MAAA,KAMAwsC,GAAA,aACA5+B,GAAA1J,EAAA,SAAA3E,GACA,MAAAA,GAAAC,QAAAgtC,GAAA,OAAA7sC,gBA8BAkF,GAAA9F,SAAAN,UAAAoG,KACAD,EACAP,EAkDAy6B,GAAA,SAAAt6B,EAAAgB,EAAA7H,GAA6B,UAO7B4f,GAAA,SAAAiR,GAA6B,MAAAA,IA2E7Bie,GAAA,uBAEA1mB,IACA,YACA,YACA,UAGA2mB,IACA,eACA,UACA,cACA,UACA,eACA,UACA,gBACA,YACA,YACA,cACA,iBAOA39B,IAKA49B,sBAAA3uC,OAAAwF,OAAA,MAKAopC,QAAA,EAKAC,eAAiB,EAKjBhzB,UAAY,EAKZizB,aAAA,EAKA99B,aAAA,KAKA+9B,YAAA,KAKAC,mBAMA/uB,SAAAjgB,OAAAwF,OAAA,MAMAyf,cAAA6b,GAMAmO,eAAAnO,GAMApX,iBAAAoX,GAKA9b,gBAAAzd,EAKA2d,qBAAA3F,GAMAe,YAAAwgB,GAMAoO,OAAA,EAKAC,gBAAAT,IA4BA7lC,GAAA,UAkBAumC,GAAA,gBAGAl+B,GAAA,mBAAAhQ,QACAiQ,GAAA,mBAAAk+B,gCAAAC,SACAC,GAAAp+B,IAAAk+B,cAAAC,SAAA3tC,cACA6tC,GAAAt+B,IAAAhQ,OAAAuuC,UAAAC,UAAA/tC,cACAisB,GAAA4hB,IAAA,eAAA1mC,KAAA0mC,IACAhhB,GAAAghB,OAAA1pC,QAAA,cACA+nB,GAAA2hB,OAAA1pC,QAAA,WAEA6pC,IADAH,OAAA1pC,QAAA,WACA0pC,IAAA,uBAAA1mC,KAAA0mC,KAAA,QAAAD,IAIAxyB,IAHAyyB,IAAA,cAAA1mC,KAAA0mC,OAGqB1yB,OAErByX,IAAA,CACA,IAAArjB,GACA,IACA,GAAAoL,MACAtc,QAAAC,eAAAqc,GAAA,WACAlc,IAAA,WAEAm0B,IAAA,KAGArzB,OAAA2tB,iBAAA,oBAAAvS,IACG,MAAArb,IAKH,GAAA2uC,IA2BAC,GA1BApkC,GAAA,WAWA,WAVAjI,KAAAosC,KAOAA,IALA1+B,KAAAC,QAAA,KAAApN,IAGAA,EAAA,oBAAAA,EAAA,QAAA+rC,IAAAC,UAKAH,IAIA/zB,GAAA3K,IAAAhQ,OAAA8uC,6BAOA36B,GACA,mBAAAC,SAAAtM,EAAAsM,SACA,mBAAAmJ,UAAAzV,EAAAyV,QAAAC,QAMAmxB,IAFA,mBAAAI,MAAAjnC,EAAAinC,KAEAA,IAGA,WACA,QAAAA,KACAnvC,KAAAqL,IAAAnM,OAAAwF,OAAA,MAYA,MAVAyqC,GAAAxvC,UAAAmS,IAAA,SAAA3M,GACA,WAAAnF,KAAAqL,IAAAlG,IAEAgqC,EAAAxvC,UAAAoS,IAAA,SAAA5M,GACAnF,KAAAqL,IAAAlG,IAAA,GAEAgqC,EAAAxvC,UAAA8R,MAAA,WACAzR,KAAAqL,IAAAnM,OAAAwF,OAAA,OAGAyqC,IAMA,IAAA9e,IAAA5pB,EA8FA2oC,GAAA,EAMA5mC,GAAA,WACAxI,KAAAgO,GAAAohC,KACApvC,KAAAqvC,QAGA7mC,IAAA7I,UAAA2vC,OAAA,SAAAC,GACAvvC,KAAAqvC,KAAA9mC,KAAAgnC,IAGA/mC,GAAA7I,UAAA6vC,UAAA,SAAAD,GACA1qC,EAAA7E,KAAAqvC,KAAAE,IAGA/mC,GAAA7I,UAAA4L,OAAA,WACA/C,GAAAH,QACAG,GAAAH,OAAAonC,OAAAzvC,OAIAwI,GAAA7I,UAAA+L,OAAA,WASA,OAPA2jC,GAAArvC,KAAAqvC,KAAAnuC,QAOAzC,EAAA,EAAAC,EAAA2wC,EAAA9sC,OAAkC9D,EAAAC,EAAOD,IACzC4wC,EAAA5wC,GAAA2O,UAOA5E,GAAAH,OAAA,IACA,IAAAC,OAcAM,GAAA,SACAI,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,GAEAvJ,KAAAgJ,MACAhJ,KAAAiJ,OACAjJ,KAAAkJ,WACAlJ,KAAAmJ,OACAnJ,KAAAoJ,MACApJ,KAAAwJ,OAAA9G,GACA1C,KAAAqJ,UACArJ,KAAA2J,cAAAjH,GACA1C,KAAA4J,cAAAlH,GACA1C,KAAA6J,cAAAnH,GACA1C,KAAAmF,IAAA8D,KAAA9D,IACAnF,KAAAsJ,mBACAtJ,KAAA8nB,sBAAAplB,GACA1C,KAAAsN,WAAA5K,GACA1C,KAAA0vC,KAAA,EACA1vC,KAAAyJ,UAAA,EACAzJ,KAAAy5B,cAAA,EACAz5B,KAAA0J,WAAA,EACA1J,KAAA+J,UAAA,EACA/J,KAAAogB,QAAA,EACApgB,KAAAuJ,eACAvJ,KAAA8J,cAAApH,GACA1C,KAAA+V,oBAAA,GAGA45B,IAA0BpiC,OAASnO,cAAA,GAInCuwC,IAAApiC,MAAAjO,IAAA,WACA,MAAAU,MAAA8nB,mBAGA5oB,OAAA0wC,iBAAAhnC,GAAAjJ,UAAAgwC,GAEA,IAAA/6B,IAAA,SAAAzL,OACA,KAAAA,MAAA,GAEA,IAAA2K,GAAA,GAAAlL,GAGA,OAFAkL,GAAA3K,OACA2K,EAAApK,WAAA,EACAoK,GA0CA+7B,GAAA1pC,MAAAxG,UACAmwC,GAAA5wC,OAAAwF,OAAAmrC,KAGA,OACA,MACA,QACA,UACA,SACA,OACA,WAMAhuC,QAAA,SAAAkuC,GAEA,GAAAC,GAAAH,GAAAE,EACApoC,GAAAmoC,GAAAC,EAAA,WAEA,IADA,GAAA3pB,MAAA5W,EAAA7J,UAAApD,OACAiN,KAAA4W,EAAA5W,GAAA7J,UAAA6J,EAEA,IAEA2c,GAFA1O,EAAAuyB,EAAApqC,MAAA5F,KAAAomB,GACA5b,EAAAxK,KAAAyK,MAEA,QAAAslC,GACA,WACA,cACA5jB,EAAA/F,CACA,MACA,cACA+F,EAAA/F,EAAAllB,MAAA,GAMA,MAHAirB,IAAmB3hB,EAAAylC,aAAA9jB,GAEnB3hB,EAAAU,IAAAQ,SACA+R,KAMA,IAAAyyB,IAAAhxC,OAAAixC,oBAAAL,IAMA7lC,IAAA,EAYAS,GAAA,SAAA1H,GACAhD,KAAAgD,QACAhD,KAAAkL,IAAA,GAAA1C,IACAxI,KAAA8K,QAAA,EACAnD,EAAA3E,EAAA,SAAAhD,MACAmG,MAAAY,QAAA/D,IACAsrC,GACApkC,EAAAlH,EAAA8sC,IAEAzlC,EAAArH,EAAA8sC,GAAAI,IAEAlwC,KAAAiwC,aAAAjtC,IAEAhD,KAAAowC,KAAAptC,GASA0H,IAAA/K,UAAAywC,KAAA,SAAA9vC,GAEA,OADAsB,GAAA1C,OAAA0C,KAAAtB,GACA7B,EAAA,EAAiBA,EAAAmD,EAAAW,OAAiB9D,IAClCsM,EAAAzK,EAAAsB,EAAAnD,KAOAiM,GAAA/K,UAAAswC,aAAA,SAAAI,GACA,OAAA5xC,GAAA,EAAAC,EAAA2xC,EAAA9tC,OAAmC9D,EAAAC,EAAOD,IAC1C6L,EAAA+lC,EAAA5xC,IAgNA,IAAAiP,IAAAuC,GAAA49B,qBAsFAngC,IAAAzE,KAAA,SACAiD,EACAC,EACAC,GAEA,MAAAA,GAcAH,EAAAC,EAAAC,EAAAC,GAbAD,GAAA,kBAAAA,GAQAD,EAEAD,EAAAC,EAAAC,IAsBAyhC,GAAA/rC,QAAA,SAAAmR,GACAtF,GAAAsF,GAAAzG,IAyBA0a,GAAAplB,QAAA,SAAAgL,GACAa,GAAAb,EAAA,KAAAJ,IASAiB,GAAAsO,MAAA,SACA9P,EACAC,EACAC,EACAjH,GAMA,GAHA+G,IAAA+P,KAAkC/P,MAAAxJ,IAClCyJ,IAAA8P,KAAiC9P,MAAAzJ,KAEjCyJ,EAAkB,MAAAjN,QAAAwF,OAAAwH,GAAA,KAIlB,KAAAA,EAAmB,MAAAC,EACnB,IAAAjG,KACAE,GAAAF,EAAAgG,EACA,QAAAswB,KAAArwB,GAAA,CACA,GAAAmB,GAAApH,EAAAs2B,GACAjvB,EAAApB,EAAAqwB,EACAlvB,KAAAnH,MAAAY,QAAAuG,KACAA,OAEApH,EAAAs2B,GAAAlvB,EACAA,EAAAd,OAAAe,GACApH,MAAAY,QAAAwG,SAEA,MAAArH,IAMAwH,GAAAd,MACAc,GAAAgO,QACAhO,GAAAX,OACAW,GAAAoO,SAAA,SACA5P,EACAC,EACAC,EACAjH,GAKA,IAAA+G,EAAmB,MAAAC,EACnB,IAAAjG,GAAAhH,OAAAwF,OAAA,KAGA,OAFA0B,GAAAF,EAAAgG,GACAC,GAAiB/F,EAAAF,EAAAiG,GACjBjG,GAEAwH,GAAA4P,QAAArR,CAKA,IAofAkF,IACAD,GArfAvD,GAAA,SAAAzB,EAAAC,GACA,WAAAzJ,KAAAyJ,EACAD,EACAC,GA6dAwE,MACAF,IAAA,EAqBAK,IAAA,CAOA,aAAA5N,GAAAgF,EAAAhF,GACAgO,GAAA,WACAhO,EAAAsN,SAEC,uBAAA8/B,kBACDpoC,EAAAooC,iBAEA,uCAAAA,eAAAlsC,WAUA8M,GAAA,WACA2E,WAAArF,GAAA,QAVA,CACA,GAAA+/B,IAAA,GAAAD,gBACAE,GAAAD,GAAAE,KACAF,IAAAG,MAAAC,UAAAngC,GACAU,GAAA,WACAs/B,GAAAI,YAAA,IAWA,sBAAAx/B,UAAAlJ,EAAAkJ,SAAA,CACA,GAAAvR,IAAAuR,QAAAC,SACAF,IAAA,WACAtR,GAAA6V,KAAAlF,IAMAq+B,IAAgBh5B,WAAApP,QAIhB0K,IAAAD,EAiDA,IAmkBA7I,IAldAmJ,GAAA,GAAAu9B,IAqCAp8B,GAAAvN,EAAA,SAAArG,GACA,GAAA6T,GAAA,MAAA7T,EAAAkC,OAAA,EACAlC,GAAA6T,EAAA7T,EAAAmC,MAAA,GAAAnC,CACA,IAAA8xC,GAAA,MAAA9xC,EAAAkC,OAAA,EACAlC,GAAA8xC,EAAA9xC,EAAAmC,MAAA,GAAAnC,CACA,IAAAgR,GAAA,MAAAhR,EAAAkC,OAAA,EAEA,OADAlC,GAAAgR,EAAAhR,EAAAmC,MAAA,GAAAnC,GAEAA,OACAwI,KAAAspC,EACA9gC,UACA6C,aAsmBAyE,GAAA,KAoUA8C,MACAC,MACAtI,MAEAuI,IAAA,EACAC,IAAA,EACA1Z,GAAA,EA6IAkwC,GAAA,EAOAr4B,GAAA,SACArM,EACA+Q,EACAnM,EACArE,EACAokC,GAEA/wC,KAAAoM,KACA2kC,IACA3kC,EAAAsL,SAAA1X,MAEAoM,EAAAmP,UAAAhT,KAAAvI,MAEA2M,GACA3M,KAAAgxC,OAAArkC,EAAAqkC,KACAhxC,KAAAixC,OAAAtkC,EAAAskC,KACAjxC,KAAA+yB,OAAApmB,EAAAomB,KACA/yB,KAAAoV,OAAAzI,EAAAyI,KACApV,KAAA0Y,OAAA/L,EAAA+L,QAEA1Y,KAAAgxC,KAAAhxC,KAAAixC,KAAAjxC,KAAA+yB,KAAA/yB,KAAAoV,MAAA,EAEApV,KAAAgR,KACAhR,KAAAgO,KAAA8iC,GACA9wC,KAAAkxC,QAAA,EACAlxC,KAAA+c,MAAA/c,KAAA+yB,KACA/yB,KAAAmxC,QACAnxC,KAAAoxC,WACApxC,KAAAqxC,OAAA,GAAAtC,IACA/uC,KAAAsxC,UAAA,GAAAvC,IACA/uC,KAAA6uB,WAEA,GAEA,kBAAA1R,GACAnd,KAAAhB,OAAAme,GAEAnd,KAAAhB,OAAA6I,EAAAsV,GACAnd,KAAAhB,SACAgB,KAAAhB,OAAAyH,IASAzG,KAAAgD,MAAAhD,KAAA+yB,SACArwB,GACA1C,KAAAV,MAMAmZ,IAAA9Y,UAAAL,IAAA,WACA8I,EAAApI,KACA,IAAAgD,GACAoJ,EAAApM,KAAAoM,EACA,KACApJ,EAAAhD,KAAAhB,OAAAL,KAAAyN,KACG,MAAAjM,GACH,IAAAH,KAAAixC,KAGA,KAAA9wC,EAFAsP,IAAAtP,EAAAiM,EAAA,uBAAApM,KAAA,gBAIG,QAGHA,KAAAgxC,MACA1/B,GAAAtO,GAEAyF,IACAzI,KAAAuxC,cAEA,MAAAvuC,IAMAyV,GAAA9Y,UAAA8vC,OAAA,SAAAvkC,GACA,GAAA8C,GAAA9C,EAAA8C,EACAhO,MAAAsxC,UAAAx/B,IAAA9D,KACAhO,KAAAsxC,UAAAv/B,IAAA/D,GACAhO,KAAAoxC,QAAA7oC,KAAA2C,GACAlL,KAAAqxC,OAAAv/B,IAAA9D,IACA9C,EAAAokC,OAAAtvC,QAQAyY,GAAA9Y,UAAA4xC,YAAA,WAEA,IADA,GAAA9yC,GAAAuB,KAAAmxC,KAAA5uC,OACA9D,KAAA,CACA,GAAAyM,GAAAlL,KAAAmxC,KAAA1yC,EACAuB,MAAAsxC,UAAAx/B,IAAA5G,EAAA8C,KACA9C,EAAAskC,UAAAxvC,MAGA,GAAAwxC,GAAAxxC,KAAAqxC,MACArxC,MAAAqxC,OAAArxC,KAAAsxC,UACAtxC,KAAAsxC,UAAAE,EACAxxC,KAAAsxC,UAAA7/B,QACA+/B,EAAAxxC,KAAAmxC,KACAnxC,KAAAmxC,KAAAnxC,KAAAoxC,QACApxC,KAAAoxC,QAAAI,EACAxxC,KAAAoxC,QAAA7uC,OAAA,GAOAkW,GAAA9Y,UAAAyN,OAAA,WAEApN,KAAA+yB,KACA/yB,KAAA+c,OAAA,EACG/c,KAAAoV,KACHpV,KAAA0a,MAEAQ,GAAAlb,OAQAyY,GAAA9Y,UAAA+a,IAAA,WACA,GAAA1a,KAAAkxC,OAAA,CACA,GAAAluC,GAAAhD,KAAAV,KACA,IACA0D,IAAAhD,KAAAgD,OAIAS,EAAAT,IACAhD,KAAAgxC,KACA,CAEA,GAAAhlB,GAAAhsB,KAAAgD,KAEA,IADAhD,KAAAgD,QACAhD,KAAAixC,KACA,IACAjxC,KAAAgR,GAAArS,KAAAqB,KAAAoM,GAAApJ,EAAAgpB,GACS,MAAA7rB,GACTsP,GAAAtP,EAAAH,KAAAoM,GAAA,yBAAApM,KAAA,oBAGAA,MAAAgR,GAAArS,KAAAqB,KAAAoM,GAAApJ,EAAAgpB,MAUAvT,GAAA9Y,UAAAqd,SAAA,WACAhd,KAAAgD,MAAAhD,KAAAV,MACAU,KAAA+c,OAAA,GAMAtE,GAAA9Y,UAAA4L,OAAA,WAEA,IADA,GAAA9M,GAAAuB,KAAAmxC,KAAA5uC,OACA9D,KACAuB,KAAAmxC,KAAA1yC,GAAA8M,UAOAkN,GAAA9Y,UAAA8xC,SAAA,WACA,GAAAzxC,KAAAkxC,OAAA,CAIAlxC,KAAAoM,GAAA2L,mBACAlT,EAAA7E,KAAAoM,GAAAmP,UAAAvb,KAGA,KADA,GAAAvB,GAAAuB,KAAAmxC,KAAA5uC,OACA9D,KACAuB,KAAAmxC,KAAA1yC,GAAA+wC,UAAAxvC,KAEAA,MAAAkxC,QAAA,GAMA,IAAA71B,KACAhc,YAAA,EACAD,cAAA,EACAE,IAAAmH,EACA4E,IAAA5E,GAsIAiW,IAA8BqW,MAAA,EA2lB9BtS,IAAAgB,GAAA9hB,UA0EA,IAAA2jB,KACAouB,KAAA,SAAA5oC,EAAAoP,GACA,GACApP,EAAAgf,oBACAhf,EAAAgf,kBAAAhQ,cACAhP,EAAAG,KAAA0oC,UACA,CAEA,GAAAC,GAAA9oC,CACAwa,IAAAuuB,SAAAD,SACK,EACL9oC,EAAAgf,kBAAA7E,GACAna,EACAuO,KAEAy6B,OAAA55B,EAAApP,EAAAM,QAAA1G,GAAAwV,KAIA25B,SAAA,SAAAxmB,EAAAviB,GACA,GAAA6D,GAAA7D,EAAAQ,gBAEAsP,IADA9P,EAAAgf,kBAAAuD,EAAAvD,kBAGAnb,EAAA6B,UACA7B,EAAAyJ,UACAtN,EACA6D,EAAAzD,WAIA6oC,OAAA,SAAAjpC,GACA,GAAAO,GAAAP,EAAAO,QACAye,EAAAhf,EAAAgf,iBACAA,GAAAjQ,aACAiQ,EAAAjQ,YAAA,EACAQ,GAAAyP,EAAA,YAEAhf,EAAAG,KAAA0oC,YACAtoC,EAAAwO,WAMAoD,GAAA6M,GAEAlO,GAAAkO,GAAA,KAKAkqB,QAAA,SAAAlpC,GACA,GAAAgf,GAAAhf,EAAAgf,iBACAA,GAAAhQ,eACAhP,EAAAG,KAAA0oC,UAGA73B,GAAAgO,GAAA,GAFAA,EAAAC,cAQA3E,GAAAlkB,OAAA0C,KAAA0hB,IAqKAW,GAAA,EACAH,GAAA,EA2OAmuB,GAAA,GAEA,SAAApsB,GACAA,EAAAlmB,UAAAmmB,MAAA,SAAAnZ,GACA,GAAAP,GAAApM,IAEAoM,GAAA8lC,KAAAD,KAWA7lC,EAAAvB,QAAA,EAEA8B,KAAAuW,aAIA2B,GAAAzY,EAAAO,GAEAP,EAAA8C,SAAA7B,EACAsV,GAAAvW,EAAA0Y,aACAnY,MACAP,GAOAA,EAAA6T,aAAA7T,EAGAA,EAAA+lC,MAAA/lC,EACAkL,GAAAlL,GACA6J,GAAA7J,GACAuY,GAAAvY,GACAiM,GAAAjM,EAAA,gBACAoR,GAAApR,GACAkP,GAAAlP,GACAiR,GAAAjR,GACAiM,GAAAjM,EAAA,WASAA,EAAA8C,SAAA+I,IACA7L,EAAA0lC,OAAA1lC,EAAA8C,SAAA+I,MA0FA4N,IAhnCA,SAAAA,GAIA,GAAAusB,KACAA,GAAA9yC,IAAA,WAA6B,MAAAU,MAAA6b,MAC7B,IAAAw2B,KACAA,GAAA/yC,IAAA,WAA8B,MAAAU,MAAAmP,QAa9BjQ,OAAAC,eAAA0mB,EAAAlmB,UAAA,QAAAyyC,GACAlzC,OAAAC,eAAA0mB,EAAAlmB,UAAA,SAAA0yC,GAEAxsB,EAAAlmB,UAAA2yC,KAAAjnC,EACAwa,EAAAlmB,UAAA4yC,QAAA3mC,EAEAia,EAAAlmB,UAAAyd,OAAA,SACAD,EACAnM,EACArE,GAEA,GAAAP,GAAApM,IACA,IAAA0D,EAAAsN,GACA,MAAAkM,IAAA9Q,EAAA+Q,EAAAnM,EAAArE,EAEAA,SACAA,EAAAskC,MAAA,CACA,IAAAz2B,GAAA,GAAA/B,IAAArM,EAAA+Q,EAAAnM,EAAArE,EACA,IAAAA,EAAA6lC,UACA,IACAxhC,EAAArS,KAAAyN,EAAAoO,EAAAxX,OACO,MAAAuN,GACPd,GAAAc,EAAAnE,EAAA,mCAAAoO,EAAA,gBAGA,kBACAA,EAAAi3B,cAmkCA5rB,IAhuEA,SAAAA,GACA,GAAA4sB,GAAA,QACA5sB,GAAAlmB,UAAA4W,IAAA,SAAA7D,EAAArN,GACA,GAAA+G,GAAApM,IACA,IAAAmG,MAAAY,QAAA2L,GACA,OAAAjU,GAAA,EAAAC,EAAAgU,EAAAnQ,OAAuC9D,EAAAC,EAAOD,IAC9C2N,EAAAmK,IAAA7D,EAAAjU,GAAA4G,QAGA+G,EAAA8J,QAAAxD,KAAAtG,EAAA8J,QAAAxD,QAAAnK,KAAAlD,GAGAotC,EAAAzqC,KAAA0K,KACAtG,EAAA+J,eAAA,EAGA,OAAA/J,IAGAyZ,EAAAlmB,UAAA+yC,MAAA,SAAAhgC,EAAArN,GAEA,QAAAgN,KACAjG,EAAAqK,KAAA/D,EAAAL,GACAhN,EAAAO,MAAAwG,EAAAzG,WAHA,GAAAyG,GAAApM,IAOA,OAFAqS,GAAAhN,KACA+G,EAAAmK,IAAA7D,EAAAL,GACAjG,GAGAyZ,EAAAlmB,UAAA8W,KAAA,SAAA/D,EAAArN,GACA,GAAA+G,GAAApM,IAEA,KAAA2F,UAAApD,OAEA,MADA6J,GAAA8J,QAAAhX,OAAAwF,OAAA,MACA0H,CAGA,IAAAjG,MAAAY,QAAA2L,GAAA,CACA,OAAAjU,GAAA,EAAAC,EAAAgU,EAAAnQ,OAAuC9D,EAAAC,EAAOD,IAC9C2N,EAAAqK,KAAA/D,EAAAjU,GAAA4G,EAEA,OAAA+G,GAGA,GAAAumC,GAAAvmC,EAAA8J,QAAAxD,EACA,KAAAigC,EACA,MAAAvmC,EAEA,KAAA/G,EAEA,MADA+G,GAAA8J,QAAAxD,GAAA,KACAtG,CAEA,IAAA/G,EAIA,IAFA,GAAA2L,GACA62B,EAAA8K,EAAApwC,OACAslC,KAEA,IADA72B,EAAA2hC,EAAA9K,MACAxiC,GAAA2L,EAAA3L,OAAA,CACAstC,EAAA1tC,OAAA4iC,EAAA,EACA,OAIA,MAAAz7B,IAGAyZ,EAAAlmB,UAAAsa,MAAA,SAAAvH,GACA,GAAAtG,GAAApM,KAaA2yC,EAAAvmC,EAAA8J,QAAAxD,EACA,IAAAigC,EAAA,CACAA,IAAApwC,OAAA,EAAAyD,EAAA2sC,IAEA,QADAvsB,GAAApgB,EAAAL,UAAA,GACAlH,EAAA,EAAAC,EAAAi0C,EAAApwC,OAAqC9D,EAAAC,EAAOD,IAC5C,IACAk0C,EAAAl0C,GAAAmH,MAAAwG,EAAAga,GACS,MAAAjmB,GACTsP,GAAAtP,EAAAiM,EAAA,sBAAAsG,EAAA,MAIA,MAAAtG,KAmoEAyZ,IAthEA,SAAAA,GACAA,EAAAlmB,UAAA4Y,QAAA,SAAAzP,EAAAoP,GACA,GAAA9L,GAAApM,KACA4yC,EAAAxmC,EAAA+L,IACA06B,EAAAzmC,EAAAiN,OACAy5B,EAAA37B,GAAA/K,EACAA,GAAAiN,OAAAvQ,EAQAsD,EAAA+L,IALA06B,EAKAzmC,EAAA2mC,UAAAF,EAAA/pC,GAHAsD,EAAA2mC,UAAA3mC,EAAA+L,IAAArP,EAAAoP,GAAA,GAKA46B,IAEAF,IACAA,EAAAI,QAAA,MAEA5mC,EAAA+L,MACA/L,EAAA+L,IAAA66B,QAAA5mC,GAGAA,EAAAuM,QAAAvM,EAAAjK,SAAAiK,EAAAuM,SAAAvM,EAAAjK,QAAAkX,SACAjN,EAAAjK,QAAAgW,IAAA/L,EAAA+L,MAMA0N,EAAAlmB,UAAA4V,aAAA,WACA,GAAAnJ,GAAApM,IACAoM,GAAAsL,UACAtL,EAAAsL,SAAAtK,UAIAyY,EAAAlmB,UAAAooB,SAAA,WACA,GAAA3b,GAAApM,IACA,KAAAoM,EAAA2L,kBAAA,CAGAM,GAAAjM,EAAA,iBACAA,EAAA2L,mBAAA,CAEA,IAAAzK,GAAAlB,EAAAjK,SACAmL,KAAAyK,mBAAA3L,EAAA8C,SAAAqI,UACA1S,EAAAyI,EAAAhL,UAAA8J,GAGAA,EAAAsL,UACAtL,EAAAsL,SAAA+5B,UAGA,KADA,GAAAhzC,GAAA2N,EAAAmP,UAAAhZ,OACA9D,KACA2N,EAAAmP,UAAA9c,GAAAgzC,UAIArlC,GAAAyP,MAAApR,QACA2B,EAAAyP,MAAApR,OAAAK,UAGAsB,EAAA0L,cAAA,EAEA1L,EAAA2mC,UAAA3mC,EAAAiN,OAAA,MAEAhB,GAAAjM,EAAA,aAEAA,EAAAqK,OAEArK,EAAA+L,MACA/L,EAAA+L,IAAA66B,QAAA,MAGA5mC,EAAAuM,SACAvM,EAAAuM,OAAArL,OAAA,SAy8DAuY,IAjNA,SAAAA,GAEApF,GAAAoF,EAAAlmB,WAEAkmB,EAAAlmB,UAAAszC,UAAA,SAAA5tC,GACA,MAAA0L,IAAA1L,EAAArF,OAGA6lB,EAAAlmB,UAAA6Y,QAAA,WACA,GAAApM,GAAApM,KACAyqB,EAAAre,EAAA8C,SACAkJ,EAAAqS,EAAArS,OACAgB,EAAAqR,EAAArR,YAEAA,KACAhN,EAAA8M,aAAAE,EAAAnQ,KAAAgQ,aAAAE,IAKA/M,EAAAuM,OAAAS,CAEA,IAAAtQ,EACA,KACAA,EAAAsP,EAAAzZ,KAAAyN,EAAA6T,aAAA7T,EAAAmS,gBACK,MAAApe,GACLsP,GAAAtP,EAAAiM,EAAA,UAYAtD,EAAAsD,EAAAiN,OAgBA,MAZAvQ,aAAAF,MAQAE,EAAA8L,MAGA9L,EAAAwE,OAAA8L,EACAtQ,IA4JA+c,GA8MA,IAAAqtB,KAAAlvC,OAAAw8B,OAAAr6B,OAEAgtC,IACAp0C,KAAA,aACAwY,UAAA,EAEA3K,OACAwmC,QAAAF,GACAG,QAAAH,GACAvnC,KAAA3H,OAAAi0B,SAGAqb,QAAA,WACAtzC,KAAAsF,MAAApG,OAAAwF,OAAA,MACA1E,KAAA4B,SAGA2xC,UAAA,WACA,OAAApuC,KAAAnF,MAAAsF,MACAqiB,GAAA3nB,KAAAsF,MAAAH,EAAAnF,KAAA4B,OAIA4xC,QAAA,WACA,GAAAC,GAAAzzC,IAEAA,MAAAod,OAAA,mBAAAtZ,GACA0jB,GAAAisB,EAAA,SAAA10C,GAA0C,MAAAuoB,IAAAxjB,EAAA/E,OAE1CiB,KAAAod,OAAA,mBAAAtZ,GACA0jB,GAAAisB,EAAA,SAAA10C,GAA0C,OAAAuoB,GAAAxjB,EAAA/E,QAI1CqZ,OAAA,WACA,GAAArB,GAAA/W,KAAA0Z,OAAAnZ,QACAuI,EAAAkN,GAAAe,GACAzN,EAAAR,KAAAQ,gBACA,IAAAA,EAAA,CAEA,GAAAvK,GAAAsoB,GAAA/d,GACAmhB,EAAAzqB,KACAozC,EAAA3oB,EAAA2oB,QACAC,EAAA5oB,EAAA4oB,OACA,IAEAD,KAAAr0C,IAAAuoB,GAAA8rB,EAAAr0C,KAEAs0C,GAAAt0C,GAAAuoB,GAAA+rB,EAAAt0C,GAEA,MAAA+J,EAGA,IAAA4qC,GAAA1zC,KACAsF,EAAAouC,EAAApuC,MACA1D,EAAA8xC,EAAA9xC,KACAuD,EAAA,MAAA2D,EAAA3D,IAGAmE,EAAAnB,KAAAua,KAAApZ,EAAAN,IAAA,KAAAM,EAAA,QACAR,EAAA3D,GACAG,GAAAH,IACA2D,EAAAgf,kBAAAxiB,EAAAH,GAAA2iB,kBAEAjjB,EAAAjD,EAAAuD,GACAvD,EAAA2G,KAAApD,KAEAG,EAAAH,GAAA2D,EACAlH,EAAA2G,KAAApD,GAEAnF,KAAA2L,KAAA/J,EAAAW,OAAAymC,SAAAhpC,KAAA2L,MACAgc,GAAAriB,EAAA1D,EAAA,GAAAA,EAAA5B,KAAAqZ,SAIAvQ,EAAAG,KAAA0oC,WAAA,EAEA,MAAA7oC,IAAAiO,KAAA,KAIA48B,IACAR,eAKA,SAAAttB,GAEA,GAAA+tB,KACAA,GAAAt0C,IAAA,WAA+B,MAAA2Q,KAQ/B/Q,OAAAC,eAAA0mB,EAAA,SAAA+tB,GAKA/tB,EAAAguB,MACAxjB,QACAjqB,SACAiH,eACAymC,eAAA/oC,GAGA8a,EAAAxa,MACAwa,EAAAkuB,OAAAnoC,EACAia,EAAA9U,YAEA8U,EAAAlZ,QAAAzN,OAAAwF,OAAA,MACAuiB,GAAAplB,QAAA,SAAAgL,GACAgZ,EAAAlZ,QAAAE,EAAA,KAAA3N,OAAAwF,OAAA,QAKAmhB,EAAAlZ,QAAAiB,MAAAiY,EAEAzf,EAAAyf,EAAAlZ,QAAA2Y,WAAAquB,IAEA5tB,GAAAF,GACAU,GAAAV,GACAY,GAAAZ,GACAsB,GAAAtB,IAGAA,IAEA3mB,OAAAC,eAAA0mB,GAAAlmB,UAAA,aACAL,IAAAqL,KAGAzL,OAAAC,eAAA0mB,GAAAlmB,UAAA,eACAL,IAAA,WAEA,MAAAU,MAAA2Y,QAAA3Y,KAAA2Y,OAAAq7B,cAKA90C,OAAAC,eAAA0mB,GAAA,2BACA7iB,MAAAye,KAGAoE,GAAAouB,QAAA,QAMA,IAupDAzkC,IAAA/O,GAAAoxB,GAAAJ,GAAAC,GAAAC,GAsFAU,GAiMAiB,GAyPA4gB,GAvqEA/F,GAAA5pC,EAAA,eAGA4vC,GAAA5vC,EAAA,yCACAib,GAAA,SAAAxW,EAAA6D,EAAA60B,GACA,MACA,UAAAA,GAAAyS,GAAAnrC,IAAA,WAAA6D,GACA,aAAA60B,GAAA,WAAA14B,GACA,YAAA04B,GAAA,UAAA14B,GACA,UAAA04B,GAAA,UAAA14B,GAIAokB,GAAA7oB,EAAA,wCAEAgpB,GAAAhpB,EACA,wYAQA2oB,GAAA,+BAEAF,GAAA,SAAAjuB,GACA,YAAAA,EAAAkC,OAAA,cAAAlC,EAAAmC,MAAA,MAGAisB,GAAA,SAAApuB,GACA,MAAAiuB,IAAAjuB,KAAAmC,MAAA,EAAAnC,EAAAwD,QAAA,IAGAirB,GAAA,SAAA1pB,GACA,aAAAA,IAAA,IAAAA,GAsFA4lB,IACA0qB,IAAA,6BACAC,KAAA,sCAGAC,GAAA/vC,EACA,snBAeAokB,GAAApkB,EACA,kNAGA,GAGAq+B,GAAA,SAAA55B,GAA+B,cAAAA,GAE/Bmb,GAAA,SAAAnb,GACA,MAAAsrC,IAAAtrC,IAAA2f,GAAA3f,IAcA6f,GAAA3pB,OAAAwF,OAAA,MA0BAsmB,GAAAzmB,EAAA,6CAgFAgwC,GAAAr1C,OAAAsuC,QACAtrB,cAAAkH,GACAI,mBACAG,kBACAC,iBACAC,gBACAG,eACAC,eACAhC,cACAiC,eACAb,WACAc,kBACAE,mBAKAI,IACA/lB,OAAA,SAAAgrB,EAAA5mB,GACAyhB,GAAAzhB,IAEAsE,OAAA,SAAAie,EAAAviB,GACAuiB,EAAApiB,KAAAwhB,MAAA3hB,EAAAG,KAAAwhB,MACAF,GAAAc,GAAA,GACAd,GAAAzhB,KAGAkpC,QAAA,SAAAlpC,GACAyhB,GAAAzhB,GAAA,KA2CA2iB,GAAA,GAAA7iB,IAAA,UAEAiH,IAAA,iDAuvBA1C,IACAzI,OAAA0mB,GACAhe,OAAAge,GACA4mB,QAAA,SAAAlpC,GACAsiB,GAAAtiB,EAAA2iB,MAsEAa,GAAAptB,OAAAwF,OAAA,MAwCA8vC,IACA/pB,GACAtd,IAoGAkG,IACA3O,OAAAgoB,GACAtf,OAAAsf,IAoCA+nB,IACA/vC,OAAAspB,GACA5gB,OAAA4gB,IAKAqB,GAAA,gBA4ZA4D,GAAA,MACAE,GAAA,MAiPA3C,IACA9rB,OAAAgvB,GACAtmB,OAAAsmB,IA4FAjU,IACA/a,OAAAivB,GACAvmB,OAAAumB,IAKAiB,GAAAxvB,EAAA,SAAAsvC,GACA,GAAAluC,MACAmuC,EAAA,gBACAC,EAAA,OAOA,OANAF,GAAA9vC,MAAA+vC,GAAA9yC,QAAA,SAAAkD,GACA,GAAAA,EAAA,CACA,GAAAysC,GAAAzsC,EAAAH,MAAAgwC,EACApD,GAAAjvC,OAAA,IAAAiE,EAAAgrC,EAAA,GAAA7iB,QAAA6iB,EAAA,GAAA7iB,WAGAnoB,IA4DAquC,GAAA,MACAC,GAAA,iBACAxf,GAAA,SAAArd,EAAAlZ,EAAA+E,GAEA,GAAA+wC,GAAA7sC,KAAAjJ,GACAkZ,EAAAwM,MAAAswB,YAAAh2C,EAAA+E,OACG,IAAAgxC,GAAA9sC,KAAAlE,GACHmU,EAAAwM,MAAAswB,YAAAh2C,EAAA+E,EAAApD,QAAAo0C,GAAA,qBACG,CACH,GAAAE,GAAAC,GAAAl2C,EACA,IAAAoH,MAAAY,QAAAjD,GAIA,OAAArF,GAAA,EAAA+Q,EAAA1L,EAAAvB,OAAuC9D,EAAA+Q,EAAS/Q,IAChDwZ,EAAAwM,MAAAuwB,GAAAlxC,EAAArF,OAGAwZ,GAAAwM,MAAAuwB,GAAAlxC,IAKAoxC,IAAA,qBAGAD,GAAA7vC,EAAA,SAAAqJ,GAGA,GAFAylC,OAAAprB,SAAA5G,cAAA,OAAAuC,MAEA,YADAhW,EAAAjO,GAAAiO,KACAA,IAAAylC,IACA,MAAAzlC,EAGA,QADA0mC,GAAA1mC,EAAAxN,OAAA,GAAAH,cAAA2N,EAAAvN,MAAA,GACAzC,EAAA,EAAiBA,EAAAy2C,GAAA3yC,OAAwB9D,IAAA,CACzC,GAAAM,GAAAm2C,GAAAz2C,GAAA02C,CACA,IAAAp2C,IAAAm1C,IACA,MAAAn1C,MAgDA0lB,IACA/f,OAAAswB,GACA5nB,OAAA4nB,IAKAS,GAAA,MAiFAO,GAAA5wB,EAAA,SAAArG,GACA,OACA05B,WAAA15B,EAAA,SACA25B,aAAA35B,EAAA,YACA45B,iBAAA55B,EAAA,gBACA87B,WAAA97B,EAAA,SACAg8B,aAAAh8B,EAAA,YACA+7B,iBAAA/7B,EAAA,mBAIAq2C,GAAAhlC,KAAAsd,GACAgJ,GAAA,aACAiB,GAAA,YAGAR,GAAA,aACAR,GAAA,gBACAa,GAAA,YACAZ,GAAA,cACAwe,UAEA1yC,KAAAtC,OAAAi1C,qBACA3yC,KAAAtC,OAAAk1C,wBAEAne,GAAA,mBACAR,GAAA,2BAEAj0B,KAAAtC,OAAAm1C,oBACA7yC,KAAAtC,OAAAo1C,uBAEAhe,GAAA,kBACAZ,GAAA,sBAKA,IAAAV,IAAA9lB,GACAhQ,OAAAq1C,sBACAr1C,OAAAq1C,sBAAA1vC,KAAA3F,QACAyV,WACA,SAAAxQ,GAA8C,MAAAA,MAsD9CwyB,GAAA,yBA0XAS,GAAAloB,IACA1L,OAAA22B,GACAqa,SAAAra,GACAx2B,OAAA,SAAAiE,EAAA4xB,IAEA,IAAA5xB,EAAAG,KAAAoxB,KACAI,GAAA3xB,EAAA4xB,GAEAA,SAKAib,IACAtiC,GACAohC,GACAjkB,GACA/Q,GACAgF,GACA6T,IAOAn6B,GAAAw3C,GAAAnpC,OAAAgoC,IAEAoB,GAj7EA,SAAAC,GAgBA,QAAAC,GAAA1sC,GACA,UAAAR,IAAA2rC,EAAAlrB,QAAAjgB,GAAAvI,wBAA2D6B,GAAA0G,GAG3D,QAAA2sC,GAAAC,EAAA5/B,GACA,QAAA7D,KACA,KAAAA,EAAA6D,WACA6/B,EAAAD,GAIA,MADAzjC,GAAA6D,YACA7D,EAGA,QAAA0jC,GAAAh+B,GACA,GAAA3K,GAAAinC,EAAAtsB,WAAAhQ,EAEA5U,GAAAiK,IACAinC,EAAAvqB,YAAA1c,EAAA2K,GAsBA,QAAAi+B,GACAptC,EACAqtC,EACAC,EACAC,EACAC,EACAC,EACA31C,GAYA,GAVAyC,EAAAyF,EAAAM,MAAA/F,EAAAkzC,KAMAztC,EAAAytC,EAAA31C,GAAAiI,EAAAC,IAGAA,EAAA2wB,cAAA6c,GACA7zB,EAAA3Z,EAAAqtC,EAAAC,EAAAC,GAAA,CAIA,GAAAptC,GAAAH,EAAAG,KACAC,EAAAJ,EAAAI,SACAF,EAAAF,EAAAE,GACA3F,GAAA2F,IAeAF,EAAAM,IAAAN,EAAAU,GACA+qC,EAAA/qB,gBAAA1gB,EAAAU,GAAAR,GACAurC,EAAAryB,cAAAlZ,EAAAF,GACA0tC,EAAA1tC,GAIA2tC,EAAA3tC,EAAAI,EAAAitC,GACA9yC,EAAA4F,IACAytC,EAAA5tC,EAAAqtC,GAEApE,EAAAqE,EAAAttC,EAAAM,IAAAitC,IAMK/yC,EAAAwF,EAAAY,YACLZ,EAAAM,IAAAmrC,EAAA3qB,cAAA9gB,EAAAK,MACA4oC,EAAAqE,EAAAttC,EAAAM,IAAAitC,KAEAvtC,EAAAM,IAAAmrC,EAAA5qB,eAAA7gB,EAAAK,MACA4oC,EAAAqE,EAAAttC,EAAAM,IAAAitC,KAIA,QAAA5zB,GAAA3Z,EAAAqtC,EAAAC,EAAAC,GACA,GAAA53C,GAAAqK,EAAAG,IACA,IAAA5F,EAAA5E,GAAA,CACA,GAAAk4C,GAAAtzC,EAAAyF,EAAAgf,oBAAArpB,EAAAkzC,SAQA,IAPAtuC,EAAA5E,IAAAuU,OAAA3P,EAAA5E,IAAAizC,OACAjzC,EAAAqK,GAAA,GAMAzF,EAAAyF,EAAAgf,mBAMA,MALA8uB,GAAA9tC,EAAAqtC,GACApE,EAAAqE,EAAAttC,EAAAM,IAAAitC,GACA/yC,EAAAqzC,IACAE,EAAA/tC,EAAAqtC,EAAAC,EAAAC,IAEA,GAKA,QAAAO,GAAA9tC,EAAAqtC,GACA9yC,EAAAyF,EAAAG,KAAA6tC,iBACAX,EAAA5tC,KAAA3C,MAAAuwC,EAAArtC,EAAAG,KAAA6tC,eACAhuC,EAAAG,KAAA6tC,cAAA,MAEAhuC,EAAAM,IAAAN,EAAAgf,kBAAA3P,IACA4+B,EAAAjuC,IACA4tC,EAAA5tC,EAAAqtC,GACAK,EAAA1tC,KAIAyhB,GAAAzhB,GAEAqtC,EAAA5tC,KAAAO,IAIA,QAAA+tC,GAAA/tC,EAAAqtC,EAAAC,EAAAC,GAOA,IANA,GAAA53C,GAKAu4C,EAAAluC,EACAkuC,EAAAlvB,mBAEA,GADAkvB,IAAAlvB,kBAAAzO,OACAhW,EAAA5E,EAAAu4C,EAAA/tC,OAAA5F,EAAA5E,IAAA65B,YAAA,CACA,IAAA75B,EAAA,EAAmBA,EAAAk0C,EAAA+C,SAAAnzC,SAAyB9D,EAC5Ck0C,EAAA+C,SAAAj3C,GAAAgtB,GAAAurB,EAEAb,GAAA5tC,KAAAyuC,EACA,OAKAjF,EAAAqE,EAAAttC,EAAAM,IAAAitC,GAGA,QAAAtE,GAAAzkC,EAAAlE,EAAA6tC,GACA5zC,EAAAiK,KACAjK,EAAA4zC,GACA1C,EAAAtsB,WAAAgvB,KAAA3pC,GACAinC,EAAA1qB,aAAAvc,EAAAlE,EAAA6tC,GAGA1C,EAAAtqB,YAAA3c,EAAAlE,IAKA,QAAAqtC,GAAA3tC,EAAAI,EAAAitC,GACA,GAAAhwC,MAAAY,QAAAmC,GAIA,OAAAzK,GAAA,EAAqBA,EAAAyK,EAAA3G,SAAqB9D,EAC1Cy3C,EAAAhtC,EAAAzK,GAAA03C,EAAArtC,EAAAM,IAAA,QAAAF,EAAAzK,OAEK+E,GAAAsF,EAAAK,OACLorC,EAAAtqB,YAAAnhB,EAAAM,IAAAmrC,EAAA5qB,eAAA3lB,OAAA8E,EAAAK,QAIA,QAAA4tC,GAAAjuC,GACA,KAAAA,EAAAgf,mBACAhf,IAAAgf,kBAAAzO,MAEA,OAAAhW,GAAAyF,EAAAE,KAGA,QAAA0tC,GAAA5tC,EAAAqtC,GACA,OAAAtO,GAAA,EAAqBA,EAAA8K,EAAAjuC,OAAAnC,SAAyBslC,EAC9C8K,EAAAjuC,OAAAmjC,GAAApc,GAAA3iB,EAEArK,GAAAqK,EAAAG,KAAA+J,KACA3P,EAAA5E,KACA4E,EAAA5E,EAAAiG,SAA4BjG,EAAAiG,OAAA+mB,GAAA3iB,GAC5BzF,EAAA5E,EAAAszC,SAA4BoE,EAAA5tC,KAAAO,IAO5B,QAAA0tC,GAAA1tC,GACA,GAAArK,EACA,IAAA4E,EAAA5E,EAAAqK,EAAAe,WACA0qC,EAAAlqB,cAAAvhB,EAAAM,IAAA3K,OAGA,KADA,GAAAy4C,GAAApuC,EACAouC,GACA7zC,EAAA5E,EAAAy4C,EAAA7tC,UAAAhG,EAAA5E,IAAAyQ,SAAA8S,WACAuyB,EAAAlqB,cAAAvhB,EAAAM,IAAA3K,GAEAy4C,IAAA5pC,MAIAjK,GAAA5E,EAAA4Y,KACA5Y,IAAAqK,EAAAO,SACA5K,IAAAqK,EAAAa,WACAtG,EAAA5E,IAAAyQ,SAAA8S,WAEAuyB,EAAAlqB,cAAAvhB,EAAAM,IAAA3K,GAIA,QAAA04C,GAAAf,EAAAC,EAAA9zB,EAAA60B,EAAAjsB,EAAAgrB,GACA,KAAUiB,GAAAjsB,IAAoBisB,EAC9BlB,EAAA3zB,EAAA60B,GAAAjB,EAAAC,EAAAC,GAAA,EAAA9zB,EAAA60B,GAIA,QAAAC,GAAAvuC,GACA,GAAArK,GAAAub,EACA/Q,EAAAH,EAAAG,IACA,IAAA5F,EAAA4F,GAEA,IADA5F,EAAA5E,EAAAwK,EAAA+J,OAAA3P,EAAA5E,IAAAuzC,UAAyDvzC,EAAAqK,GACzDrK,EAAA,EAAiBA,EAAAk0C,EAAAX,QAAAzvC,SAAwB9D,EAAOk0C,EAAAX,QAAAvzC,GAAAqK,EAEhD,IAAAzF,EAAA5E,EAAAqK,EAAAI,UACA,IAAA8Q,EAAA,EAAiBA,EAAAlR,EAAAI,SAAA3G,SAA2ByX,EAC5Cq9B,EAAAvuC,EAAAI,SAAA8Q,IAKA,QAAAs9B,GAAAlB,EAAA7zB,EAAA60B,EAAAjsB,GACA,KAAUisB,GAAAjsB,IAAoBisB,EAAA,CAC9B,GAAAG,GAAAh1B,EAAA60B,EACA/zC,GAAAk0C,KACAl0C,EAAAk0C,EAAAvuC,MACAwuC,EAAAD,GACAF,EAAAE,IAEAtB,EAAAsB,EAAAnuC,OAMA,QAAAouC,GAAA1uC,EAAA4xB,GACA,GAAAr3B,EAAAq3B,IAAAr3B,EAAAyF,EAAAG,MAAA,CACA,GAAAxK,GACA2X,EAAAu8B,EAAA9tC,OAAAtC,OAAA,CAaA,KAZAc,EAAAq3B,GAGAA,EAAAtkB,aAGAskB,EAAAqb,EAAAjtC,EAAAM,IAAAgN,GAGA/S,EAAA5E,EAAAqK,EAAAgf,oBAAAzkB,EAAA5E,IAAA4a,SAAAhW,EAAA5E,EAAAwK,OACAuuC,EAAA/4C,EAAAi8B,GAEAj8B,EAAA,EAAiBA,EAAAk0C,EAAA9tC,OAAAtC,SAAuB9D,EACxCk0C,EAAA9tC,OAAApG,GAAAqK,EAAA4xB,EAEAr3B,GAAA5E,EAAAqK,EAAAG,KAAA+J,OAAA3P,EAAA5E,IAAAoG,QACApG,EAAAqK,EAAA4xB,GAEAA,QAGAub,GAAAntC,EAAAM,KAIA,QAAAquC,GAAArB,EAAAsB,EAAAC,EAAAxB,EAAAyB,GAoBA,IAnBA,GAQAC,GAAAC,EAAAC,EAAA1B,EARA2B,EAAA,EACAC,EAAA,EACAC,EAAAR,EAAAn1C,OAAA,EACA41C,EAAAT,EAAA,GACAU,EAAAV,EAAAQ,GACAG,EAAAV,EAAAp1C,OAAA,EACA+1C,EAAAX,EAAA,GACAY,EAAAZ,EAAAU,GAMAG,GAAAZ,EAMAI,GAAAE,GAAAD,GAAAI,GACAl1C,EAAAg1C,GACAA,EAAAT,IAAAM,GACO70C,EAAAi1C,GACPA,EAAAV,IAAAQ,GACOttB,GAAAutB,EAAAG,IACPG,EAAAN,EAAAG,EAAAnC,EAAAwB,EAAAM,GACAE,EAAAT,IAAAM,GACAM,EAAAX,IAAAM,IACOrtB,GAAAwtB,EAAAG,IACPE,EAAAL,EAAAG,EAAApC,EAAAwB,EAAAU,GACAD,EAAAV,IAAAQ,GACAK,EAAAZ,IAAAU,IACOztB,GAAAutB,EAAAI,IACPE,EAAAN,EAAAI,EAAApC,EAAAwB,EAAAU,GACAG,GAAAjE,EAAA1qB,aAAAusB,EAAA+B,EAAA/uC,IAAAmrC,EAAArqB,YAAAkuB,EAAAhvC,MACA+uC,EAAAT,IAAAM,GACAO,EAAAZ,IAAAU,IACOztB,GAAAwtB,EAAAE,IACPG,EAAAL,EAAAE,EAAAnC,EAAAwB,EAAAM,GACAO,GAAAjE,EAAA1qB,aAAAusB,EAAAgC,EAAAhvC,IAAA+uC,EAAA/uC,KACAgvC,EAAAV,IAAAQ,GACAI,EAAAX,IAAAM,KAEA90C,EAAA00C,KAAmCA,EAAA5sB,GAAAysB,EAAAM,EAAAE,IACnCJ,EAAAz0C,EAAAi1C,EAAAnzC,KACA0yC,EAAAS,EAAAnzC,KACAuzC,EAAAJ,EAAAZ,EAAAM,EAAAE,GACA/0C,EAAA20C,GACA5B,EAAAoC,EAAAnC,EAAAC,EAAA+B,EAAA/uC,KAAA,EAAAuuC,EAAAM,IAEAF,EAAAL,EAAAI,GACAltB,GAAAmtB,EAAAO,IACAG,EAAAV,EAAAO,EAAAnC,EAAAwB,EAAAM,GACAP,EAAAI,OAAAp1C,GACA81C,GAAAjE,EAAA1qB,aAAAusB,EAAA2B,EAAA3uC,IAAA+uC,EAAA/uC,MAGA8sC,EAAAoC,EAAAnC,EAAAC,EAAA+B,EAAA/uC,KAAA,EAAAuuC,EAAAM,IAGAK,EAAAX,IAAAM,GAGAD,GAAAE,GACA7B,EAAAlzC,EAAAw0C,EAAAU,EAAA,SAAAV,EAAAU,EAAA,GAAAjvC,IACA+tC,EAAAf,EAAAC,EAAAsB,EAAAM,EAAAI,EAAAlC,IACK8B,EAAAI,GACLf,EAAAlB,EAAAsB,EAAAM,EAAAE,GAsBA,QAAAQ,GAAA5kC,EAAA4jC,EAAAzxC,EAAA6wB,GACA,OAAAr4B,GAAAwH,EAAuBxH,EAAAq4B,EAASr4B,IAAA,CAChC,GAAAI,GAAA64C,EAAAj5C,EACA,IAAA4E,EAAAxE,IAAA+rB,GAAA9W,EAAAjV,GAA2C,MAAAJ,IAI3C,QAAAg6C,GACAptB,EACAviB,EACAqtC,EACAI,EACA31C,EACAg3C,GAEA,GAAAvsB,IAAAviB,EAAA,CAIAzF,EAAAyF,EAAAM,MAAA/F,EAAAkzC,KAEAztC,EAAAytC,EAAA31C,GAAAiI,EAAAC,GAGA,IAAAM,GAAAN,EAAAM,IAAAiiB,EAAAjiB,GAEA,IAAA9F,EAAA+nB,EAAAtV,oBAMA,YALA1S,EAAAyF,EAAAS,aAAAyL,UACA2jC,EAAAttB,EAAAjiB,IAAAN,EAAAqtC,GAEArtC,EAAAiN,oBAAA,EASA,IAAAzS,EAAAwF,EAAAW,WACAnG,EAAA+nB,EAAA5hB,WACAX,EAAA3D,MAAAkmB,EAAAlmB,MACA7B,EAAAwF,EAAAiB,WAAAzG,EAAAwF,EAAAsX,SAGA,YADAtX,EAAAgf,kBAAAuD,EAAAvD,kBAIA,IAAArpB,GACAwK,EAAAH,EAAAG,IACA5F,GAAA4F,IAAA5F,EAAA5E,EAAAwK,EAAA+J,OAAA3P,EAAA5E,IAAAozC,WACApzC,EAAA4sB,EAAAviB,EAGA,IAAA4uC,GAAArsB,EAAAniB,SACAquC,EAAAzuC,EAAAI,QACA,IAAA7F,EAAA4F,IAAA8tC,EAAAjuC,GAAA,CACA,IAAArK,EAAA,EAAiBA,EAAAk0C,EAAAvlC,OAAA7K,SAAuB9D,EAAOk0C,EAAAvlC,OAAA3O,GAAA4sB,EAAAviB,EAC/CzF,GAAA5E,EAAAwK,EAAA+J,OAAA3P,EAAA5E,IAAA2O,SAAwD3O,EAAA4sB,EAAAviB,GAExD3F,EAAA2F,EAAAK,MACA9F,EAAAq0C,IAAAr0C,EAAAk0C,GACAG,IAAAH,GAA2BE,EAAAruC,EAAAsuC,EAAAH,EAAApB,EAAAyB,GACpBv0C,EAAAk0C,IAIPl0C,EAAAgoB,EAAAliB,OAAmCorC,EAAApqB,eAAA/gB,EAAA,IACnC+tC,EAAA/tC,EAAA,KAAAmuC,EAAA,EAAAA,EAAAh1C,OAAA,EAAA4zC,IACO9yC,EAAAq0C,GACPJ,EAAAluC,EAAAsuC,EAAA,EAAAA,EAAAn1C,OAAA,GACOc,EAAAgoB,EAAAliB,OACPorC,EAAApqB,eAAA/gB,EAAA,IAEKiiB,EAAAliB,OAAAL,EAAAK,MACLorC,EAAApqB,eAAA/gB,EAAAN,EAAAK,MAEA9F,EAAA4F,IACA5F,EAAA5E,EAAAwK,EAAA+J,OAAA3P,EAAA5E,IAAAm6C,YAA2Dn6C,EAAA4sB,EAAAviB,IAI3D,QAAA+vC,GAAA/vC,EAAAqR,EAAA2+B,GAGA,GAAAx1C,EAAAw1C,IAAAz1C,EAAAyF,EAAAwE,QACAxE,EAAAwE,OAAArE,KAAA6tC,cAAA38B,MAEA,QAAA1b,GAAA,EAAqBA,EAAA0b,EAAA5X,SAAkB9D,EACvC0b,EAAA1b,GAAAwK,KAAA+J,KAAA++B,OAAA53B,EAAA1b,IAaA,QAAAk6C,GAAAvvC,EAAAN,EAAAqtC,EAAA5T,GACA,GAAA9jC,GACAuK,EAAAF,EAAAE,IACAC,EAAAH,EAAAG,KACAC,EAAAJ,EAAAI,QAIA,IAHAq5B,KAAAt5B,KAAAob,IACAvb,EAAAM,MAEA9F,EAAAwF,EAAAY,YAAArG,EAAAyF,EAAAS,cAEA,MADAT,GAAAiN,oBAAA,GACA,CAQA,IAAA1S,EAAA4F,KACA5F,EAAA5E,EAAAwK,EAAA+J,OAAA3P,EAAA5E,IAAAizC,OAAsDjzC,EAAAqK,GAAA,GACtDzF,EAAA5E,EAAAqK,EAAAgf,oBAGA,MADA8uB,GAAA9tC,EAAAqtC,IACA,CAGA,IAAA9yC,EAAA2F,GAAA,CACA,GAAA3F,EAAA6F,GAEA,GAAAE,EAAA2vC,gBAIA,GAAA11C,EAAA5E,EAAAwK,IAAA5F,EAAA5E,IAAAghB,WAAApc,EAAA5E,IAAA0uC,YACA,GAAA1uC,IAAA2K,EAAA+jC,UAWA,aAEW,CAIX,OAFA6L,IAAA,EACA9wB,EAAA9e,EAAA6vC,WACApR,EAAA,EAA6BA,EAAA3+B,EAAA3G,OAAuBslC,IAAA,CACpD,IAAA3f,IAAAywB,EAAAzwB,EAAAhf,EAAA2+B,GAAAsO,EAAA5T,GAAA,CACAyW,GAAA,CACA,OAEA9wB,IAAAgC,YAIA,IAAA8uB,GAAA9wB,EAUA,aAxCAuuB,GAAA3tC,EAAAI,EAAAitC,EA6CA,IAAA9yC,EAAA4F,GAAA,CACA,GAAAiwC,IAAA,CACA,QAAA/zC,KAAA8D,GACA,IAAAkwC,EAAAh0C,GAAA,CACA+zC,GAAA,EACAxC,EAAA5tC,EAAAqtC,EACA,QAGA+C,GAAAjwC,EAAA,OAEAqI,GAAArI,EAAA,YAGKG,GAAAH,OAAAH,EAAAK,OACLC,EAAAH,KAAAH,EAAAK,KAEA,UAxlBA,GAAA1K,GAAAub,EACA24B,KAEAx0C,EAAA03C,EAAA13C,QACAo2C,EAAAsB,EAAAtB,OAEA,KAAA91C,EAAA,EAAaA,EAAAoR,GAAAtN,SAAkB9D,EAE/B,IADAk0C,EAAA9iC,GAAApR,OACAub,EAAA,EAAeA,EAAA7b,EAAAoE,SAAoByX,EACnC3W,EAAAlF,EAAA6b,GAAAnK,GAAApR,MACAk0C,EAAA9iC,GAAApR,IAAA8J,KAAApK,EAAA6b,GAAAnK,GAAApR,IA2CA,IAocA06C,GAAA50C,EAAA,0CA6GA,iBAAA8mB,EAAAviB,EAAAoP,EAAA0/B,GACA,GAAAz0C,EAAA2F,GAEA,YADAzF,EAAAgoB,IAA4BgsB,EAAAhsB,GAI5B,IAAA+tB,IAAA,EACAjD,IAEA,IAAAhzC,EAAAkoB,GAEA+tB,GAAA,EACAlD,EAAAptC,EAAAqtC,OACK,CACL,GAAAkD,GAAAh2C,EAAAgoB,EAAAmN,SACA,KAAA6gB,GAAAzuB,GAAAS,EAAAviB,GAEA2vC,EAAAptB,EAAAviB,EAAAqtC,EAAA,UAAAyB,OACO,CACP,GAAAyB,EAAA,CAQA,GAJA,IAAAhuB,EAAAmN,UAAAnN,EAAAiuB,aAAA3L,MACAtiB,EAAAgC,gBAAAsgB,IACAz1B,GAAA,GAEA5U,EAAA4U,IACAygC,EAAAttB,EAAAviB,EAAAqtC,GAEA,MADA0C,GAAA/vC,EAAAqtC,GAAA,GACA9qB,CAaAA,GAAAyqB,EAAAzqB,GAIA,GAAAkuB,GAAAluB,EAAAjiB,IACAgtC,EAAA7B,EAAAtsB,WAAAsxB,EAcA,IAXArD,EACAptC,EACAqtC,EAIAoD,EAAAnhB,SAAA,KAAAge,EACA7B,EAAArqB,YAAAqvB,IAIAl2C,EAAAyF,EAAAwE,QAGA,IAFA,GAAA4pC,GAAApuC,EAAAwE,OACAksC,EAAAzC,EAAAjuC,GACAouC,GAAA,CACA,OAAAz4C,GAAA,EAA2BA,EAAAk0C,EAAAX,QAAAzvC,SAAwB9D,EACnDk0C,EAAAX,QAAAvzC,GAAAy4C,EAGA,IADAA,EAAA9tC,IAAAN,EAAAM,IACAowC,EAAA,CACA,OAAA3R,GAAA,EAA+BA,EAAA8K,EAAAjuC,OAAAnC,SAAyBslC,EACxD8K,EAAAjuC,OAAAmjC,GAAApc,GAAAyrB,EAKA,IAAAnF,GAAAmF,EAAAjuC,KAAA+J,KAAA++B,MACA,IAAAA,EAAA5+B,OAEA,OAAAsmC,GAAA,EAAiCA,EAAA1H,EAAA9/B,IAAA1P,OAAyBk3C,IAC1D1H,EAAA9/B,IAAAwnC,SAIAlvB,IAAA2sB,EAEAA,KAAA5pC,OAKAjK,EAAA+yC,GACAkB,EAAAlB,GAAA/qB,GAAA,KACShoB,EAAAgoB,EAAAriB,MACTquC,EAAAhsB,IAMA,MADAwtB,GAAA/vC,EAAAqtC,EAAAiD,GACAtwC,EAAAM,OAquDiCmrC,WAAAp2C,YAQjCuvB,KAEA5E,SAAAiF,iBAAA,6BACA,GAAA9V,GAAA6Q,SAAAwL,aACArc,MAAAyhC,QACA1d,GAAA/jB,EAAA,UAKA,IAAA0hC,KACAxtB,SAAA,SAAAlU,EAAAsjB,EAAAzyB,EAAAuiB,GACA,WAAAviB,EAAAE,KAEAqiB,EAAAjiB,MAAAiiB,EAAAjiB,IAAAwwC,UACA9mC,GAAAhK,EAAA,uBACA6wC,GAAAztB,iBAAAjU,EAAAsjB,EAAAzyB,KAGAwyB,GAAArjB,EAAAsjB,EAAAzyB,EAAAO,SAEA4O,EAAA2hC,aAAAn1C,IAAA9F,KAAAsZ,EAAAtL,QAAAgvB,MACK,aAAA7yB,EAAAE,KAAAgiB,GAAA/S,EAAApL,SACLoL,EAAAsc,YAAAgH,EAAAlP,UACAkP,EAAAlP,UAAA0G,OACA9a,EAAA8V,iBAAA,mBAAA+N,IACA7jB,EAAA8V,iBAAA,iBAAAgO,IAKA9jB,EAAA8V,iBAAA,SAAAgO,IAEArO,KACAzV,EAAAyhC,QAAA,MAMAxtB,iBAAA,SAAAjU,EAAAsjB,EAAAzyB,GACA,cAAAA,EAAAE,IAAA,CACAsyB,GAAArjB,EAAAsjB,EAAAzyB,EAAAO,QAKA,IAAAwwC,GAAA5hC,EAAA2hC,UACAE,EAAA7hC,EAAA2hC,aAAAn1C,IAAA9F,KAAAsZ,EAAAtL,QAAAgvB,GACA,IAAAme,EAAA1N,KAAA,SAAAntC,EAAAR,GAA2C,OAAAkI,EAAA1H,EAAA46C,EAAAp7C,MAAyC,EAGpFwZ,EAAAqR,SACAiS,EAAAv4B,MAAAopC,KAAA,SAAAhpC,GAA6C,MAAAy4B,IAAAz4B,EAAA02C,KAC7Cve,EAAAv4B,QAAAu4B,EAAAvP,UAAA6P,GAAAN,EAAAv4B,MAAA82C,KAEA9d,GAAA/jB,EAAA,cAsFAoiB,IACAt0B,KAAA,SAAAkS,EAAAwS,EAAA3hB,GACA,GAAA9F,GAAAynB,EAAAznB,KAEA8F,GAAAszB,GAAAtzB,EACA,IAAAixC,GAAAjxC,EAAAG,MAAAH,EAAAG,KAAAqvB,WACA0hB,EAAA/hC,EAAAgiC,mBACA,SAAAhiC,EAAAwM,MAAAy1B,QAAA,GAAAjiC,EAAAwM,MAAAy1B,OACAl3C,IAAA+2C,GACAjxC,EAAAG,KAAAoxB,MAAA,EACAnC,GAAApvB,EAAA,WACAmP,EAAAwM,MAAAy1B,QAAAF,KAGA/hC,EAAAwM,MAAAy1B,QAAAl3C,EAAAg3C,EAAA,QAIA5sC,OAAA,SAAA6K,EAAAwS,EAAA3hB,GACA,GAAA9F,GAAAynB,EAAAznB,OAIAA,IAHAynB,EAAAuB,WAIAljB,EAAAszB,GAAAtzB,GACAA,EAAAG,MAAAH,EAAAG,KAAAqvB,YAEAxvB,EAAAG,KAAAoxB,MAAA,EACAr3B,EACAk1B,GAAApvB,EAAA,WACAmP,EAAAwM,MAAAy1B,QAAAjiC,EAAAgiC,qBAGAxf,GAAA3xB,EAAA,WACAmP,EAAAwM,MAAAy1B,QAAA,UAIAjiC,EAAAwM,MAAAy1B,QAAAl3C,EAAAiV,EAAAgiC,mBAAA,SAIAE,OAAA,SACAliC,EACAsjB,EACAzyB,EACAuiB,EACAK,GAEAA,IACAzT,EAAAwM,MAAAy1B,QAAAjiC,EAAAgiC,sBAKAG,IACAx3B,MAAA+2B,GACAtf,SAKAggB,IACAt7C,KAAAiF,OACAm1B,OAAAtqB,QACAknB,IAAAlnB,QACAyrC,KAAAt2C,OACA6I,KAAA7I,OACAy0B,WAAAz0B,OACA62B,WAAA72B,OACA00B,aAAA10B,OACA+2B,aAAA/2B,OACA20B,iBAAA30B,OACA82B,iBAAA92B,OACA40B,YAAA50B,OACA80B,kBAAA90B,OACA60B,cAAA70B,OACAs1B,UAAArB,OAAAj0B,OAAA9E,SAkDAq7C,GAAA,SAAA17C,GAAkC,MAAAA,GAAAmK,KAAA+M,GAAAlX,IAElC27C,GAAA,SAAA17C,GAAqC,eAAAA,EAAAC,MAErC07C,IACA17C,KAAA,aACA6N,MAAAytC,GACA9iC,UAAA,EAEAa,OAAA,SAAAskB,GACA,GAAA+W,GAAAzzC,KAEAkJ,EAAAlJ,KAAA0Z,OAAAnZ,OACA,IAAA2I,IAKAA,IAAA2U,OAAA08B,IAEArxC,EAAA3G,QAAA,CAaA,GAAA+3C,GAAAt6C,KAAAs6C,KAYA3d,EAAAzzB,EAAA,EAIA,IAAA0zB,GAAA58B,KAAA2Y,QACA,MAAAgkB,EAKA,IAAApvB,GAAA8uB,GAAAM,EAEA,KAAApvB,EACA,MAAAovB,EAGA,IAAA38B,KAAA06C,SACA,MAAAje,IAAAC,EAAAC,EAMA,IAAA3uB,GAAA,gBAAAhO,KAAA,QACAuN,GAAApI,IAAA,MAAAoI,EAAApI,IACAoI,EAAA7D,UACAsE,EAAA,UACAA,EAAAT,EAAAvE,IACAxF,EAAA+J,EAAApI,KACA,IAAAnB,OAAAuJ,EAAApI,KAAAH,QAAAgJ,GAAAT,EAAApI,IAAA6I,EAAAT,EAAApI,IACAoI,EAAApI,GAEA,IAAA8D,IAAAsE,EAAAtE,OAAAsE,EAAAtE,UAA8CqvB,WAAAiE,GAAAv8B,MAC9C26C,EAAA36C,KAAAqZ,OACAyjB,EAAAT,GAAAse,EAQA,IAJAptC,EAAAtE,KAAAkE,YAAAI,EAAAtE,KAAAkE,WAAAi/B,KAAAoO,MACAjtC,EAAAtE,KAAAoxB,MAAA,GAIAyC,GACAA,EAAA7zB,OACA4zB,GAAAtvB,EAAAuvB,KACA/mB,GAAA+mB,MAEAA,EAAAhV,oBAAAgV,EAAAhV,kBAAAzO,OAAA3P,WACA,CAGA,GAAAukB,GAAA6O,EAAA7zB,KAAAqvB,WAAAlyB,KAAwD6C,EAExD,eAAAqxC,EAOA,MALAt6C,MAAA06C,UAAA,EACA5nC,GAAAmb,EAAA,wBACAwlB,EAAAiH,UAAA,EACAjH,EAAAl+B,iBAEAknB,GAAAC,EAAAC,EACO,eAAA2d,EAAA,CACP,GAAAvkC,GAAAxI,GACA,MAAAotC,EAEA,IAAAC,GACAjgB,EAAA,WAAwCigB,IACxC9nC,IAAA7J,EAAA,aAAA0xB,GACA7nB,GAAA7J,EAAA,iBAAA0xB,GACA7nB,GAAAmb,EAAA,sBAAAwM,GAAgEmgB,EAAAngB,KAIhE,MAAAkC,MAMA/vB,GAAAxG,GACA4C,IAAAhF,OACA62C,UAAA72C,QACCq2C,UAEDztC,IAAA0tC,IAEA,IAAAQ,KACAluC,SAEAmuC,YAAA,WACA,GAAAtH,GAAAzzC,KAEAoN,EAAApN,KAAAuY,OACAvY,MAAAuY,QAAA,SAAAzP,EAAAoP,GACA,GAAA46B,GAAA37B,GAAAs8B,EAEAA,GAAAV,UACAU,EAAAp6B,OACAo6B,EAAAuH,MACA,GACA,GAEAvH,EAAAp6B,OAAAo6B,EAAAuH,KACAlI,IACA1lC,EAAAzO,KAAA80C,EAAA3qC,EAAAoP,KAIAE,OAAA,SAAAskB,GAQA,OAPA1zB,GAAAhJ,KAAAgJ,KAAAhJ,KAAA2Y,OAAA1P,KAAAD,KAAA,OACAvE,EAAAvF,OAAAwF,OAAA,MACAu2C,EAAAj7C,KAAAi7C,aAAAj7C,KAAAkJ,SACAgyC,EAAAl7C,KAAA0Z,OAAAnZ,YACA2I,EAAAlJ,KAAAkJ,YACAiyC,EAAA5e,GAAAv8B,MAEAvB,EAAA,EAAmBA,EAAAy8C,EAAA34C,OAAwB9D,IAAA,CAC3C,GAAAI,GAAAq8C,EAAAz8C,EACA,IAAAI,EAAAmK,IACA,SAAAnK,EAAAsG,KAAA,IAAAnB,OAAAnF,EAAAsG,KAAAH,QAAA,WACAkE,EAAAX,KAAA1J,GACA4F,EAAA5F,EAAAsG,KAAAtG,GACWA,EAAAoK,OAAApK,EAAAoK,UAAuBqvB,WAAA6iB,QASlC,GAAAF,EAAA,CAGA,OAFAD,MACAI,KACAvT,EAAA,EAAuBA,EAAAoT,EAAA14C,OAA2BslC,IAAA,CAClD,GAAAwT,GAAAJ,EAAApT,EACAwT,GAAApyC,KAAAqvB,WAAA6iB,EACAE,EAAApyC,KAAAq0B,IAAA+d,EAAAjyC,IAAA+zB,wBACA14B,EAAA42C,EAAAl2C,KACA61C,EAAAzyC,KAAA8yC,GAEAD,EAAA7yC,KAAA8yC,GAGAr7C,KAAAg7C,KAAAte,EAAA1zB,EAAA,KAAAgyC,GACAh7C,KAAAo7C,UAGA,MAAA1e,GAAA1zB,EAAA,KAAAE,IAGAoyC,QAAA,WACA,GAAApyC,GAAAlJ,KAAAi7C,aACAJ,EAAA76C,KAAA66C,YAAA76C,KAAAjB,MAAA,YACAmK,GAAA3G,QAAAvC,KAAAu7C,QAAAryC,EAAA,GAAAE,IAAAyxC,KAMA3xC,EAAArH,QAAAk7B,IACA7zB,EAAArH,QAAAo7B,IACA/zB,EAAArH,QAAAu7B,IAKAp9B,KAAAw7C,QAAA1yB,SAAA2yB,KAAAC,aAEAxyC,EAAArH,QAAA,SAAAhD,GACA,GAAAA,EAAAoK,KAAA00B,MAAA,CACA,GAAA1lB,GAAApZ,EAAAuK,IACAtJ,EAAAmY,EAAAwM,KACA0R,IAAAle,EAAA4iC,GACA/6C,EAAA89B,UAAA99B,EAAA+9B,gBAAA/9B,EAAAg+B,mBAAA,GACA7lB,EAAA8V,iBAAA4I,GAAA1e,EAAA+kB,QAAA,QAAAhsB,GAAA7Q,GACAA,KAAAkI,SAAA4P,GAGA9X,IAAA,aAAA6H,KAAA7H,EAAAw7C,gBACA1jC,EAAA6V,oBAAA6I,GAAA3lB,GACAiH,EAAA+kB,QAAA,KACA3G,GAAApe,EAAA4iC,WAOAn/B,SACA6/B,QAAA,SAAAtjC,EAAA4iC,GAEA,IAAAzF,GACA,QAGA,IAAAp1C,KAAA47C,SACA,MAAA57C,MAAA47C,QAOA,IAAAp5B,GAAAvK,EAAAs1B,WACAt1B,GAAAmW,oBACAnW,EAAAmW,mBAAAvsB,QAAA,SAAAqsB,GAAsDyH,GAAAnT,EAAA0L,KAEtDqH,GAAA/S,EAAAq4B,GACAr4B,EAAAiC,MAAAy1B,QAAA,OACAl6C,KAAAmY,IAAA8R,YAAAzH,EACA,IAAA7S,GAAA6mB,GAAAhU,EAEA,OADAxiB,MAAAmY,IAAA6R,YAAAxH,GACAxiB,KAAA47C,SAAAjsC,EAAAioB,gBAiCAikB,IACApB,cACAK,mBAMAj1B,IAAA5V,OAAAuP,eACAqG,GAAA5V,OAAAkU,iBACA0B,GAAA5V,OAAAk+B,kBACAtoB,GAAA5V,OAAAiU,mBACA2B,GAAA5V,OAAA2Y,oBAGAxiB,EAAAyf,GAAAlZ,QAAAQ,WAAAitC,IACAh0C,EAAAyf,GAAAlZ,QAAA2Y,WAAAu2B,IAGAh2B,GAAAlmB,UAAAozC,UAAA3iC,GAAAwlC,GAAAnvC,EAGAof,GAAAlmB,UAAAmyC,OAAA,SACA75B,EACAC,GAGA,MADAD,MAAA7H,GAAA6Y,GAAAhR,OAAAvV,GACAsV,GAAAhY,KAAAiY,EAAAC,IAKA9H,IACAyF,WAAA,WACA5F,GAAA8K,UACAA,IACAA,GAAAC,KAAA,OAAA6K,KAuBG,EAKH,IAsIAi2B,IA+UAnZ,GACA3E,GACA+E,GACAC,GACAN,GACAF,GACAK,GACAC,GA+vBAuE,GACAG,GAyhCA0F,GArvEA/O,GAAA,2BACA4d,GAAA,yBAEA7d,GAAA94B,EAAA,SAAA44B,GACA,GAAAge,GAAAhe,EAAA,GAAAt9B,QAAAq7C,GAAA,QACAE,EAAAje,EAAA,GAAAt9B,QAAAq7C,GAAA,OACA,WAAAvb,QAAAwb,EAAA,gBAAAC,EAAA,OA4EAC,IACA3U,YAAA,eACA9I,iBACAE,YAyCAwd,IACA5U,YAAA,eACA9I,cAAAG,GACAD,QAAAG,IAOAsd,IACAC,OAAA,SAAAhd,GAGA,MAFAyc,QAAAhzB,SAAA5G,cAAA,OACA45B,GAAA3O,UAAA9N,EACAyc,GAAA1xB,cAMA2V,GAAAx7B,EACA,6FAMA27B,GAAA37B,EACA,2DAKAu9B,GAAAv9B,EACA,mSAYAq9B,GAAA,4EAGA0a,GAAA,wBACAC,GAAA,OAAAD,GAAA,QAAAA,GAAA,IACA7a,GAAA,GAAAjB,QAAA,KAAA+b,IACA5a,GAAA,aACAhB,GAAA,GAAAH,QAAA,QAAA+b,GAAA,UACAlb,GAAA,qBAEAN,GAAA,SACAG,GAAA,QAGAf,GAAA57B,EAAA,4BACAg8B,MAEApB,IACAqd,OAAO,IACPC,OAAO,IACPC,SAAS,IACTC,QAAQ,IACRC,QAAQ,KACRC,OAAO,MAEP3d,GAAA,wBACAD,GAAA,+BAGA6d,GAAAv4C,EAAA,mBACAq8B,GAAA,SAAA53B,EAAAq2B,GAAqD,MAAAr2B,IAAA8zC,GAAA9zC,IAAA,OAAAq2B,EAAA,IA8PrDgH,GAAA,YACAN,GAAA,YACAb,GAAA,qCACAK,GAAA,iCACAF,GAAA,WAEAkB,GAAA,SACAJ,GAAA,cACAD,GAAA,WAEAzB,GAAAr/B,EAAAg3C,GAAAC,QAonBA7V,GAAA,eACAC,GAAA,UAmGAsW,IACArW,qBAGAsW,IACAd,GACAC,GACAY,IAmBAE,IACAr6B,SACAzZ,QACAk2B,SAKA6d,IACArd,YAAA,EACA1hC,QAAA6+C,GACA7vC,WAAA8vC,GACAra,YACA7C,cACAvgB,eACA0gB,oBACA/b,iBACAD,mBACAqjB,WA17SA,SAAAppC,GACA,MAAAA,GAAAg/C,OAAA,SAAAv7C,EAAAhD,GACA,MAAAgD,GAAA4K,OAAA5N,EAAA2oC,qBACG9a,KAAA,MAu7SHuwB,KAQA1V,GAAAliC,EAAAuiC,IA4HAa,GAAA,4CACAF,GAAA,+FAGAnpB,IACAi+B,IAAA,GACAC,IAAA,EACAnlB,MAAA,GACAolB,MAAA,GACAC,GAAA,GACA/f,KAAA,GACAlN,MAAA,GACAktB,KAAA,GACAzJ,QAAA,OAIA5K,IAEAiU,KAAA,gBACAC,IAAA,MACAnlB,MAAA,QAEAolB,OAAA,gBAEAC,IAAA,gBACA/f,MAAA,oBACAlN,OAAA,sBACAktB,MAAA,oBAEAzJ,QAAA,6BAMApL,GAAA,SAAAhD,GAAqC,YAAAA,EAAA,iBAErC+C,IACA+U,KAAA,4BACAC,QAAA,2BACAC,KAAAhV,GAAA,0CACAiV,KAAAjV,GAAA,mBACAz0B,MAAAy0B,GAAA,oBACAkV,IAAAlV,GAAA,kBACAmV,KAAAnV,GAAA,mBACAnL,KAAAmL,GAAA,6CACApY,OAAAoY,GAAA,6CACArY,MAAAqY,GAAA,8CAiHAoV,IACA1rC,MACAtM,KAAAsjC,GACA2U,MAAAv3C,GASAijC,GAAA,SAAA/8B,GACA3M,KAAA2M,UACA3M,KAAAqwB,KAAA1jB,EAAA0jB,MAAAd,GACAvvB,KAAA+iC,WAAAtT,GAAA9iB,EAAAxO,QAAA,iBACA6B,KAAAkrC,WAAAzb,GAAA9iB,EAAAxO,QAAA,WACA6B,KAAAmN,WAAA/G,OAAoC23C,IAAApxC,EAAAQ,WACpC,IAAAgX,GAAAxX,EAAAwX,eAAA6b,EACAhgC,MAAAsqC,eAAA,SAAAryB,GAAuC,QAAAkM,EAAAlM,EAAAjP,OAAAiP,EAAAtC,YACvC3V,KAAA0qC,OAAA,EACA1qC,KAAAggB,mBACAhgB,KAAAqkB,KAAA,GA2sBA45B,IAnQA,GAAAzd,QAAA,uMAIA57B,MAAA,KAAA6nB,KAAA,kBAGA,GAAA+T,QAAA,2BAEA57B,MAAA,KAAA6nB,KAAA,8CAmMA,SAAAyxB,GACA,gBAAAhB,GACA,QAAArQ,GACAzK,EACAz1B,GAEA,GAAAwxC,GAAAj/C,OAAAwF,OAAAw4C,GACAvQ,KACAyR,IAKA,IAJAD,EAAA9tB,KAAA,SAAAb,EAAA6uB,IACAA,EAAAD,EAAAzR,GAAApkC,KAAAinB,IAGA7iB,EAAA,CAEAA,EAAAxO,UACAggD,EAAAhgD,SACA++C,EAAA/+C,aAAAqO,OAAAG,EAAAxO,UAGAwO,EAAAQ,aACAgxC,EAAAhxC,WAAA/G,EACAlH,OAAAwF,OAAAw4C,EAAA/vC,YAAA,MACAR,EAAAQ,YAIA,QAAAhI,KAAAwH,GACA,YAAAxH,GAAA,eAAAA,IACAg5C,EAAAh5C,GAAAwH,EAAAxH,IAKA,GAAA2nC,GAAAoR,EAAA9b,EAAA+b,EAMA,OAFArR,GAAAH,SACAG,EAAAsR,OACAtR,EAGA,OACAD,UACAyR,mBAAA1R,GAAAC,MAUA,SACAzK,EACAz1B,GAEA,GAAA68B,GAAAhoC,GAAA4gC,EAAAzT,OAAAhiB,IACA,IAAAA,EAAAy6B,UACAA,GAAAoC,EAAA78B,EAEA,IAAAmmB,GAAAyW,GAAAC,EAAA78B,EACA,QACA68B,MACApxB,OAAA0a,EAAA1a,OACA4H,gBAAA8S,EAAA9S,oBAMA0zB,GAAAuK,GAAAf,IAEAoB,IADA5K,GAAA7G,QACA6G,GAAA4K,oBAaAtf,KAAA5uB,IAAA48B,IAAA,GAEAhL,KAAA5xB,IAAA48B,IAAA,GAIAuR,GAAAn5C,EAAA,SAAA4I,GACA,GAAAiK,GAAAgR,GAAAjb,EACA,OAAAiK,MAAAk1B,YAGAqR,GAAA34B,GAAAlmB,UAAAmyC,MACAjsB,IAAAlmB,UAAAmyC,OAAA,SACA75B,EACAC,GAKA,IAHAD,KAAAgR,GAAAhR,MAGA6Q,SAAA2yB,MAAAxjC,IAAA6Q,SAAA21B,gBAIA,MAAAz+C,KAGA,IAAA2M,GAAA3M,KAAAkP,QAEA,KAAAvC,EAAAyL,OAAA,CACA,GAAAgqB,GAAAz1B,EAAAy1B,QACA,IAAAA,EACA,mBAAAA,GACA,MAAAA,EAAAnhC,OAAA,KACAmhC,EAAAmc,GAAAnc,QASO,KAAAA,EAAA5J,SAMP,MAAAx4B,KALAoiC,KAAA+K,cAOKl1B,KACLmqB,EAAAgL,GAAAn1B,GAEA,IAAAmqB,EAAA,CAMA,GAAA3X,GAAA6zB,GAAAlc,GACApD,wBACAgD,+BACAhE,WAAArxB,EAAAqxB,WACAoF,SAAAz2B,EAAAy2B,UACOpjC,MACPoY,EAAAqS,EAAArS,OACA4H,EAAAyK,EAAAzK,eACArT,GAAAyL,SACAzL,EAAAqT,mBASA,MAAAw+B,IAAA7/C,KAAAqB,KAAAiY,EAAAC,IAiBA2N,GAAAgnB,QAAAyR,GAEev7C,EAAA,YJuJcpE,KAAKoE,EAAqB3E,EAAoB,GAAIA,EAAoB,GAAG8E,eAIhG,SAAU1E,EAAQD,EAASH,GAEjC,YKv+VA,SAAAqE,GAAAqR,GACA,GAAA4qC,GAAA5qC,EAAA6qC,YAAA7qC,EAAA8qC,UACAF,MAAAG,YANAtgD,EAAAiB,YAAA,EACAjB,EAAAgC,QAAAkC,EAOAjE,EAAAD,UAAA,SLk/VM,SAAUC,EAAQD,GMv+VxB,QAAAugD,KACA9+C,KAAAkW,QAAAlW,KAAAkW,YACAlW,KAAA++C,cAAA/+C,KAAA++C,mBAAAr8C,GAwQA,QAAAs8C,GAAA9uB,GACA,wBAAAA,GAGA,QAAA+uB,GAAA/uB,GACA,sBAAAA,GAGA,QAAAzsB,GAAAysB,GACA,sBAAAA,IAAA,OAAAA,EAGA,QAAAgvB,GAAAhvB,GACA,gBAAAA,EAnRA1xB,EAAAD,QAAAugD,EAGAA,iBAEAA,EAAAn/C,UAAAuW,YAAAxT,GACAo8C,EAAAn/C,UAAAo/C,kBAAAr8C,GAIAo8C,EAAAK,oBAAA,GAIAL,EAAAn/C,UAAAy/C,gBAAA,SAAA7/C,GACA,IAAA0/C,EAAA1/C,MAAA,GAAA+E,MAAA/E,GACA,KAAA8/C,WAAA,8BAEA,OADAr/C,MAAA++C,cAAAx/C,EACAS,MAGA8+C,EAAAn/C,UAAAqb,KAAA,SAAAnO,GACA,GAAAyyC,GAAAriC,EAAAzN,EAAA4W,EAAA3nB,EAAA2X,CAMA,IAJApW,KAAAkW,UACAlW,KAAAkW,YAGA,UAAArJ,KACA7M,KAAAkW,QAAA3F,OACA9M,EAAAzD,KAAAkW,QAAA3F,SAAAvQ,KAAAkW,QAAA3F,MAAAhO,QAAA,CAEA,IADA+8C,EAAA35C,UAAA,aACA45C,OACA,KAAAD,EAGA,IAAA5vC,GAAA,GAAA6vC,OAAA,yCAAAD,EAAA,IAEA,MADA5vC,GAAArG,QAAAi2C,EACA5vC,EAOA,GAFAuN,EAAAjd,KAAAkW,QAAArJ,GAEAqyC,EAAAjiC,GACA,QAEA,IAAA+hC,EAAA/hC,GACA,OAAAtX,UAAApD,QAEA,OACA0a,EAAAte,KAAAqB,KACA,MACA,QACAid,EAAAte,KAAAqB,KAAA2F,UAAA,GACA,MACA,QACAsX,EAAAte,KAAAqB,KAAA2F,UAAA,GAAAA,UAAA,GACA,MAEA,SACAygB,EAAAjgB,MAAAxG,UAAAuB,MAAAvC,KAAAgH,UAAA,GACAsX,EAAArX,MAAA5F,KAAAomB,OAEG,IAAA3iB,EAAAwZ,GAIH,IAHAmJ,EAAAjgB,MAAAxG,UAAAuB,MAAAvC,KAAAgH,UAAA,GACAyQ,EAAA6G,EAAA/b,QACAsO,EAAA4G,EAAA7T,OACA9D,EAAA,EAAeA,EAAA+Q,EAAS/Q,IACxB2X,EAAA3X,GAAAmH,MAAA5F,KAAAomB,EAGA,WAGA04B,EAAAn/C,UAAA6/C,YAAA,SAAA3yC,EAAA4yC,GACA,GAAA7gD,EAEA,KAAAogD,EAAAS,GACA,KAAAJ,WAAA,8BA2CA,OAzCAr/C,MAAAkW,UACAlW,KAAAkW,YAIAlW,KAAAkW,QAAAwpC,aACA1/C,KAAAgb,KAAA,cAAAnO,EACAmyC,EAAAS,YACAA,cAEAz/C,KAAAkW,QAAArJ,GAGApJ,EAAAzD,KAAAkW,QAAArJ,IAEA7M,KAAAkW,QAAArJ,GAAAtE,KAAAk3C,GAGAz/C,KAAAkW,QAAArJ,IAAA7M,KAAAkW,QAAArJ,GAAA4yC,GANAz/C,KAAAkW,QAAArJ,GAAA4yC,EASAh8C,EAAAzD,KAAAkW,QAAArJ,MAAA7M,KAAAkW,QAAArJ,GAAA8yC,SAIA/gD,EAHAsgD,EAAAl/C,KAAA++C,eAGAD,EAAAK,oBAFAn/C,KAAA++C,gBAKAngD,EAAA,GAAAoB,KAAAkW,QAAArJ,GAAAtK,OAAA3D,IACAoB,KAAAkW,QAAArJ,GAAA8yC,QAAA,EACArvC,QAAAC,MAAA,mIAGAvQ,KAAAkW,QAAArJ,GAAAtK,QACA,kBAAA+N,SAAAsvC,OAEAtvC,QAAAsvC,SAKA5/C,MAGA8+C,EAAAn/C,UAAA0S,GAAAysC,EAAAn/C,UAAA6/C,YAEAV,EAAAn/C,UAAA4H,KAAA,SAAAsF,EAAA4yC,GAMA,QAAA1/C,KACAC,KAAA6/C,eAAAhzC,EAAA9M,GAEA+/C,IACAA,GAAA,EACAL,EAAA75C,MAAA5F,KAAA2F,YAVA,IAAAq5C,EAAAS,GACA,KAAAJ,WAAA,8BAEA,IAAAS,IAAA,CAcA,OAHA//C,GAAA0/C,WACAz/C,KAAAqS,GAAAxF,EAAA9M,GAEAC,MAIA8+C,EAAAn/C,UAAAkgD,eAAA,SAAAhzC,EAAA4yC,GACA,GAAA96C,GAAAo7C,EAAAx9C,EAAA9D,CAEA,KAAAugD,EAAAS,GACA,KAAAJ,WAAA,8BAEA,KAAAr/C,KAAAkW,UAAAlW,KAAAkW,QAAArJ,GACA,MAAA7M,KAMA,IAJA2E,EAAA3E,KAAAkW,QAAArJ,GACAtK,EAAAoC,EAAApC,OACAw9C,GAAA,EAEAp7C,IAAA86C,GACAT,EAAAr6C,EAAA86C,WAAA96C,EAAA86C,mBACAz/C,MAAAkW,QAAArJ,GACA7M,KAAAkW,QAAA2pC,gBACA7/C,KAAAgb,KAAA,iBAAAnO,EAAA4yC,OAEG,IAAAh8C,EAAAkB,GAAA,CACH,IAAAlG,EAAA8D,EAAoB9D,KAAA,GACpB,GAAAkG,EAAAlG,KAAAghD,GACA96C,EAAAlG,GAAAghD,UAAA96C,EAAAlG,GAAAghD,aAAA,CACAM,EAAAthD,CACA,OAIA,GAAAshD,EAAA,EACA,MAAA//C,KAEA,KAAA2E,EAAApC,QACAoC,EAAApC,OAAA,QACAvC,MAAAkW,QAAArJ,IAEAlI,EAAAM,OAAA86C,EAAA,GAGA//C,KAAAkW,QAAA2pC,gBACA7/C,KAAAgb,KAAA,iBAAAnO,EAAA4yC,GAGA,MAAAz/C,OAGA8+C,EAAAn/C,UAAAqgD,mBAAA,SAAAnzC,GACA,GAAA1H,GAAAiR,CAEA,KAAApW,KAAAkW,QACA,MAAAlW,KAGA,KAAAA,KAAAkW,QAAA2pC,eAKA,MAJA,KAAAl6C,UAAApD,OACAvC,KAAAkW,WACAlW,KAAAkW,QAAArJ,UACA7M,MAAAkW,QAAArJ,GACA7M,IAIA,QAAA2F,UAAApD,OAAA,CACA,IAAA4C,IAAAnF,MAAAkW,QACA,mBAAA/Q,GACAnF,KAAAggD,mBAAA76C,EAIA,OAFAnF,MAAAggD,mBAAA,kBACAhgD,KAAAkW,WACAlW,KAKA,GAFAoW,EAAApW,KAAAkW,QAAArJ,GAEAmyC,EAAA5oC,GACApW,KAAA6/C,eAAAhzC,EAAAuJ,OACG,IAAAA,EAEH,KAAAA,EAAA7T,QACAvC,KAAA6/C,eAAAhzC,EAAAuJ,IAAA7T,OAAA,GAIA,cAFAvC,MAAAkW,QAAArJ,GAEA7M,MAGA8+C,EAAAn/C,UAAAyW,UAAA,SAAAvJ,GAQA,MANA7M,MAAAkW,SAAAlW,KAAAkW,QAAArJ,GAEAmyC,EAAAh/C,KAAAkW,QAAArJ,KACA7M,KAAAkW,QAAArJ,IAEA7M,KAAAkW,QAAArJ,GAAA3L,YAIA49C,EAAAn/C,UAAAsgD,cAAA,SAAApzC,GACA,GAAA7M,KAAAkW,QAAA,CACA,GAAAgqC,GAAAlgD,KAAAkW,QAAArJ,EAEA,IAAAmyC,EAAAkB,GACA,QACA,IAAAA,EACA,MAAAA,GAAA39C,OAEA,UAGAu8C,EAAAmB,cAAA,SAAAE,EAAAtzC,GACA,MAAAszC,GAAAF,cAAApzC,KNohWM,SAAUrO,EAAQuE,EAAqB3E,GAE7C,YO1qWA,IAAAgiD,GAAAhgD,OAAAigD,WACAC,EAAAlgD,OAAAmgD,WAGAx9C,GAAA,GACAhE,KAAA,MACAkK,KAFA,WAGA,OACAu3C,WACAJ,QACAE,UAEAG,MAAA,IAEAC,SAAA,IACAC,OAAA,IACAC,WAAA,IACAC,UAAA,IACAC,KAAA,IACAC,OAAA,GACAC,SACAC,KAAA,KAKA3N,QAAA,WAGA,OAAA70C,GAAA,EAAAA,EAAA,GAAAA,IAIAuB,KAAAghD,MAAAz4C,KAAA,KAAA9J,MPuzWM,SAAUD,EAAQuE,EAAqB3E,GAE7C,YQl+WAc,QAAAC,eAAA4D,EAAA,cAAAC,OAAA,OAAAk+C,GAAA9iD,EAAA,GAAA+iD,EAAA/iD,EAAA,IAAAgjD,EAAAhjD,EAAAmB,EAAA4hD,GAAAE,EAAAjjD,EAAA,GAKAynB,WAAIG,IAAIs7B,KAER,GAAIz7B,YACF5N,GAAI,OACJG,OAAQ,SAAAskB,GAAA,MAAKA,GAAE6kB,SR8+WX,SAAU/iD,EAAQD,EAASH,ISv/WjC,SAAA6E,GAoBA,QAAAu+C,GAAAxzC,EAAAyzC,GACAzhD,KAAA0hD,IAAA1zC,EACAhO,KAAA2hD,SAAAF,EAtBA,GAAAG,OAAA,KAAA3+C,MACA,mBAAA06C,aACAv9C,OACAwF,EAAA3F,SAAAN,UAAAiG,KAIArH,GAAAsX,WAAA,WACA,UAAA2rC,GAAA57C,EAAAjH,KAAAkX,WAAA+rC,EAAAj8C,WAAAk8C,eAEAtjD,EAAAujD,YAAA,WACA,UAAAN,GAAA57C,EAAAjH,KAAAmjD,YAAAF,EAAAj8C,WAAAo8C,gBAEAxjD,EAAAsjD,aACAtjD,EAAAwjD,cAAA,SAAAjsC,GACAA,GACAA,EAAAmmC,SAQAuF,EAAA7hD,UAAAqiD,MAAAR,EAAA7hD,UAAA8qB,IAAA,aACA+2B,EAAA7hD,UAAAs8C,MAAA,WACAj8C,KAAA2hD,SAAAhjD,KAAAijD,EAAA5hD,KAAA0hD,MAIAnjD,EAAA0jD,OAAA,SAAAl9C,EAAAm9C,GACAL,aAAA98C,EAAAo9C,gBACAp9C,EAAAq9C,aAAAF,GAGA3jD,EAAA8jD,SAAA,SAAAt9C,GACA88C,aAAA98C,EAAAo9C,gBACAp9C,EAAAq9C,cAAA,GAGA7jD,EAAA+jD,aAAA/jD,EAAA2yC,OAAA,SAAAnsC,GACA88C,aAAA98C,EAAAo9C,eAEA,IAAAD,GAAAn9C,EAAAq9C,YACAF,IAAA,IACAn9C,EAAAo9C,eAAAtsC,WAAA,WACA9Q,EAAAw9C,YACAx9C,EAAAw9C,cACKL,KAKL9jD,EAAQ,GAIRG,EAAA2E,aAAA,mBAAAy6C,YAAAz6C,kBACA,KAAAD,KAAAC,cACAlD,WAAAkD,aACA3E,EAAAikD,eAAA,mBAAA7E,YAAA6E,oBACA,KAAAv/C,KAAAu/C,gBACAxiD,WAAAwiD,iBT2/W6B7jD,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQD,EAASH,IU7jXjC,SAAA6E,EAAAw/C,IAAA,SAAAx/C,EAAAP,GACA,YAYA,SAAAQ,GAAAygB,GAEA,kBAAAA,KACAA,EAAA,GAAA1jB,UAAA,GAAA0jB,GAIA,QADAyC,GAAA,GAAAjgB,OAAAR,UAAApD,OAAA,GACA9D,EAAA,EAAqBA,EAAA2nB,EAAA7jB,OAAiB9D,IACtC2nB,EAAA3nB,GAAAkH,UAAAlH,EAAA,EAGA,IAAAikD,IAAkB/+B,WAAAyC,OAGlB,OAFAu8B,GAAAC,GAAAF,EACAG,EAAAD,GACAA,IAGA,QAAAJ,GAAAM,SACAH,GAAAG,GAGA,QAAApoC,GAAAgoC,GACA,GAAA/+B,GAAA++B,EAAA/+B,SACAyC,EAAAs8B,EAAAt8B,IACA,QAAAA,EAAA7jB,QACA,OACAohB,GACA,MACA,QACAA,EAAAyC,EAAA,GACA,MACA,QACAzC,EAAAyC,EAAA,GAAAA,EAAA,GACA,MACA,QACAzC,EAAAyC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACAzC,EAAA/d,MAAAlD,EAAA0jB,IAKA,QAAA28B,GAAAD,GAGA,GAAAE,EAGAntC,WAAAktC,EAAA,EAAAD,OACS,CACT,GAAAJ,GAAAC,EAAAG,EACA,IAAAJ,EAAA,CACAM,GAAA,CACA,KACAtoC,EAAAgoC,GACiB,QACjBF,EAAAM,GACAE,GAAA,KApEA,IAAA//C,EAAAC,aAAA,CAIA,GAIA2/C,GAJAD,EAAA,EACAD,KACAK,GAAA,EACAC,EAAAhgD,EAAA6lB,SAoJAo6B,EAAAhkD,OAAAikD,gBAAAjkD,OAAAikD,eAAAlgD,EACAigD,QAAArtC,WAAAqtC,EAAAjgD,EAGU,wBAAAmB,SAAAzF,KAAAsE,EAAAw/C,SArFV,WACAI,EAAA,SAAAC,GACAL,EAAA1xC,SAAA,WAA0CgyC,EAAAD,SAI1C,WAGA,GAAA7/C,EAAA2tC,cAAA3tC,EAAAmgD,cAAA,CACA,GAAAC,IAAA,EACAC,EAAArgD,EAAA0tC,SAMA,OALA1tC,GAAA0tC,UAAA,WACA0S,GAAA,GAEApgD,EAAA2tC,YAAA,QACA3tC,EAAA0tC,UAAA2S,EACAD,MAIA,WAKA,GAAAE,GAAA,gBAAAt/C,KAAAu/C,SAAA,IACAC,EAAA,SAAA/wC,GACAA,EAAAqL,SAAA9a,GACA,gBAAAyP,GAAAzJ,MACA,IAAAyJ,EAAAzJ,KAAAjE,QAAAu+C,IACAR,GAAArwC,EAAAzJ,KAAA/H,MAAAqiD,EAAAhhD,SAIAU,GAAA8qB,iBACA9qB,EAAA8qB,iBAAA,UAAA01B,GAAA,GAEAxgD,EAAAygD,YAAA,YAAAD,GAGAZ,EAAA,SAAAC,GACA7/C,EAAA2tC,YAAA2S,EAAAT,EAAA,SAmDK7/C,EAAAqtC,eA/CL,WACA,GAAAC,GAAA,GAAAD,eACAC,GAAAG,MAAAC,UAAA,SAAAj+B,GAEAqwC,EADArwC,EAAAzJ,OAIA45C,EAAA,SAAAC,GACAvS,EAAAE,MAAAG,YAAAkS,OA2CKG,GAAA,sBAAAA,GAAA/gC,cAAA,UAvCL,WACA,GAAAmd,GAAA4jB,EAAAxE,eACAoE,GAAA,SAAAC,GAGA,GAAAa,GAAAV,EAAA/gC,cAAA,SACAyhC,GAAAC,mBAAA,WACAb,EAAAD,GACAa,EAAAC,mBAAA,KACAvkB,EAAArV,YAAA25B,GACAA,EAAA,MAEAtkB,EAAApV,YAAA05B,OAIA,WACAd,EAAA,SAAAC,GACAjtC,WAAAktC,EAAA,EAAAD,OA8BAI,EAAAhgD,eACAggD,EAAAV,mBACC,mBAAA7E,UAAA,KAAA16C,EAAAjD,KAAAiD,EAAA06C,QVikX4Bh/C,KAAKJ,EAASH,EAAoB,GAAIA,EAAoB,KAIjF,SAAUI,EAAQD,GWnvXxB,QAAAslD,KACA,SAAAtE,OAAA,mCAEA,QAAAuE,KACA,SAAAvE,OAAA,qCAsBA,QAAAwE,GAAAC,GACA,GAAAC,IAAApuC,WAEA,MAAAA,YAAAmuC,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAApuC,WAEA,MADAouC,GAAApuC,WACAA,WAAAmuC,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAA7jD,GACL,IAEA,MAAA8jD,GAAAtlD,KAAA,KAAAqlD,EAAA,GACS,MAAA7jD,GAET,MAAA8jD,GAAAtlD,KAAAqB,KAAAgkD,EAAA,KAMA,QAAAE,GAAAC,GACA,GAAAC,IAAAvC,aAEA,MAAAA,cAAAsC,EAGA,KAAAC,IAAAN,IAAAM,IAAAvC,aAEA,MADAuC,GAAAvC,aACAA,aAAAsC,EAEA,KAEA,MAAAC,GAAAD,GACK,MAAAhkD,GACL,IAEA,MAAAikD,GAAAzlD,KAAA,KAAAwlD,GACS,MAAAhkD,GAGT,MAAAikD,GAAAzlD,KAAAqB,KAAAmkD,KAYA,QAAAE,KACAC,GAAAC,IAGAD,GAAA,EACAC,EAAAhiD,OACA4X,EAAAoqC,EAAA/3C,OAAA2N,GAEAqqC,GAAA,EAEArqC,EAAA5X,QACAkiD,KAIA,QAAAA,KACA,IAAAH,EAAA,CAGA,GAAAxuC,GAAAiuC,EAAAM,EACAC,IAAA,CAGA,KADA,GAAA90C,GAAA2K,EAAA5X,OACAiN,GAAA,CAGA,IAFA+0C,EAAApqC,EACAA,OACAqqC,EAAAh1C,GACA+0C,GACAA,EAAAC,GAAA9pC,KAGA8pC,IAAA,EACAh1C,EAAA2K,EAAA5X,OAEAgiD,EAAA,KACAD,GAAA,EACAJ,EAAApuC,IAiBA,QAAA4uC,GAAAV,EAAAW,GACA3kD,KAAAgkD,MACAhkD,KAAA2kD,QAYA,QAAAl+C,MAhKA,GAOAw9C,GACAG,EARA3B,EAAAjkD,EAAAD,YAgBA,WACA,IAEA0lD,EADA,kBAAApuC,YACAA,WAEAguC,EAEK,MAAA1jD,GACL8jD,EAAAJ,EAEA,IAEAO,EADA,kBAAAvC,cACAA,aAEAiC,EAEK,MAAA3jD,GACLikD,EAAAN,KAuDA,IAEAS,GAFApqC,KACAmqC,GAAA,EAEAE,GAAA,CAyCA/B,GAAA1xC,SAAA,SAAAizC,GACA,GAAA59B,GAAA,GAAAjgB,OAAAR,UAAApD,OAAA,EACA,IAAAoD,UAAApD,OAAA,EACA,OAAA9D,GAAA,EAAuBA,EAAAkH,UAAApD,OAAsB9D,IAC7C2nB,EAAA3nB,EAAA,GAAAkH,UAAAlH,EAGA0b,GAAA5R,KAAA,GAAAm8C,GAAAV,EAAA59B,IACA,IAAAjM,EAAA5X,QAAA+hD,GACAP,EAAAU,IASAC,EAAA/kD,UAAA+a,IAAA,WACA1a,KAAAgkD,IAAAp+C,MAAA,KAAA5F,KAAA2kD,QAEAlC,EAAAhC,MAAA,UACAgC,EAAAmC,SAAA,EACAnC,EAAAzT,OACAyT,EAAAoC,QACApC,EAAAxO,QAAA,GACAwO,EAAAqC,YAIArC,EAAApwC,GAAA5L,EACAg8C,EAAAjD,YAAA/4C,EACAg8C,EAAAl7C,KAAAd,EACAg8C,EAAAsC,IAAAt+C,EACAg8C,EAAA5C,eAAAp5C,EACAg8C,EAAAzC,mBAAAv5C,EACAg8C,EAAAznC,KAAAvU,EACAg8C,EAAAuC,gBAAAv+C,EACAg8C,EAAAwC,oBAAAx+C,EAEAg8C,EAAArsC,UAAA,SAAArX,GAAqC,UAErC0jD,EAAAlnB,QAAA,SAAAx8B,GACA,SAAAwgD,OAAA,qCAGAkD,EAAAyC,IAAA,WAA2B,WAC3BzC,EAAA0C,MAAA,SAAA55B,GACA,SAAAg0B,OAAA,mCAEAkD,EAAA2C,MAAA,WAA4B,WXqwXtB,SAAU5mD,EAAQD,EAASH,GAEjC,YY96XA,SAAAiC,GAAAC,GAAsC,MAAAA,MAAAd,WAAAc,GAAuCC,QAAAD,GAd7E/B,EAAAiB,YAAA,CAEA,IAAA6lD,GAAAnmD,OAAAomD,QAAA,SAAAj9C,GAAmD,OAAA5J,GAAA,EAAgBA,EAAAkH,UAAApD,OAAsB9D,IAAA,CAAO,GAAAsf,GAAApY,UAAAlH,EAA2B,QAAA0G,KAAA4Y,GAA0B7e,OAAAS,UAAAC,eAAAjB,KAAAof,EAAA5Y,KAAyDkD,EAAAlD,GAAA4Y,EAAA5Y,IAAiC,MAAAkD,IAE/Ok9C,EAAannD,EAAQ,IAErBonD,EAAAnlD,EAAAklD,GAEAE,EAAiBrnD,EAAQ,IAEzBsnD,EAAArlD,EAAAolD,GAEAE,EAAavnD,EAAQ,EAIrB,oBAAAgC,gBAAAwlD,OACExnD,EAAQ,GAGV,IAAAynD,IAAA,iMACAvgC,GACAwgC,MAAAN,EAAAjlD,QAGAslD,GAAAhkD,QAAA,SAAAkkD,GACAzgC,EAAAygC,IAAA,EAAAL,EAAAnlD,YAGA,IAAA+gD,GAAA+D,KAA0B//B,GAC1BgB,QAAA,SAAAT,GACA,MAAA3mB,QAAA0C,KAAA0jB,GAAAzjB,QAAA,SAAAmkD,GACAngC,EAAAlQ,UAAA,GAAAgwC,EAAAtkD,gBAAA2kD,EAAA1gC,EAAA0gC,QAKAznD,GAAAgC,QAAA+gD,EAGA,mBAAAlhD,gBAAAylB,KACAzlB,OAAAylB,IAAAG,IAAAs7B,GAEA9iD,EAAAD,UAAA,SZm8XM,SAAUC,EAAQD,EAASH,GAEjC,Yap+XA,SAAA6nD,GAAAjkD,EAAAkkD,GAAiD,KAAAlkD,YAAAkkD,IAA0C,SAAA7G,WAAA,qCAE3F,QAAA8G,GAAAxI,EAAAh/C,GAAiD,IAAAg/C,EAAa,SAAAyI,gBAAA,4DAAyF,QAAAznD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAg/C,EAAAh/C,EAEvJ,QAAA0nD,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAlH,WAAA,iEAAAkH,GAAuGD,GAAA3mD,UAAAT,OAAAwF,OAAA6hD,KAAA5mD,WAAyEmlB,aAAe9hB,MAAAsjD,EAAAjnD,YAAA,EAAAuI,UAAA,EAAAxI,cAAA,KAA6EmnD,IAAArnD,OAAAsnD,eAAAtnD,OAAAsnD,eAAAF,EAAAC,GAAAD,EAAAl8C,UAAAm8C,GAhBrXhoD,EAAAiB,YAAA,CAEA,IAAA6lD,GAAAnmD,OAAAomD,QAAA,SAAAj9C,GAAmD,OAAA5J,GAAA,EAAgBA,EAAAkH,UAAApD,OAAsB9D,IAAA,CAAO,GAAAsf,GAAApY,UAAAlH,EAA2B,QAAA0G,KAAA4Y,GAA0B7e,OAAAS,UAAAC,eAAAjB,KAAAof,EAAA5Y,KAAyDkD,EAAAlD,GAAA4Y,EAAA5Y,IAAiC,MAAAkD,IAE/Oo+C,EAAWroD,EAAQ,GAEnBsoD,EAIA,SAAApmD,GAAsC,MAAAA,MAAAd,WAAAc,GAAuCC,QAAAD,IAJ7EmmD,GAEAd,EAAavnD,EAAQ,GAUrB0gD,EAAmB1gD,EAAQ,GAE3B8D,EAAA,SAAAykD,GAGA,QAAAzkD,KAGA,MAFA+jD,GAAAjmD,KAAAkC,GAEAikD,EAAAnmD,KAAA2mD,EAAA/gD,MAAA5F,KAAA2F,YAGA,MARA0gD,GAAAnkD,EAAAykD,GAQAzkD,GACC48C,GAED8H,IAEAroD,GAAAgC,QAAAmmD,EAAAnmD,QAAAoV,UAAA,WACAyC,OAAA,SAAA8J,GACA,MAAAA,GAAA,OAAAliB,KAAAiQ,OAAAjQ,KAAA0Z,OAAAnZ,WAEAqM,OACAqD,QACApD,KAAA3N,OACAqB,QAAA,WACA,YAIA0I,KAAA,WACA,OACA49C,YAGAvT,QAAA,WACAtzC,KAAAkC,aAAA,GAAAA,GACAlC,KAAAkC,aAAAk9C,gBAAA,GACAp/C,KAAA6mD,WAEArT,QAAA,WACAxzC,KAAA6mD,OAAA,GAAAzmD,QAAAwlD,MAAAE,OACA1F,MAAApgD,KAAAiQ,OAAAmwC,MACAE,OAAAtgD,KAAAiQ,OAAAqwC,OACAhT,UAAAttC,KAAAmY,MAEAnY,KAAAkC,aAAA8Y,KAAA,UAAAhb,KAAA6mD,QACA7mD,KAAA8mD,eAEAxL,QAAA,WACAt7C,KAAA8mD,eAEAC,cAAA,WACA/mD,KAAA6mD,OAAA7U,WAGAt2B,SACArZ,QAAA,WACA,MAAArC,MAAA6mD,QAEAjI,SAAA,WACA,MAAA5+C,MAAA6mD,QAEAC,YAAA,WACA,GAAAl6C,GAAAy4C,KAA6BrlD,KAAAiQ,QAAA,EAAA01C,EAAAjkD,gBAAA1B,KAAAuZ,cAC7B,EAAAosC,EAAAnjD,gBAAAxC,KAAA4M,EAAAg6C,GACAA,EAAAh6C,MAIApO,EAAAD,UAAA,Sbu/XM,SAAUC,EAAQD,EAASH,GAEjC,YclkYA,SAAAoE,GAAAwkD,GACA,GAAAp6C,GAAAjH,UAAApD,OAAA,OAAAG,KAAAiD,UAAA,GAAAA,UAAA,MACAiuB,EAAAjuB,UAAApD,OAAA,OAAAG,KAAAiD,UAAA,GAAAA,UAAA,KAEA,UAAAiH,GAAA,CAEA0D,QAAA+f,KADA,8KAGA,GAAAruB,GAAAglD,EAAAH,OACAI,KACAC,GAAA,CACA,QAAA/hD,KAAAyuB,GACA,IAAAuzB,EAAAhiD,GAAA,CAGA,GAAAiiD,GAAA,OAAAjiD,EAAAjE,MAAA,KACAmmD,EAAAzzB,EAAAzuB,KAAAyH,EAAAzH,EACA,IAAAiiD,GAAAC,EAAA,CACA,GAAAvlD,GAAAqD,EAAAmiD,OAAA,GAAAzmD,aACA,aAAAiB,EAAAwlD,OAAA,OACAxlD,EAAA,UAAAA,EAAAwlD,OAAA,KAAAxmD,cAAAgB,EAAAwlD,OAAA,IAEAtlD,EAAA+iD,IAAAjjD,EAAAylD,EAAA3zB,EAAAzuB,IAEA,GAAAqiD,IAAA56C,EAAAhN,eAAAuF,EACAqiD,IACAxlD,EAAA6qB,QAAA1nB,MAAAzC,IAGA,OAAA+kD,KAAA76C,GACA,IAAAu6C,EAAAM,GAAA,CAGA,GAAAC,GAAA,OAAAD,EAAAvmD,MAAA,KACAymD,EAAA/zB,EAAA6zB,KAAA76C,EAAA66C,EACA,IAAAC,GAAAC,EAAA,CACA,GAAAC,GAAAH,EAAAH,OAAA,GAAAzmD,aACA,aAAA+mD,EAAAN,OAAA,OACAM,EAAA,UAAAA,EAAAN,OAAA,KAAAxmD,cAAA8mD,EAAAN,OAAA,IAEA16C,EAAA66C,KACAzlD,EAAA+iD,IAAA6C,EAAAL,GACAvlD,EAAAqQ,GAAAu1C,EAAAL,EAAA36C,EAAA66C,KAGAC,GAAA96C,EAAA66C,KAAA7zB,EAAA6zB,KACAP,GAAA,EACAD,EAAAQ,GAAA76C,EAAA66C,IAIAP,IACAllD,EAAA6lD,SAAAZ,IACA,EAAArkD,EAAArC,SAAAyB,IAlEAzD,EAAAiB,YAAA,EACAjB,EAAAgC,QAAAiC,CAEA,IAAAG,GAAqBvE,EAAQ,GAE7BwE,EAEA,SAAAtC,GAAsC,MAAAA,MAAAd,WAAAc,GAAuCC,QAAAD,IAF7EqC,GAIAwkD,GAAmBhiD,KAAA,EAAAsf,OAAA,EAAArb,KAAA,EAAAqwB,cAAA,GAEnB8tB,EAAA,kBAqEA/oD,GAAAD,UAAA,SdslYM,SAAUC,EAAQD,EAASH,GAEjC,Ye/hYA,SAAA6nD,GAAAjkD,EAAAkkD,GAAiD,KAAAlkD,YAAAkkD,IAA0C,SAAA7G,WAAA,qCAE3F,QAAA8G,GAAAxI,EAAAh/C,GAAiD,IAAAg/C,EAAa,SAAAyI,gBAAA,4DAAyF,QAAAznD,GAAA,gBAAAA,IAAA,kBAAAA,GAAAg/C,EAAAh/C,EAEvJ,QAAA0nD,GAAAC,EAAAC,GAA0C,qBAAAA,IAAA,OAAAA,EAA+D,SAAAlH,WAAA,iEAAAkH,GAAuGD,GAAA3mD,UAAAT,OAAAwF,OAAA6hD,KAAA5mD,WAAyEmlB,aAAe9hB,MAAAsjD,EAAAjnD,YAAA,EAAAuI,UAAA,EAAAxI,cAAA,KAA6EmnD,IAAArnD,OAAAsnD,eAAAtnD,OAAAsnD,eAAAF,EAAAC,GAAAD,EAAAl8C,UAAAm8C,GA7IrXhoD,EAAAiB,YAAA,CAEA,IAAA6lD,GAAAnmD,OAAAomD,QAAA,SAAAj9C,GAAmD,OAAA5J,GAAA,EAAgBA,EAAAkH,UAAApD,OAAsB9D,IAAA,CAAO,GAAAsf,GAAApY,UAAAlH,EAA2B,QAAA0G,KAAA4Y,GAA0B7e,OAAAS,UAAAC,eAAAjB,KAAAof,EAAA5Y,KAAyDkD,EAAAlD,GAAA4Y,EAAA5Y,IAAiC,MAAAkD,GAE/O9J,GAAAgC,QAAA,WACA,GAAA2B,GAAA,SAAAykD,GAGA,QAAAzkD,KAGA,MAFA+jD,GAAAjmD,KAAAkC,GAEAikD,EAAAnmD,KAAA2mD,EAAA/gD,MAAA5F,KAAA2F,YAGA,MARA0gD,GAAAnkD,EAAAykD,GAQAzkD,GACG48C,EAEH,QACA1mC,OAAA,SAAA8J,GACA,MAAAA,GAAA,OAAAliB,KAAAiQ,OAAAjQ,KAAA0Z,OAAAnZ,WAGAyb,OAOA/L,QACAgN,QAAA,SAAAnZ,GACA9D,KAAA8mD,eAGA9V,MAAA,IAGApkC,OACAqD,QACApD,KAAA3N,OACAqB,QAAA,WACA,YAIA+yC,QAAA,WACAtzC,KAAAkC,aAAA,GAAAA,GACAlC,KAAAkC,aAAAk9C,gBAAA,GACAp/C,KAAA6mD,UACA7mD,KAAA8nD,gBACA9nD,KAAAjB,KAAAiB,KAAAkP,SAAA8V,eAEAwuB,QAAA,WACA,GAAAuU,GAAA/nD,KAEAgoD,GAAA,EAAArC,EAAA5jD,iBAAA/B,MACA8nD,EAAAE,EAAAnB,MAEAiB,IAAA5oD,OAAA0C,KAAAkmD,GAAAvlD,QACAvC,KAAAioD,UAAAH,GAEAE,EAAA9lD,aAAAmQ,GAAA,mBAAA61C,GACAH,EAAAE,UAAAC,MAGA5M,QAAA,WACA,GAAA6M,GAAAnoD,IAEAA,MAAA8mD,cAIA9mD,KAAAsC,UAAAT,QAAA,SAAA8T,GACA,GAAA7M,GAAA6M,EAAAgD,OACA/X,EAAAunD,EAAAxvC,OAAArP,iBAAAJ,SAAAlE,QAAA8D,IACA,EAAA68C,EAAAvjD,eAAAuT,GACAyyC,UAAAxnD,MAGA2yC,UAAA,YACA,EAAAoS,EAAAljD,eAAAzC,KAAA6mD,QACA7mD,KAAA6mD,OAAA7U,UACAhyC,KAAA6mD,OAAA9B,IAAAwC,IAGA7rC,SACArZ,QAAA,WACA,MAAArC,MAAA6mD,QAEAjI,SAAA,WACA,MAAA5+C,MAAA6mD,QAEAoB,UAAA,SAAAC,GACA,GAAA97C,GAAApM,KACAqpB,EAAArpB,KAAAjB,KACAspD,GAAA,EAAA1C,EAAAxkD,SAAAkoB,GACAi/B,EAAAloD,OAAAwlD,MAAAyC,EAEA,KAAAC,EAEA,WADAh4C,SAAAC,MAAA,sCAAA83C,EAIAroD,MAAA6mD,OAAA,GAAAyB,GACAtoD,KAAA6mD,OAAA0B,aAAAvoD,IACA,IAAAwoD,GAAAxoD,KAAA6mD,OAAAxgD,GAAAN,KAAA/F,KAAA6mD,OAEA7mD,MAAA6mD,OAAAxgD,GAAA,SAAAoiD,GACAD,EAAAC,GACA5yC,WAAA,WACA3W,OAAA0C,KAAAwK,EAAAy6C,OAAAxzC,OAAAxR,QAAA,SAAAsD,GACA,kBAAAiH,GAAAy6C,OAAAxzC,MAAAlO,KACAiH,EAAA6D,OAAA9K,GAAAiH,EAAAy6C,OAAAxzC,MAAAlO,OAGW,MAGXnF,KAAA8mD,cACA9mD,KAAAkC,aAAA8Y,KAAA,UAAAhb,KAAA6mD,QAEAqB,EAAAn2C,IAAA/R,KAAA6mD,SAEA,EAAAlB,EAAAljD,eAAAylD,IAEApB,YAAA,WACA,GAAAlzB,GAAA5zB,KAAA4zB,aACAhnB,EAAAy4C,KAA+BrlD,KAAAsZ,OAAAtZ,KAAAiQ,QAAA,EAAA01C,EAAAjkD,gBAAA1B,KAAAuZ,cAC/B,EAAAosC,EAAAnjD,gBAAAxC,KAAA4M,EAAAgnB,GACA5zB,KAAA4zB,SAAAhnB,KAMA,IAAA+4C,GAAavnD,EAAQ,GAQrB0gD,EAAmB1gD,EAAQ,GAE3BmpD,EAAA,kBAEA/oD,GAAAD,UAAA,Sf+qYM,SAAUC,EAAQD,EAASH,IgBp0YjC,SAAA6E;;;;;;;;;;;CAaA,WACA,YAKA,IAAAylD,GAAAzkD,KAAA0kD,GAAA,IAEA/C,GAEA3R,QAAA,QAGA2U,UACAC,UAAA,EACAC,OACAC,SACAC,UACAC,gBAAA,EACAC,kBAAA,EAEAC,UACA,mBAAA/oD,UAES,uBAAAgE,SAAAzF,KAAAyB,SAEC,uBAAAgE,SAAAzF,KAAAyB,SAEVgpD,aAAA,UAAAphD,KAAA,cAKAqhD,aAAA,EACAC,YAAA,IACAC,eAAA,IAUAC,eAAA9mD,GAUA+mD,aAAA,EAWAC,UAAA,EASAC,cAAA,EAMAC,WAOAC,WAAA,WACA,GAAAC,GAAAlE,EAAAmE,EAIA,SAAAD,GACAA,EAAAD,YAUAG,YAAA,WACA,GAAAF,GAAAlE,EAAAmE,EAIA,SAAAD,KACAA,EAAAh2C,MAIAm2C,OAAA,SAAAn2C,EAAA9F,GACAA,IAWAhO,KAAA8oD,IAAA96C,GAAA8F,IAEAo2C,UAAA,SAAAl8C,OACAtL,KAAAsL,SACAhO,MAAA8oD,IAAA96C,IAGAm8C,SAAA,SAAAr2C,EAAA/U,GACAA,IACAiB,KAAA+oD,MAAAhqD,KACAiB,KAAA+oD,MAAAhqD,OAEAiB,KAAA+oD,MAAAhqD,GAAAwJ,KAAAuL,KAGAs2C,YAAA,SAAArrD,EAAA2iD,GACA,GAAA3iD,EAAA,CAGA,GAAAsf,GAAAre,KAAA+oD,MAAAhqD,EACA,IAAAsf,EAAA,CAGA,OAAA9e,GAAA,EAAqBA,EAAA8e,EAAA9b,OAAkBhD,IAAA,CACvC8e,EAAA9e,GACAmiD,SACArjC,EAAApZ,OAAA1F,EAAA,GAGA,IAAA8e,EAAA9b,cACAvC,MAAA+oD,MAAAhqD,MAGAsrD,SAAA,SAAAC,GACA,MAAAtqD,MAAA0pD,SAAAY,EAAA5B,EAAA4B,GAEAC,UAAA,SAAAC,GACA,GAAAC,GAAAD,EAAAxlD,QAAA,QACA,IAAAylD,EAAA,EAEA,MAAAzhB,UAAAwhB,EAAAjrB,UAAAkrB,EAAA,EAAAD,EAAAxlD,QAAA,IAAAylD,IAAA,GAIA,IADAD,EAAAxlD,QAAA,YACA,GAEA,GAAA0lD,GAAAF,EAAAxlD,QAAA,MACA,OAAAgkC,UAAAwhB,EAAAjrB,UAAAmrB,EAAA,EAAAF,EAAAxlD,QAAA,IAAA0lD,IAAA,IAGA,GAAAC,GAAAH,EAAAxlD,QAAA,QACA,OAAA2lD,GAAA,GAEA3hB,SAAAwhB,EAAAjrB,UAAAorB,EAAA,EAAAH,EAAAxlD,QAAA,IAAA2lD,IAAA,KAMAC,SAAA,SAAAhc,GACA,GAAA4b,GAAA5b,EAAA/tC,cAEAwO,EACA,wBAAAkvB,KAAAisB,IACA,wBAAAjsB,KAAAisB,IACA,qCAAAjsB,KAAAisB,IACA,kBAAAjsB,KAAAisB,IACAA,EAAAxlD,QAAA,iBACA,gCAAAu5B,KAAAisB,OAGAK,IAAAjc,EAAAv/B,MACA,4DAEAy7C,IAAAlc,EAAAv/B,MAAA,YAEA,QACAu1C,QAAAv1C,EAAA,OACA4kC,QAAA5kC,EAAA,QACAyd,KAAA84B,EAAA2E,UAAAC,GAEAK,SACAC,aAIApc,OAAAhsC,IAGAqoD,MACA,KAAA9nD,EACAA,EACA,mBAAA7C,QACAA,OACA,mBAAA4qD,mBACArN,OAGAiI,GAAAlX,GAAAkX,EAAAgF,SAAAG,EAAApc,WAAAoc,EAAApc,UAAAC,WAAA,IAEAmc,EAAAnF,OACAt1C,QAAAC,MACA,uFAIAw6C,EAAAnF,QACAA,EAAA3iD,OAAA8nD,EACAnF,EAAAxlD,OAAA2qD,EACAnF,EAAA98B,SAAAiiC,EAAAjiC,SAGAtqB,EAAAD,QAAAqnD,KAUA,WACA,YAOAA,OAAAqF,WAAA,WACA,GAAA7kC,MAAAllB,MAAAvC,KAAAgH,WACApD,EAAA6jB,EAAA7jB,OACA9D,EAAA,CAGA,KADAuB,KAAAuC,SACU9D,EAAA8D,EAAY9D,IACtBuB,KAAAvB,GAAA2nB,EAAA3nB,EAEA,OAAAuB,OAEA4lD,MAAAqF,WAAAtrD,aAaAimD,MAAAqF,WAAAtrD,UAAAurD,KAAA,SAAAC,GACA,OAAA5rD,GAAA,EAAmBA,EAAAS,KAAAuC,OAAiBhD,IACpC4rD,EAAAnrD,KAAAT,OAQAqmD,MAAAqF,WAAAtrD,UAAAqG,QAAA,WACA,GAEAzG,GAFAuF,KACA0K,EAAAxP,KAAAuC,MAGA,KAAAhD,EAAA,EAAeA,EAAAiQ,EAASjQ,IACxBuF,EAAAyD,KAAAvI,KAAAT,GAEA,OAAAuF,IAQA8gD,MAAAqF,WAAAG,aAAA,SAAAtmD,GACA,GAEAvF,GAFA8rD,EAAA,GAAAzF,OAAAqF,WACAz7C,EAAA1K,EAAAvC,MAGA,KAAAhD,EAAA,EAAeA,EAAAiQ,EAASjQ,IACxB8rD,EAAA9iD,KAAAzD,EAAAvF,GAEA,OAAA8rD,IAIAzF,MAAAqF,WAAAK,WAAA,SAAAC,GACA3F,MAAAqF,WAAAtrD,UAAA4rD,GAAA,WACA,GACA9sD,GADA+Q,EAAAxP,KAAAuC,OAGA6jB,KAAAllB,MAAAvC,KAAAgH,UACA,KAAAlH,EAAA,EAAiBA,EAAA+Q,EAAS/Q,IAC1BuB,KAAAvB,GAAA8sD,GAAA3lD,MAAA5F,KAAAvB,GAAA2nB,EAGA,OAAApmB,QAIA4lD,MAAAqF,WAAAO,WAAA,SAAA1mC,GACA,GAAA2mC,GAAA3mC,EAAAnlB,SACA,QAAA4rD,KAAAE,GACA7F,MAAAqF,WAAAK,WAAAC,IA6BA3F,MAAA8F,UAAA,SAAA9sD,GACAoB,KAAApB,OAAAsC,UAAA,cAGA0kD,MAAA8F,UAAA/rD,WAOA2B,KAAA,WACA,UAAAskD,OAAA8F,UAAA1rD,KAAApB,IASA+sD,MAAA,SAAAA,GACA,GAAA/sD,GAAAoB,KAAApB,CACA,QACAgtD,EAAAhtD,EAAA,GAAA+sD,EAAAC,EAAAhtD,EAAA,GAAA+sD,EAAAE,EAAAjtD,EAAA,GACAitD,EAAAjtD,EAAA,GAAA+sD,EAAAC,EAAAhtD,EAAA,GAAA+sD,EAAAE,EAAAjtD,EAAA,KAWAktD,UAAA,SAAAF,EAAAC,GAGA,MAFA7rD,MAAApB,EAAA,IAAAoB,KAAApB,EAAA,GAAAgtD,EAAA5rD,KAAApB,EAAA,GAAAitD,EACA7rD,KAAApB,EAAA,IAAAoB,KAAApB,EAAA,GAAAgtD,EAAA5rD,KAAApB,EAAA,GAAAitD,EACA7rD,MAUA+rD,MAAA,SAAAC,EAAAC,GAKA,MAJAjsD,MAAApB,EAAA,IAAAotD,EACAhsD,KAAApB,EAAA,IAAAotD,EACAhsD,KAAApB,EAAA,IAAAqtD,EACAjsD,KAAApB,EAAA,IAAAqtD,EACAjsD,MASAksD,OAAA,SAAAC,GACA,GAAAttD,GAAAoF,KAAAmoD,IAAAD,GACArsD,EAAAmE,KAAAooD,IAAAF,GACAG,EAAAtsD,KAAApB,EAAA,GAAAC,EAAAmB,KAAApB,EAAA,GAAAkB,EACAysD,EAAAvsD,KAAApB,EAAA,GAAAC,EAAAmB,KAAApB,EAAA,GAAAkB,EACA0sD,EAAAxsD,KAAApB,EAAA,IAAAkB,EAAAE,KAAApB,EAAA,GAAAC,EACA4tD,EAAAzsD,KAAApB,EAAA,IAAAkB,EAAAE,KAAApB,EAAA,GAAAC,CAKA,OAJAmB,MAAApB,EAAA,GAAA0tD,EACAtsD,KAAApB,EAAA,GAAA2tD,EACAvsD,KAAApB,EAAA,GAAA4tD,EACAxsD,KAAApB,EAAA,GAAA6tD,EACAzsD,MAQA0sD,eAAA,WACA,OACAd,EAAA5rD,KAAApB,EAAA,GACAitD,EAAA7rD,KAAApB,EAAA,KAWA+tD,KAAA,SAAAX,EAAAC,GACA,GAAAK,GAAAtsD,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAqtD,EACAM,EAAAvsD,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAqtD,EACAO,EAAAxsD,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAotD,EACAS,EAAAzsD,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAotD,CAKA,OAJAhsD,MAAApB,EAAA,GAAA0tD,EACAtsD,KAAApB,EAAA,GAAA2tD,EACAvsD,KAAApB,EAAA,GAAA4tD,EACAxsD,KAAApB,EAAA,GAAA6tD,EACAzsD,MASA4sD,SAAA,SAAAC,GACA,GAAAP,GAAAtsD,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GACA2tD,EAAAvsD,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAEA4tD,EAAAxsD,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GACA6tD,EAAAzsD,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAEA2+B,EAAAv9B,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GACA6+B,EAAAz9B,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,GAAAiuD,EAAAjuD,EAAA,GAAAoB,KAAApB,EAAA,EAQA,OANAoB,MAAApB,EAAA,GAAA0tD,EACAtsD,KAAApB,EAAA,GAAA2tD,EACAvsD,KAAApB,EAAA,GAAA4tD,EACAxsD,KAAApB,EAAA,GAAA6tD,EACAzsD,KAAApB,EAAA,GAAA2+B,EACAv9B,KAAApB,EAAA,GAAA6+B,EACAz9B,MAQA8sD,OAAA,WACA,GAAAhuD,GAAA,GAAAkB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,IACAmuD,EAAA/sD,KAAApB,EAAA,GAAAE,EACAkuD,GAAAhtD,KAAApB,EAAA,GAAAE,EACAmuD,GAAAjtD,KAAApB,EAAA,GAAAE,EACAouD,EAAAltD,KAAApB,EAAA,GAAAE,EACAquD,EAAAruD,GAAAkB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,IACAwuD,EAAAtuD,GAAAkB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAAAoB,KAAApB,EAAA,GAOA,OANAoB,MAAApB,EAAA,GAAAmuD,EACA/sD,KAAApB,EAAA,GAAAouD,EACAhtD,KAAApB,EAAA,GAAAquD,EACAjtD,KAAApB,EAAA,GAAAsuD,EACAltD,KAAApB,EAAA,GAAAuuD,EACAntD,KAAApB,EAAA,GAAAwuD,EACAptD,MAOAqtD,UAAA,WACA,MAAArtD,MAAApB,GASA0uD,oBAAA,SAAA1B,EAAAC,GACA,GAAAkB,GAAA/sD,KAAApB,EAAA,GACAouD,EAAAhtD,KAAApB,EAAA,GACAquD,EAAAjtD,KAAApB,EAAA,GACAsuD,EAAAltD,KAAApB,EAAA,GACAuuD,EAAAntD,KAAApB,EAAA,GACAwuD,EAAAptD,KAAApB,EAAA,GACA2uD,GAAAR,GAAAlB,EAAAuB,GAAAJ,GAAApB,EAAAuB,KAAAJ,EAAAG,EAAAF,EAAAC,GACAO,GAAA5B,EAAAuB,EAAAF,EAAAM,GAAAR,CAEA,OAAA/sD,MAAA8rD,UAAA0B,EAAAD,IAKA,IAKAE,GAAAxpD,KAAA0kD,GAAA,IACA+E,EAAA,IAAAzpD,KAAA0kD,GAOAgF,GACAC,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAC,OAAA,OACAC,gBAAA,aACAC,MAAA,SACAC,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAC,MAAA,WACAC,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAC,OAAA,SACAC,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACAC,SAAA,WACAC,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACAC,KAAA,SACAC,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,aAAA,eACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACAC,QAAA,WACAC,aAAA,YAEAC,EAAA,sCAMArR,OAAAsR,MAIAC,WAAA,SAAA72D,GACA,SAAAA,GAAA,GAAAA,EAAAk4B,WAEA4+B,YAAA,SAAA92D,GACA,SAAAA,KAAAwkB,aAAAxkB,EAAA3B,MAAA2B,EAAAsF,QAEAyxD,UAAA,SAAA/2D,GACA,QAAAA,KAAAwkB,cAAA5lB,QAEAo4D,SAAA,SAAAh3D,GACA,MAvLA,mBAuLApB,OAAAS,UAAAyE,SAAAzF,KAAA2B,IAEAi3D,UAAA,SAAAj3D,GACA,MAzLA,oBA0LApB,OAAAS,UAAAyE,SAAAzF,KAAA2B,KACAgE,MAAAhE,IACA6D,SAAA7D,IAGAk3D,UAAA,SAAAl3D,GACA,MA/LA,oBA+LApB,OAAAS,UAAAyE,SAAAzF,KAAA2B,IAEAm3D,WAAA,SAAAn3D,GACA,MAjMA,qBAiMApB,OAAAS,UAAAyE,SAAAzF,KAAA2B,IAGAmD,SAAA,SAAAK,GACA,MAAAA,aAAA5E,SAEAw4D,gBAAA,SAAAC,GACA,mBAAAA,GACA,QAEA,IAAAC,GAAAD,EAAA,EACA,OACA,MAAAC,GACA,MAAAA,GACAA,MAAA92D,eAGA+2D,MAAA,SAAA1mC,GACA,WAAAA,EACA,EAEAA,EAAA,EACA,GAEA,GAGA2mC,oBAAA,WACA,GAAAC,GAAAnS,MAAAuD,UACAvD,MAAA98B,SAAA5G,cAAA,UACA,GAAA0jC,OAAAoS,WAEA,KACAD,EAAAtzC,MAAAszC,EAAAtzC,UACO,MAAAtkB,IACP,MAAA43D,IAEAE,cAAA,SAAAhgD,GACA,KAAAA,IAAAgQ,YACA,GAAAhQ,GAAA2tC,MAAA98B,SACA,QAGA,WAEAovC,eAAA,SAAApzD,GACA,GAGAvF,GACAuE,EAJAq0D,KACA3oD,EAAA1K,EAAAvC,OACAsxC,EAAA+R,MAAAsR,IAIA,KAAA33D,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1BuE,EAAAgB,EAAAvF,GACAs0C,EAAA0jB,UAAAzzD,GACAA,EAAAG,KAAAm0D,MAAA,IAAAt0D,GAAA,IACS+vC,EAAA2jB,UAAA1zD,KACTA,IAAAM,YAGA+zD,EAAA5vD,KAAAzE,EAGA,OAAAq0D,IAKAE,UAAA,SAAAnoC,EAAAvM,GACA,GAAA20C,GAAAP,CAGA,IAAA7nC,EAEO,GAAAlwB,KAAAm3D,WAAAjnC,GAEPvM,EAAAuM,OACO,IAAAlwB,KAAAw3D,UAAAtnC,GAEPooC,EAAA,GAAA1S,OAAAxlD,OAAAm4D,MACAD,EAAAE,OAAA,WACA70C,EAAA20C,IAEAA,EAAAnuD,IAAA+lB,MACO,IAAAA,EAAAjnB,KAAA,CAEP8uD,EAAAnS,MAAAsR,KAAAY,sBACAC,EAAA3X,MAAAlwB,EAAAkwB,MACA2X,EAAAzX,OAAApwB,EAAAowB,MACA,IAAAmY,GAAAV,EAAAW,WA9RA,KA+RAD,GAAAE,aAAAzoC,EAAA,KACAlwB,KAAAq4D,UAAAN,EAAAa,YAAAj1C,OAEAA,GAAA,UApBAA,GAAA,OAuBAk1C,eAAA,SAAAv4D,GAMA,eALAA,EAAA80D,KAAA,EAKA,IAJA90D,EAAA4wD,OAAA,EAIA,IAHA5wD,EAAA+tD,MAAA,EAGA,IAFA/tD,EAAAw4D,OAAA,EAEA,KAAArsC,KAnSA,KAuSAssC,UAAA,SAAAC,EAAAj5D,EAAA2G,GACA,gBAAAsyD,GAAA,KAAAj5D,GAAA,GAAA2G,GAAAtC,SAAA,IAAAlD,MAAA,IAEA+3D,UAAA,SAAAC,GACAA,IAAAx4D,QA5SA,IACA,GA4SA,IAAAy4D,GAAAnwB,SAAAkwB,EAAA,GACA,QACAF,EAAAG,GAAA,OACAp5D,EAAAo5D,GAAA,MACAzyD,EAAA,IAAAyyD,IAQAC,eAAA,WAEA,IADA,GAAAC,IAAA,SAAAp1D,KAAAu/C,UAAA,GAAAp/C,SAAA,IACAi1D,EAAA92D,OAAA,GACA82D,EA1TA,IA0TAA,CAEA,OA9TA,IA8TAA,GAOA/5D,IAAA,SAAAwE,EAAA6D,GACA,WAAAjF,KAAAoB,EACA6D,EAEA7D,GAcAw1D,OAAA,SAAAC,GACA,GAAAC,EAEA,OAAAD,KAAA5L,IACA6L,EAAA7L,EAAA4L,IAEAP,EAAAQ,EAAA,GACAz5D,EAAAy5D,EAAA,GACA9yD,EAAA8yD,EAAA,KA/VA,MAiWOD,EAAA,GAEPv5D,KAAAi5D,UAAAM,EAAAh6B,UAAA,IA9VA,SA+VOg6B,EAAAjS,OAAA,MAEPkS,EAAAvC,EAAA14B,KAAAg7B,EAAA74D,QAAA,WAEAs4D,EAAAhwB,SAAAwwB,EAAA,OACAz5D,EAAAipC,SAAAwwB,EAAA,OACA9yD,EAAAsiC,SAAAwwB,EAAA,UAKAR,EAAA,EACAj5D,EAAA,EACA2G,EAAA,IAMA+yD,YAAA,SAAAh5D,GAEA,MADAA,MAAA,QAEAmlD,MAAAsR,KAAAwC,iBAAAj5D,IACAmlD,MAAAsR,KAAAyC,iBAAAl5D,IACAmlD,MAAAsR,KAAA0C,iBAAAn5D,IACAmlD,MAAAsR,KAAA2C,gBAAAp5D,IACAmlD,MAAAsR,KAAA4C,iBAAAr5D,IAIAi5D,iBAAA,SAAAj5D,GACA,GAAA5B,GAAA8uD,EAAAltD,EAAAI,cACA,OAAAhC,IAIAm6D,EAAAn6D,EAAA,GACAkB,EAAAlB,EAAA,GACA6H,EAAA7H,EAAA,GACA6G,EAAA,GANA,MAUAm0D,gBAAA,SAAAp5D,GACA,OAAAA,EAAAuE,QAAA,SACAvE,IAAA4O,MAAA,oBACA,IAAA0qD,GAAAt5D,EAAAmE,MAAA,SAAAH,IAAAwzB,OACA,QACA+gC,EAAAe,EAAA,GACAh6D,EAAAg6D,EAAA,GACArzD,EAAAqzD,EAAA,GACAr0D,EAAA,KAKAo0D,iBAAA,SAAAr5D,GACA,OAAAA,EAAAuE,QAAA,UACAvE,IAAA4O,MAAA,qBACA,IAAA0qD,GAAAt5D,EAAAmE,MAAA,SAAAH,IAAAwzB,OACA,QACA+gC,EAAAe,EAAA,GACAh6D,EAAAg6D,EAAA,GACArzD,EAAAqzD,EAAA,GACAr0D,EAAAq0D,EAAA,MAKAH,iBAAA,SAAAn5D,GACA,SAAAA,EAAA,QAAAA,EAAA8B,OACA,OACAy2D,EAAAhwB,SAAAvoC,EAAAS,MAAA,SACAnB,EAAAipC,SAAAvoC,EAAAS,MAAA,SACAwF,EAAAsiC,SAAAvoC,EAAAS,MAAA,SACAwE,EAAA,IAKAi0D,iBAAA,SAAAl5D,GACA,SAAAA,EAAA,QAAAA,EAAA8B,OACA,OACAy2D,EAAAhwB,SAAAvoC,EAAA,GAAAA,EAAA,OACAV,EAAAipC,SAAAvoC,EAAA,GAAAA,EAAA,OACAiG,EAAAsiC,SAAAvoC,EAAA,GAAAA,EAAA,OACAiF,EAAA,IAKAs0D,OAAA,SAAAC,EAAAC,GACA,GAAAC,GAAAn6D,KAAAo6D,OAAAF,EACA,QAAA/0D,KAAA80D,GACAj6D,KAAAq3D,UAAA4C,EAAA90D,IACAg1D,EAAAh1D,GAAAnF,KAAAg6D,OAAAC,EAAA90D,GAAAg1D,EAAAh1D,IAEAg1D,EAAAh1D,GAAA80D,EAAA90D,EAGA,OAAAg1D,IAEAE,UAAA,SAAA55D,GACA,MAAAA,GAAAC,QAAA,YAEA45D,SAAA,SAAA75D,GACA,MAAAA,GAAAC,QAAA,YAOA65D,iBAAA,SAAAC,EAAAC,GACA,QACAA,EAAA7O,EAAA4O,EAAA5O,EAAA4O,EAAApa,OACAqa,EAAA7O,EAAA6O,EAAAra,MAAAoa,EAAA5O,GACA6O,EAAA5O,EAAA2O,EAAA3O,EAAA2O,EAAAla,QACAma,EAAA5O,EAAA4O,EAAAna,OAAAka,EAAA3O,IAGA6O,YAAA,SAAAp6D,GACA,GAAA65D,KACA,QAAAh1D,KAAA7E,GACAN,KAAAq3D,UAAA/2D,EAAA6E,IACAg1D,EAAAh1D,GAAAnF,KAAA06D,YAAAp6D,EAAA6E,IACSnF,KAAAs3D,SAAAh3D,EAAA6E,IACTg1D,EAAAh1D,GAAAnF,KAAA26D,WAAAr6D,EAAA6E,IAEAg1D,EAAAh1D,GAAA7E,EAAA6E,EAGA,OAAAg1D,IAEAQ,WAAA,SAAA71D,GACA,MAAAA,GAAA5D,MAAA,IAEA05D,UAAA,SAAAC,GACA,MAAAA,GAAApN,GAEAqN,UAAA,SAAA3O,GACA,MAAAA,GAAAuB,GAEAqN,YAAA,SAAAt6D,GACA,MAAAA,GAAAQ,OAAA,GAAAH,cAAAL,EAAAS,MAAA,IAEA85D,MAAA,SAAAv6D,GACA,SAAA8+C,OAnfA,gBAmfA9+C,IAEA8P,MAAA,SAAA9P,GACA6P,QAAAC,MAtfA,gBAsfA9P,IAEA4vB,KAAA,SAAA5vB,GAKAmlD,MAAA3iD,OAAAqN,iBAAA+f,MAAAu1B,MAAA+D,cACAr5C,QAAA+f,KA/fA,kBA+fA5vB,IAGA2F,OAAA,SAAAmH,EAAAD,GACA,QAAAnF,KACAnI,KAAA8kB,YAAAvX,EAEApF,EAAAxI,UAAA2N,EAAA3N,SACA,IAAAs7D,GAAA1tD,EAAA5N,SACA4N,GAAA5N,UAAA,GAAAwI,EACA,QAAAhD,KAAA81D,GACAA,EAAAr7D,eAAAuF,KACAoI,EAAA5N,UAAAwF,GAAA81D,EAAA91D,GAGAoI,GAAA2tD,UAAA5tD,EAAA3N,UAEA4N,EAAA0X,MAAA3X,GASA6tD,WAAA,SAAAr2C,EAAApJ,GACA,GAAAvW,EAEA,KAAAA,IAAAuW,GACAoJ,EAAAnlB,UAAAwF,GAAAuW,EAAAvW,IAGAi2D,kBAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA33D,KAAA43D,KAAA53D,KAAA63D,IAAAP,EAAAF,EAAA,GAAAp3D,KAAA63D,IAAAN,EAAAF,EAAA,IACAS,EAAA93D,KAAA43D,KAAA53D,KAAA63D,IAAAL,EAAAF,EAAA,GAAAt3D,KAAA63D,IAAAJ,EAAAF,EAAA,IACAQ,EAAAL,EAAAC,KAAAG,GACAE,EAAAN,EAAAI,GAAAH,EAAAG,EAMA,QALAR,EAAAS,GAAAP,EAAAJ,GACAG,EAAAQ,GAAAN,EAAAJ,GACAC,EAAAU,GAAAR,EAAAJ,GACAG,EAAAS,GAAAP,EAAAJ,KAIAY,cAAA,SAAAr8D,EAAAs8D,GACA,GAEA58D,GACA68D,EAHA5sD,EAAA3P,EAAA0C,OACA85D,IAIA,KAAA98D,EAAA,EAAiBA,EAAAiQ,EAAA,EAAajQ,GAAA,EAC9B68D,EAAAxW,MAAAsR,KAAAkE,kBACAv7D,EAAAN,EAAA,GACAM,EAAAN,EAAA,GACAM,EAAAN,GACAM,EAAAN,EAAA,GACAM,EAAAN,EAAA,GACAM,EAAAN,EAAA,GACA48D,GAEAE,EAAA9zD,KAAA6zD,EAAA,IACAC,EAAA9zD,KAAA6zD,EAAA,IACAC,EAAA9zD,KAAA1I,EAAAN,IACA88D,EAAA9zD,KAAA1I,EAAAN,EAAA,IACA88D,EAAA9zD,KAAA6zD,EAAA,IACAC,EAAA9zD,KAAA6zD,EAAA,GAGA,OAAAC,IAEAC,kBAAA,SAAA77D,GACA,MAAAA,GAAA8+B,UAAA,EAAA9+B,EAAA8B,OAAA,IAEA2oD,KAAA,SAAA5qD,EAAA6qD,GACA,OAAAhmD,KAAA7E,GACA6qD,EAAAhmD,EAAA7E,EAAA6E,KAGAo3D,SAAA,SAAAz4D,EAAA05B,EAAAlN,GACA,MAAAkN,IAAA15B,KAAAwsB,GAEAksC,wBAAA,SAAAjB,EAAAC,EAAAC,EAAAC,EAAAe,EAAAC,GACA,GAAA9Q,GAAAC,EAAA8Q,EAEAC,GAAArB,EAAAE,IAAAF,EAAAE,IAAAD,EAAAE,IAAAF,EAAAE,EACA,OAAAkB,EACAhR,EAAA2P,EACA1P,EAAA2P,EACAmB,GAAAF,EAAAhB,IAAAgB,EAAAhB,IAAAiB,EAAAhB,IAAAgB,EAAAhB,OACO,CACP,GAAAmB,KAAAJ,EAAAlB,IAAAE,EAAAF,IAAAmB,EAAAlB,IAAAE,EAAAF,IAAAoB,CACAC,GAAA,GACAjR,EAAA2P,EACA1P,EAAA2P,EACAmB,GAAApB,EAAAkB,IAAAlB,EAAAkB,IAAAjB,EAAAkB,IAAAlB,EAAAkB,IACSG,EAAA,GACTjR,EAAA6P,EACA5P,EAAA6P,EACAiB,GAAAlB,EAAAgB,IAAAhB,EAAAgB,IAAAf,EAAAgB,IAAAhB,EAAAgB,KAEA9Q,EAAA2P,EAAAsB,GAAApB,EAAAF,GACA1P,EAAA2P,EAAAqB,GAAAnB,EAAAF,GACAmB,GAAA/Q,EAAA6Q,IAAA7Q,EAAA6Q,IAAA5Q,EAAA6Q,IAAA7Q,EAAA6Q,IAGA,OAAA9Q,EAAAC,EAAA8Q,IAIAG,qBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAtX,MAAAsR,KAAAwD,YAAAqC,GACAJ,EAAA1kC,OAAAklC,SAuBA,OAtBAH,GAAAn7D,QAAA,SAAAu7D,EAAA3+D,GACA,GAAAw+D,GAAAx+D,IAAAu+D,EAAAz6D,OAAA,GAGA,GAAA86D,GAAAL,GAAAv+D,EAAA,GAAAu+D,EAAAz6D,QACA+6D,EAAA1X,MAAAsR,KAAAsF,wBACAY,EAAAxR,EACAwR,EAAAvR,EACAwR,EAAAzR,EACAyR,EAAAxR,EACAkR,EAAAnR,EACAmR,EAAAlR,GAEA0R,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,EACAG,GAAAd,IACAO,EAAAtR,EAAA2R,EACAL,EAAArR,EAAA2R,EACAb,EAAAc,MAGAP,GAEAQ,sBAAA,SAAAC,EAAAC,EAAAX,GACA,GAAA19D,GACA0G,KACA6wB,IACA,IAAA6mC,EAAAp7D,OAAAq7D,EAAAr7D,OAAA,CACA,GAAAs7D,GAAAD,CACAA,GAAAD,EACAA,EAAAE,EAEA,IAAAt+D,EAAA,EAAiBA,EAAAo+D,EAAAp7D,OAAuBhD,GAAA,EACxC0G,EAAAsC,MACAqjD,EAAA+R,EAAAp+D,GACAssD,EAAA8R,EAAAp+D,EAAA,IAGA,KAAAA,EAAA,EAAiBA,EAAAq+D,EAAAr7D,OAAqBhD,GAAA,EACtCu3B,EAAAvuB,MACAqjD,EAAAgS,EAAAr+D,GACAssD,EAAA+R,EAAAr+D,EAAA,IAIA,IAAAu+D,KAMA,OALAhnC,GAAAj1B,QAAA,SAAA8pD,GACA,GAAAoS,GAAAnY,MAAAsR,KAAA4F,qBAAAnR,EAAA1lD,EAAAg3D,EACAa,GAAAv1D,KAAAw1D,EAAAnS,GACAkS,EAAAv1D,KAAAw1D,EAAAlS,KAEAiS,GAEAE,oBAAA,SAAA19D,GACA,GAAA29D,EAEA39D,GAAA49D,mCAAA,CAEA,QAAA/4D,KAAA7E,GACA,GACAA,EAAAV,eAAAuF,IAAA7E,EAAA6E,IAAA,gBAAA7E,GAAA6E,GAKA,GADA84D,EAAA/+D,OAAAiM,yBAAA7K,EAAA6E,GAEA7E,EAAA6E,GAAA+4D,mCACAtY,MAAAsR,KAAAC,WAAA72D,EAAA6E,IACA,CACA,IAAA84D,EAAA7+D,aAGA,kBAFAkB,GAAA6E,OAIS,WAAAygD,MAAAsR,KAAA8G,oBAAA19D,EAAA6E,IAAA,CACT,IAAA84D,EAAA7+D,aAGA,kBAFAkB,GAAA6E,GASA,aAFA7E,GAAA49D,kCAEA59D,OAKA,WACA,YAIA,SAAA69D,KACA,GAAAC,EACA,MAAAA,EAEA,IAAArG,GAAAnS,MAAAsR,KAAAY,sBACAzuD,EAAA0uD,EAAAW,WAAA,KAYA,OAXA0F,GAAA,WASA,OARAxY,MAAAxlD,OAAAi+D,kBAAA,IAEAh1D,EAAAi1D,8BACAj1D,EAAAk1D,2BACAl1D,EAAAm1D,0BACAn1D,EAAAo1D,yBACAp1D,EAAAq1D,wBACA,MAfA,GAAAN,EAqCAxY,OAAA+Y,OAAA,SAAA1uD,GACAjQ,KAAA0xC,KAAAzhC,IAGA21C,MAAA+Y,OAAAh/D,WACA+xC,KAAA,SAAAzhC,GACA,GAAA2uD,GAAA3uD,MAEAu5C,EACAoV,EAAApV,YAAA5D,MAAA4D,YAAA2U,GAEAn+D,MAAAwpD,aACAxpD,KAAA6+D,QAAAjZ,MAAAsR,KAAAY,sBAGA93D,KAAA6+D,QAAAp6C,MAAAq6C,QAAA,EACA9+D,KAAA6+D,QAAAp6C,MAAAs6C,OAAA,EACA/+D,KAAA6+D,QAAAp6C,MAAAs8B,OAAA,EACA/gD,KAAA6+D,QAAAp6C,MAAAm8B,WAAA,cACA5gD,KAAA6+D,QAAAp6C,MAAAs7B,SAAA,WACA//C,KAAA6+D,QAAAp6C,MAAAiZ,IAAA,EACA19B,KAAA6+D,QAAAp6C,MAAA+Y,KAAA,GAQAk7B,WAAA,WACA,MAAA14D,MAAAqJ,SAQA21D,cAAA,WACA,MAAAh/D,MAAAwpD,YAcAyV,cAAA,SAAAzV,GACA,GAAA0V,GAAAl/D,KAAAwpD,UACAxpD,MAAAwpD,aACAxpD,KAAAm/D,QACAn/D,KAAAo/D,WAAAF,EACAl/D,KAAAq/D,YAAAH,IASAI,SAAA,SAAAlf,GAEApgD,KAAAogD,MAAApgD,KAAA6+D,QAAAze,QAAApgD,KAAAwpD,WACAxpD,KAAA6+D,QAAAp6C,MAAA27B,QAAA,IAEA,IAAAoJ,GAAAxpD,KAAAwpD,UACAxpD,MAAA04D,aAAAD,SACA1M,MAAAvC,MAQA+V,UAAA,SAAAjf,GAEAtgD,KAAAsgD,OAAAtgD,KAAA6+D,QAAAve,SAAAtgD,KAAAwpD,WACAxpD,KAAA6+D,QAAAp6C,MAAA67B,SAAA,IACA,IAAAkJ,GAAAxpD,KAAAwpD,UACAxpD,MAAA04D,aAAAD,SACA1M,MAAAvC,MAQA4V,SAAA,WACA,MAAAp/D,MAAAogD,OAQAif,UAAA,WACA,MAAAr/D,MAAAsgD,QASA6e,QAAA,SAAA/e,EAAAE,GACAtgD,KAAAs/D,SAAAlf,GACApgD,KAAAu/D,UAAAjf,IAUAsY,UAAA,SAAA4G,EAAAC,GACA,IAGA,MAAAz/D,MAAA6+D,QAAAjG,UAAA4G,EAAAC,GACO,MAAAt/D,GACP,IACA,MAAAH,MAAA6+D,QAAAjG,YACS,MAAAlpD,GAET,MADAk2C,OAAAsR,KAAA7mC,KAAA,2BAAA3gB,EAAAgwD,SACA,OAMA9Z,MAAA+Z,YAAA,SAAA1vD,GACA,GAAA2uD,GAAA3uD,MACAmwC,EAAAwe,EAAAxe,OAAA,EACAE,EAAAse,EAAAte,QAAA,CAEAsF,OAAA+Y,OAAAhgE,KAAAqB,KAAA4+D,GACA5+D,KAAAqJ,QAAA,GAAAu8C,OAAAga,aAAA5/D,MACAA,KAAAm/D,QAAA/e,EAAAE,IAGAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAA+Z,YAAA/Z,MAAA+Y,QAEA/Y,MAAAia,UAAA,SAAA5vD,GACA,GAAA2uD,GAAA3uD,MACAmwC,EAAAwe,EAAAxe,OAAA,EACAE,EAAAse,EAAAte,QAAA,CAEAsF,OAAA+Y,OAAAhgE,KAAAqB,KAAA4+D,GACA5+D,KAAAqJ,QAAA,GAAAu8C,OAAAka,WAAA9/D,MACAA,KAAAm/D,QAAA/e,EAAAE,GACAtgD,KAAA+/D,WAAA,GAEAna,MAAAsR,KAAA9wD,OAAAw/C,MAAAia,UAAAja,MAAA+Y,WAGA,WACA,YACA,IAUAqB,IACA,MACA,QACA,YACA,gBACA,YACA,OACA,YACA,uBACA,gBACA,uBACA,YACA,OACA,WACA,eACA,kBACA,SACA,SACA,eACA,mBACA,OACA,UACA,SACA,OACA,QACA,cACA,eACA,SACA,aACA,YACA,aAGAC,GACA,YACA,cACA,cACA,aACA,gBACA,gBACA,UACA,iBACA,WACA,YACA,aACA,OACA,YACA,eACA,cACA,2BASAra,OAAAsa,QAAA,SAAAnI,GACA/3D,KAAA0xC,KAAAqmB,IAGAnS,MAAAsa,QAAAvgE,WACA+xC,KAAA,SAAAqmB,GACA/3D,KAAA+3D,SACA/3D,KAAAy4D,SAAAV,EAAA8G,QAAAnG,WAAA,MAEA9S,MAAAyD,cACArpD,KAAAmgE,YACAngE,KAAAogE,iBASAC,UAAA,SAAAC,GACAA,EAAAC,kBACAvgE,KAAAwgE,MAAAF,IASAG,YAAA,SAAAH,GACAA,EAAAI,oBACA1gE,KAAA2gE,QAAAL,IASAM,gBAAA,SAAAN,GACAA,EAAAC,kBAEAvgE,KAAAwgE,MAAAF,GAEAA,EAAAI,oBACA1gE,KAAA2gE,QAAAL,IAYAO,SAAA,SAAAC,GACA,GAGAvhE,GACAqgD,EACA7P,EACA3pB,EANA+5C,EAAAngE,KAAAmgE,SACA3wD,EAAA2wD,EAAA59D,OACA9B,EAAA,EAMA,KAAAlB,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1BqgD,EAAAugB,EAAA5gE,GACAwwC,EAAA6P,EAAA7P,OAGAA,GACA3pB,EAAAw5B,EAAAx5B,KACA3lB,GAAAsvC,EACA+wB,EACArgE,GA5IA,KA8IAmlD,MAAAsR,KAAAI,SAAAlxC,EAAA,IACA3lB,GAlJA,KAmJA2lB,EAAAqG,KAtJA,KAIA,KAoJAhsB,GAvJA,IAuJA2lB,EAAAqG,KAxJA,KAEA,MA2JAhsB,GAAAm/C,EAAAlgD,SACAohE,IACArgE,GAvJA,IAuJAm/C,EAAA97C,MAIArD,GA9JA,GAiKA,OAAAA,IAOAsgE,WAAA,WACA/gE,KAAAmgE,aAEAa,OAAA,SAAAvgE,GACA,GACA+O,GADA2wD,EAAAngE,KAAAmgE,QAGAA,GAAA53D,KAAA9H,IACA+O,EAAA2wD,EAAA59D,SAEAqjD,MAAA0D,aACA6W,EAAAjsD,SAQA+sD,MAAA,WACA,GAAAzX,GAAAxpD,KAAAkhE,YAAAlC,eACAh/D,MAAAmhE,aAAA,EAAA3X,EAAA,MAAAA,EAAA,MAQA0X,UAAA,WACA,MAAAlhE,MAAA+3D,QAYAtmD,MAAA,SAAA2vD,GACA,GAAArJ,GAAA/3D,KAAAkhE,WAEAE,GACAphE,KAAAqhE,UACAD,EAAAxV,GAAA,EACAwV,EAAAvV,GAAA,EACAuV,EAAAhhB,OAAA,EACAghB,EAAA9gB,QAAA,GAGAtgD,KAAAqhE,UACA,EACA,EACAtJ,EAAAqH,WAAArH,EAAAvO,WACAuO,EAAAsH,YAAAtH,EAAAvO,aAIA8X,cAAA,SAAAhB,GACA,GAAAiB,GAAAjB,EAAAkB,YACAD,IACAvhE,KAAA6sB,QAAA,UAAA00C,IAGAE,cAAA,SAAAnB,GACA,GAAAoB,GAAApB,EAAAqB,oBACA,KAAAD,GACA1hE,KAAA6sB,QAAA,cAAA60C,IAGAE,eAAA,SAAAtB,GACA,GAAAuB,GAAAvB,EAAAwB,aACAD,IACA7hE,KAAA6sB,QAAA,WAAAg1C,IAGAh1C,QAAA,SAAA6U,EAAA59B,GACA9D,KAAAy4D,SAAA/2B,GAAA59B,GAIAi+D,IAAA,WACA,GAAAr8D,GAAAC,SACA3F,MAAAy4D,SAAAsJ,IAAAr8D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAs8D,UAAA,WACAhiE,KAAAy4D,SAAAuJ,aAEAC,cAAA,WACA,GAAAv8D,GAAAC,SACA3F,MAAAy4D,SAAAwJ,cAAAv8D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA27D,UAAA,WACA,GAAA37D,GAAAC,SACA3F,MAAAy4D,SAAA4I,UAAA37D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAw8D,KAAA,WACAliE,KAAAy4D,SAAAyJ,QAEAC,UAAA,WACAniE,KAAAy4D,SAAA0J,aAEAC,gBAAA,WACA,GAAA18D,GAAAC,SACA,YAAAD,EAAAnD,OACAvC,KAAAy4D,SAAA2J,gBAAA18D,EAAA,GAAAA,EAAA,IACO,IAAAA,EAAAnD,OACPvC,KAAAy4D,SAAA2J,gBAAA18D,EAAA,QADO,IAIP28D,qBAAA,WACA,GAAA38D,GAAAC,SACA,OAAA3F,MAAAy4D,SAAA4J,qBAAA38D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA48D,cAAA,WACA,GAAA58D,GAAAC,SACA,OAAA3F,MAAAy4D,SAAA6J,cAAA58D,EAAA,GAAAA,EAAA,KAEA68D,qBAAA,WACA,GAAA78D,GAAAC,SACA,OAAA3F,MAAAy4D,SAAA8J,qBACA78D,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,KAGA88D,UAAA,WACA,GAAA98D,GAAAC,UACA8yD,EAAAz4D,KAAAy4D,QAEA,KAAA/yD,EAAAnD,OACAk2D,EAAA+J,UAAA98D,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACO,IAAAA,EAAAnD,OACPk2D,EAAA+J,UAAA98D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACO,IAAAA,EAAAnD,QACPk2D,EAAA+J,UACA98D,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,KAIA+8D,cAAA,SAAA7W,EAAAC,GACA,MAAA7rD,MAAAy4D,SAAAgK,cAAA7W,EAAAC,IAEA6W,KAAA,WACA1iE,KAAAy4D,SAAAiK,QAEAC,SAAA,SAAA/W,EAAAC,EAAAzL,EAAAE,GACAtgD,KAAAy4D,SAAAkK,SAAA/W,EAAAC,EAAAzL,EAAAE,IAEAsiB,WAAA,SAAAhX,EAAAC,EAAAzL,EAAAE,GACAtgD,KAAAy4D,SAAAmK,WAAAhX,EAAAC,EAAAzL,EAAAE,IAEAuiB,SAAA,WACA,GAAAn9D,GAAAC,SACA3F,MAAAy4D,SAAAoK,SAAAn9D,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAo9D,YAAA,SAAA35D,GACA,MAAAnJ,MAAAy4D,SAAAqK,YAAA35D,IAEA45D,aAAA,WACA,GAAAr9D,GAAAC,SACA,OAAA3F,MAAAy4D,SAAAsK,aAAAr9D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAs9D,OAAA,WACA,GAAAt9D,GAAAC,SACA3F,MAAAy4D,SAAAuK,OAAAt9D,EAAA,GAAAA,EAAA,KAEAu9D,OAAA,WACA,GAAAv9D,GAAAC,SACA3F,MAAAy4D,SAAAwK,OAAAv9D,EAAA,GAAAA,EAAA,KAEAw9D,KAAA,WACA,GAAAx9D,GAAAC,SACA3F,MAAAy4D,SAAAyK,KAAAx9D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAizD,aAAA,WACA,GAAAjzD,GAAAC,SACA3F,MAAAy4D,SAAAE,aAAAjzD,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAy9D,iBAAA,WACA,GAAAz9D,GAAAC,SACA3F,MAAAy4D,SAAA0K,iBAAAz9D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA09D,QAAA,WACApjE,KAAAy4D,SAAA2K,WAEAlX,OAAA,WACA,GAAAxmD,GAAAC,SACA3F,MAAAy4D,SAAAvM,OAAAxmD,EAAA,KAEA29D,KAAA,WACArjE,KAAAy4D,SAAA4K,QAEAtX,MAAA,WACA,GAAArmD,GAAAC,SACA3F,MAAAy4D,SAAA1M,MAAArmD,EAAA,GAAAA,EAAA,KAEA49D,YAAA,WACA,GAAA59D,GAAAC,UACA8yD,EAAAz4D,KAAAy4D,QAGAz4D,MAAAy4D,SAAA6K,YACA7K,EAAA6K,YAAA59D,EAAA,IACO,WAAA+yD,GAEPA,EAAA8K,QAAA79D,EAAA,GACO,kBAAA+yD,KAEPA,EAAA+K,eAAA99D,EAAA,KAKA+9D,YAAA,WACA,MAAAzjE,MAAAy4D,SAAAgL,eAEAtC,aAAA,WACA,GAAAz7D,GAAAC,SACA3F,MAAAy4D,SAAA0I,aAAAz7D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAg+D,OAAA,WACA1jE,KAAAy4D,SAAAiL,UAEAC,WAAA,WACA,GAAAj+D,GAAAC,SACA3F,MAAAy4D,SAAAkL,WAAAj+D,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAk4B,UAAA,WACA,GAAAl4B,GAAAC,SACA3F,MAAAy4D,SAAA76B,UAAAl4B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAomD,UAAA,WACA,GAAApmD,GAAAC,SACA3F,MAAAy4D,SAAA3M,UAAApmD,EAAA,GAAAA,EAAA,KAEA06D,aAAA,WACA,GAIA7gE,GACA6mB,EALAw9C,EAAA5jE,KACAwP,EAAAwwD,EAAAz9D,OACA21D,EAAAtS,MAAAsR,KAAAgB,eACA2L,EAAA7jE,KAAA6sB,OAsBA,KAAAttB,EAAA,EAAiBA,EAAAiQ,EAASjQ,KAjB1B,SAAAgsD,GACA,GACArlD,GADA49D,EAAAF,EAAArY,EAGAqY,GAAArY,GAAA,WASA,MARAnlC,GAAA8xC,EAAA/xD,MAAAxG,UAAAuB,MAAAvC,KAAAgH,UAAA,IACAO,EAAA49D,EAAAl+D,MAAAg+D,EAAAj+D,WAEAi+D,EAAA5C,QACAjxB,OAAAwb,EACAnlC,SAGAlgB,IAKA85D,EAAAzgE,GAIAqkE,GAAA/2C,QAAA,WACAg3C,EAAAj+D,MAAAg+D,EAAAj+D,UACA,IAAA8I,GAAA9I,UAAA,GACA7B,EAAA6B,UAAA,EAEA,mBAAA8I,GACA,kBAAAA,GACA,eAAAA,IAEA3K,GAAA9D,KAAA+3D,OAAAiH,iBAEA4E,EAAA5C,QACAthE,SAAA+O,EACA3K,WAMAm8D,EAAAp+D,QAAA,SAAA4M,GACAvP,OAAAC,eAAAymD,MAAAsa,QAAAvgE,UAAA8O,GACAnP,IAAA,WACA,MAAAU,MAAAy4D,SAAAhqD,IAEApD,IAAA,SAAAvH,GACA9D,KAAAy4D,SAAAhqD,GAAA3K,OAKA8hD,MAAAga,aAAA,SAAA7H,GACAnS,MAAAsa,QAAAvhE,KAAAqB,KAAA+3D,IAGAnS,MAAAga,aAAAjgE,WACAokE,WAAA,SAAAzD,GACA,GAAAoC,GAAApC,EAAAoC,MAEA1iE,MAAA6sB,QAAA,YAAA61C,GACApC,EAAA0D,UAAAhkE,OAEAikE,aAAA,SAAA3D,GACA,GAAA4D,GAAA5D,EAAA6D,kBACAC,EAAA9D,EAAA+D,kBACAC,EAAAhE,EAAAiE,sBACAC,EAAA5e,MAAAyE,SAAAiW,EAAAmE,0BACAC,EAAApE,EAAAqE,wBAEAT,GAAAE,IACApkE,KAAA8rD,UAAAoY,GAAA,EAAAE,GAAA,GAEAI,GACAxkE,KAAAksD,OAAAsY,GAEAF,GACAtkE,KAAA+rD,MAAAuY,EAAA1Y,EAAA0Y,EAAAzY,GAEA6Y,GACA1kE,KAAA8rD,WAAA,EAAA4Y,EAAA9Y,GAAA,EAAA8Y,EAAA7Y,GAGA7rD,KAAA6sB,QACA,YACA7sB,KAAAsiE,cACAhC,EAAAsE,sBACAtE,EAAAuE,wBAAA,WAGA7kE,KAAA0iE,QAEAoC,oBAAA,SAAAxE,GACA,GAAAr6D,GAAAq6D,EAAAyE,kCACAjuC,EAAAwpC,EAAA0E,gCACAC,EAAA3E,EAAA4E,kCACAC,EAAAnlE,KAAAqiE,qBAAAp8D,EAAA2lD,EAAA3lD,EAAA4lD,EAAA/0B,EAAA80B,EAAA90B,EAAA+0B,EAEA,IAAAoZ,EAAA,CAEA,OAAA1lE,GAAA,EAAuBA,EAAA0lE,EAAA1iE,OAAuBhD,GAAA,EAC9C4lE,EAAAC,aAAAH,EAAA1lE,GAAA0lE,EAAA1lE,EAAA,GAEAS,MAAA6sB,QAAA,YAAAs4C,GACA7E,EAAA0D,UAAAhkE,QAGAqlE,oBAAA,SAAA/E,GAgBA,OAfAr6D,GAAAq6D,EAAAgF,kCACAxuC,EAAAwpC,EAAAiF,gCACAC,EAAAlF,EAAAmF,mCACAC,EAAApF,EAAAqF,iCACAV,EAAA3E,EAAAsF,kCACAT,EAAAnlE,KAAAuiE,qBACAt8D,EAAA2lD,EACA3lD,EAAA4lD,EACA2Z,EACA1uC,EAAA80B,EACA90B,EAAA+0B,EACA6Z,GAIAnmE,EAAA,EAAqBA,EAAA0lE,EAAA1iE,OAAuBhD,GAAA,EAC5C4lE,EAAAC,aAAAH,EAAA1lE,GAAA0lE,EAAA1lE,EAAA,GAEAS,MAAA6sB,QAAA,YAAAs4C,GACAnlE,KAAA0iE,QAEAlC,MAAA,SAAAF,GACA,GAAAuF,GAAAvF,EAAAoC,OACAoD,EAAAxF,EAAAyF,iBAGA,IAAAF,GAAA,UAAAC,EAEA,WADA9lE,MAAA+jE,WAAAzD,EAIA,IAAA0F,GAAA1F,EAAAsE,qBACA,IAAAoB,GAAA,YAAAF,EAEA,WADA9lE,MAAAikE,aAAA3D,EAIA,IAAA2F,GAAA3F,EAAA4E,iCACA,IAAAe,GAAA,oBAAAH,EAEA,WADA9lE,MAAA8kE,oBAAAxE,EAIA,IAAA4F,GAAA5F,EAAAsF,iCACA,IAAAM,GAAA,oBAAAJ,EAEA,WADA9lE,MAAAqlE,oBAAA/E,EAKAuF,GACA7lE,KAAA+jE,WAAAzD,GACO0F,EACPhmE,KAAAikE,aAAA3D,GACO2F,EACPjmE,KAAA8kE,oBAAAxE,GACO4F,GACPlmE,KAAAqlE,oBAAA/E,IAGA6F,sBAAA,SAAA7F,GACA,GAAAr6D,GAAAq6D,EAAA8F,oCACAtvC,EAAAwpC,EAAA+F,kCACApB,EAAA3E,EAAAgG,oCACAnB,EAAAnlE,KAAAqiE,qBAAAp8D,EAAA2lD,EAAA3lD,EAAA4lD,EAAA/0B,EAAA80B,EAAA90B,EAAA+0B,EAEA,IAAAoZ,EAAA,CAEA,OAAA1lE,GAAA,EAAuBA,EAAA0lE,EAAA1iE,OAAuBhD,GAAA,EAC9C4lE,EAAAC,aAAAH,EAAA1lE,GAAA0lE,EAAA1lE,EAAA,GAEAS,MAAA6sB,QAAA,cAAAs4C,KAGAxE,QAAA,SAAAL,GACA,GAAAiG,GAAAjG,EAAAiG,OAEAC,EACAlG,EAAAmG,yBAAAnG,YAAA1a,OAAA8gB,IAEA,IAAApG,EAAAqG,YAAA,CACA,IAAAH,EAAA,CACAxmE,KAAAqjE,MACA,IAAA7Z,GAAAxpD,KAAAkhE,YAAAlC,eACAh/D,MAAAmhE,aAAA3X,EAAA,IAAAA,EAAA,KAGAxpD,KAAAshE,cAAAhB,GACAiG,GAAAjG,EAAAsG,gBACA5mE,KAAAsjE,YAAAiD,GACAvmE,KAAA6sB,QAAA,iBAAAyzC,EAAAuG,eAGA7mE,KAAA6sB,QAAA,YAAAyzC,EAAAwG,eAEAxG,EAAAyG,6BACA/mE,KAAA6sB,QAAA,8BAKAyzC,GAAAgG,oCAEAtmE,KAAAmmE,sBAAA7F,GAEAtgE,KAAA6sB,QAAA,cAAAyzC,EAAAoD,UAGApD,EAAA0G,YAAAhnE,MAEAwmE,GACAxmE,KAAAojE,YAIA6D,aAAA,SAAA3G,GACA,GAAAzsB,GAAA+R,MAAAsR,KACAqC,EAAA1lB,EAAAv0C,IAAAghE,EAAA4G,gBAAA,SACAC,EAAAtzB,EAAAv0C,IAAAghE,EAAA8G,gBAAA,GACAC,EAAAxzB,EAAAv0C,IAAAghE,EAAAgH,mBACA1b,EAAA,EACAC,EAAA,IAEAE,EAAAuU,EAAAiH,mBACAC,EAAAxnE,KAAA+3D,OAAAiH,gBACAyI,EAAA1b,EAAAH,EAAA4b,EACAE,EAAA3b,EAAAF,EAAA2b,CAEAxnE,MAAA6sB,QAAA,cAAA0sC,GACAv5D,KAAA6sB,QACA,aACAs6C,EAAAljE,KAAA0jE,IAAA1jE,KAAA2jE,IAAAH,GAAAxjE,KAAA2jE,IAAAF,KAEA1nE,KAAA6sB,QAAA,gBAAAw6C,EAAAzb,EAAA6b,GACAznE,KAAA6sB,QAAA,gBAAAw6C,EAAAxb,EAAA6b,IAEAG,+BAAA,SAAAvH,GACA,GAAAwH,GAAAxH,EAAAyH,6BACA,iBAAAD,GACA9nE,KAAA6sB,QAAA,2BAAAi7C,KAIAliB,MAAAsR,KAAA9wD,OAAAw/C,MAAAga,aAAAha,MAAAsa,SAEAta,MAAAka,WAAA,SAAA/H,GACAnS,MAAAsa,QAAAvhE,KAAAqB,KAAA+3D,IAGAnS,MAAAka,WAAAngE,WACA6gE,MAAA,SAAAF,GACAtgE,KAAAqjE,OACArjE,KAAA6sB,QAAA,YAAAyzC,EAAA0H,UACA1H,EAAA2H,aAAAjoE,MACAA,KAAAojE,WAEAzC,QAAA,SAAAL,GACA,GAAAA,EAAAqG,aAAArG,EAAA4H,mBAAA,CAEA,GAAA1B,GACAlG,EAAAmG,yBAAAnG,YAAA1a,OAAA8gB,IACAF,KACAxmE,KAAAqjE,OACArjE,KAAAmhE,aAAA,cAEAnhE,KAAAshE,cAAAhB,GACAtgE,KAAA6sB,QAAA,YAAAyzC,EAAAwG,eACA9mE,KAAA6sB,QAAA,cAAAyzC,EAAA0H,UACA1H,EAAA6H,eAAAnoE,MACAwmE,GACAxmE,KAAAojE,aAKAxd,MAAAsR,KAAA9wD,OAAAw/C,MAAAka,WAAAla,MAAAsa,YAGA,WACA,YAKAta,OAAAwiB,SACAC,gBAAA,SAAAvjD,EAAA4c,EAAA/5B,EAAA2gE,EAAAC,GACAvoE,KAAAwoE,UAAA1jD,EAAA4c,EAAA/5B,GACA3H,KAAAyoE,UAAA3jD,EAAA4c,EAAA4mC,EAAAC,GACAvoE,KAAA0oE,0BAAA5jD,EAAA4c,IAEA8mC,UAAA,SAAA1jD,EAAA4c,EAAA/5B,GACA,GAAAooC,GAVA,MAUA6V,MAAAsR,KAAA6D,YAAAr5B,EAEA5c,GAAAnlB,UAAAowC,GAAA,WACA,GAAAjsC,GAAA9D,KAAAqT,MAAAquB,EACA,YAAAh/B,KAAAoB,EAAA6D,EAAA7D,IAGA2kE,UAAA,SAAA3jD,EAAA4c,EAAA4mC,EAAAC,GAIA,GAAAx4B,GApBA,MAoBA6V,MAAAsR,KAAA6D,YAAAr5B,EAEA5c,GAAAnlB,UAAAowC,GAAA,SAAAjsC,GAWA,MAVAwkE,QAAA5lE,KAAAoB,GAAA,OAAAA,IACAA,EAAAwkE,EAAA3pE,KAAAqB,KAAA8D,EAAA49B,IAGA1hC,KAAA2oE,SAAAjnC,EAAA59B,GAEAykE,GACAA,EAAA5pE,KAAAqB,MAGAA,OAGA4oE,0BAAA,SACA9jD,EACA4c,EACApc,EACAgjD,EACAC,GAEA,GAIAhpE,GACAoW,EALAnG,EAAA8V,EAAA/iB,OACA8L,EAAAu3C,MAAAsR,KAAA6D,YACA/7D,EA9CA,MA8CAqP,EAAAqzB,GACAt2B,EA9CA,MA8CAiD,EAAAqzB,EAKA5c,GAAAnlB,UAAAX,GAAA,WACA,GAAAkH,KAEA,KAAA3G,EAAA,EAAmBA,EAAAiQ,EAASjQ,IAC5BoW,EAAA2P,EAAA/lB,GACA2G,EAAAyP,GAAA3V,KAAA6oE,QAAAnnC,EAAArzB,EAAAsH,GAGA,OAAAzP,IAIA4e,EAAAnlB,UAAAyL,GAAA,SAAAtH,GACA,GACAqB,GADA2jE,EAAA9oE,KAAAqT,MAAAquB,EAGA4mC,KACAxkE,EAAAwkE,EAAA3pE,KAAAqB,KAAA8D,GAGA,KAAAqB,IAAArB,GACAA,EAAAlE,eAAAuF,IAGAnF,KAAA2oE,SAAAjnC,EAAArzB,EAAAlJ,GAAArB,EAAAqB,GASA,OANAnF,MAAA+oE,iBAAArnC,EAAAonC,EAAAhlE,GAEAykE,GACAA,EAAA5pE,KAAAqB,MAGAA,MAGAA,KAAA0oE,0BAAA5jD,EAAA4c,IAEAgnC,0BAAA,SAAA5jD,EAAA4c,GACA,GAAAsnC,GAAApjB,MAAAsR,KAAA6D,YAAAr5B,GACAt2B,EA3FA,MA2FA49D,EACAhqE,EA7FA,MA6FAgqE,CAEAlkD,GAAAnlB,UAAA+hC,GAAA,WAEA,MAAA/7B,WAAApD,QACAvC,KAAAoL,GAAAzF,UAAA,IACA3F,MAGAA,KAAAhB,OAGAiqE,0BAAA,SAAAnkD,EAAA4c,EAAA/5B,EAAA2gE,GACA1iB,MAAAsR,KAAA3mD,MAAA,qBAAAmxB,EAEA,IAAAqO,GA5GA,MA4GA6V,MAAAsR,KAAA6D,YAAAr5B,GAEAg+B,EACAh+B,EACA,kGACA5c,GAAAnlB,UAAAowC,GAAA,WACA6V,MAAAsR,KAAA3mD,MAAAmvD,EACA,IAAA57D,GAAA9D,KAAAqT,MAAAquB,EACA,YAAAh/B,KAAAoB,EAAA6D,EAAA7D,GAEA9D,KAAAyoE,UAAA3jD,EAAA4c,EAAA4mC,EAAA,WACA1iB,MAAAsR,KAAA3mD,MAAAmvD,KAEA1/D,KAAA0oE,0BAAA5jD,EAAA4c,IAEAwnC,WAAA,SAAApkD,EAAApJ,GACAkqC,MAAAsR,KAAAhM,KAAAxvC,EAAA,SAAAytD,EAAAC,GAKA,QAAAC,KACAt5B,EAAAnqC,MAAA5F,KAAA2F,WACAigD,MAAAsR,KAAA3mD,MACA,IACA44D,EACA,0DACAC,EACA,cAXA,GAAAr5B,GAAAjrB,EAAAnlB,UAAAypE,GACAE,EA9HA,MA8HA1jB,MAAAsR,KAAA6D,YAAAoO,GACAI,EA9HA,MA8HA3jB,MAAAsR,KAAA6D,YAAAoO,EAaArkD,GAAAnlB,UAAAwpE,GAAAE,EACAvkD,EAAAnlB,UAAA2pE,GAAAD,EACAvkD,EAAAnlB,UAAA4pE,GAAAF,KAGAG,eAAA,WACAxpE,KAAAypE,iBAAA,IAIA7jB,MAAA8jB,YAIAC,aAAA,SAAA7lE,GACA,MAAAA,GAAA,IACA,IACOA,EAAA,EACP,EAEAG,KAAAm0D,MAAAt0D,IAEA8lE,eAAA,SAAA9lE,GACA,MAAAA,GAAA,EACA,EACOA,EAAA,KAEP,KAGAA,GAEA+lE,aAAA,SAAA/lE,GACA,MAAA8hD,OAAAsR,KAAAM,UAAA1zD,GACA,IAAAA,EAAA,IAEA,oBAAA5E,OAAAS,UAAAyE,SAAAzF,KAAAmF,GACAA,EAEA8hD,MAAAsR,KAAAO,WAAA3zD,GACAA,EAEA5E,OAAAS,UAAAyE,SAAAzF,KAAAmF,IAEAgmE,mBAAA,WACA,GAAAlkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GASA,MARAkkB,OAAAsR,KAAAK,UAAAzzD,IACA8hD,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,8CAGA59B,IAIAimE,yBAAA,WACA,GAAAnkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GACA,GAAAud,GAAA2G,MAAAsR,KAAAK,UAAAzzD,GACAkmE,EAAA,SAAAlmE,CAUA,OARAm7C,IAAA+qB,GACApkB,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,wDAGA59B,IAIAmmE,mBAAA,WACA,GAAArkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GASA,MARAkkB,OAAAsR,KAAAM,UAAA1zD,IACA8hD,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,8CAGA59B,IAIAomE,qBAAA,WACA,GAAAtkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GASA,MARAkkB,OAAAsR,KAAAE,YAAAtzD,IACA8hD,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,gDAGA59B,IAIAqmE,wBAAA,WACA,GAAAvkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GAqBA,MApBAkkB,OAAAsR,KAAAI,SAAAxzD,GAQAA,EAAAjC,QAAA,SAAAkD,GACA6gD,MAAAsR,KAAAK,UAAAxyD,IACA6gD,MAAAsR,KAAA7mC,KACA,IACAqR,EACA,uCACA38B,EACA,gDAdA6gD,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,wDAeA59B,IAIAsmE,oBAAA,WACA,GAAAxkB,MAAAwD,aACA,gBAAAtlD,EAAA49B,GAUA,OATA,IAAA59B,IAAA,IAAAA,GAEA8hD,MAAAsR,KAAA7mC,KACAu1B,MAAA8jB,WAAAG,aAAA/lE,GACA,8BACA49B,EACA,+CAGA59B,QAOA,SAAA8hD,GACA,YAEA,IAeAykB,GAAA,QAMAC,GAAA,MACAC,GACA,gBACA,gBACA,qBACA,qBACA,oBACA,oBACA,uBACA,sBACA,sBACA,iCACA99C,KAjBA,KAkBA+9C,GAAA,2CAAA/9C,KAlBA,IAgDAm5B,GAAA6kB,KAAA,SAAAx6D,GACAjQ,KAAA8lB,MAAA7V,IAGA21C,EAAAsR,KAAAiE,WAAAvV,EAAA6kB,MACA3kD,MAAA,SAAA7V,GACAjQ,KAAA0hD,IAAAkE,EAAAiD,YACA7oD,KAAA0qE,kBACA1qE,KAAAqT,SACArT,KAAA2qE,UACA3qE,KAAAypE,iBAAA,EACAzpE,KAAA4qE,eAAA,EACA5qE,KAAA6nD,SAAA53C,GAGAjQ,KAAAqS,GAAAk4D,EAAA,WACAvqE,KAAA6qE,YA9DA,aA+DA7qE,KAAA8qE,6BAhFA,uBAmFA9qE,KAAAqS,GAAAm4D,EAAA,WACAxqE,KAAA8qE,6BAnFA,mBAsFA9qE,KAAAqS,GAAA,iCACArS,KAAA8qE,6BArEA,aAuEA9qE,KAAAqS,GAAA,mCACArS,KAAA8qE,6BAlFA,eAoFA9qE,KAAAqS,GAAA,iCACArS,KAAA8qE,6BA/FA,sBAkGAD,YAAA,SAAAnpC,GACAA,QACA1hC,MAAA2qE,OAAAjpC,GAEA1hC,KAAA2qE,WAGAI,UAAA,SAAArpC,EAAAspC,GAQA,WAJAtoE,KAHA1C,KAAA2qE,OAAAjpC,KAIA1hC,KAAA2qE,OAAAjpC,GAAAspC,EAAArsE,KAAAqB,OAGAA,KAAA2qE,OAAAjpC,IAMAopC,6BAAA,SAAAppC,GACA1hC,KAAA6qE,YAAAnpC,GAGA1hC,KAAA2qE,OAAA5S,QAGA/3D,KAAAkJ,UACAlJ,KAAAirE,cAAA/f,KAAA,SAAAp3C,GACAA,EAAAg3D,6BAAAppC,MAYAwpC,WAAA,WAIA,aAHAlrE,MAAA2qE,OAAA5S,OACA/3D,KAAAypE,iBAAA,EACAzpE,KAAA8qE,+BACA9qE,MA4CAsF,MAAA,SAAA2K,GACA,GAAA2uD,GAAA3uD,MACAizD,SAKAxgE,KAAAk8D,EAAAhT,OACAlpD,KAAAk8D,EAAA/S,OACAnpD,KAAAk8D,EAAAxe,WACA19C,KAAAk8D,EAAAte,SAEA4iB,EAAAljE,KAAAmrE,eACAC,eAAA,EACAC,WAAArrE,KAAAsrE,cAGA,IAAAlrB,GAAAwe,EAAAxe,OAAA8iB,EAAA9iB,MACAE,EAAAse,EAAAte,QAAA4iB,EAAA5iB,OACAkJ,EAAAoV,EAAApV,WACAoC,MAAAlpD,KAAAk8D,EAAAhT,EAAAsX,EAAAtX,EAAAgT,EAAAhT,EACAC,MAAAnpD,KAAAk8D,EAAA/S,EAAAqX,EAAArX,EAAA+S,EAAA/S,EACAwb,EAAAzI,EAAAyI,QAAA,EACAkE,EAAA3M,EAAA2M,aAAA,CAEA,KAAAnrB,IAAAE,EAIA,WAHAsF,GAAAsR,KAAA3mD,MACA,oFAKA6vC,IAAA,EAAAinB,EACA/mB,GAAA,EAAA+mB,EAEAzb,GAAAyb,EACAxb,GAAAwb,CAEA,IAAAmE,GAAA,GAAA5lB,GAAA+Z,aACAnW,aACApJ,QACAE,WAEAmrB,EAAA,GAAA7lB,GAAA+Z,aACAnW,aACApJ,QACAE,WAEAorB,EAAA,GAAA9lB,GAAAia,WACArW,WAAA,EACApJ,QACAE,WAEAqrB,EAAAH,EAAA9S,aACAkT,EAAAF,EAAAhT,YA6CA,OA3CAgT,GAAAG,SAAA,EAEA7rE,KAAAkrE,aAEAS,EAAAtI,OACAuI,EAAAvI,OAEAsI,EAAA7f,WAAAF,GAAAC,GACA+f,EAAA9f,WAAAF,GAAAC,GAGA7rD,KAAA4qE,eAAA,EACA5qE,KAAA8qE,6BAhQA,mBAiQA9qE,KAAA8qE,6BA/PA,iBAiQA9qE,KAAA8rE,UAAAN,EAAAxrE,MAAA,GACAA,KAAA+rE,QAAAL,EAAA1rE,MAAA,GACAA,KAAA4qE,eAAA,EAEAe,EAAAvI,UACAwI,EAAAxI,UAIAmI,IACAI,EAAAtI,OACAsI,EAAA3J,YACA2J,EAAAzI,KAAA,IAAA9iB,EAAAE,GACAqrB,EAAAxJ,YACAwJ,EAAA9+C,QAAA,qBACA8+C,EAAA9+C,QAAA,eACA8+C,EAAAjI,SACAiI,EAAAvI,WAGApjE,KAAA2qE,OAAA5S,QACAiU,MAAAR,EACA3tD,OAAA4tD,EACAQ,IAAAP,EACA9f,IACAC,KAGA7rD,MAuCAmrE,cAAA,WAGA,SAAA5rB,OAAA,yCAEA2sB,iBAAA,SAAAhJ,EAAAxlC,GACA,GAMAyuC,GAAAC,EAAAC,EAAAC,EANAC,IACS3gB,EAAAsX,EAAAtX,EAAAC,EAAAqX,EAAArX,IACAD,EAAAsX,EAAAtX,EAAAsX,EAAA9iB,MAAAyL,EAAAqX,EAAArX,IACAD,EAAAsX,EAAAtX,EAAAsX,EAAA9iB,MAAAyL,EAAAqX,EAAArX,EAAAqX,EAAA5iB,SACAsL,EAAAsX,EAAAtX,EAAAC,EAAAqX,EAAArX,EAAAqX,EAAA5iB,SAGTksB,EAAAxsE,KAAAysE,qBAAA/uC,EAYA,OAXA6uC,GAAA1qE,QAAA,SAAA8pD,GACA,GAAA+gB,GAAAF,EAAA7gB,aACAjpD,KAAAypE,IACAA,EAAAE,EAAAK,EAAA9gB,EACAwgB,EAAAE,EAAAI,EAAA7gB,GAEAsgB,EAAAloE,KAAA0jE,IAAAwE,EAAAO,EAAA9gB,GACAwgB,EAAAnoE,KAAA0jE,IAAAyE,EAAAM,EAAA7gB,GACAwgB,EAAApoE,KAAA0H,IAAA0gE,EAAAK,EAAA9gB,GACA0gB,EAAAroE,KAAA0H,IAAA2gE,EAAAI,EAAA7gB,MAGAD,EAAAugB,EACAtgB,EAAAugB,EACAhsB,MAAAisB,EAAAF,EACA7rB,OAAAgsB,EAAAF,IAGAO,uBAAA,SAAAtjE,GACAA,EAAAg6D,OACAh6D,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,MACAqJ,EAAAyiD,UAAA9rD,KAAA2qE,OAAA5S,OAAAnM,EAAA5rD,KAAA2qE,OAAA5S,OAAAlM,EAEA,IAAA+gB,GAAA5sE,KAAA6sE,wBACArF,EAAAoF,EAAApjB,UAEAngD,GAAAm5D,UACAoK,EAAA/N,QACA,EACA,EACA+N,EAAAxsB,MAAAonB,EACAoF,EAAAtsB,OAAAknB,GAEAn+D,EAAA+5D,WAEA0J,qBAAA,SAAAzjE,GACA,GAAA0jE,GAAA/sE,KAAA2qE,OAAA5S,OACAgI,EAAAgN,EAAAd,GACA5iE,GAAAg6D,OACAh6D,EAAAyiD,UAAA9rD,KAAA2qE,OAAA5S,OAAAnM,EAAA5rD,KAAA2qE,OAAA5S,OAAAlM,GACAxiD,EAAAm5D,UAAAzC,EAAAlB,QAAA,KACAx1D,EAAA+5D,WAEAyJ,sBAAA,WACA,GAKAr9D,GACAw9D,EACAztE,EACAse,EARA4Q,EAAAzuB,KAAAyuB,UACAs+C,EAAA/sE,KAAA2qE,OAAA5S,OACAkV,EAAAF,EAAAf,MACAkB,EAAAH,EAAAlvD,OACAsvD,EAAAD,EAAAxU,YAMA,IAAAjqC,EAAA,CACA,IAAAzuB,KAAAypE,gBAAA,CACA,GAAAjC,GAAAyF,EAAAzjB,UAEA,KAoBA,IAnBAh6C,EAAAif,EAAAlsB,OACA4qE,EAAA17D,QAGA07D,EAAA3K,UACAyK,EAAApO,QACA,EACA,EACAoO,EAAA7N,WAAAoI,EACAyF,EAAA5N,YAAAmI,GAEAwF,EAAAG,EAAApK,aACA,EACA,EACAmK,EAAA9N,WACA8N,EAAA7N,aAIA9/D,EAAA,EAAuBA,EAAAiQ,EAASjQ,IAChCse,EAAA4Q,EAAAlvB,GACA,kBAAAse,IAQAA,EAAAlf,KAAAqB,KAAAgtE,GACAG,EAAAxU,aAAAqU,EAAA,MARApnB,EAAAsR,KAAA3mD,MACA,oDACAsN,GACA,yCAOW,MAAA1d,GACXylD,EAAAsR,KAAA3mD,MAAA,2BAAApQ,EAAAu/D,SAGA1/D,KAAAypE,iBAAA,EAGA,MAAAyD,GAEA,MAAAD,IAiEA56D,GAAA,SAAA+6D,EAAAnwD,GACA,OAAAtX,UAAApD,OACA,MAAAvC,MAAAqtE,UAAAznE,MAAA5F,KAAA2F,UAEA,IAEApG,GACAmT,EACAqnD,EACAuT,EACAvuE,EANAyxB,EAAA48C,EAAAxoE,MA9eA,KA+eA4K,EAAAghB,EAAAjuB,MAYA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1BmT,EAAA8d,EAAAjxB,GACAw6D,EAAArnD,EAAA9N,MAxgBA,KAygBA0oE,EAAAvT,EAAA,GACAh7D,EAAAg7D,EAAA,IAzgBA,GA4gBA/5D,KAAA0qE,eAAA4C,KACAttE,KAAA0qE,eAAA4C,OAGAttE,KAAA0qE,eAAA4C,GAAA/kE,MACAxJ,OACAke,WAIA,OAAAjd,OAuBA+kD,IAAA,SAAAqoB,EAAAzpD,GACA,GAEApkB,GACAo8D,EACAjpD,EACAqnD,EACAuT,EACAvuE,EAPAyxB,GAAA48C,GAAA,IAAAxoE,MApiBA,KAqiBA4K,EAAAghB,EAAAjuB,MAQA,KAAA6qE,EAEA,IAAAzR,IAAA37D,MAAA0qE,eACA1qE,KAAAutE,KAAA5R,EAGA,KAAAp8D,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAM1B,GALAmT,EAAA8d,EAAAjxB,GACAw6D,EAAArnD,EAAA9N,MAhkBA,KAikBA0oE,EAAAvT,EAAA,GACAh7D,EAAAg7D,EAAA,GAEAuT,EACAttE,KAAA0qE,eAAA4C,IACAttE,KAAAutE,KAAAD,EAAAvuE,EAAA4kB,OAGA,KAAAg4C,IAAA37D,MAAA0qE,eACA1qE,KAAAutE,KAAA5R,EAAA58D,EAAA4kB,EAIA,OAAA3jB,OAGAm8B,cAAA,SAAAqxC,GACA,GAAArtE,IACAkI,OAAArI,KACA6M,KAAA2gE,EAAA3gE,KACA2gE,MAGA,OADAxtE,MAAAytE,KAAAD,EAAA3gE,KAAA1M,GACAH,MAEA+tB,iBAAA,SAAAlhB,EAAAoQ,GAKA,MAHAjd,MAAAqS,GAAAxF,EAAA,SAAA2gE,GACAvwD,EAAAte,KAAAqB,KAAAwtE,SAEAxtE,MAEA8tB,oBAAA,SAAAjhB,GAEA,MADA7M,MAAA+kD,IAAAl4C,GACA7M,MAGAqtE,UAAA,SAAA36D,EAAAilD,EAAA16C,GACA,GAAAywD,GAAA1tE,IACAA,MAAAqS,GAAAK,EAAA,SAAA86D,GAEA,OADAG,GAAAH,EAAAnlE,OAAAulE,cAAAjW,GAAA,EAAA+V,GACAjvE,EAAA,EAAuBA,EAAAkvE,EAAAprE,OAAoB9D,IAC3C+uE,EAAA5nB,EAAAsR,KAAAwD,YAAA8S,GACAA,EAAAK,cAAAF,EAAAlvE,GACAwe,EAAAte,KAAAgvE,EAAAlvE,GAAA+uE,MAYA3oE,OAAA,WACA,GAAAyI,GAAAtN,KAAAsrE,WAgBA,OAdAh+D,MAAApE,WACAoE,EAAApE,SAAAjE,OAAAjF,KAAAY,MAAA,GACA0M,EAAAwgE,4BACA9tE,MAAAsN,QAKAtN,KAAA8qE,6BAxnBA,SAynBA9qE,KAAA8qE,6BAzoBA,qBA0oBA9qE,KAAA8qE,6BAvnBA,WAwnBA9qE,KAAA8qE,6BAloBA,aAmoBA9qE,KAAA8qE,6BA7oBA,mBA+oBA9qE,MASAgyC,QAAA,WAEA4T,EAAAsE,UAAAlqD,KAAA+tE,QAIA,QADAhlB,IAAA/oD,KAAAmB,WAAA,IAAAyD,MAAA,OACAnG,EAAA,EAAqBA,EAAAsqD,EAAAxmD,OAAkB9D,IAAA,CACvC,GAAAuvE,GAAAjlB,EAAAtqD,EACAmnD,GAAAwE,YAAA4jB,EAAAhuE,KAAA0hD,KAIA,MADA1hD,MAAA6E,SACA7E,MAWA6oE,QAAA,SAAAnnC,GACA,GAAAqO,GAzqBA,MAyqBA6V,EAAAsR,KAAA6D,YAAAr5B,EACA,OAAAkkB,GAAAsR,KAAAE,YAAAp3D,KAAA+vC,IACA/vC,KAAA+vC,KAGA/vC,KAAAqT,MAAAquB,IAYAusC,aAAA,WAIA,IAHA,GAAA3gE,GAAAtN,KAAAsrE,YACA4C,EAAA,GAAAtoB,GAAAqF,WAEA39C,GACA4gE,EAAA3lE,KAAA+E,GACAA,IAAAg+D,WAGA,OAAA4C,IAQAC,SAAA,WACA,MAAAnuE,MAAAqT,WAcAw0C,SAAA,SAAA53C,GACA,GAAA9K,GAAA4qC,CAEA,KAAA9/B,EACA,MAAAjQ,KAEA,KAAAmF,IAAA8K,GAnuBA,aAouBA9K,IAGA4qC,EA7tBA,MA6tBA6V,EAAAsR,KAAA6D,YAAA51D,GAEAygD,EAAAsR,KAAAE,YAAAp3D,KAAA+vC,IACA/vC,KAAA+vC,GAAA9/B,EAAA9K,IAGAnF,KAAA2oE,SAAAxjE,EAAA8K,EAAA9K,IAGA,OAAAnF,OAqBAouE,YAAA,WACA,MAAApuE,MAAA+qE,UAhwBA,YAgwBA/qE,KAAAquE,eAEAA,aAAA,WACA,GAAAC,GAAAtuE,KAAAuuE,eACAjhE,EAAAtN,KAAAsrE,WAIA,mBAAAgD,GACAhhE,GACAA,EAAA8gE,cAKAE,GAsBAE,UAAA,WACA,MAAAxuE,MAAA+qE,UA5xBA,UA4xBA/qE,KAAAyuE,aAEAA,WAAA,SAAApD,GACA,GAAAqD,GAAA1uE,KAAA2uE,aACArhE,EAAAtN,KAAAsrE,WAEA,OAAAD,KAAA/9D,GAAA,YAAAohE,IAEOrD,IAAA/9D,EACPohE,EAIA,YAAAA,GACAphE,GACAA,EAAAmhE,WAAApD,GAKAqD,IAUAE,cAAA,WACA,GAAAC,GAAA7uE,KAAA2+C,UAEA,QACAkwB,GAAA7uE,KAAAouE,eAAApuE,KAAAwuE,aACAK,GACAA,EAAAC,mBACA9uE,KAAAouE,eACApuE,KAAAwuE,aASAn0C,KAAA,WAEA,MADAr6B,MAAA+uE,YAAA,GACA/uE,MAQAgvE,KAAA,WAEA,MADAhvE,MAAA+uE,YAAA,GACA/uE,MAQAivE,UAAA,WACA,MAAAjvE,MAAAY,OAAA,GASAsuE,kBAAA,WASA,QAAAC,GAAAjmE,GAGA,IAFAmV,KACA7O,EAAAtG,EAAA3G,OACAhD,EAAA,EAAmBA,EAAAiQ,EAASjQ,IAC5BgO,EAAArE,EAAA3J,GACAqB,IAEA2M,EAAAirB,WAAA6xC,IACAhsD,IAAA7R,OAAAe,EAAA09D,cAAAjlE,YAGAuH,EAAAm0C,MAAAkiB,EAAAliB,MACAniD,EAAAiQ,EAIA6O,GAAA9b,OAAA,GAAA8b,EAAA,GAAA+wD,YAAAC,GACAF,EAAA9wD,GAzBA,GAGAA,GACA7O,EACAjQ,EACAgO,EANA8hE,EAAArvE,KAAAovE,WACAxL,EAAA5jE,KACAY,EAAA,CA8BA,OA34BA,UAu4BAgjE,EAAAprC,UACA22C,EAAAvL,EAAAhlB,WAAAqsB,eAGArqE,GAUAwuE,SAAA,WAIA,IAHA,GAAAC,GAAA,EACA/hE,EAAAtN,KAAAsN,OAEAA,GACA+hE,IACA/hE,UAEA,OAAA+hE,IAEAC,YAAA,SAAAhyC,GAGA,MAFAt9B,MAAAuvE,KAAAjyC,EAAAsuB,GACA5rD,KAAAwvE,KAAAlyC,EAAAuuB,GACA7rD,MAEAyvE,YAAA,WACA,OACA7jB,EAAA5rD,KAAA0vE,OACA7jB,EAAA7rD,KAAA2vE,SAWAC,oBAAA,SAAAlyC,GACA,GAAAmyC,GAAA7vE,KAAAysE,qBAAA/uC,GAAA2vB,YACAyiB,EAAA,GAAAlqB,GAAA8F,UACA2b,EAAArnE,KAAAqnE,QAMA,OAHAyI,GAAAlxE,EAAAixE,EAAA3uE,QACA4uE,EAAAhkB,UAAAub,EAAAzb,EAAAyb,EAAAxb,GAEAikB,EAAApjB,kBAWAY,oBAAA,SAAAhwB,GACA,GACAyyC,GADAC,EAAAhwE,KAAAiwE,iBAsBA,OAlBAjwE,MAAAqT,MAAAu4C,EAAAokB,EAAApkB,EACA5rD,KAAAqT,MAAAw4C,EAAAmkB,EAAAnkB,QACAmkB,GAAApkB,QACAokB,GAAAnkB,EAGAkkB,EAAA/vE,KAAAysE,uBAEAsD,EAAAjjB,SACAijB,EAAAjkB,UAAAxuB,EAAAsuB,EAAAtuB,EAAAuuB,GACAvuB,GACAsuB,EAAA5rD,KAAAqT,MAAAu4C,EAAAmkB,EAAArjB,iBAAAd,EACAC,EAAA7rD,KAAAqT,MAAAw4C,EAAAkkB,EAAArjB,iBAAAb,GAGA7rD,KAAAsvE,aAAwB1jB,EAAAtuB,EAAAsuB,EAAAC,EAAAvuB,EAAAuuB,IACxB7rD,KAAAkwE,cAAAF,GAEAhwE,MAEAkwE,cAAA,SAAA1D,GACA,GAAArnE,EAEA,KAAAA,IAAAqnE,GACAxsE,KAAAqT,MAAAlO,GAAAqnE,EAAArnE,EAGAnF,MAAA6qE,YAv+BA,aAw+BA7qE,KAAA8qE,6BAz/BA,sBA2/BAmF,gBAAA,WACA,GAAAzD,IACA5gB,EAAA5rD,KAAA0vE,OACA7jB,EAAA7rD,KAAA2vE,OACAQ,SAAAnwE,KAAAowE,cACA3I,OAAAznE,KAAAqwE,YACA3I,OAAA1nE,KAAAswE,YACAC,QAAAvwE,KAAAwwE,aACAC,QAAAzwE,KAAA0wE,aACAC,MAAA3wE,KAAA4wE,WACAC,MAAA7wE,KAAA8wE,WAiBA,OAdA9wE,MAAAqT,MAAAu4C,EAAA,EACA5rD,KAAAqT,MAAAw4C,EAAA,EACA7rD,KAAAqT,MAAA88D,SAAA,EACAnwE,KAAAqT,MAAAo0D,OAAA,EACAznE,KAAAqT,MAAAq0D,OAAA,EACA1nE,KAAAqT,MAAAk9D,QAAA,EACAvwE,KAAAqT,MAAAo9D,QAAA,EACAzwE,KAAAqT,MAAAs9D,MAAA,EACA3wE,KAAAqT,MAAAw9D,MAAA,EAEA7wE,KAAA6qE,YAjgCA,aAkgCA7qE,KAAA8qE,6BAnhCA,qBAshCA0B,GAiBAuE,KAAA,SAAA39C,GACA,GAAA49C,GAAA59C,EAAAw4B,EACAqlB,EAAA79C,EAAAy4B,EACAD,EAAA5rD,KAAA0vE,OACA7jB,EAAA7rD,KAAA2vE,MAWA,YATAjtE,KAAAsuE,IACAplB,GAAAolB,OAGAtuE,KAAAuuE,IACAplB,GAAAolB,GAGAjxE,KAAAsvE,aAAwB1jB,IAAAC,MACxB7rD,MAEAkxE,qBAAA,SAAA/lB,EAAAztB,GACA,GAEAluB,GACAjQ,EAHA4xE,KACA7jE,EAAAtN,KAAAsrE,WAOA,IAAA5tC,KAAAgkB,MAAA1hD,KAAA0hD,IAEA,WADAyJ,GAAAnrD,KAMA,KAFAmxE,EAAA9qD,QAAArmB,MAEAsN,KAAAowB,GAAApwB,EAAAo0C,MAAAhkB,EAAAgkB,MACAyvB,EAAA9qD,QAAA/Y,GACAA,UAIA,KADAkC,EAAA2hE,EAAA5uE,OACAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1B4rD,EAAAgmB,EAAA5xE,KAUA2sD,OAAA,SAAAklB,GAEA,MADApxE,MAAAqxE,YAAArxE,KAAAowE,cAAAgB,GACApxE,MAQAsxE,UAAA,WACA,IAAAtxE,KAAAsN,OAEA,MADAs4C,GAAAsR,KAAA7mC,KAAA,uDACA,CAEA,IAAAzvB,GAAAZ,KAAAY,KAIA,OAHAZ,MAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,GACAZ,KAAAsN,OAAApE,SAAAX,KAAAvI,MACAA,KAAAsN,OAAAwgE,uBACA,GAQAyD,OAAA,WACA,IAAAvxE,KAAAsN,OAEA,MADAs4C,GAAAsR,KAAA7mC,KAAA,oDACA,CAEA,IAAAzvB,GAAAZ,KAAAY,KAEA,OAAAA,GADAZ,KAAAsN,OAAA29D,cAAA1oE,OACA,IACAvC,KAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,GACAZ,KAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,IAAAZ,MACAA,KAAAsN,OAAAwgE,uBACA,IAUA0D,SAAA,WACA,IAAAxxE,KAAAsN,OAEA,MADAs4C,GAAAsR,KAAA7mC,KAAA,sDACA,CAEA,IAAAzvB,GAAAZ,KAAAY,KACA,OAAAA,GAAA,IACAZ,KAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,GACAZ,KAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,IAAAZ,MACAA,KAAAsN,OAAAwgE,uBACA,IAUA2D,aAAA,WACA,IAAAzxE,KAAAsN,OAIA,MAHAs4C,GAAAsR,KAAA7mC,KACA,0DAEA,CAEA,IAAAzvB,GAAAZ,KAAAY,KACA,OAAAA,GAAA,IACAZ,KAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,GACAZ,KAAAsN,OAAApE,SAAAmd,QAAArmB,MACAA,KAAAsN,OAAAwgE,uBACA,IAWA1lB,UAAA,SAAAspB,GACA,IAAA1xE,KAAAsN,OAEA,MADAs4C,GAAAsR,KAAA7mC,KAAA,qDACA,CAEA,IAAAzvB,GAAAZ,KAAAY,KAIA,OAHAZ,MAAAsN,OAAApE,SAAAjE,OAAArE,EAAA,GACAZ,KAAAsN,OAAApE,SAAAjE,OAAAysE,EAAA,EAAA1xE,MACAA,KAAAsN,OAAAwgE,sBACA9tE,MAQA2hE,mBAAA,WACA,MAAA3hE,MAAA+qE,UAvsCA,kBAusCA/qE,KAAA2xE,sBAEAA,oBAAA,WACA,GAAAjQ,GAAA1hE,KAAA4xE,aACAtkE,EAAAtN,KAAAsrE,WAIA,OAHAh+D,OAAAs9D,gBACAlJ,GAAA1hE,KAAAsrE,YAAA3J,sBAEAD,GAYAuB,OAAA,SAAA4O,GAQA,MANA7xE,MAAAsrE,cAAAuG,KAGA7xE,KAAA8xE,kBAAA9xE,KAAA6E,QAAAlG,KAAAqB,MACA6xE,EAAA9/D,IAAA/R,OAEAA,MAQAuG,SAAA,WACA,GAEApB,GACArB,EACA9E,EACA+yE,EALAzxE,KACA+S,EAAArT,KAAAmuE,UAMA7tE,GAAA+S,QAEA,KAAAlO,IAAAkO,GACAvP,EAAAuP,EAAAlO,GACAnG,EAAA,kBAAAgB,MAAAmF,IAAAnF,KAAAmF,SAEAkO,GAAAlO,GACA4sE,EAAA/yE,IAAAL,KAAAqB,MAAA,KAEAqT,EAAAlO,GAAArB,EACAiuE,IAAAjuE,IACAxD,EAAA+S,MAAAlO,GAAArB,EAKA,OADAxD,GAAA0xE,UAAAhyE,KAAAiyE,eACArsB,EAAAsR,KAAA8G,oBAAA19D,IAQA4xE,OAAA,WACA,MAAA3wE,MAAAE,UAAAzB,KAAAuG,aAQA+kE,UAAA,WACA,MAAAtrE,MAAAsN,QAcAsgE,cAAA,SAAAjW,EAAAwa,EAAAzE,GACA,GAAAlnE,KAEA2rE,IAAAnyE,KAAAoyE,SAAAza,IACAnxD,EAAA+B,KAAAvI,KAGA,KADA,GAAAk3C,GAAAl3C,KAAAsN,OACA4pC,GAAA,CACA,GAAAA,IAAAw2B,EACA,MAAAlnE,EAEA0wC,GAAAk7B,SAAAza,IACAnxD,EAAA+B,KAAA2uC,GAEAA,IAAA5pC,OAEA,MAAA9G,IAcA6rE,aAAA,SAAA1a,EAAAwa,EAAAzE,GACA,MAAA1tE,MAAA4tE,cAAAjW,EAAAwa,EAAAzE,GAAA,IAGA0E,SAAA,SAAAza,GACA,IAAAA,EACA,QAEA,IAEAp4D,GACA+yE,EAHAC,EAAA5a,EAAAj3D,QAAA,SAAAkE,MAAA,KACA4K,EAAA+iE,EAAAhwE,MAIA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAc1B,GAbA+yE,EAAAC,EAAAhzE,GACAqmD,EAAAsR,KAAAQ,gBAAA4a,KACA1sB,EAAAsR,KAAA7mC,KACA,aACAiiD,EACA,2EAEA1sB,EAAAsR,KAAA7mC,KACA,gHAEAu1B,EAAAsR,KAAA7mC,KAAA,6BAGA,MAAAiiD,EAAArxE,OAAA,IACA,GAAAjB,KAAAgO,OAAAskE,EAAApxE,MAAA,GACA,aAES,UAAAoxE,EAAArxE,OAAA,IAET,GAAAjB,KAAAwyE,QAAAF,EAAApxE,MAAA,IACA,aAES,QAAAlB,KAAAyyE,KAAAH,GAAA/vE,OACT,QAGA,WAQAo8C,SAAA,WACA,GAAArxC,GAAAtN,KAAAsrE,WACA,OAAAh+D,KAAAqxC,WAAA,MAQAC,SAAA,WACA,MAAA5+C,MAAA+qE,UA32CA,QA22CA/qE,KAAA0yE,YAEAA,UAAA,WACA,GAAAplE,GAAAtN,KAAAsrE,WACA,OAAAh+D,GACAA,EAAAsxC,eAEA,IA2BA6uB,KAAA,SAAAkF,EAAAnF,EAAAoF,GAUA,MATApF,SACAA,EAAAnlE,OAAAmlE,EAAAnlE,QAAArI,KAEA4yE,EACA5yE,KAAA6yE,eAAAF,EAAAnF,GAGAxtE,KAAA8yE,MAAAH,EAAAnF,GAEAxtE,MASAysE,qBAAA,SAAA/uC,GAEA,MAAAA,GACA19B,KAAA+yE,sBAAAr1C,GAGA19B,KAAA+qE,UAt7CA,oBAs7CA/qE,KAAA+yE,wBAGAA,sBAAA,SAAAr1C,GACA,GAAAs1C,GAAA,GAAAptB,GAAA8F,SAeA,OAZA1rD,MAAAkxE,qBAAA,SAAAp9D,GACA,GAAAm/D,GAAAn/D,EAAAm/D,mBAEA,SAAAA,EACAD,EAAApmB,SAAA94C,EAAAo/D,gBACS,aAAAD,GACTD,EAAAlnB,UACAh4C,EAAA47D,OAAA57D,EAAA08D,aACA18D,EAAA67D,OAAA77D,EAAA48D,eAGOhzC,GACPs1C,GASAzL,iBAAA,SAAA7pC,GAEA,MAAAA,GACA19B,KAAAmzE,kBAAAz1C,GAGA19B,KAAA+qE,UAv9CA,gBAu9CA/qE,KAAAmzE,oBAGAA,kBAAA,SAAAz1C,GAGA,IADA,GAAApwB,GAAAtN,KACAsN,GACAA,EAAAs9D,gBACAltC,EAAApwB,GAEAA,IAAAg+D,WAGA,IAAA7D,GAAA,EACAC,EAAA,CAOA,OAJA1nE,MAAAkxE,qBAAA,SAAAp9D,GACA2zD,GAAA3zD,EAAA2zD,SACAC,GAAA5zD,EAAA4zD,UACOhqC,IAEPkuB,EAAA6b,EACA5b,EAAA6b,IASAwL,aAAA,WACA,MAAAlzE,MAAA+qE,UAx+CA,YAw+CA/qE,KAAAozE,gBAEAA,cAAA,WACA,GAAAx0E,GAAA,GAAAgnD,GAAA8F,UACAE,EAAA5rD,KAAA0vE,OACA7jB,EAAA7rD,KAAA2vE,OACAQ,EAAAvqB,EAAAyE,SAAArqD,KAAAowE,eACA3I,EAAAznE,KAAAqwE,YACA3I,EAAA1nE,KAAAswE,YACAK,EAAA3wE,KAAA4wE,WACAC,EAAA7wE,KAAA8wE,WACAP,EAAAvwE,KAAAwwE,aACAC,EAAAzwE,KAAA0wE,YAkBA,OAhBA,KAAA9kB,GAAA,IAAAC,GACAjtD,EAAAktD,UAAAF,EAAAC,GAEA,IAAAskB,GACAvxE,EAAAstD,OAAAikB,GAEA,IAAAQ,GAAA,IAAAE,GACAjyE,EAAA+tD,KAAAgkB,EAAAE,GAEA,IAAApJ,GAAA,IAAAC,GACA9oE,EAAAmtD,MAAA0b,EAAAC,GAEA,IAAA6I,GAAA,IAAAE,GACA7xE,EAAAktD,WAAA,EAAAykB,GAAA,EAAAE,GAGA7xE,GAmBA4jB,MAAA,SAAAliB,GAEA,GACA6E,GACAkuE,EACA7jE,EACAjQ,EACAkgD,EALApsC,EAAAuyC,EAAAsR,KAAAwD,YAAA16D,KAAAqT,MAOA,QAAA5U,KAAA6rE,GAAA,OAEAj3D,GADAi3D,EAAA7rE,IAIA,IAAA0G,IAAA7E,GACA+S,EAAAlO,GAAA7E,EAAA6E,EAGA,IAAA2O,GAAA,GAAA9T,MAAA8kB,YAAAzR,EAEA,KAAAlO,IAAAnF,MAAA0qE,eAGA,IAFA2I,EAAArzE,KAAA0qE,eAAAvlE,GACAqK,EAAA6jE,EAAA9wE,OACAhD,EAAA,EAAmBA,EAAAiQ,EAASjQ,IAC5BkgD,EAAA4zB,EAAA9zE,GAKAkgD,EAAA1gD,KAAAiG,QA/jDA,SA+jDA,IAEA8O,EAAA42D,eAAAvlE,KACA2O,EAAA42D,eAAAvlE,OAEA2O,EAAA42D,eAAAvlE,GAAAoD,KAAAk3C,GAIA,OAAA3rC,IAEAw/D,eAAA,SAAArjE,GACAA,OAEA,IAAAsjE,GAAAvzE,KAAAmrE,gBAEAqI,EAAAxzE,KAAA4+C,WACAgN,MAAAlpD,KAAAuN,EAAA27C,EAAA37C,EAAA27C,EAAA2nB,EAAA3nB,EACAC,MAAAnpD,KAAAuN,EAAA47C,EAAA57C,EAAA47C,EAAA0nB,EAAA1nB,EACArC,EAAAv5C,EAAAu5C,YAAA,EACAuO,EAAA,GAAAnS,GAAA+Z,aACAvf,MAAAnwC,EAAAmwC,OAAAmzB,EAAAnzB,QAAAozB,IAAApU,WAAA,GACA9e,OACArwC,EAAAqwC,QAAAizB,EAAAjzB,SAAAkzB,IAAAnU,YAAA,GACA7V,eAEAngD,EAAA0uD,EAAAW,YAWA,OATArvD,GAAAg6D,QAEAzX,GAAAC,IACAxiD,EAAAyiD,WAAA,EAAAF,GAAA,EAAAC,GAGA7rD,KAAA8rE,UAAA/T,GACA1uD,EAAA+5D,UAEArL,GAgBA0b,SAAA,SAAAxjE,GACA,MAAAjQ,MAAAszE,eAAArjE,GAAA4uD,SAqBAjG,UAAA,SAAA3oD,GACAA,OACA,IAAAuvD,GAAAvvD,EAAAuvD,UAAA,KACAC,EAAAxvD,EAAAwvD,SAAA,KACAiU,EAAA1zE,KAAAszE,eAAArjE,GAAA2oD,UAAA4G,EAAAC,EAIA,OAHAxvD,GAAA0T,UACA1T,EAAA0T,SAAA+vD,GAEAA,GA2BAC,QAAA,SAAA1jE,GACA,IAAAA,MAAA0T,SACA,2DAEA,IAAAA,GAAA1T,EAAA0T,eACA1T,GAAA0T,SACAiiC,EAAAsR,KAAAmB,UAAAr4D,KAAA44D,UAAA3oD,GAAA,SAAA2jE,GACAjwD,EAAAiwD,MAGAzU,QAAA,SAAA0U,GAGA,MAFA7zE,MAAAs/D,SAAAuU,EAAAzzB,OACApgD,KAAAu/D,UAAAsU,EAAAvzB,QACAtgD,MAEA8zE,QAAA,WACA,OACA1zB,MAAApgD,KAAAo/D,WACA9e,OAAAtgD,KAAAq/D,cAGAD,SAAA,WACA,MAAAp/D,MAAAqT,MAAA+sC,OAAA,GAEAif,UAAA,WACA,MAAAr/D,MAAAqT,MAAAitC,QAAA,GAQA2xB,aAAA,WACA,MAAAjyE,MAAAgyE,WAAAhyE,KAAAw4B,UAQAppB,QAAA,WACA,MAAApP,MAAAw4B,UAEAu7C,gBAAA,WAEA,WAAArxE,KAAA1C,KAAAqT,MAAAo2C,aACAzpD,KAAAqT,MAAAo2C,aACOzpD,KAAAsN,OACPtN,KAAAsN,OAAAymE,kBAEAnuB,EAAA6D,cAGAgpB,KAAA,SAAA9a,GACA,MAAA33D,MAAAgyE,YAAAra,GAAA33D,KAAAw4B,WAAAm/B,GACA33D,UAGAutE,KAAA,SAAA1gE,EAAA9N,EAAA4kB,GACA,GACAllB,GACAu1E,EACA/2D,EAHAg3D,EAAAj0E,KAAA0qE,eAAA79D,EAKA,KAAApO,EAAA,EAAiBA,EAAAw1E,EAAA1xE,OAAyB9D,IAQ1C,GAPAu1E,EAAAC,EAAAx1E,GAAAM,KACAke,EAAAg3D,EAAAx1E,GAAAwe,UAOA,UAAA+2D,GAAA,UAAAj1E,GACAA,GAAAi1E,IAAAj1E,GACA4kB,OAAA1G,GACA,CAEA,GADAg3D,EAAAhvE,OAAAxG,EAAA,GACA,IAAAw1E,EAAA1xE,OAAA,OACAvC,MAAA0qE,eAAA79D,EACA,OAEApO,MAIAsqE,iBAAA,SAAArnC,EAAAonC,EAAAr9D,GACAzL,KAAA8yE,MAAApxC,EA5wDA,UA6wDAonC,SACAr9D,YAGAyoE,MAAA,SAAAlmE,GACA,GAAAmmE,GAAAn0E,KAAA+tE,OAKA,OAHAnoB,GAAAsE,UAAAiqB,GACAvuB,EAAAqE,OAAAjqD,KAAAgO,GACAhO,KAAA2oE,SAjxDA,KAixDA36D,GACAhO,MAEAo0E,QAAA,SAAAr1E,GACA,GAEAivE,GAAAvvE,EAFA41E,GAAAr0E,KAAAmB,WAAA,IAAAyD,MAAA,OACA0vE,GAAAv1E,GAAA,IAAA6F,MAAA,MAGA,KAAAnG,EAAA,EAAiBA,EAAA41E,EAAA9xE,OAAqB9D,IACtCuvE,EAAAqG,EAAA51E,IACA,IAAA61E,EAAAtvE,QAAAgpE,OACApoB,EAAAwE,YAAA4jB,EAAAhuE,KAAA0hD,IAKA,KAAAjjD,EAAA,EAAiBA,EAAA61E,EAAA/xE,OAAqB9D,IACtCuvE,EAAAsG,EAAA71E,IACA,IAAA41E,EAAArvE,QAAAgpE,OACApoB,EAAAuE,SAAAnqD,KAAAguE,EAKA,OADAhuE,MAAA2oE,SAnyDA,OAmyDA5pE,GACAiB,MAcAu0E,QAAA,SAAAx1E,GACA,IAAAiB,KAAAwyE,QAAAzzE,GAAA,CACA,GAAAy1E,GAAAx0E,KAAAjB,OACA01E,EAAAD,IAAA,IAAAz1E,GACAiB,MAAAo0E,QAAAK,GAEA,MAAAz0E,OAaAwyE,QAAA,SAAAzzE,GAEA,YADAiB,KAAAjB,QAAA,IAAA6F,MAAA,OACAI,QAAAjG,IAcA21E,WAAA,SAAA31E,GACA,GAAAgqD,IAAA/oD,KAAAjB,QAAA,IAAA6F,MAAA,OACAhE,EAAAmoD,EAAA/jD,QAAAjG,EAKA,QAJA,IAAA6B,IACAmoD,EAAA9jD,OAAArE,EAAA,GACAZ,KAAAo0E,QAAArrB,EAAAt8B,KAAA,OAEAzsB,MAYA6sB,QAAA,SAAA6U,EAAA59B,GACA,GAAAisC,GAx2DA,MAw2DA6V,EAAAsR,KAAA6D,YAAAr5B,GACAypB,EAAAnrD,KAAA+vC,EAQA,OANA6V,GAAAsR,KAAAE,YAAAjM,GACAA,EAAAxsD,KAAAqB,KAAA8D,GAGA9D,KAAA2oE,SAAAjnC,EAAA59B,GAEA9D,MAEA2oE,SAAA,SAAAxjE,EAAArB,GACA,GAAAglE,IACAA,EAAA9oE,KAAAqT,MAAAlO,MACArB,IACA8hD,EAAAsR,KAAAzzD,SAAAK,SAGApB,KAAAoB,GAAA,OAAAA,QACA9D,MAAAqT,MAAAlO,GAEAnF,KAAAqT,MAAAlO,GAAArB,EAEA9D,KAAA+oE,iBAAA5jE,EAAA2jE,EAAAhlE,KAEA6wE,kBAAA,SAAAxvE,EAAAwQ,EAAA7R,GACA,GAAAglE,OACApmE,KAAAoB,IACAglE,EAAA9oE,KAAAqT,MAAAlO,GAEA2jE,IAEA9oE,KAAAqT,MAAAlO,GAAAnF,KAAA6oE,QAAA1jE,IAGAnF,KAAAqT,MAAAlO,GAAAwQ,GAAA7R,EACA9D,KAAA+oE,iBAAA5jE,EAAA2jE,EAAAhlE,KAGA+uE,eAAA,SAAAF,EAAAnF,EAAAoH,GACA,GAAAC,IAAA,CAqBA,IAnBArH,GAAAxtE,KAAAw4B,WAAA6xC,IACAmD,EAAAnlE,OAAArI,MAt5DA,eA05DA2yE,GACAiC,IACA50E,KAAA0hD,MAAAkzB,EAAAlzB,KACA1hD,KAAA80E,cAAA90E,KAAA80E,aAAAF,IAEAC,GAAA,EA95DA,eAg6DAlC,GACAiC,IACA50E,KAAA0hD,MAAAkzB,EAAAlzB,KACA1hD,KAAA80E,cAAA90E,KAAA80E,aAAAF,MAEAC,GAAA,GAEAA,EAAA,CACA70E,KAAA8yE,MAAAH,EAAAnF,EAGA,IAAAuH,IA56DA,eA66DApC,GA56DA,eA46DAA,IACAiC,GACAA,EAAAE,cACAF,EAAAE,aAAA90E,QACA40E,EAAAE,aAAA90E,KAAAsN,SAEAkgE,MAAAwH,eAAAxH,IACAxtE,KAAAsN,QACAtN,KAAAsN,OAAA8gE,gBACA2G,IAEAH,KAAAtnE,OACAtN,KAAA6yE,eAAAl0E,KACAqB,KAAAsN,OACAqlE,EACAnF,EACAoH,EAAAtnE,QAGAtN,KAAA6yE,eAAAl0E,KAAAqB,KAAAsN,OAAAqlE,EAAAnF,MAKAsF,MAAA,SAAAH,EAAAnF,GACA,GACA/uE,GADA+xB,EAAAxwB,KAAA0qE,eAAAiI,EAOA,IAJAnF,QACAA,EAAAK,cAAA7tE,KACAwtE,EAAA3gE,KAAA8lE,EAEAniD,EACA,IAAA/xB,EAAA,EAAmBA,EAAA+xB,EAAAjuB,OAAmB9D,IACtC+xB,EAAA/xB,GAAAwe,QAAAte,KAAAqB,KAAAwtE,IAUAyH,KAAA,WAGA,MAFAj1E,MAAA8rE,YACA9rE,KAAA+rE,UACA/rE,QAiBA4lD,EAAA6kB,KAAA/lE,OAAA,SAAAuE,EAAAqkC,GAIA,MAHAsY,GAAAsR,KAAAM,UAAAvuD,KACAA,EAAA1H,KAAAC,MAAAyH,IAEAjJ,KAAAk1E,YAAAjsE,EAAAqkC,IAEAsY,EAAA6kB,KAAAyK,YAAA,SAAA50E,EAAAgtC,GACA,GAEAtN,GACAxwB,EACAjQ,EAJAyyE,EAAApsB,EAAA6kB,KAAA9qE,UAAAsyE,aAAAtzE,KAAA2B,GACA4I,EAAA5I,EAAA4I,QAWA,IALAokC,IACAhtC,EAAA+S,MAAAi6B,aAGAtN,EAAA,GAAA4lB,GAAAosB,GAAA1xE,EAAA+S,OACAnK,EAEA,IADAsG,EAAAtG,EAAA3G,OACAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1BygC,EAAAjuB,IAAA/R,KAAAk1E,YAAAhsE,EAAA3J,IAIA,OAAAygC,IAKA4lB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,YAqBA7kB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,IACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,IACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,2BACA,cACA7kB,EAAA8jB,WAAAO,sBAiBArkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,UACA,EACA7kB,EAAA8jB,WAAAI,sBAoBAlkB,EAAAwiB,QAAAI,UAAA5iB,EAAA6kB,KAAA,QACA7kB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,QAoBA7kB,EAAAwiB,QAAAI,UAAA5iB,EAAA6kB,KAAA,MACA7kB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,MAiBA7kB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,WACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BAAAhjB,EAAA6kB,KAAA,mBAsBA7kB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,SACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,SACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BAAAhjB,EAAA6kB,KAAA,kBAsBA7kB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,QACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,QACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BAAAhjB,EAAA6kB,KAAA,oBAqBA7kB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,UACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,UACA,EACA7kB,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAK,UACA7iB,EAAA6kB,KACA,eACA7kB,EAAA8jB,WAAAI,sBAEAlkB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,gBAoBA7kB,EAAAwiB,QAAAK,UACA7iB,EAAA6kB,KACA,QACA7kB,EAAA8jB,WAAAI,sBAEAlkB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,SAgBA7kB,EAAAwiB,QAAAK,UACA7iB,EAAA6kB,KACA,SACA7kB,EAAA8jB,WAAAI,sBAEAlkB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,UAgBA7kB,EAAAwiB,QAAAC,gBAAAziB,EAAA6kB,KAAA,+BACA3mE,GASA,OAPA,IAAAA,IAAA,IAAAA,GAAA,YAAAA,GAEA8hD,EAAAsR,KAAA7mC,KACAvsB,EACA,+FAGAA,IA4CA8hD,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,kBACA,EACA7kB,EAAA8jB,WAAAU,uBAGAxkB,EAAAwiB,QAAAC,gBAAAziB,EAAA6kB,KAAA,wBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,IA0BA8hD,EAAAwiB,QAAAC,gBAAAziB,EAAA6kB,KAAA,6BACA3mE,GASA,OAPA,IAAAA,IAAA,IAAAA,GAAA,YAAAA,GAEA8hD,EAAAsR,KAAA7mC,KACAvsB,EACA,6FAGAA,IAyBA8hD,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,oBACA,MACA7kB,EAAA8jB,WAAAO,sBAwCArkB,EAAAwiB,QAAAM,0BAAA9iB,EAAA6kB,KAAA,QAEA7kB,EAAAwiB,QAAAc,WAAAtjB,EAAA6kB,MACA0K,UAAA,SACAC,eAAA,cACAC,eAAA,gBAGAzvB,EAAAqF,WAAAO,WAAA5F,EAAA6kB,OACC7kB,OAED,WACA,YAUAA,OAAAgE,QAAA0rB,UAAA,SAAAtI,GACA,GAEAvuE,GACA82E,EAHAtsE,EAAA+jE,EAAA/jE,KACAuG,EAAAvG,EAAA1G,MAIA,KAAA9D,EAAA,EAAeA,EAAA+Q,EAAS/Q,GAAA,EACxB82E,EAAA,IAAAtsE,EAAAxK,GAAA,GAAAwK,EAAAxK,EAAA,OAAAwK,EAAAxK,EAAA,GAEAwK,EAAAxK,GAAA82E,EAEAtsE,EAAAxK,EAAA,GAAA82E,EAEAtsE,EAAAxK,EAAA,GAAA82E,MAKA,SAAA3vB,GACA,YAWAA,GAAAgE,QAAA4rB,SAAA,SAAAxI,GACA,GAGAvuE,GAHA82E,EAAA,IAAAv1E,KAAAu1E,aACAtsE,EAAA+jE,EAAA/jE,KACAuG,EAAAvG,EAAA1G,MAGA,KAAA9D,EAAA,EAAeA,EAAA+Q,EAAS/Q,GAAA,EAExBwK,EAAAxK,IAAA82E,EAEAtsE,EAAAxK,EAAA,IAAA82E,EAEAtsE,EAAAxK,EAAA,IAAA82E,GAIA3vB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,aACA,EACA7kB,EAAA8jB,WAAAI,qBACAlkB,EAAAwiB,QAAAoB,iBAWC5jB,OAED,WACA,YAUAA,OAAAgE,QAAA6rB,OAAA,SAAAzI,GACA,GAEAvuE,GAFAwK,EAAA+jE,EAAA/jE,KACAuG,EAAAvG,EAAA1G,MAGA,KAAA9D,EAAA,EAAeA,EAAA+Q,EAAS/Q,GAAA,EAExBwK,EAAAxK,GAAA,IAAAwK,EAAAxK,GAEAwK,EAAAxK,EAAA,OAAAwK,EAAAxK,EAAA,GAEAwK,EAAAxK,EAAA,OAAAwK,EAAAxK,EAAA,OASA,SAAAmnD,GACA,YA0CA,SAAA8vB,KACA11E,KAAAg5D,EAAA,EACAh5D,KAAAD,EAAA,EACAC,KAAA0G,EAAA,EACA1G,KAAA0F,EAAA,EACA1F,KAAA8xB,KAAA,KAugBA,QAAA6jD,GAAA3I,EAAA4I,GACA,GAIAhqB,GACAC,EACAptD,EACAoB,EACAg2E,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA5Y,EACA6Y,EACAC,EACAC,EACAC,EA3BAC,EAAAhK,EAAA/jE,KACAm3C,EAAA4sB,EAAA5sB,MACAE,EAAA0sB,EAAA1sB,OA2BApT,EAAA0oC,IAAA,EACAqB,EAAA72B,EAAA,EACA82B,EAAA52B,EAAA,EACA62B,EAAAvB,EAAA,EACAwB,EAAAD,KAAA,KACAE,EAAA,GAAA3B,GACA4B,EAAA,KACA53C,EAAA23C,EACAE,EAAA,KACAC,EAAA,KACAC,EAAAC,EAAA9B,GACA+B,EAAAC,EAAAhC,EAEA,KAAAn3E,EAAA,EAAeA,EAAAyuC,EAASzuC,IACxBihC,IAAA5N,KAAA,GAAA4jD,GACAj3E,IAAA04E,IACAG,EAAA53C,EAQA,KAJAA,EAAA5N,KAAAulD,EAEAtB,EAAAD,EAAA,EAEAjqB,EAAA,EAAeA,EAAAvL,EAAYuL,IAAA,CAe3B,IAdA2qB,EAAAC,EAAAC,EAAAC,EAAAX,EAAAC,EAAAC,EAAAC,EAAA,EAEAC,EAAAe,GAAApZ,EAAAiZ,EAAAlB,IACAO,EAAAc,GAAAP,EAAAI,EAAAlB,EAAA,IACAQ,EAAAa,GAAAN,EAAAG,EAAAlB,EAAA,IACAS,EAAAY,GAAAL,EAAAE,EAAAlB,EAAA,IAEAE,GAAAoB,EAAArZ,EACAkY,GAAAmB,EAAAR,EACAV,GAAAkB,EAAAP,EACAV,GAAAiB,EAAAN,EAEAp3C,EAAA23C,EAEA54E,EAAA,EAAiBA,EAAA04E,EAAiB14E,IAClCihC,EAAAs5B,EAAA+E,EACAr+B,EAAA3/B,EAAA62E,EACAl3C,EAAAh5B,EAAAmwE,EACAn3C,EAAAh6B,EAAAoxE,EACAp3C,IAAA5N,IAGA,KAAArzB,EAAA,EAAiBA,EAAA04E,EAAiB14E,IAClCoB,EAAAi2E,IAAAmB,EAAAx4E,EAAAw4E,EAAAx4E,IAAA,GACAu3E,IAAAt2C,EAAAs5B,EAAA+E,EAAAiZ,EAAAn3E,KAAAk3E,EAAAI,EAAA14E,GACAw3E,IAAAv2C,EAAA3/B,EAAA62E,EAAAI,EAAAn3E,EAAA,IAAAk3E,EACAb,IAAAx2C,EAAAh5B,EAAAmwE,EAAAG,EAAAn3E,EAAA,IAAAk3E,EACAZ,IAAAz2C,EAAAh6B,EAAAoxE,EAAAE,EAAAn3E,EAAA,IAAAk3E,EAEAP,GAAAzY,EACA0Y,GAAAG,EACAF,GAAAG,EACAF,GAAAG,EAEAp3C,IAAA5N,IAKA,KAFAylD,EAAAF,EACAG,EAAAF,EACA1rB,EAAA,EAAiBA,EAAAxL,EAAWwL,IAC5BorB,EAAAlB,EAAA,GAAAgB,EAAAX,EAAAsB,GAAAE,EACA,IAAAb,GACAA,EAAA,IAAAA,EACAE,EAAAlB,IAAAE,EAAAyB,GAAAE,GAAAb,EACAE,EAAAlB,EAAA,IAAAG,EAAAwB,GAAAE,GAAAb,EACAE,EAAAlB,EAAA,IAAAI,EAAAuB,GAAAE,GAAAb,GAEAE,EAAAlB,GAAAkB,EAAAlB,EAAA,GAAAkB,EAAAlB,EAAA,KAGAE,GAAAI,EACAH,GAAAI,EACAH,GAAAI,EACAH,GAAAI,EAEAH,GAAAmB,EAAAve,EACAqd,GAAAkB,EAAAx3E,EACAu2E,GAAAiB,EAAA7wE,EACA6vE,GAAAgB,EAAA7xE,EAEA7F,EAAAk2E,IAAAl2E,EAAA+rD,EAAAgqB,EAAA,GAAAqB,EAAAp3E,EAAAo3E,IAAA,EAEAT,GAAAe,EAAAve,EAAAge,EAAAn3E,GACA42E,GAAAc,EAAAx3E,EAAAi3E,EAAAn3E,EAAA,GACA62E,GAAAa,EAAA7wE,EAAAswE,EAAAn3E,EAAA,GACA82E,GAAAY,EAAA7xE,EAAAsxE,EAAAn3E,EAAA,GAEAm2E,GAAAQ,EACAP,GAAAQ,EACAP,GAAAQ,EACAP,GAAAQ,EAEAY,IAAAzlD,KAEAskD,GAAArY,EAAAyZ,EAAAxe,EACAqd,GAAAO,EAAAY,EAAAz3E,EACAu2E,GAAAO,EAAAW,EAAA9wE,EACA6vE,GAAAO,EAAAU,EAAA9xE,EAEA8wE,GAAAzY,EACA0Y,GAAAG,EACAF,GAAAG,EACAF,GAAAG,EAEAU,IAAA1lD,KAEAgkD,GAAA,CAEAC,IAAA31B,EAGA,IAAAwL,EAAA,EAAeA,EAAAxL,EAAWwL,IAAA,CAgB1B,IAfA6qB,EAAAC,EAAAC,EAAAH,EAAAP,EAAAC,EAAAC,EAAAH,EAAA,EAEAF,EAAAlqB,GAAA,EACAwqB,EAAAe,GAAApZ,EAAAiZ,EAAAlB,IACAO,EAAAc,GAAAP,EAAAI,EAAAlB,EAAA,IACAQ,EAAAa,GAAAN,EAAAG,EAAAlB,EAAA,IACAS,EAAAY,GAAAL,EAAAE,EAAAlB,EAAA,IAEAE,GAAAoB,EAAArZ,EACAkY,GAAAmB,EAAAR,EACAV,GAAAkB,EAAAP,EACAV,GAAAiB,EAAAN,EAEAp3C,EAAA23C,EAEA54E,EAAA,EAAiBA,EAAA04E,EAAiB14E,IAClCihC,EAAAs5B,EAAA+E,EACAr+B,EAAA3/B,EAAA62E,EACAl3C,EAAAh5B,EAAAmwE,EACAn3C,EAAAh6B,EAAAoxE,EACAp3C,IAAA5N,IAKA,KAFA+jD,EAAAz1B,EAEA3hD,EAAA,EAAiBA,GAAAm3E,EAAan3E,IAC9Bq3E,EAAAD,EAAAjqB,GAAA,EAEAoqB,IAAAt2C,EAAAs5B,EAAA+E,EAAAiZ,EAAAlB,KAAAiB,EAAAI,EAAA14E,GACAw3E,IAAAv2C,EAAA3/B,EAAA62E,EAAAI,EAAAlB,EAAA,IAAAiB,EACAb,IAAAx2C,EAAAh5B,EAAAmwE,EAAAG,EAAAlB,EAAA,IAAAiB,EACAZ,IAAAz2C,EAAAh6B,EAAAoxE,EAAAE,EAAAlB,EAAA,IAAAiB,EAEAP,GAAAzY,EACA0Y,GAAAG,EACAF,GAAAG,EACAF,GAAAG,EAEAp3C,IAAA5N,KAEArzB,EAAAy4E,IACArB,GAAAz1B,EAOA,KAHA01B,EAAAlqB,EACA2rB,EAAAF,EACAG,EAAAF,EACAzrB,EAAA,EAAiBA,EAAAvL,EAAYuL,IAC7BhsD,EAAAi2E,GAAA,EACAkB,EAAAn3E,EAAA,GAAAi3E,EAAAX,EAAAsB,GAAAE,EACAb,EAAA,GACAA,EAAA,IAAAA,EACAE,EAAAn3E,IAAAm2E,EAAAyB,GAAAE,GAAAb,EACAE,EAAAn3E,EAAA,IAAAo2E,EAAAwB,GAAAE,GAAAb,EACAE,EAAAn3E,EAAA,IAAAq2E,EAAAuB,GAAAE,GAAAb,GAEAE,EAAAn3E,GAAAm3E,EAAAn3E,EAAA,GAAAm3E,EAAAn3E,EAAA,KAGAm2E,GAAAI,EACAH,GAAAI,EACAH,GAAAI,EACAH,GAAAI,EAEAH,GAAAmB,EAAAve,EACAqd,GAAAkB,EAAAx3E,EACAu2E,GAAAiB,EAAA7wE,EACA6vE,GAAAgB,EAAA7xE,EAEA7F,EACA+rD,IACA/rD,EAAAgsD,EAAAsrB,GAAAD,EAAAr3E,EAAAq3E,GACA92B,GACA,EAEA41B,GAAAQ,GAAAe,EAAAve,EAAAge,EAAAn3E,GACAo2E,GAAAQ,GAAAc,EAAAx3E,EAAAi3E,EAAAn3E,EAAA,GACAq2E,GAAAQ,GAAAa,EAAA7wE,EAAAswE,EAAAn3E,EAAA,GACAs2E,GAAAQ,GAAAY,EAAA7xE,EAAAsxE,EAAAn3E,EAAA,GAEA03E,IAAAzlD,KAEAskD,GAAArY,EAAAyZ,EAAAxe,EACAqd,GAAAO,EAAAY,EAAAz3E,EACAu2E,GAAAO,EAAAW,EAAA9wE,EACA6vE,GAAAO,EAAAU,EAAA9xE,EAEA8wE,GAAAzY,EACA0Y,GAAAG,EACAF,GAAAG,EACAF,GAAAG,EAEAU,IAAA1lD,KAEAgkD,GAAA11B,GAtvBA,GAAAsqQAhyB,GAAAgE,QAAAiuB,KAAA,SAAA7K,GACA,GAAA4I,GAAA3xE,KAAAm0D,MAAAp4D,KAAA83E,aAEAlC,GAAA,GACAD,EAAA3I,EAAA4I,IAIAhwB,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,aACA,EACA7kB,EAAA8jB,WAAAI,qBACAlkB,EAAAwiB,QAAAoB,iBAWC5jB,OAGD,WACA,YACA,SAAAmyB,GAAAC,EAAApsB,EAAAC,GACA,GAAAosB,GAAA,GAAApsB,EAAAmsB,EAAA53B,MAAAwL,GACA9sD,IAOA,OANAA,GAAAyJ,KACAyvE,EAAA/uE,KAAAgvE,KACAD,EAAA/uE,KAAAgvE,KACAD,EAAA/uE,KAAAgvE,KACAD,EAAA/uE,KAAAgvE,MAEAn5E,EAGA,QAAAo5E,GAAA9a,EAAAC,GACA,MAAAp5D,MAAA43D,KACA53D,KAAA63D,IAAAsB,EAAA,GAAAC,EAAA,MACAp5D,KAAA63D,IAAAsB,EAAA,GAAAC,EAAA,MACAp5D,KAAA63D,IAAAsB,EAAA,GAAAC,EAAA,OAIA,QAAA8a,GAAAC,GAGA,OAFAx5E,IAAA,OAEAH,EAAA,EAAmBA,EAAA25E,EAAA71E,OAAiB9D,IACpCG,EAAA,IAAAw5E,EAAA35E,GAAA,GACAG,EAAA,IAAAw5E,EAAA35E,GAAA,GACAG,EAAA,IAAAw5E,EAAA35E,GAAA,EAOA,OAJAG,GAAA,IAAAw5E,EAAA71E,OACA3D,EAAA,IAAAw5E,EAAA71E,OACA3D,EAAA,IAAAw5E,EAAA71E,OAEA3D,EAGA,QAAAy5E,GAAAL,EAAAM,GACA,GAAAC,GAAAR,EAAAC,EAAA,KACAQ,EAAAT,EAAAC,IAAA53B,MAAA,KACAq4B,EAAAV,EAAAC,EAAA,EAAAA,EAAA13B,OAAA,GACAo4B,EAAAX,EAAAC,IAAA53B,MAAA,EAAA43B,EAAA13B,OAAA,GAEAq4B,EAAAL,GAAA,EACA,IACAJ,EAAAK,EAAAC,GAAAG,GACAT,EAAAM,EAAAE,GAAAC,GACAT,EAAAQ,EAAAD,GAAAE,GACAT,EAAAO,EAAAF,GAAAI,EACA,CAMA,OAJAC,GAAAT,GAAAK,EAAAD,EAAAG,EAAAD,IAGAI,KACAp6E,EAAA,EAAqBA,EAAAu5E,EAAA53B,MAAA43B,EAAA13B,OAAgC7hD,IAAA,CACrD,GAAAK,GAAAo5E,EAAAU,GACAZ,EAAA/uE,KAAA,EAAAxK,GACAu5E,EAAA/uE,KAAA,EAAAxK,EAAA,GACAu5E,EAAA/uE,KAAA,EAAAxK,EAAA,IAEAo6E,GAAAp6E,GAAAK,EAAA65E,EAAA,MAGA,MAAAE,IAIA,QAAAC,GAAAd,EAAAa,GACA,OAAAp6E,GAAA,EAAmBA,EAAAu5E,EAAA53B,MAAA43B,EAAA13B,OAAgC7hD,IACnDu5E,EAAA/uE,KAAA,EAAAxK,EAAA,GAAAo6E,EAAAp6E,GAIA,QAAAs6E,GAAAF,EAAAG,EAAAC,GAMA,OALAC,IAAA,mBACAC,EAAAl1E,KAAAm0D,MAAAn0D,KAAA43D,KAAAqd,EAAA32E,SACA62E,EAAAn1E,KAAAC,MAAAi1E,EAAA,GAEAE,KACAxtB,EAAA,EAAmBA,EAAAotB,EAAQptB,IAC3B,OAAAD,GAAA,EAAqBA,EAAAotB,EAAQptB,IAAA,CAG7B,OAFA0tB,GAAAztB,EAAAmtB,EAAAptB,EACAlmD,EAAA,EACA6zE,EAAA,EAAwBA,EAAAJ,EAAWI,IACnC,OAAAC,GAAA,EAA0BA,EAAAL,EAAWK,IAAA,CACrC,GAAAC,GAAA5tB,EAAA0tB,EAAAH,EACAM,EAAA9tB,EAAA4tB,EAAAJ,CAEA,IAAAK,GAAA,GAAAA,EAAAR,GAAAS,GAAA,GAAAA,EAAAV,EAAA,CACA,GAAAW,GAAAF,EAAAT,EAAAU,EACAE,EAAAV,EAAAK,EAAAJ,EAAAK,EAEA9zE,IAAAmzE,EAAAc,GAAAC,GAKAP,EAAAC,GAAA,OAAA5zE,EAAA,MAIA,MAAA2zE,GAGA,QAAAQ,GAAAhB,EAAAG,EAAAC,GAMA,OALAC,IAAA,mBACAC,EAAAl1E,KAAAm0D,MAAAn0D,KAAA43D,KAAAqd,EAAA32E,SACA62E,EAAAn1E,KAAAC,MAAAi1E,EAAA,GAEAE,KACAxtB,EAAA,EAAmBA,EAAAotB,EAAQptB,IAC3B,OAAAD,GAAA,EAAqBA,EAAAotB,EAAQptB,IAAA,CAG7B,OAFA0tB,GAAAztB,EAAAmtB,EAAAptB,EACAlmD,EAAA,EACA6zE,EAAA,EAAwBA,EAAAJ,EAAWI,IACnC,OAAAC,GAAA,EAA0BA,EAAAL,EAAWK,IAAA,CACrC,GAAAC,GAAA5tB,EAAA0tB,EAAAH,EACAM,EAAA9tB,EAAA4tB,EAAAJ,CAEA,IAAAK,GAAA,GAAAA,EAAAR,GAAAS,GAAA,GAAAA,EAAAV,EAAA,CACA,GAAAW,GAAAF,EAAAT,EAAAU,EACAE,EAAAV,EAAAK,EAAAJ,EAAAK,EAEA9zE,IAAAmzE,EAAAc,GAAAC,GAKAP,EAAAC,GAAA5zE,GAAA,WAIA,MAAA2zE,GAGA,QAAAS,GAAAjB,EAAAG,EAAAC,GAgBA,OAfAC,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KAEAC,EAAAl1E,KAAAm0D,MAAAn0D,KAAA43D,KAAAqd,EAAA32E,SACA62E,EAAAn1E,KAAAC,MAAAi1E,EAAA,GAEAE,KACAxtB,EAAA,EAAmBA,EAAAotB,EAAQptB,IAC3B,OAAAD,GAAA,EAAqBA,EAAAotB,EAAQptB,IAAA,CAG7B,OAFA0tB,GAAAztB,EAAAmtB,EAAAptB,EACAlmD,EAAA,EACA6zE,EAAA,EAAwBA,EAAAJ,EAAWI,IACnC,OAAAC,GAAA,EAA0BA,EAAAL,EAAWK,IAAA,CACrC,GAAAC,GAAA5tB,EAAA0tB,EAAAH,EACAM,EAAA9tB,EAAA4tB,EAAAJ,CAEA,IAAAK,GAAA,GAAAA,EAAAR,GAAAS,GAAA,GAAAA,EAAAV,EAAA,CACA,GAAAW,GAAAF,EAAAT,EAAAU,EACAE,EAAAV,EAAAK,EAAAJ,EAAAK,EAEA9zE,IAAAmzE,EAAAc,GAAAC,GAKAP,EAAAC,GAAA5zE,EAIA,MAAA2zE,GAcAzzB,MAAAgE,QAAAmwB,KAAA,SAAA/M,GAEA,GAAAsL,GAAAt4E,KAAAs4E,YACAO,EAAAR,EAAArL,EAAAsL,EAiBA,OAhBAO,KAEAA,EAAAE,EAAAF,EAAA7L,EAAA5sB,MAAA4sB,EAAA1sB,QAGAu4B,EAAAgB,EAAAhB,EAAA7L,EAAA5sB,MAAA4sB,EAAA1sB,QAGAu4B,EAAAiB,EAAAjB,EAAA7L,EAAA5sB,MAAA4sB,EAAA1sB,QAGAw4B,EAAA9L,EAAA6L,IAKA7L,GAGApnB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,YACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAIA,WACA,YAcA5jB,OAAAgE,QAAAowB,IAAA,SAAAhN,GACA,GAKAvuE,GACA82E,EANAtsE,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OACA6yD,EAAAp1D,KAAAo1D,MACAlE,EAAAlxD,KAAAkxD,QACA7C,EAAAruD,KAAAquD,MAIA,KAAA5vD,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5B82E,GACA,IAAAtsE,EAAAxK,GAAA,GAAAwK,EAAAxK,EAAA,OAAAwK,EAAAxK,EAAA,QACAwK,EAAAxK,GAAA82E,EAAAngB,EACAnsD,EAAAxK,EAAA,GAAA82E,EAAArkB,EACAjoD,EAAAxK,EAAA,GAAA82E,EAAAlnB,EACAplD,EAAAxK,EAAA,GAAAwK,EAAAxK,EAAA,IAIAmnD,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,iBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,EAAA,IACA,IACKA,EAAA,EACL,EAEAG,KAAAm0D,MAAAt0D,KAYA8hD,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,mBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,EAAA,IACA,IACKA,EAAA,EACL,EAEAG,KAAAm0D,MAAAt0D,KAYA8hD,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,OACA,EACA7kB,MAAA8jB,WAAAC,aACA/jB,MAAAwiB,QAAAoB,mBAYA,WACA,YAeA5jB,OAAAgE,QAAAswB,KAAA,SAAAlN,GACA,GAMAvuE,GACA07E,EAPAlxE,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OACA6yD,EAAAp1D,KAAAo1D,MACAlE,EAAAlxD,KAAAkxD,QACA7C,EAAAruD,KAAAquD,OACAyK,EAAA94D,KAAA84D,OAIA,KAAAr6D,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5B07E,EAAA,EAAArhB,EAEA7vD,EAAAxK,GAAA22D,EAAA0D,EAAA7vD,EAAAxK,GAAA07E,EACAlxE,EAAAxK,EAAA,GAAAyyD,EAAA4H,EAAA7vD,EAAAxK,EAAA,GAAA07E,EACAlxE,EAAAxK,EAAA,GAAA4vD,EAAAyK,EAAA7vD,EAAAxK,EAAA,GAAA07E,GAIAv0B,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,iBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,EAAA,IACA,IACKA,EAAA,EACL,EAEAG,KAAAm0D,MAAAt0D,KAYA8hD,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,mBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,EAAA,IACA,IACKA,EAAA,EACL,EAEAG,KAAAm0D,MAAAt0D,KAYA8hD,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,OACA,EACA7kB,MAAA8jB,WAAAC,aACA/jB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,mBAAA3mE,GAEA,MADA9D,MAAAypE,iBAAA,EACA3lE,EAAA,EACA,EACKA,EAAA,EACL,EAEAA,OAaA,WACA,YAaA8hD,OAAAgE,QAAAwwB,IAAA,SAAApN,GACA,GAKAvuE,GA2BAu6D,EAAAj5D,EAAA2G,EAAAhB,EAhCAuD,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OACAa,EAAAa,KAAA63D,IAAA,EAAA97D,KAAAgD,SACAlD,EAAAmE,KAAA63D,IAAA,EAAA97D,KAAAq6E,cACA39C,EAAAz4B,KAAA2jE,IAAA5nE,KAAAs6E,MAAA,SAeAC,EAAAn3E,EAAAtD,EAAAmE,KAAAmoD,IAAA1vB,EAAAz4B,KAAA0kD,GAAA,KACA6xB,EAAAp3E,EAAAtD,EAAAmE,KAAAooD,IAAA3vB,EAAAz4B,KAAA0kD,GAAA,KAEA8xB,EAAA,KAAAr3E,EAAA,KAAAm3E,EAAA,KAAAC,EACAE,EAAA,KAAAt3E,EAAA,KAAAm3E,EAAA,IAAAC,EACAG,EAAA,KAAAv3E,EAAA,KAAAm3E,EAAA,KAAAC,EACAI,EAAA,KAAAx3E,EAAA,KAAAm3E,EAAA,KAAAC,EACAK,EAAA,KAAAz3E,EAAA,KAAAm3E,EAAA,KAAAC,EACAM,EAAA,KAAA13E,EAAA,KAAAm3E,EAAA,KAAAC,EACAO,EAAA,KAAA33E,EAAA,GAAAm3E,EAAA,KAAAC,EACAQ,EAAA,KAAA53E,EAAA,KAAAm3E,EAAA,KAAAC,EACAS,EAAA,KAAA73E,EAAA,KAAAm3E,EAAA,GAAAC,CAIA,KAAA/7E,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5Bu6D,EAAA/vD,EAAAxK,EAAA,GACAsB,EAAAkJ,EAAAxK,EAAA,GACAiI,EAAAuC,EAAAxK,EAAA,GACAiH,EAAAuD,EAAAxK,EAAA,GAEAwK,EAAAxK,EAAA,GAAAg8E,EAAAzhB,EAAA0hB,EAAA36E,EAAA46E,EAAAj0E,EACAuC,EAAAxK,EAAA,GAAAm8E,EAAA5hB,EAAA6hB,EAAA96E,EAAA+6E,EAAAp0E,EACAuC,EAAAxK,EAAA,GAAAs8E,EAAA/hB,EAAAgiB,EAAAj7E,EAAAk7E,EAAAv0E,EACAuC,EAAAxK,EAAA,GAAAiH,GAIAkgD,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,MACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,aACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,QACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAYA,WACA,YACA5jB,OAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,MACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,aACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,YACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAsBA5jB,MAAAgE,QAAAsxB,IAAA,SAAAlO,GACA,GAMAvuE,GA2BAu6D,EAAAj5D,EAAA2G,EAAAhB,EAjCAuD,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OAEAzC,EAAAmE,KAAA63D,IAAA,EAAA97D,KAAAq6E,cACA39C,EAAAz4B,KAAA2jE,IAAA5nE,KAAAs6E,MAAA,SACA57E,EAAA,IAAAsB,KAAAm7E,YAeAZ,EAlBA,EAkBAz6E,EAAAmE,KAAAmoD,IAAA1vB,EAAAz4B,KAAA0kD,GAAA,KACA6xB,EAnBA,EAmBA16E,EAAAmE,KAAAooD,IAAA3vB,EAAAz4B,KAAA0kD,GAAA,KAEA8xB,EAAA,UAAAF,EAAA,KAAAC,EACAE,EAAA,UAAAH,EAAA,IAAAC,EACAG,EAAA,UAAAJ,EAAA,KAAAC,EACAI,EAAA,UAAAL,EAAA,KAAAC,EACAK,EAAA,UAAAN,EAAA,KAAAC,EACAM,EAAA,UAAAP,EAAA,KAAAC,EACAO,EAAA,QAAAR,EAAA,KAAAC,EACAQ,EAAA,UAAAT,EAAA,KAAAC,EACAS,EAAA,UAAAV,EAAA,GAAAC,CAIA,KAAA/7E,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5Bu6D,EAAA/vD,EAAAxK,EAAA,GACAsB,EAAAkJ,EAAAxK,EAAA,GACAiI,EAAAuC,EAAAxK,EAAA,GACAiH,EAAAuD,EAAAxK,EAAA,GAEAwK,EAAAxK,EAAA,GAAAg8E,EAAAzhB,EAAA0hB,EAAA36E,EAAA46E,EAAAj0E,EAAAhI,EACAuK,EAAAxK,EAAA,GAAAm8E,EAAA5hB,EAAA6hB,EAAA96E,EAAA+6E,EAAAp0E,EAAAhI,EACAuK,EAAAxK,EAAA,GAAAs8E,EAAA/hB,EAAAgiB,EAAAj7E,EAAAk7E,EAAAv0E,EAAAhI,EACAuK,EAAAxK,EAAA,GAAAiH,MAKA,WACA,YAiBAkgD,OAAAgE,QAAAwxB,OAAA,SAAApO,GAKA,GAAAqO,GAAA,GAAAr7E,KAAAs7E,iBACAC,EAAA,IAAAv7E,KAAAw7E,mBACAC,EAAAz7E,KAAA07E,kBACAC,EAAA37E,KAAA47E,cACAC,EAAA,EACAC,EAAA,EACA7yE,EAAA+jE,EAAA/jE,KACA8yE,EAAA/O,EAAA5sB,MACA1jB,EAAAswC,EAAA1sB,OACA07B,EAAA,EAAAD,EACAlwB,EAAAnvB,CAEA,QAAA++C,GACA,eACAI,GAAA,EACAC,GAAA,CACA,MACA,WACAD,GAAA,EACAC,EAAA,CACA,MACA,iBACAD,GAAA,EACAC,EAAA,CACA,MACA,aACAD,EAAA,EACAC,EAAA,CACA,MACA,oBACAD,EAAA,EACAC,EAAA,CACA,MACA,cACAD,EAAA,EACAC,EAAA,CACA,MACA,mBACAD,EAAA,EACAC,GAAA,CACA,MACA,YACAD,EAAA,EACAC,GAAA,CACA,MACA,SACAl2B,MAAAsR,KAAA3mD,MAAA,6BAAAkrE,GAGA,GACA,GAAAhL,IAAA5kB,EAAA,GAAAmwB,EAEAC,EAAAJ,CACAhwB,GAAAowB,EAAA,IACAA,EAAA,GAEApwB,EAAAowB,EAAAv/C,IACAu/C,EAAA,EAGA,IAAAC,IAAArwB,EAAA,EAAAowB,GAAAF,EAAA,EAEAnwB,EAAAmwB,CACA,IACA,GAAA1U,GAAAoJ,EAAA,GAAA7kB,EAAA,GAEAuwB,EAAAL,CACAlwB,GAAAuwB,EAAA,IACAA,EAAA,GAEAvwB,EAAAuwB,EAAAJ,IACAI,EAAA,EAGA,IAAAC,GAAAF,EAAA,GAAAtwB,EAAA,EAAAuwB,GAEAE,EAAApzE,EAAAo+D,GAAAp+D,EAAAmzE,GACAE,EAAArzE,EAAAo+D,EAAA,GAAAp+D,EAAAmzE,EAAA,GACAG,EAAAtzE,EAAAo+D,EAAA,GAAAp+D,EAAAmzE,EAAA,GAEAI,EAAAH,EACAI,EAAAD,EAAA,EAAAA,KAEAE,EAAAJ,EAAA,EAAAA,KACAK,EAAAJ,EAAA,EAAAA,IAWA,IATAG,EAAAD,IACAD,EAAAF,GAEAK,EAAAF,IACAD,EAAAD,GAGAC,GAAAnB,EAEAM,EAAA,CACA,GAAA3iB,GAAA/vD,EAAAo+D,GAAAmV,EACAz8E,EAAAkJ,EAAAo+D,EAAA,GAAAmV,EACA91E,EAAAuC,EAAAo+D,EAAA,GAAAmV,CAEAvzE,GAAAo+D,GAAArO,EAAA,QAAAA,EAAA,IAAAA,EACA/vD,EAAAo+D,EAAA,GAAAtnE,EAAA,QAAAA,EAAA,IAAAA,EACAkJ,EAAAo+D,EAAA,GAAA3gE,EAAA,QAAAA,EAAA,IAAAA,MACS,CACT,GAAA0qD,GAAAmqB,EAAAiB,CACAprB,GAAA,EACAA,EAAA,EACWA,EAAA,MACXA,EAAA,KAGAnoD,EAAAo+D,GAAAp+D,EAAAo+D,EAAA,GAAAp+D,EAAAo+D,EAAA,GAAAjW,WAEOxF,WACFC,IAGLjG,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,iBACA,GACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,mBACA,GACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,kBACA,WACA,KACA7kB,MAAAwiB,QAAAoB,gBAYA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,eACA,EACA,KACA7kB,MAAAwiB,QAAAoB,mBAYA,WACA,YACA,SAAAoT,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,GAEAC,GAFAC,EAAAJ,EAAAD,EACAM,EAAAH,EAAAD,CAIA,YAAAG,EACAH,EAAAI,EAAA,EAEA,IAAAA,EACAJ,GAIAE,GAAAL,EAAAC,GAAAK,EACAD,EAAAE,EAAAF,EAAAF,GAmBAp3B,MAAAgE,QAAAyzB,QAAA,SAAArQ,GACA,GAIAhU,GAGAj5D,EAGA2G,EACAjI,EAXAwK,EAAA+jE,EAAA/jE,KACAq0E,EAAAr0E,EAAA1G,OACAg7E,EAAAt0E,EAAA,GACAu0E,EAAAD,EAEAE,EAAAx0E,EAAA,GACAy0E,EAAAD,EAEAE,EAAA10E,EAAA,GACA20E,EAAAD,EAKAE,EAAA79E,KAAA89E,SACA,QAAAD,EAAA,CAKA,IAAAp/E,EAAA,EAAeA,EAAA6+E,EAAgB7+E,GAAA,EAC/Bu6D,EAAA/vD,EAAAxK,EAAA,GACAu6D,EAAAukB,EACAA,EAAAvkB,EACOA,EAAAwkB,IACPA,EAAAxkB,GAEAj5D,EAAAkJ,EAAAxK,EAAA,GACAsB,EAAA09E,EACAA,EAAA19E,EACOA,EAAA29E,IACPA,EAAA39E,GAEA2G,EAAAuC,EAAAxK,EAAA,GACAiI,EAAAi3E,EACAA,EAAAj3E,EACOA,EAAAk3E,IACPA,EAAAl3E,EAQA82E,KAAAD,IACAC,EAAA,IACAD,EAAA,GAEAG,IAAAD,IACAC,EAAA,IACAD,EAAA,GAEAG,IAAAD,IACAC,EAAA,IACAD,EAAA,EAGA,IAAAI,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,CAwBA,KArBAV,EAAA,GACAG,EAAAR,EAAAK,GAAA,IAAAL,GACAS,EAAAV,EAAAM,GAAAN,EAAA,GACAY,EAAAT,EAAAG,GAAA,IAAAH,GACAU,EAAAX,EAAAI,GAAAJ,EAAA,GACAa,EAAAV,EAAAC,GAAA,IAAAD,GACAW,EAAAZ,EAAAE,GAAAF,EAAA,KAGAI,EAAA,IAAAP,EAAAD,GACAS,EAAAR,EAAAK,GAAAL,EAAAO,GACAE,EAAAV,EAAAM,GAAAN,EAAAQ,GACAG,EAAA,IAAAR,EAAAD,GACAU,EAAAT,EAAAG,GAAAH,EAAAQ,GACAE,EAAAX,EAAAI,GAAAJ,EAAAS,GACAG,EAAA,IAAAT,EAAAD,GACAW,EAAAV,EAAAC,GAAAD,EAAAS,GACAE,EAAAZ,EAAAE,GAAAF,EAAAU,IAIA5/E,EAAA,EAAeA,EAAA6+E,EAAgB7+E,GAAA,EAC/BwK,EAAAxK,EAAA,GAAAm+E,EAAA3zE,EAAAxK,EAAA,GAAA8+E,EAAAC,EAAAS,EAAAD,GACA/0E,EAAAxK,EAAA,GAAAm+E,EAAA3zE,EAAAxK,EAAA,GAAAg/E,EAAAC,EAAAU,EAAAD,GACAl1E,EAAAxK,EAAA,GAAAm+E,EAAA3zE,EAAAxK,EAAA,GAAAk/E,EAAAC,EAAAW,EAAAD,KAaA14B,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,UACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAIA,WACA,YAgBA5jB,OAAAgE,QAAA40B,UAAA,SAAAxR,GAEA,GAIAvuE,GAJAggF,EAAAx6E,KAAAm0D,MAAA,IAAAp4D,KAAAy+E,UAAA,EACAx1E,EAAA+jE,EAAA/jE,KACAuG,EAAAvG,EAAA1G,OACAwpD,EAAA,IAAA0yB,CAGA,KAAAhgF,EAAA,EAAeA,EAAA+Q,EAAS/Q,GAAA,EACxBwK,EAAAxK,GAAAwF,KAAAC,MAAA+E,EAAAxK,GAAAstD,MAIAnG,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,SACA,GACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAaA,WACA,YAaA5jB,OAAAgE,QAAA80B,MAAA,SAAA1R,GACA,GAIAvuE,GAJAkgF,EAAA,IAAA3+E,KAAA4+E,QACA31E,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OACAs8E,EAAAF,EAAA,CAGA,KAAAlgF,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5BwK,EAAAxK,EAAA,IAAAogF,EAAA,EAAAA,EAAA56E,KAAAu/C,SACAv6C,EAAAxK,EAAA,IAAAogF,EAAA,EAAAA,EAAA56E,KAAAu/C,SACAv6C,EAAAxK,EAAA,IAAAogF,EAAA,EAAAA,EAAA56E,KAAAu/C,UAIAoC,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,QACA,GACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAaA,WACA,YAeA5jB,OAAAgE,QAAAk1B,SAAA,SAAA9R,GACA,GAGAphB,GACAC,EACAptD,EAEA22D,EACAlE,EACA7C,EACAyK,EAGAimB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAnBAC,EAAAr7E,KAAAs7E,KAAAv/E,KAAAs/E,aACAl/B,EAAA4sB,EAAA5sB,MACAE,EAAA0sB,EAAA1sB,OASAk/B,EAAAv7E,KAAAs7E,KAAAn/B,EAAAk/B,GACAG,EAAAx7E,KAAAs7E,KAAAj/B,EAAAg/B,EAUA,IAFAtS,IAAA/jE,KAEAq2E,GAAA,EAEA,WADA15B,OAAAsR,KAAA3mD,MAAA,kCAIA,KAAA4uE,EAAA,EAAkBA,EAAAK,EAAeL,GAAA,EACjC,IAAAC,EAAA,EAAoBA,EAAAK,EAAeL,GAAA,GAenC,IAbAhqB,EAAA,EACAlE,EAAA,EACA7C,EAAA,EACAyK,EAAA,EAGAimB,EAAAI,EAAAG,EACAN,EAAAD,EAAAO,EACAL,EAAAG,EAAAE,EACAJ,EAAAD,EAAAK,EAGAD,EAAA,EACAzzB,EAAAmzB,EAA2BnzB,EAAAozB,EAAapzB,GAAA,EACxC,KAAAA,GAAAxL,GAGA,IAAAyL,EAAAozB,EAA6BpzB,EAAAqzB,EAAarzB,GAAA,EAC1CA,GAAAvL,IAGA7hD,EAAA,GAAA2hD,EAAAyL,EAAAD,GACAwJ,GAAA4X,EAAAvuE,EAAA,GACAyyD,GAAA8b,EAAAvuE,EAAA,GACA4vD,GAAA2e,EAAAvuE,EAAA,GACAq6D,GAAAkU,EAAAvuE,EAAA,GACA4gF,GAAA,EAWA,KANAjqB,GAAAiqB,EACAnuB,GAAAmuB,EACAhxB,GAAAgxB,EACAvmB,GAAAumB,EAGAzzB,EAAAmzB,EAA2BnzB,EAAAozB,EAAapzB,GAAA,EACxC,KAAAA,GAAAxL,GAGA,IAAAyL,EAAAozB,EAA6BpzB,EAAAqzB,EAAarzB,GAAA,EAC1CA,GAAAvL,IAGA7hD,EAAA,GAAA2hD,EAAAyL,EAAAD,GACAohB,EAAAvuE,EAAA,GAAA22D,EACA4X,EAAAvuE,EAAA,GAAAyyD,EACA8b,EAAAvuE,EAAA,GAAA4vD,EACA2e,EAAAvuE,EAAA,GAAAq6D,KAOAlT,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,YACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAYA,WACA,YAgBA5jB,OAAAgE,QAAA81B,UAAA,SAAA1S,GACA,GAGAvuE,GAHAkhF,EAAA,IAAA3/E,KAAAs4E,YACArvE,EAAA+jE,EAAA/jE,KACAuG,EAAAvG,EAAA1G,MAGA,KAAA9D,EAAA,EAAeA,EAAA+Q,EAAS/Q,GAAA,EACxBwK,EAAAxK,GAAAwK,EAAAxK,GAAAkhF,EAAA,OAIA/5B,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,YACA,GACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAYA,WACA;;;;;;;;;;;;;;AAeA5jB,MAAAgE,QAAAg2B,MAAA,SAAA5S,GACA,GAIAyD,GACA7kB,EACAyb,EACAwY,EACAC,EACAt1E,EACAwuD,EACAj5D,EACA2G,EAZAuC,EAAA+jE,EAAA/jE,KACA8yE,EAAA/O,EAAA5sB,MACAyL,EAAAmhB,EAAA1sB,OACA07B,EAAA,EAAAD,CAWA,IACAtL,GAAA5kB,EAAA,GAAAmwB,EACApwB,EAAAmwB,CACA,IACA1U,EAAAoJ,EAAA,GAAA7kB,EAAA,GAEAi0B,EAAA52E,EAAAo+D,GACAyY,EAAA72E,EAAAo+D,EAAA,GACA78D,EAAAvB,EAAAo+D,EAAA,GAEArO,EAAA,KAAA6mB,EAAA,KAAAC,EAAA,KAAAt1E,EACAzK,EAAA,KAAA8/E,EAAA,KAAAC,EAAA,KAAAt1E,EACA9D,EAAA,KAAAm5E,EAAA,KAAAC,EAAA,KAAAt1E,EAEAvB,EAAAo+D,GAAArO,EAAA,QAAAA,EACA/vD,EAAAo+D,EAAA,GAAAtnE,EAAA,QAAAA,EACAkJ,EAAAo+D,EAAA,GAAA3gE,EAAA,QAAAA,EACAuC,EAAAo+D,EAAA,GAAAp+D,EAAAo+D,EAAA,WACOzb,WACFC,OAIL,WACA,YAcAjG,OAAAgE,QAAAm2B,SAAA,SAAA/S,GACA,GAAA/jE,GAAA+jE,EAAA/jE,KACA8yE,EAAA/O,EAAA5sB,MACA1jB,EAAAswC,EAAA1sB,OACA07B,EAAA,EAAAD,EACAlwB,EAAAnvB,CAEA,IACA,GAAA+zC,IAAA5kB,EAAA,GAAAmwB,EACApwB,EAAAmwB,CACA,IACA,GAAA1U,GAAAoJ,EAAA,GAAA7kB,EAAA,GACAoN,EAAA/vD,EAAAo+D,GACAtnE,EAAAkJ,EAAAo+D,EAAA,GACA3gE,EAAAuC,EAAAo+D,EAAA,EAEArO,GAAA,MACAA,EAAA,IAAAA,GAEAj5D,EAAA,MACAA,EAAA,IAAAA,GAEA2G,EAAA,MACAA,EAAA,IAAAA,GAGAuC,EAAAo+D,GAAArO,EACA/vD,EAAAo+D,EAAA,GAAAtnE,EACAkJ,EAAAo+D,EAAA,GAAA3gE,UACOklD,WACFC,OAIL,WACA,YAiBA,IAAAm0B,GAAA,SAAA71E,EAAA81E,EAAAC,GACA,GAMAzhF,GACAmtD,EACAC,EAOAM,EAfAg0B,EAAAh2E,EAAAlB,KACAm3E,EAAAH,EAAAh3E,KACAo3E,EAAAl2E,EAAAi2C,MACAkgC,EAAAn2E,EAAAm2C,OACAigC,EAAAL,EAAAM,cAAAH,EAAA,EACAI,EAAAP,EAAAQ,cAAAJ,EAAA,EAIAtnB,EAAA,EACAj5D,EAAA,EACA2G,EAAA,EACAhB,EAAA,EAIA83E,EAAAv5E,KAAA43D,KAAA0kB,IAAAE,IACA70B,GAAAy0B,EAAAE,EACA10B,EAAAy0B,EAAAG,EACAt0B,EAAAloD,KAAA43D,KAAAjQ,IAAAC,KACA2xB,EAAArxB,EAAAqxB,EAAArxB,EAAAqxB,CAGA,IAEA5H,GACAxE,EAKA/kB,EACAD,EATAu0B,EAAAL,EACAM,EAAAP,EAMAQ,EAAA,IAAAD,EAAA38E,KAAA0kD,GAAA,GAMA,KAAAyoB,EAAA,EAAmBA,EAAAwP,EAAexP,GAAA,EAGlC,IAFA/kB,EAAApoD,KAAAooD,IAAA+kB,EAAAyP,GACAz0B,EAAAnoD,KAAAmoD,IAAAglB,EAAAyP,GACAjL,EAAA,EAAsBA,EAAA+K,EAAgB/K,GAAA,EACtChqB,EAAA3nD,KAAAC,MAAAq8E,EAAA/C,EAAA5H,EAAA+K,EAAAv0B,GACAP,EAAA5nD,KAAAC,MAAAu8E,EAAAjD,EAAA5H,EAAA+K,EAAAt0B,GACA5tD,EAAA,GAAAotD,EAAAw0B,EAAAz0B,GACAoN,EAAAmnB,EAAA1hF,EAAA,GACAsB,EAAAogF,EAAA1hF,EAAA,GACAiI,EAAAy5E,EAAA1hF,EAAA,GACAiH,EAAAy6E,EAAA1hF,EAAA,GAIAA,EAAA,GAAA2yE,EAAAwE,EAAAyK,GACAD,EAAA3hF,EAAA,GAAAu6D,EACAonB,EAAA3hF,EAAA,GAAAsB,EACAqgF,EAAA3hF,EAAA,GAAAiI,EACA05E,EAAA3hF,EAAA,GAAAiH,GAsBAo7E,EAAA,SAAA32E,EAAA81E,EAAAC,GACA,GAMAzhF,GACAmtD,EACAC,EACAtuB,EACAE,EAOA0uB,EAjBAg0B,EAAAh2E,EAAAlB,KACAm3E,EAAAH,EAAAh3E,KACAo3E,EAAAl2E,EAAAi2C,MACAkgC,EAAAn2E,EAAAm2C,OACAigC,EAAAL,EAAAM,cAAAH,EAAA,EACAI,EAAAP,EAAAQ,cAAAJ,EAAA,EAMAtnB,EAAA,EACAj5D,EAAA,EACA2G,EAAA,EACAhB,EAAA,EAIA83E,EAAAv5E,KAAA43D,KAAA0kB,IAAAE,IACA70B,GAAAy0B,EAAAE,EACA10B,EAAAy0B,EAAAG,EACAt0B,EAAAloD,KAAA43D,KAAAjQ,IAAAC,KACA2xB,EAAArxB,EAAAqxB,EAAArxB,EAAAqxB,CAGA,IAEA5H,GACAxE,EAQA7V,EAAAC,EAXAmlB,EAAAL,EACAM,EAAAP,EAGAU,EAAAb,EAAAc,eAAA,CASA,KAAAp1B,EAAA,EAAeA,EAAAy0B,EAAWz0B,GAAA,EAC1B,IAAAC,EAAA,EAAiBA,EAAAy0B,EAAWz0B,GAAA,EAC5BtuB,EAAAquB,EAAA20B,EACA9iD,EAAAouB,EAAA40B,EACA7K,EAAA3xE,KAAA43D,KAAAt+B,IAAAE,KAAAkjD,EAAAnD,EACApM,GAAA,IAAAntE,KAAAg9E,MAAAxjD,EAAAF,GAAAt5B,KAAA0kD,GAAA,IAAAo4B,GAAA,IACA3P,IAAAwP,EAAA,IACArlB,EAAAt3D,KAAAC,MAAAktE,GACA5V,EAAAv3D,KAAAC,MAAA0xE,GACAn3E,EAAA,GAAA+8D,EAAA6kB,EAAA9kB,GACAvC,EAAAmnB,EAAA1hF,EAAA,GACAsB,EAAAogF,EAAA1hF,EAAA,GACAiI,EAAAy5E,EAAA1hF,EAAA,GACAiH,EAAAy6E,EAAA1hF,EAAA,GAGAA,EAAA,GAAAotD,EAAAw0B,EAAAz0B,GACAw0B,EAAA3hF,EAAA,GAAAu6D,EACAonB,EAAA3hF,EAAA,GAAAsB,EACAqgF,EAAA3hF,EAAA,GAAAiI,EACA05E,EAAA3hF,EAAA,GAAAiH,EAsBAkgD,OAAAgE,QAAAs3B,aAAA,SAAAlU,GACA,GAGAphB,GAAAC,EAAAs1B,EAAA1iF,EAAAu6D,EAAAj5D,EAAA2G,EAAAhB,EAAA07E,EAAAC,EAHAhB,EAAArT,EAAA5sB,MACAkgC,EAAAtT,EAAA1sB,OAGAghC,EAAAr9E,KAAAm0D,MAAAp4D,KAAAuhF,qBACAj3B,EAAArmD,KAAAm0D,MAAAp4D,KAAAwhF,qBACAna,EAAApjE,KAAAC,MAAAm8E,GAAA/1B,EAAA,SAEA,MAAAg3B,EAAA,IAKA,GAAAG,GAAA77B,MAAAsR,KAAAY,qBACA2pB,GAAArhC,MAAAigC,EACAoB,EAAAnhC,OAAAggC,CACA,IAAAoB,GAAAD,EACA/oB,WAAA,MACAqK,aAAA,IAAAsd,EAAAC,EAGAN,GAAAhT,EAAA0U,GACAlB,aAAAH,EAAA,EACAK,aAAAJ,EAAA,GAMA,KADA,GAAAqB,GAAAtB,EAAAp8E,KAAA63D,IAAA,EAAAwlB,GACAK,GAAA,GACAA,GAAA,EACAL,GAAA,CAEAK,GAAA19E,KAAAs7E,KAAAoC,EACA,IAAAC,GAAAD,EAKAE,EAAA,EACAC,EAAAF,EACAG,EAAA,CAMA,KALA1a,EAAAsa,EAAAtB,IACAwB,EAAAD,EACAE,EAAA,EACAC,GAAA,GAEAl2B,EAAA,EAAeA,EAAAy0B,EAAWz0B,GAAA,EAC1B,IAAAD,EAAAi2B,EAAsBj2B,IAAAk2B,EAAYl2B,GAAAm2B,EAClCZ,EAAAl9E,KAAAm0D,MAAAxM,EAAAyb,GAAAgZ,EACAe,EAAA,GAAAf,EAAAx0B,EAAAs1B,GACAnoB,EAAA0oB,EAAAz4E,KAAAm4E,EAAA,GACArhF,EAAA2hF,EAAAz4E,KAAAm4E,EAAA,GACA16E,EAAAg7E,EAAAz4E,KAAAm4E,EAAA,GACA17E,EAAAg8E,EAAAz4E,KAAAm4E,EAAA,GACAC,EAAA,GAAAhB,EAAAx0B,EAAAD,GACA81B,EAAAz4E,KAAAo4E,EAAA,GAAAroB,EACA0oB,EAAAz4E,KAAAo4E,EAAA,GAAAthF,EACA2hF,EAAAz4E,KAAAo4E,EAAA,GAAA36E,EACAg7E,EAAAz4E,KAAAo4E,EAAA,GAAA37E,CAKA,KAAAmmD,EAAA,EAAeA,EAAAy0B,EAAWz0B,GAAA,EAE1B,IADA+1B,EAAA39E,KAAAC,MAAAy9E,GACAljF,EAAA,EAAiBA,EAAA6iF,EAAW7iF,GAAA,GAC5B,IAAAmtD,EAAA,EAAmBA,EAAAg2B,EAAA,EAAqBh2B,GAAA,EACxCw1B,EAAA,GAAAf,EAAAx0B,EAAAD,GACAoN,EAAA0oB,EAAAz4E,KAAAm4E,EAAA,GACArhF,EAAA2hF,EAAAz4E,KAAAm4E,EAAA,GACA16E,EAAAg7E,EAAAz4E,KAAAm4E,EAAA,GACA17E,EAAAg8E,EAAAz4E,KAAAm4E,EAAA,GACAC,EAAA,GAAAhB,EAAAx0B,EAAA,EAAA+1B,EAAAh2B,EAAA,GACA81B,EAAAz4E,KAAAo4E,EAAA,GAAAroB,EACA0oB,EAAAz4E,KAAAo4E,EAAA,GAAAthF,EACA2hF,EAAAz4E,KAAAo4E,EAAA,GAAA36E,EACAg7E,EAAAz4E,KAAAo4E,EAAA,GAAA37E,CAEAk8E,IAAA,EAKAd,EAAAY,EAAA1U,GAAuCgU,cAAA,MAWvCp7B,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,oBACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,gBAWA5jB,MAAAwiB,QAAAC,gBACAziB,MAAA6kB,KACA,oBACA,EACA7kB,MAAA8jB,WAAAI,qBACAlkB,MAAAwiB,QAAAoB,mBAIA,SAAA5jB,GACA,YAYAA,GAAAgE,QAAAo4B,SAAA,SAAAhV,GACA,GAOAvuE,GAPAwjF,EAAAh+E,KAAA63D,KAAA9yB,SAAAhpC,KAAAkiF,YAAA,YAEAj5E,EAAA+jE,EAAA/jE,KACAgxE,EAAAhxE,EAAA1G,OACA6yD,EAAA,IACAlE,EAAA,IACA7C,EAAA,GAGA,KAAA5vD,EAAA,EAAeA,EAAAw7E,EAAax7E,GAAA,EAC5B22D,EAAAnsD,EAAAxK,GACAyyD,EAAAjoD,EAAAxK,EAAA,GACA4vD,EAAAplD,EAAAxK,EAAA,GAGA22D,GAAA,IACAA,GAAA,GACAA,GAAA6sB,EACA7sB,GAAA,GACAA,GAAA,IAGAlE,GAAA,IACAA,GAAA,GACAA,GAAA+wB,EACA/wB,GAAA,GACAA,GAAA,IAGA7C,GAAA,IACAA,GAAA,GACAA,GAAA4zB,EACA5zB,GAAA,GACAA,GAAA,IAEA+G,IAAA,IAAAA,EAAA,QAAAA,EACAlE,IAAA,IAAAA,EAAA,QAAAA,EACA7C,IAAA,IAAAA,EAAA,QAAAA,EAEAplD,EAAAxK,GAAA22D,EACAnsD,EAAAxK,EAAA,GAAAyyD,EACAjoD,EAAAxK,EAAA,GAAA4vD,GAaAzI,EAAAwiB,QAAAC,gBACAziB,EAAA6kB,KACA,WACA,EACA7kB,EAAA8jB,WAAAI,qBACAlkB,EAAAwiB,QAAAoB,iBAEC5jB,OAED,WACA,YAoCAA,OAAAu8B,UAAA,SAAAlyE,GACAjQ,KAAAoiF,OAAAnyE,IAGA21C,MAAAsR,KAAAiE,WAAAvV,MAAAu8B,WACAC,OAAA,SAAAnyE,GACAjQ,KAAAkJ,SAAA,GAAA08C,OAAAqF,WACArF,MAAA6kB,KAAA9rE,KAAAqB,KAAAiQ,IAiBAg7D,YAAA,SAAAoX,GACA,IAAAA,EACA,MAAAriF,MAAAkJ,QAGA,IAAAo5E,GAAA,GAAA18B,OAAAqF,UAMA,OALAjrD,MAAAkJ,SAAAgiD,KAAA,SAAA39C,GACA80E,EAAA90E,IACA+0E,EAAA/5E,KAAAgF,KAGA+0E,GAQAvpE,YAAA,WACA,MAAA/Y,MAAAirE,cAAA1oE,OAAA,GAOAggF,eAAA,WAGA,OADAh1E,GADArE,EAAA08C,MAAAqF,WAAAG,aAAAprD,KAAAkJ,UAEAzK,EAAA,EAAqBA,EAAAyK,EAAA3G,OAAqB9D,IAC1C8O,EAAArE,EAAAzK,SAEA8O,GAAAD,OACAC,EAAA3M,MAAA,EACA2M,EAAA1I,QAIA,OAFAqE,GAAA,KACAlJ,KAAAkJ,SAAA,GAAA08C,OAAAqF,WACAjrD,MAOAwiF,gBAAA,WAGA,OADAj1E,GADArE,EAAA08C,MAAAqF,WAAAG,aAAAprD,KAAAkJ,UAEAzK,EAAA,EAAqBA,EAAAyK,EAAA3G,OAAqB9D,IAC1C8O,EAAArE,EAAAzK,SAEA8O,GAAAD,OACAC,EAAA3M,MAAA,EACA2M,EAAAykC,SAIA,OAFA9oC,GAAA,KACAlJ,KAAAkJ,SAAA,GAAA08C,OAAAqF,WACAjrD,MAWA+R,IAAA,SAAAxE,GACA,GAAA5H,UAAApD,OAAA,GACA,OAAA9D,GAAA,EAAuBA,EAAAkH,UAAApD,OAAsB9D,IAC7CuB,KAAA+R,IAAApM,UAAAlH,GAEA,OAAAuB,MAEA,GAAAuN,EAAA+9D,YAEA,MADA/9D,GAAA01D,OAAAjjE,MACAA,IAEA,IAAAkJ,GAAAlJ,KAAAkJ,QAeA,OAdAlJ,MAAAyiF,aAAAl1E,GACAA,EAAA3M,MAAAsI,EAAA3G,OACAgL,EAAAD,OAAAtN,KACAkJ,EAAAX,KAAAgF,GACAvN,KAAA8yE,MAAA,OACAvlE,UAIAq4C,MAAAmE,IAAAx8C,EAAAs8C,cACAjE,MAAAmE,GAAA24B,KAAAC,UAAAp1E,EAAAoxC,YAIA3+C,MAEAgyC,QAAA,WAOA,MALAhyC,MAAA+Y,eACA/Y,KAAAwiF,kBAGA58B,MAAA6kB,KAAA9qE,UAAAqyC,QAAArzC,KAAAqB,MACAA,MA0CA4iF,KAAA,SAAAjrB,GAGA,MAAA33D,MAAA6iF,aAAAlrB,GAAA,IAoBAmrB,QAAA,SAAAnrB,GACA,GAAAl6C,GAAAzd,KAAA6iF,aAAAlrB,GAAA,EACA,OAAAl6C,GAAAlb,OAAA,EAAAkb,EAAA,OAAA/a,IAEAmgF,aAAA,SAAAlrB,EAAAmrB,GACA,GAAA3qB,KAQA,OANA,gBAAAR,GACAQ,EAAAn4D,KAAA+iF,cAAAprB,EAAAmrB,GACO,kBAAAnrB,KACPQ,EAAAn4D,KAAAgjF,gBAAArrB,EAAAmrB,IAGAl9B,MAAAqF,WAAAG,aAAA+M,IAEA4qB,cAAA,SAAAprB,GACA,GAGAp4D,GACAd,EACA6zE,EACAxtE,EACAgP,EACA5K,EACA+5E,EATA9qB,KACAoa,EAAA5a,EAAAj3D,QAAA,SAAAkE,MAAA,KACA4K,EAAA+iE,EAAAhwE,MASA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAAA,CAE1B,GADA+yE,EAAAC,EAAAhzE,IACAqmD,MAAAsR,KAAAQ,gBAAA4a,GAAA,CACA,GAAA5S,GACA,aACA4S,EACA,iNAGA1sB,OAAAsR,KAAA7mC,KAAAqvC,GAGA,SAAA4S,EAAArxE,OAAA,IACA6S,EAAA9T,KAAAkjF,aAAA5Q,EAAApxE,MAAA,MAEAi3D,EAAA5vD,KAAAuL,OAES,UAAAw+D,EAAArxE,OAAA,GAET6D,EAAA9E,KAAAmjF,gBAAA7Q,EAAApxE,MAAA,IACAi3D,IAAA3rD,OAAA1H,OAKA,KAFAoE,EAAAlJ,KAAAirE,cACAgY,EAAA/5E,EAAA3G,OACA9D,EAAA,EAAqBA,EAAAwkF,EAAUxkF,IAC/B05D,IAAA3rD,OAAAtD,EAAAzK,GAAAg0E,KAAAH,IAKA,MAAAna,IAGA6qB,gBAAA,SAAA39E,EAAAy9E,GACA,GAAA3qB,MAEAirB,EAAA,SAAAnrE,GAEA,KAAA6qE,GAAA3qB,EAAA51D,OAAA,IAIA,GAAA2G,GAAA+O,EAAAgzD,cACAgY,EAAA/5E,EAAA3G,MAEA8C,GAAA4S,KACAkgD,IAAA3rD,OAAAyL,GAGA,QAAAxZ,GAAA,EAAuBA,EAAAwkF,EAAUxkF,IACjC2kF,EAAAl6E,EAAAzK,KAMA,OAFA2kF,GAAApjF,MAEAm4D,GAEA+qB,aAAA,SAAA/9E,GACA,GAAA2O,GAAA8xC,MAAAkD,IAAA3jD,EAEA,YAAAzC,KAAAoR,GAAA9T,KAAA80E,aAAAhhE,GACAA,EAEA,MAEAqvE,gBAAA,SAAAh+E,GACA,GAAAL,GAAA8gD,MAAAmD,MAAA5jD,MACA,OAAAnF,MAAAqjF,gBAAAv+E,IAEA2tE,KAAA,SAAA9a,GAIA,OAHAQ,GAAAvS,MAAA6kB,KAAA9qE,UAAA8yE,KAAA9zE,KAAAqB,KAAA23D,GACAzuD,EAAAlJ,KAAAirE,cACAz7D,EAAAtG,EAAA3G,OACAhD,EAAA,EAAqBA,EAAAiQ,EAASjQ,IAC9B44D,IAAA3rD,OAAAtD,EAAA3J,GAAAkzE,KAAA9a,GAEA,OAAAQ,IAGA5xD,SAAA,WACA,GAAAjG,GAAAslD,MAAA6kB,KAAA9qE,UAAA4G,SAAA5H,KAAAqB,KAEAM,GAAA4I,WAIA,QAFAA,GAAAlJ,KAAAirE,cACAz7D,EAAAtG,EAAA3G,OACAhD,EAAA,EAAqBA,EAAAiQ,EAASjQ,IAAA,CAC9B,GAAAgO,GAAArE,EAAA3J,EACAe,GAAA4I,SAAAX,KAAAgF,EAAAhH,YAGA,MAAAjG,IAEA+iF,gBAAA,SAAAv+E,GAGA,OAFAqzD,MACA3oD,EAAA1K,EAAAvC,OACAhD,EAAA,EAAqBA,EAAAiQ,EAASjQ,IAAA,CAC9B,GAAAuU,GAAAhP,EAAAvF,EACAS,MAAA80E,aAAAhhE,IACAqkD,EAAA5vD,KAAAuL,GAIA,MAAAqkD,IASA2c,aAAA,SAAAhhE,GAEA,IADA,GAAAxG,GAAAwG,EAAAw3D,YACAh+D,GAAA,CACA,GAAAA,EAAAo0C,MAAA1hD,KAAA0hD,IACA,QAEAp0C,KAAAg+D,YAGA,UAEA9oD,MAAA,SAAAliB,GAEA,GAAAwT,GAAA8xC,MAAA6kB,KAAA9qE,UAAA6iB,MAAA7jB,KAAAqB,KAAAM,EAKA,OAHAN,MAAAirE,cAAA/f,KAAA,SAAAlrB,GACAlsB,EAAA/B,IAAAiuB,EAAAxd,WAEA1O,GAcAwvE,oBAAA,SAAAhmD,GACA,GAAAx4B,KAQA,OANA9E,MAAA4iF,KAAA,SAAA13B,KAAA,SAAAoV,GACAA,EAAAkO,aAAAlO,EAAAijB,WAAAjmD,IACAx4B,EAAAyD,KAAA+3D,KAIAx7D,GAEAgpE,oBAAA,WACA9tE,KAAAkJ,SAAAgiD,KAAA,SAAA39C,EAAAhO,GACAgO,EAAA3M,MAAArB,KAGAusE,UAAA,SAAA0X,EAAA9lD,EAAA+lD,GACA,GAAA5U,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,KAAA3N,YACA73D,EAAA0uD,KAAAW,aACAqU,EAAA/sE,KAAA2qE,OAAA5S,OACAyT,EAAAuB,KAAAf,KAYA,QAVAhsE,KAAAwuE,aAAAiV,MACAA,GAAAjY,GACAniE,EAAAg6D,OACAwL,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,GACA19B,KAAA2sE,uBAAAtjE,GACAA,EAAA+5D,WAEApjE,KAAA2jF,cAAA5rB,EAAA,YAAAr6B,GAAA,EAAA+lD,IAGAzjF,MAEA+rE,QAAA,SAAAyX,EAAA9lD,EAAA+lD,GACA,GAAA5U,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,KAAA9O,UACA12D,EAAA0uD,KAAAW,aACAqU,EAAA/sE,KAAA2qE,OAAA5S,OACA2T,EAAAqB,KAAAd,GAeA,QAbAjsE,KAAA4uE,cAAA7W,IAAA0rB,KACA5U,GACAA,EAAA+U,iBAEAH,GAAA/X,GACAriE,EAAAg6D,OACAwL,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,GACA19B,KAAA8sE,qBAAAzjE,GACAA,EAAA+5D,WAEApjE,KAAA2jF,cAAA5rB,EAAA,UAAAr6B,IAGA19B,MAEA2jF,cAAA,SAAA5rB,EAAA8rB,EAAAnmD,EAAA+lD,EAAAK,GACA,GAMAC,GACAC,EAPAnV,EAAA7uE,KAAA2+C,WACAt1C,EAAA0uD,KAAAW,aACAurB,EAAAjkF,KAAAkkF,eACAC,EAAAnkF,KAAAokF,gBACAC,EAAArkF,KAAAskF,cACAC,EAAAN,GAAAE,GAAAE,CAIA,IAAAE,GAAA1V,EAAA,CACAxlE,EAAAg6D,MACA,IAAAzlC,GAAA59B,KAAAysE,qBAAA/uC,GACA9+B,EAAAg/B,EAAAyvB,WACAhkD,GAAAu0B,UAAAh/B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAyK,EAAA24D,YACAqiB,EACAA,EAAA1lF,KAAAqB,KAAAqJ,EAAArJ,OAEA+jF,EAAA/jF,KAAAwkF,WACAR,EAAAhkF,KAAAykF,WACAp7E,EAAA65D,KAAA6gB,EAAAC,EAAAC,EAAAE,IAEA96E,EAAA64D,OACAtjE,EAAAg/B,EACAt8B,OACAwrD,SACAO,YACAhkD,EAAAu0B,UAAAh/B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAoB,KAAAkJ,SAAAgiD,KAAA,SAAA39C,GACAA,EAAAs2E,GAAA9rB,EAAAr6B,EAAA+lD,EAAAK,KAGAS,GACAl7E,EAAA+5D,WAGAwL,cAAA,SAAA7W,GACA,GAAA8W,GAAA7uE,KAAA2+C,WACAmL,EAAAlE,MAAAmE,GACA26B,EACA56B,GACAlE,MAAAiE,eACA,IAAAjE,MAAAmE,GAAA24B,KAAAiC,YAAA3/E,QAAA6pE,EACA,OACA9W,MAAA8T,SACAgD,GACAA,EAAAC,mBACA9uE,KAAAwuE,cACAkW,GAGAvZ,cAAA,SAAA93D,GACAA,OACA,IAGA84D,GAAAC,EAAAC,EAAAC,EAHAlB,EAAA/3D,EAAA+3D,cACAC,EAAAh4D,EAAAg4D,WAGAuZ,GACAh5B,EAAAi5B,IACAh5B,EAAAg5B,IACAzkC,MAAA,EACAE,OAAA,GAEAsjB,EAAA5jE,IACAA,MAAAkJ,SAAAgiD,KAAA,SAAA39C,GAEA,GAAAA,EAAAohE,aAAA,CAIA,GAAAzL,GAAA31D,EAAA49D,eACAE,WAAAzH,EACAkhB,WAAAzxE,EAAAyxE,WACAC,WAAA1xE,EAAA0xE,YAIA,KAAA7hB,EAAA9iB,OAAA,IAAA8iB,EAAA5iB,aAIA59C,KAAAypE,GAEAA,EAAAjJ,EAAAtX,EACAwgB,EAAAlJ,EAAArX,EACAwgB,EAAAnJ,EAAAtX,EAAAsX,EAAA9iB,MACAksB,EAAApJ,EAAArX,EAAAqX,EAAA5iB,SAEA6rB,EAAAloE,KAAA0jE,IAAAwE,EAAAjJ,EAAAtX,GACAwgB,EAAAnoE,KAAA0jE,IAAAyE,EAAAlJ,EAAArX,GACAwgB,EAAApoE,KAAA0H,IAAA0gE,EAAAnJ,EAAAtX,EAAAsX,EAAA9iB,OACAksB,EAAAroE,KAAA0H,IAAA2gE,EAAApJ,EAAArX,EAAAqX,EAAA5iB,YAOA,QAFA0I,GAAAhpD,KAAA4iF,KAAA,SACAoC,GAAA,EACAvmF,EAAA,EAAqBA,EAAAuqD,EAAAzmD,OAAmB9D,IAAA,CAExC,GADAuqD,EAAAvqD,GACAgwE,WAAAzuE,MAAA,CACAglF,GAAA,CACA,QAoBA,MAfAJ,GADAI,GAEAp5B,EAAAugB,EACAtgB,EAAAugB,EACAhsB,MAAAisB,EAAAF,EACA7rB,OAAAgsB,EAAAF,IAIAxgB,EAAA,EACAC,EAAA,EACAzL,MAAA,EACAE,OAAA,GAIA8qB,EAGAwZ,EAFA5kF,KAAAksE,iBAAA0Y,EAAAvZ,MAMAzlB,MAAAsR,KAAA9wD,OAAAw/C,MAAAu8B,UAAAv8B,MAAA6kB,MAEA7kB,MAAAu8B,UAAAxiF,UAAAL,IAAAsmD,MAAAu8B,UAAAxiF,UAAAijF,KAGAh9B,MAAAwiB,QAAAQ,0BAAAhjB,MAAAu8B,UAAA,QACA,IACA,IACA,QACA,WA0BAv8B,MAAAwiB,QAAAC,gBACAziB,MAAAu8B,UACA,YACAz/E,GACAkjD,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAu8B,UACA,YACAz/E,GACAkjD,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAu8B,UACA,gBACAz/E,GACAkjD,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAu8B,UACA,iBACAz/E,GACAkjD,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAAu8B,UAAA,YAkBAv8B,MAAAqF,WAAAO,WAAA5F,MAAAu8B,cAGA,SAAAv8B,GACA,YAIA,SAAAoe,GAAA36D,GACAA,EAAAq5D,OAEA,QAAAsE,GAAA39D,GACAA,EAAAq6D,SAEA,QAAAuE,GAAA5+D,GACAA,EAAAq5D,OAEA,QAAAyF,GAAA9+D,GACAA,EAAAq6D,SAGA,QAAAuhB,KACAjlF,KAAA6qE,YAAAqa,GAGA,QAAAC,KACAnlF,KAAA6qE,YAAAua,GArBA,GAAAF,GAAA,YACAE,EAAA,YAsHAx/B,GAAAy/B,MAAA,SAAAp1E,GACAjQ,KAAAoiF,OAAAnyE,IAGA21C,EAAAsR,KAAAiE,WAAAvV,EAAAy/B,OACAjD,OAAA,SAAAnyE,GACAjQ,KAAAw4B,SAAA,QACAx4B,KAAAgkE,YACAhkE,KAAAgnE,cACAhnE,KAAAioE,eACAjoE,KAAAmoE,gBAMA,KAHA,GACAhjE,GADA6jD,EAAApD,EAAAoD,SAKA,IADA7jD,EAAAygD,EAAAsR,KAAAkC,qBACAj0D,IAAA6jD,IACA,KAIAhpD,MAAAgoE,SAAA7iE,EACA6jD,EAAA7jD,GAAAnF,KAGA4lD,EAAA6kB,KAAA9rE,KAAAqB,KAAAiQ,GAEAjQ,KAAAqS,GACA,8HACA4yE,GAGAjlF,KAAAqS,GACA,8EACA8yE,IAGApsE,YAAA,WACA,UAEAkyD,YAAA,WACA,UAQAvS,WAAA,WACA,MAAA14D,MAAA2+C,WAAA+Z,cAQAwI,UAAA,WACA,MAAAlhE,MAAA2+C,WAAAuiB,aAQAokB,UAAA,WACA,MAAAtlF,MAAA+qE,UAAAma,EAAAllF,KAAAulF,aAEAA,WAAA,WACA,MACAvlF,MAAAwlF,oBACA,IAAAxlF,KAAAylF,uBAEAzlF,KAAA0lF,kBACA1lF,KAAAonE,iBACApnE,KAAA2lF,oBACA3lF,KAAA4lF,qBAIA1e,cAAA,WACA,MAAAlnE,MAAA+qE,UAAAqa,EAAAplF,KAAA6lF,iBAEAA,eAAA,WACA,GAAA7lF,KAAAslF,YAAA,CACA,GAAAQ,GAAAlgC,EAAAsR,KAAAuC,YAAAz5D,KAAA+lF,cACA,OACA,QACAD,EAAA9sB,EACA,IACA8sB,EAAA/lF,EACA,IACA+lF,EAAAp/E,EACA,IACAo/E,EAAApgF,GAAA1F,KAAAylF,oBAAA,GACA,MAUAO,QAAA,WACA,SACAhmF,KAAAimF,WACAjmF,KAAA4kE,uBACA5kE,KAAAklE,mCACAllE,KAAA4lE,oCASAe,UAAA,WACA,MACA3mE,MAAAkmF,oBACAlmF,KAAA0jE,WAAA1jE,KAAAsmE,sCAiBAid,WAAA,SAAA53B,GACA,GAEA9rD,GAFA2zE,EAAAxzE,KAAA4+C,WACAunC,EAAA3S,EAAA2S,eAWA,OARAA,GAAAztB,aAAAjnD,QACAzR,KAAA+rE,QAAAoa,GACAtmF,EAAAsmF,EAAA98E,QAAA05D,aACA9+D,KAAAm0D,MAAAzM,EAAAC,GACA3nD,KAAAm0D,MAAAzM,EAAAE,GACA,EACA,GACA5iD,KACApJ,EAAA,MAGAmyC,QAAA,WAGA,MAFA4T,GAAA6kB,KAAA9qE,UAAAqyC,QAAArzC,KAAAqB,YACA4lD,GAAAoD,OAAAhpD,KAAAgoE,UACAhoE,MAEAomF,iBAAA,SAAA3C,GACA,OACAA,GACAzjF,KAAAqmF,sBACA,IAAArmF,KAAA2hE,sBACA3hE,KAAAgmF,WACAhmF,KAAA2mE,aACA3mE,KAAA4+C,YACA5+C,KAAAqmF,sBACArmF,KAAAslF,aACA,IAAAtlF,KAAA2hE,sBACA3hE,KAAAgmF,WACAhmF,KAAA2mE,aACA3mE,KAAA4+C,YAeA0nC,YAAA,WACA,GAAAzS,GAAA7zE,KAAA8zE,SACA,QACAloB,EAAA5rD,KAAAumF,UAAAtiF,KAAAm0D,OAAAyb,EAAAzzB,MAAA,KACAyL,EAAA7rD,KAAAumF,UAAAtiF,KAAAm0D,OAAAyb,EAAAvzB,OAAA,KACAF,MAAAyzB,EAAAzzB,MACAE,OAAAuzB,EAAAvzB,SAGA6qB,cAAA,SAAA93D,GACAA,OACA,IAAA+3D,GAAA/3D,EAAA+3D,cAEAC,EAAAh4D,EAAAg4D,WAEA1I,EAAA3iE,KAAAsmF,cAEAE,GAAAnzE,EAAA0xE,YAAA/kF,KAAA2mE,YACAG,EAAA0f,GAAAxmF,KAAA8mE,eAAA,EAaA2f,EAAA9jB,EAAAviB,MAAA0mB,EACA4f,EAAA/jB,EAAAriB,OAAAwmB,EAEA6f,GAAAtzE,EAAAyxE,YAAA9kF,KAAAslF,YACAsB,EAAAD,EAAA3mF,KAAA4mF,gBAAA,EACAC,EAAAF,EAAA3mF,KAAA6mF,gBAAA,EAEAC,EAAAL,EAAAxiF,KAAA2jE,IAAAgf,GACAG,EAAAL,EAAAziF,KAAA2jE,IAAAif,GAEA/O,EAAA6O,GAAA3mF,KAAAgnF,cAAA,EAEA5mC,EAAA0mC,EAAA,EAAAhP,EACAx3B,EAAAymC,EAAA,EAAAjP,EAKAmP,EAAA,CACAhjF,MAAAm0D,MAAA0O,EAAA,KAAAA,EAAA,IACAmgB,EAAA,EAEA,IAAA/jB,IACA9iB,QAAA6mC,EACA3mC,SAAA2mC,EACAr7B,GACA3nD,KAAAm0D,MAAA0O,EAAA,EAAAgR,GACA7zE,KAAA0jE,IAAAif,EAAA,GACAjkB,EAAA/W,EACAC,GACA5nD,KAAAm0D,MAAA0O,EAAA,EAAAgR,GACA7zE,KAAA0jE,IAAAkf,EAAA,GACAlkB,EAAA9W,EAEA,OAAAuf,GAGAlI,EAFAljE,KAAAksE,iBAAAhJ,EAAAmI,IAIAS,UAAA,SAAA0X,EAAA9lD,EAAA+lD,EAAAK,GACA,GAOAtQ,GACA0T,EACAC,EATAtY,EAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,EAAA3N,YACA73D,EAAA0uD,EAAAW,aACAqU,EAAA/sE,KAAA2qE,OAAA5S,OACAqvB,EAAApnF,KAAAqnF,YACA/B,EAAAtlF,KAAAslF,YACA3e,EAAA3mE,KAAA2mE,WAKA,KAAA3mE,KAAAwuE,cAAAiV,EACA,MAAAzjF,KAEA,IAAA+sE,EAKA,MAJA1jE,GAAAg6D,OACAwL,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,GACA19B,KAAA2sE,uBAAAtjE,GACAA,EAAA+5D,UACApjE,IAEA,KAAAonF,EACA,MAAApnF,KAIA,IAFAqJ,EAAAg6D,OAEArjE,KAAAomF,iBAAA3C,KAAAK,EAAA,CAQA,GAPAtQ,EAAAxzE,KAAA4+C,WACAsoC,EAAA1T,EAAA0T,aACAC,EAAAD,EAAAxuB,aACAyuB,EAAA11E,QACA01E,EAAA9jB,OACA8jB,EAAAvlB,eAAA5hE,OAEAyjF,EACA,GAAA5U,EACAA,EAAA6U,gBAAA1jF,KAAAmnF,EAAAzpD,OACW,CACX,GAAA9+B,GAAAoB,KAAAysE,qBAAA/uC,GAAA2vB,WACAhkD,GAAAu0B,UAAAh/B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIAwoF,EAAAzoF,KAAAqB,KAAAmnF,EAAAnnF,MACAmnF,EAAA/jB,SAEA,IAAAoE,GAAA0f,EAAA19B,UACA87B,KAAAvtB,EAAAgI,WACA12D,EAAAg6D,OAEAh6D,EAAA49D,aAAAjnE,MACAqJ,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,MACAqJ,EAAAm5D,UACA0kB,EAAAroB,QACA,EACA,EACAqoB,EAAA9mC,MAAAonB,EACA0f,EAAA5mC,OAAAknB,GAEAn+D,EAAA+5D,YAEA/5D,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,MACAqJ,EAAAm5D,UACA0kB,EAAAroB,QACA,EACA,EACAqoB,EAAA9mC,MAAAonB,EACA0f,EAAA5mC,OAAAknB,QAGO,CAIP,GAFAn+D,EAAAu4D,eAAA5hE,OAEAyjF,EACA,GAAA5U,EACAA,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,OACW,CACX,GAAAz+B,GAAAe,KAAAysE,qBAAA/uC,GAAA2vB,WACAhkD,GAAAu0B,UAAA3+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAIAqmF,GAAA3e,IAAA5O,EAAAgI,WACA12D,EAAAg6D,OAEAogB,IACAp6E,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,OAEAqJ,EAAA49D,aAAAjnE,MAEAonF,EAAAzoF,KAAAqB,KAAAqJ,EAAArJ,MACAqJ,EAAA+5D,UAIApjE,KAAAgmF,WAAAhmF,KAAA+mE,6BACAqgB,EAAAzoF,KAAAqB,KAAAqJ,EAAArJ,OAESslF,IAAAvtB,EAAAgI,WACT12D,EAAAg6D,OACAogB,IACAp6E,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,OAEAqJ,EAAA49D,aAAAjnE,MACAonF,EAAAzoF,KAAAqB,KAAAqJ,EAAArJ,MACAqJ,EAAA+5D,YAEAqgB,IACAp6E,EAAAo4D,cAAAzhE,MACAqJ,EAAAw+D,+BAAA7nE,OAEAonF,EAAAzoF,KAAAqB,KAAAqJ,EAAArJ,OAIA,MADAqJ,GAAA+5D,UACApjE,MAEA+rE,QAAA,SAAAyX,EAAA9lD,EAAA+lD,GACA,GAAA5U,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,EAAA9O,UACA12D,EAAA0uD,EAAAW,aACA0uB,EAAApnF,KAAAsnF,WAAAtnF,KAAAqnF,YACAta,EAAA/sE,KAAA2qE,OAAA5S,OACA2T,EAAAqB,KAAAd,GAEA,KAAAjsE,KAAA4uE,cAAA7W,KAAA0rB,EACA,MAAAzjF,KAKA,IAHA6uE,GACAA,EAAA+U,gBAEAlY,EAKA,MAJAriE,GAAAg6D,OACAwL,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,GACA19B,KAAA8sE,qBAAAzjE,GACAA,EAAA+5D,UACApjE,IAEA,KAAAonF,EACA,MAAApnF,KAIA,IAFAqJ,EAAAg6D,OACAh6D,EAAAu4D,eAAA5hE,OACAyjF,EACA,GAAA5U,EACAA,EAAA6U,gBAAA1jF,KAAAqJ,EAAAq0B,OACS,CACT,GAAAz+B,GAAAe,KAAAysE,qBAAA/uC,GAAA2vB,WACAhkD,GAAAu0B,UAAA3+B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAKA,MAFAmoF,GAAAzoF,KAAAqB,KAAAqJ,EAAArJ,MACAqJ,EAAA+5D,UACApjE,MAcAunF,iBAAA,SAAAC,GACA,GAOAC,GACAC,EACAl4E,EACAm4E,EACAlpF,EACAq6D,EAZAwf,EAAAkP,GAAA,EACAza,EAAA/sE,KAAA2qE,OAAA5S,OACAkV,EAAAjtE,KAAA6sE,wBACA9M,EAAAgN,EAAAd,IACAL,EAAA7L,EAAArH,aACAkvB,EAAA7nB,EAAAX,WACAyoB,EAAA9nB,EAAAV,WAQAuM,GAAAn6D,QACAm6D,EAAApJ,UAAAyK,EAAApO,QAAA,IAAA+oB,EAAAC,EAEA,KAOA,IANAJ,EAAA7b,EAAA7I,aAAA,IAAA6kB,EAAAC,GACAH,EAAAD,EAAAx+E,KACAuG,EAAAk4E,EAAAnlF,OACAolF,EAAA/hC,EAAAsR,KAAA+B,UAAAj5D,KAAAgoE,UAGAvpE,EAAA,EAAmBA,EAAA+Q,EAAS/Q,GAAA,EAC5Bq6D,EAAA4uB,EAAAjpF,EAAA,GACAq6D,EAAAwf,GACAoP,EAAAjpF,GAAAkpF,EAAA3uB,EACA0uB,EAAAjpF,EAAA,GAAAkpF,EAAA5nF,EACA2nF,EAAAjpF,EAAA,GAAAkpF,EAAAjhF,EACAghF,EAAAjpF,EAAA,QAEAipF,EAAAjpF,EAAA,IAGAmtE,GAAAjT,aAAA8uB,EAAA,KACO,MAAAtnF,GACPylD,EAAAsR,KAAA3mD,MACA,sDAAApQ,EAAAu/D,SAIA,MAAA1/D,SAGA4lD,EAAAsR,KAAA9wD,OAAAw/C,EAAAy/B,MAAAz/B,EAAA6kB,MAGA7kB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,aACA3iF,GACAkjD,EAAA8jB,WAAAO,sBA2BArkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,cACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,oBACA,EACAz/B,EAAA8jB,WAAAU,uBAsBAxkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,sBACA,EACAz/B,EAAA8jB,WAAAU,uBAoBAxkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,0BACA,EACAz/B,EAAA8jB,WAAAU,uBAqBAxkB,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,YAkBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,WAiBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,aAsBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,WAsBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,QAkBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,aACA,EACAz/B,EAAA8jB,WAAAI,sBAgBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,kBACA3iF,GACAkjD,EAAA8jB,WAAAO,sBA2BArkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,aACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BAAAhjB,EAAAy/B,MAAA,gBACA,IACA,MAuBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,oBAqBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,WACA3iF,GACAkjD,EAAA8jB,WAAAO,sBA8BArkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,eACA,EACAz/B,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,eACA,EACAz/B,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,gCAkBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,kCAkBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAkBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,iCAiBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,gCAkBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,8BAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,kBAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,oBAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,oBAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,kBAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,yBAoBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,wBAkBAz/B,EAAAwiB,QAAAQ,0BAAAhjB,EAAAy/B,MAAA,qBACA,IACA,MAuBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,qBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,qBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BAAAhjB,EAAAy/B,MAAA,oBACA,IACA,MAuBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,oBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,oBACA,EACAz/B,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,gCACA,UAuBAz/B,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,kCACA,UAuBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAkBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,kCACA,GAkBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAkBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,kCACA,GAiBAz/B,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,8BACA,UAuBAz/B,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,gCACA,UAuBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,iCAgBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAiBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,iCAgBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAiBAz/B,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,gCACA,UAuBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAiBAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAy/B,MACA,gCACA,GAiBAz/B,EAAAwiB,QAAAQ,0BACAhjB,EAAAy/B,MACA,8BACA,UAuBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,iCAgBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,iCAgBAz/B,EAAAwiB,QAAAC,gBAAAziB,EAAAy/B,MAAA,yBAiBAz/B,EAAAwiB,QAAAc,WAAAtjB,EAAAy/B,OACAyC,UAAA,OACAC,aAAA,UACAC,aAAA,UAEAZ,SAAA,YACAa,YAAA,eACAC,YAAA,eAEAC,YAAA,UACAC,eAAA,aACAC,eAAA,eAGAziC,EAAAqF,WAAAO,WAAA5F,EAAAy/B,QACCz/B,OAED,WACA,YAyDA,SAAA0iC,GAAA9iF,EAAA1D,GACA0D,EAAA+iF,QAAAx6D,iBACAjsB,EACA,SAAA0rE,GACAhoE,EAAAgjF,EAAA1mF,GAAA0rE,KAEA,GA7DA,GAqCAgb,GAAA,IAGAC,GAhCA,YADA,YAEA,UANA,WAUA,aAIA,YAHA,WATA,YAaA,QARA,eA2CAC,EAAAD,EAAAlmF,MA8CAqjD,OAAAE,MAAA,SAAA71C,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAsR,KAAAiE,WAAAvV,MAAAE,OACA6iC,QAAA,SAAA14E,GACAjQ,KAAAw4B,SAzGA,QA2GAotB,MAAAu8B,UAAAxjF,KAAAqB,KAAAiQ,GACAjQ,KAAA0hD,IAAAkE,MAAAiD,YACA7oD,KAAA4oF,YACA5oF,KAAA6oF,qBACA7oF,KAAA8oF,yBAAA,EACAljC,MAAAgD,OAAArgD,KAAAvI,OAEAyiF,aAAA,SAAAl1E,GACA,UAAAA,EAAA6B,WACAw2C,MAAAsR,KAAA8D,MAAA,0CASA+tB,aAAA,SAAAz7C,GACA,GA7HA,gBA6HAA,GAAA,CACA,SAAAA,EAAArsC,OAAA,IACA,GAAA+wE,GAAA1kC,EAAApsC,MAAA,EACAosC,GAAAsY,MAAA98B,SAAAkgE,uBAAAhX,GAAA,OACS,CACT,GAAAhkE,EAEAA,GADA,MAAAs/B,EAAArsC,OAAA,GACAqsC,EAEAA,EAAApsC,MAAA,GAEAosC,EAAAsY,MAAA98B,SAAAmgE,eAAAj7E,GAEA,IAAAs/B,EACA,mDAAAt/B,EAIA,MADAhO,MAAA2oE,SAzGA,YAyGAr7B,GACAttC,MAEA4uE,cAAA,WACA,UAEAqG,KAAA,WAEA,MADArvB,OAAA6kB,KAAA9qE,UAAAs1E,KAAAt2E,KAAAqB,MACAA,MAsBAu/D,UAAA,SAAAjf,GAGA,MAFAsF,OAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAAkpF,aACAlpF,MAQAs/D,SAAA,SAAAlf,GAGA,MAFAwF,OAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAAkpF,aACAlpF,MAOAyR,MAAA,WACA,GAEAlS,GAFA4pF,EAAAnpF,KAAAkJ,SACAsG,EAAA25E,EAAA5mF,MAGA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1B4pF,EAAA5pF,GAAAkS,OAEA,OAAAzR,OAEAwiB,MAAA,SAAAliB,GAKA,MAJAA,KACAA,MAEAA,EAAAgtC,UAAAsY,MAAA98B,SAAA5G,cA/KA,OAgLA0jC,MAAAu8B,UAAAxiF,UAAA6iB,MAAA7jB,KAAAqB,KAAAM,IAOA0xC,QAAA,WACA,GAAAu2C,GAAAvoF,KAAAuoF,OACA3iC,OAAAu8B,UAAAxiF,UAAAqyC,QAAArzC,KAAAqB,MAEAuoF,GAAA3iC,MAAAsR,KAAAe,cAAAswB,IACAvoF,KAAAopF,eAAAp/D,YAAAu+D,EAEA,IAAA3nF,GAAAglD,MAAAgD,OAAA5jD,QAAAhF,KAIA,OAHAY,IAAA,GACAglD,MAAAgD,OAAA3jD,OAAArE,EAAA,GAEAZ,MAQAqpF,mBAAA,WACA,MAAArpF,MAAAspF,YAEA1qC,SAAA,WACA,MAAA5+C,OAQAupF,WAAA,WACA,MAAAvpF,MAAAuoF,SAEAjV,eAAA,SAAArjE,GACAA,OAEA,IAAA27C,GAAA37C,EAAA27C,GAAA,EACAC,EAAA57C,EAAA47C,GAAA,EACAkM,EAAA,GAAAnS,OAAA+Z,aACAvf,MAAAnwC,EAAAmwC,OAAApgD,KAAAo/D,WACA9e,OAAArwC,EAAAqwC,QAAAtgD,KAAAq/D,YACA7V,WAAAv5C,EAAAu5C,YAAA,IAEAiP,EAAAV,EAAAW,aAAAD,SACA0wB,EAAAnpF,KAAAkJ,QAmBA,QAjBA0iD,GAAAC,IACA4M,EAAA3M,WAAA,EAAAF,GAAA,EAAAC,GAGAs9B,EAAAj+B,KAAA,SAAA2jB,GACA,GAAAA,EAAAL,YAAA,CAGA,GAAAgb,GAAA3a,EAAAyE,eAAArjE,EACAwoD,GAAA+J,UACAgnB,EAAA3qB,QACAjT,EACAC,EACA29B,EAAApqB,WAAAoqB,EAAAxqB,gBACAwqB,EAAAnqB,YAAAmqB,EAAAxqB,oBAGAjH,GAkBA4b,QAAA,SAAA1jE,GACA,GAAAe,GAAAf,EAAA0T,QAEA1T,GAAA0T,SAAA,SAAA8lE,GACA7jC,MAAAsR,KAAAmB,UAAAoxB,EAAA,SAAA7V,GACA5iE,EAAA4iE,MAGA5zE,KAAA44D,UAAA3oD,IAiBAy5E,gBAAA,SAAApsD,EAAAq6B,GACA,GAGAp4D,GACA+gE,EAJA6oB,EAAAnpF,KAAAirE,cACAz7D,EAAA25E,EAAA5mF,OACAu0B,EAAAtnB,EAAA,CAIA,KAAAjQ,EAAAu3B,EAAmBv3B,GAAA,EAAQA,IAE3B,GADA+gE,EAAA6oB,EAAA5pF,GAAAmqF,gBAAApsD,EAAAq6B,GAEA,MAAA2I,EAIA,cAEA4oB,WAAA,WACA,GAAAlpF,KAAAuoF,QAAA,CACA,GAIAhpF,GACAsvE,EALAzuB,EAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,YACA8pB,EAAAnpF,KAAAirE,cACAz7D,EAAA25E,EAAA5mF,MAYA,KAPAvC,KAAAuoF,QAAA9jE,MAAA27B,QA3VA,KA4VApgD,KAAAuoF,QAAA9jE,MAAA67B,SA5VA,KA8VAtgD,KAAAknF,aAAA/nB,QAAA/e,EAAAE,GACAtgD,KAAAmmF,gBAAAhnB,QAAA/e,EAAAE,GAGA/gD,EAAA,EAAmBA,EAAAiQ,EAASjQ,IAC5BsvE,EAAAsa,EAAA5pF,GACAsvE,EAAA1P,QAAA/e,EAAAE,GACAuuB,EAAAoG,SAYAljE,IAAA,SAAA88D,GACA,GAAAlpE,UAAApD,OAAA,GACA,OAAA9D,GAAA,EAAuBA,EAAAkH,UAAApD,OAAsB9D,IAC7CuB,KAAA+R,IAAApM,UAAAlH,GAEA,OAAAuB,MAaA,MAXA4lD,OAAAu8B,UAAAxiF,UAAAoS,IAAApT,KAAAqB,KAAA6uE,GACAA,EAAA8a,eAAA3pF,KAAAogD,QAAApgD,KAAAsgD,UAGAuuB,EAAAoG,OAEArvB,MAAAuD,WACAnpD,KAAAuoF,QAAAt+D,YAAA4kD,EAAA9W,OAAA8G,SAIA7+D,MAEAsrE,UAAA,WACA,aAEA3sB,SAAA,WACA,aAOAgmC,UAAA,WACA,MAAA3kF,MAAAirE,eAEA4d,mBAAA,WACA,GAAAjjC,MAAAuD,UAGA,OAAA5pD,GAAA,EAAqBA,EAAAmpF,EAAkBnpF,IACvC+oF,EAAAtoF,KAAAyoF,EAAAlpF,KAGAqqF,WAAA,SAAApc,GACA5nB,MAAAlX,GAAAmc,SACA7qD,KAAA6pF,oBAAArc,GACAxtE,KAAA8yE,MA5YA,oBA4YuCtF,UAGvCsc,UAAA,SAAAtc,GACA,IAAA5nB,MAAAlX,GAAAmc,OAAA,CACA7qD,KAAA6pF,oBAAArc,EACA,IAAAuc,GAAA/pF,KAAA+pF,WAEAA,KAAAnkC,MAAAiE,eACAkgC,EAAAlX,eAtaA,YAsagDrF,QAChDuc,EAAAlX,eAtaA,cAsakDrF,QAClDxtE,KAAA+pF,YAAA,MAEA/pF,KAAAspF,eAAA5mF,GAEA1C,KAAA8yE,MA5ZA,mBA4ZsCtF,UAGtCwc,WAAA,SAAAxc,GAEA,GAAA5nB,MAAAlX,GAAAoc,SACA,MAAA9qD,MAAAiqF,WAAAzc,EAGA,SACA,KAAAA,EAAA0c,eACA,KAAA1c,EAAA2c,YACA,IAAA3c,EAAA2c,WACA,IAAA3c,EAAA0c,UAEA,WAEA,IAAAtkC,MAAAlX,GAAAmc,OACA,WAEA7qD,MAAA6pF,oBAAArc,EACA,IAAAlN,EAEA1a,OAAAiE,eACAyW,EAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,sBACA/oB,KAAA8N,cAEAxoB,MAAAiE,cACA7pD,KAAA+pF,aAAA/pF,KAAA+pF,YAAAroC,MAAA4e,EAAA5e,IAUA4e,EAAAuS,eA9cA,aA8c6CrF,SAR7CxtE,KAAA+pF,cACA/pF,KAAA+pF,YAAAlX,eA3cA,YA2cyDrF,OAAWlN,GACpEtgE,KAAA+pF,YAAAlX,eA3cA,cA2c2DrF,OAAWlN,IAEtEA,EAAAuS,eA5cA,aA4c6CrF,OAAWxtE,KAAA+pF,aACxDzpB,EAAAuS,eA5cA,cA4c8CrF,OAAWxtE,KAAA+pF,aACzD/pF,KAAA+pF,YAAAzpB,IASAtgE,KAAA+pF,cAAAnkC,MAAAiE,eACA7pD,KAAA+pF,YAAAlX,eA1dA,YA0duDrF,QACvDxtE,KAAA+pF,YAAAlX,eA1dA,cA0dyDrF,QACzDxtE,KAAA+pF,YAAA,MAEA/pF,KAAA8yE,MA1dA,aA2dAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,QAKAA,KAAA8yE,MApdA,oBAoduCtF,SAKvCA,EAAA4c,YACA5c,EAAA6c,kBAGAC,WAAA,SAAA9c,GAEA,GAAA5nB,MAAAlX,GAAAoc,SACA,MAAA9qD,MAAAuqF,YAAA/c,EAEA,KAAA5nB,MAAAlX,GAAAmc,OAAA,CACA7qD,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,qBAEAzjC,OAAAqD,gBAAA,EAEAqX,KAAA8N,eACApuE,KAAAwqF,gBAAAlqB,EACAA,EAAAuS,eAvfA,aAuf2CrF,SAE3CxtE,KAAA8yE,MAzfA,aA0fAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,OAKAA,KAAA8yE,MAnfA,oBAmfuCtF,UAYvCid,SAAA,SAAAjd,GAEA,GAAA5nB,MAAAlX,GAAAoc,SACA,MAAA9qD,MAAA0qF,UAAAld,EAEA,KAAA5nB,MAAAlX,GAAAmc,OAAA,CACA7qD,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,sBACAmB,EAAAxqF,KAAAwqF,gBACAG,EAAA3qF,KAAA2qF,cACAC,GAAA,EACA9gC,EAAAlE,MAAAmE,EAEAnE,OAAAsD,kBACA0hC,GAAA,EACA/oC,aAAA7hD,KAAA6qF,aAES/gC,KAAAghC,YAIAhhC,IACTA,EAAAghC,aAAA,IAHAllC,MAAAsD,kBAAA,EACArH,aAAA7hD,KAAA6qF,aAKA7qF,KAAA6qF,WAAAh1E,WAAA,WACA+vC,MAAAsD,kBAAA,GACStD,MAAA2D,gBAET+W,KAAA8N,eACApuE,KAAA2qF,cAAArqB,EACAA,EAAAuS,eA3iBA,WA2iByCrF,QAIzC5nB,MAAAqD,gBACAuhC,GACAA,EAAA9oC,MAAA4e,EAAA5e,MAEA4e,EAAAuS,eAjjBA,SAijByCrF,QAGzCod,GACAD,GACAA,EAAAjpC,MAAA4e,EAAA5e,KAEA4e,EAAAuS,eAvjBA,YAujB+CrF,WAI/CxtE,KAAA8yE,MA9jBA,WA8jB+BtF,MAAAnlE,OAAArI,KAAA6tE,cAAA7tE,OAC/B4lD,MAAAqD,gBACAjpD,KAAA8yE,MA9jBA,SA8jB+BtF,MAAAnlE,OAAArI,KAAA6tE,cAAA7tE,OAG/B4qF,GACA5qF,KAAA8yE,MAjkBA,YAkkBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,QAKAA,KAAA8yE,MA9jBA,kBA8jBqCtF,QACrC5nB,MAAAqD,iBACAjpD,KAAA8yE,MA9jBA,gBA8jBqCtF,QACrCod,GACA5qF,KAAA8yE,MA/jBA,mBA+jB2CtF,SAI3C5nB,MAAAqD,gBAAA,EAKAukB,EAAA4c,YACA5c,EAAA6c,kBAGAU,aAAA,SAAAvd,GACAxtE,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,qBAEA/oB,MAAA8N,cACA9N,EAAAuS,eAjmBA,eAimB2CrF,QAE3CxtE,KAAA8yE,MAnmBA,eAomBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,OAGAA,KAAA8yE,MA3lBA,sBA2lBuCtF,SAEvC+c,YAAA,SAAA/c,GACAxtE,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,qBAEAzjC,OAAAqD,gBAAA,EAEAqX,KAAA8N,eACApuE,KAAAgrF,cAAA1qB,EACAA,EAAAuS,eAhnBA,cAgnB0CrF,QAG1ClN,EAAA8N,eAAA9N,EAAA+pB,kBAAA7c,EAAA4c,YACA5c,EAAA6c,kBAGArqF,KAAA8yE,MAvnBA,cAwnBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,OAIAA,KAAA8yE,MAhnBA,qBAgnBsCtF,SAEtCkd,UAAA,SAAAld,GACAxtE,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,sBACAuB,GAAA,CAEAhlC,OAAAsD,kBACA0hC,GAAA,EACA/oC,aAAA7hD,KAAA6qF,cAGAjlC,MAAAsD,kBAAA,EACArH,aAAA7hD,KAAA6qF,aAGA7qF,KAAA6qF,WAAAh1E,WAAA,WACA+vC,MAAAsD,kBAAA,GACOtD,MAAA2D,gBAEP+W,KAAA8N,eACA9N,EAAAuS,eAlpBA,YAkpBwCrF,QAIxC5nB,MAAAqD,gBACAjpD,KAAAgrF,eACA1qB,EAAA5e,MAAA1hD,KAAAgrF,cAAAtpC,MAEA4e,EAAAuS,eAzpBA,OAypBqCrF,QAErCod,GACAtqB,EAAAuS,eA3pBA,UA2pB2CrF,SAI3ClN,EAAA8N,eAAA9N,EAAA+pB,kBAAA7c,EAAA4c,YACA5c,EAAA6c,mBAGArqF,KAAA8yE,MArqBA,YAqqB8BtF,MAAAnlE,OAAArI,KAAA6tE,cAAA7tE,OAC9B4lD,MAAAqD,gBACAjpD,KAAA8yE,MAtqBA,OAsqB2BtF,MAAAnlE,OAAArI,KAAA6tE,cAAA7tE,OAE3B4qF,GACA5qF,KAAA8yE,MAxqBA,UAyqBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,QAKAA,KAAA8yE,MApqBA,mBAoqBoCtF,QACpC5nB,MAAAqD,iBACAjpD,KAAA8yE,MApqBA,cAoqBiCtF,QACjCod,GACA5qF,KAAA8yE,MAvqBA,iBAuqBuCtF,SAIvC5nB,MAAAqD,gBAAA,GAEAghC,WAAA,SAAAzc,GACAxtE,KAAA6pF,oBAAArc,EACA,IACAlN,GADAxW,EAAAlE,MAAAmE,EAEAnE,OAAAiE,eACAyW,EAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,sBACA/oB,KAAA8N,eACA9N,EAAAuS,eAhsBA,aAgsB2CrF,QAE3ClN,EAAA8N,eAAA9N,EAAA+pB,kBAAA7c,EAAA4c,YACA5c,EAAA6c,kBAGArqF,KAAA8yE,MAtsBA,aAusBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,OAGAA,KAAA8yE,MA9rBA,oBA8rBuCtF,SAEvC1jB,GAEAlE,MAAAiE,cACAjE,MAAAmE,GAAAj2C,KAAAu2E,kBACA7c,EAAA4c,YAEA5c,EAAA6c,kBAIAY,OAAA,SAAAzd,GACAxtE,KAAA6pF,oBAAArc,EACA,IAAAlN,GAAAtgE,KAAA0pF,gBAAA1pF,KAAAqpF,qBAEA/oB,MAAA8N,cACA9N,EAAAuS,eA5tBA,SA4tBqCrF,QAErCxtE,KAAA8yE,MA9tBA,SA+tBAtF,MACAnlE,OAAArI,KACA6tE,cAAA7tE,OAGAA,KAAA8yE,MAttBA,gBAstBiCtF,SAEjCqc,oBAAA,SAAArc,GACA,GAAA0d,GAAAlrF,KAAAmrF,sBACAv/B,EAAA,KACAC,EAAA,IAIA,IAHA2hB,KAAAptE,OAAAsS,UAGAhQ,KAAA8qE,EAAA4d,SAEA,GAAA5d,EAAA4d,QAAA7oF,OAAA,GACA,GAAA8oF,GAAA7d,EAAA4d,QAAA,EAEAx/B,GAAAy/B,EAAAC,QAAAJ,EAAA1tD,KACAquB,EAAAw/B,EAAAE,QAAAL,EAAAxtD,SAIAkuB,GAAA4hB,EAAA8d,QAAAJ,EAAA1tD,KACAquB,EAAA2hB,EAAA+d,QAAAL,EAAAxtD,GAEA,QAAAkuB,GAAA,OAAAC,IACA7rD,KAAAspF,YACA19B,IACAC,OAIAs/B,oBAAA,WACA,GAAAjoB,GAAAljE,KAAAuoF,QAAAprD,sBACAn9B,KAAAuoF,QAAAprD,yBACWO,IAAA,EAAAF,KAAA,EACX,QACAE,IAAAwlC,EAAAxlC,IACAF,KAAA0lC,EAAA1lC,OAGAorD,UAAA,WAOA,GAHA5oF,KAAAknF,aAAA,GAAAthC,OAAA+Z,YACA3/D,KAAAmmF,gBAAA,GAAAvgC,OAAAia,WAAkDrW,WAAA,IAElD5D,MAAAuD,UAAA,CAGA,GAAA7b,GAAAttC,KAAAopF,cACA,KAAA97C,EACA,uDAGAA,GAAAH,UApwBA,GAuwBAntC,KAAAuoF,QAAA3iC,MAAA98B,SAAA5G,cA7wBA,OA8wBAliB,KAAAuoF,QAAA9jE,MAAAs7B,SA7wBA,WA8wBA//C,KAAAuoF,QAAA9jE,MAAA+mE,WAAA,OACAxrF,KAAAuoF,QAAAvW,UA9wBA,kBAgxBAhyE,KAAAuoF,QAAAh/D,aAAA,uBAEA+jB,EAAArjB,YAAAjqB,KAAAuoF,SAEAvoF,KAAAkpF,eAEAuC,WAAA,SAAAC,EAAAzuE,GACA,GAEA1d,GACA+tE,EAHAqe,EAAAD,EAAA9mF,MAtxBA,KAuxBA4K,EAAAm8E,EAAAppF,MAIA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1B+tE,EAAAqe,EAAApsF,GACAS,KAAAuoF,QAAAx6D,iBAAAu/C,EAAArwD,GAAA,IAKA3X,MAAA,WACAsgD,MAAAsR,KAAA7mC,KACA,mGAGA66C,WAAA,eAEAtlB,MAAAsR,KAAA9wD,OAAAw/C,MAAAE,MAAAF,MAAAu8B,WAGAv8B,MAAAwiB,QAAAI,UAAA5iB,MAAAE,MAAA,aACAF,MAAAwiB,QAAAM,0BAAA9iB,MAAAE,MAAA,gBAkBA,SAAAF,GACA,YAqCAA,GAAAgmC,UAAA,SAAA37E,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,EAAAsR,KAAAiE,WAAAvV,EAAAgmC,WACAjD,QAAA,SAAA14E,GACAjQ,KAAAw4B,SAAA,QACAotB,EAAAu8B,UAAAxjF,KAAAqB,KAAAiQ,IAEA47E,gBAAA,WACA,MAAA7rF,MAAA+3D,OAAA8G,QAAAgtB,mBAOA3qB,UAAA,WACA,MAAAlhE,MAAA+3D,QAOA+zB,aAAA,WACA,MAAA9rF,MAAA+/D,WAOArH,WAAA,WACA,MAAA14D,MAAAkhE,YAAAxI,cAoBAjnD,MAAA,SAAA2vD,GAEA,MADAphE,MAAA04D,aAAAjnD,MAAA2vD,GACAphE,MAEA4jF,cAAA,WACA5jF,KAAA+rF,kBAAArpF,IAGA0lD,UAAA,SAAAxnD,GACAglD,EAAA6kB,KAAA9qE,UAAAyoD,UAAAzpD,KAAAqB,KAAAY,EACA,IAAA4yE,GAAAxzE,KAAA4+C,UAaA,OAZA40B,KACAA,EAAA+U,QAAAv+D,YAAAhqB,KAAAkhE,YAAArC,SAEAj+D,EAAA4yE,EAAAvI,cAAA1oE,OAAA,EACAixE,EAAA+U,QAAA1+D,aACA7pB,KAAAkhE,YAAArC,QACA2U,EAAAvI,cAAArqE,EAAA,GAAAsgE,YAAArC,SAGA2U,EAAA+U,QAAAt+D,YAAAjqB,KAAAkhE,YAAArC,UAGA7+D,MAGAsxE,UAAA,WACA1rB,EAAA6kB,KAAA9qE,UAAA2xE,UAAA3yE,KAAAqB,KACA,IAAAwzE,GAAAxzE,KAAA4+C,UAKA,OAJA40B,KACAA,EAAA+U,QAAAv+D,YAAAhqB,KAAAkhE,YAAArC,SACA2U,EAAA+U,QAAAt+D,YAAAjqB,KAAAkhE,YAAArC,UAEA7+D,MAGAuxE,OAAA,WAEA,IADA3rB,EAAA6kB,KAAA9qE,UAAA4xE,OAAA5yE,KAAAqB,MAEA,MAAAA,KAEA,IAAAwzE,GAAAxzE,KAAA4+C,UACA,OAAA40B,IAGAA,EAAA+U,QAAAv+D,YAAAhqB,KAAAkhE,YAAArC,SAEA7+D,KAAAY,MAAA4yE,EAAAvI,cAAA1oE,OAAA,EACAixE,EAAA+U,QAAA1+D,aACA7pB,KAAAkhE,YAAArC,QACA2U,EAAAvI,cAAAjrE,KAAAY,MAAA,GAAAsgE,YAAArC,SAGA2U,EAAA+U,QAAAt+D,YAAAjqB,KAAAkhE,YAAArC,SAEA7+D,MAZAA,MAeAwxE,SAAA,WACA,GAAA5rB,EAAA6kB,KAAA9qE,UAAA6xE,SAAA7yE,KAAAqB,MAAA,CACA,GAAAwzE,GAAAxzE,KAAA4+C,UACA,IAAA40B,EAAA,CACA,GAAAtqE,GAAAsqE,EAAAvI,aACAuI,GAAA+U,QAAAv+D,YAAAhqB,KAAAkhE,YAAArC,SACA2U,EAAA+U,QAAA1+D,aACA7pB,KAAAkhE,YAAArC,QACA31D,EAAAlJ,KAAAY,MAAA,GAAAsgE,YAAArC,UAIA,MAAA7+D,OAGAyxE,aAAA,WACA,GAAA7rB,EAAA6kB,KAAA9qE,UAAA8xE,aAAA9yE,KAAAqB,MAAA,CACA,GAAAwzE,GAAAxzE,KAAA4+C,UACA,IAAA40B,EAAA,CACA,GAAAtqE,GAAAsqE,EAAAvI,aACAuI,GAAA+U,QAAAv+D,YAAAhqB,KAAAkhE,YAAArC,SACA2U,EAAA+U,QAAA1+D,aACA7pB,KAAAkhE,YAAArC,QACA31D,EAAA,GAAAg4D,YAAArC,UAIA,MAAA7+D,OAEA2+C,SAAA,WACA,MAAA3+C,OAEA6E,OAAA,WACA,GAAAg6D,GAAA7+D,KAAAkhE,YAAArC,OAOA,OALAjZ,GAAA6kB,KAAA9qE,UAAAkF,OAAAlG,KAAAqB,MAEA6+D,KAAA52C,YAAA29B,EAAAsR,KAAAe,cAAA4G,IACAA,EAAA52C,WAAA+B,YAAA60C,GAEA7+D,MAEA4+C,SAAA,WACA,MAAA5+C,MAAAsN,QAEA6xD,QAAA,SAAA/e,EAAAE,GAEA,MADAtgD,MAAA+3D,OAAAoH,QAAA/e,EAAAE,GACAtgD,MAEAszE,eAAA,SAAArjE,GAOA,MANAA,SACAA,EAAAmwC,MAAAnwC,EAAAmwC,OAAApgD,KAAAo/D,WACAnvD,EAAAqwC,OAAArwC,EAAAqwC,QAAAtgD,KAAAq/D,YACApvD,EAAA27C,MAAAlpD,KAAAuN,EAAA27C,EAAA37C,EAAA27C,EAAA5rD,KAAA0vE,OACAz/D,EAAA47C,MAAAnpD,KAAAuN,EAAA47C,EAAA57C,EAAA47C,EAAA7rD,KAAA2vE,OAEA/pB,EAAA6kB,KAAA9qE,UAAA2zE,eAAA30E,KAAAqB,KAAAiQ,IAYAmvD,SAAA,WACA,GAAAp/D,KAAAsN,OACA,MAAAtN,MAAAsN,OAAA8xD,YAGAE,SAAA,WACA1Z,EAAAsR,KAAA7mC,KACA,8EAaAgvC,UAAA,WACA,GAAAr/D,KAAAsN,OACA,MAAAtN,MAAAsN,OAAA+xD,aAGAE,UAAA,WACA3Z,EAAAsR,KAAA7mC,KACA,gFAMAqzD,gBAAA,SAAApjB,EAAAj3D,EAAAq0B,GACA,GAAA9+B,GAAA0hE,EAAAmM,qBAAA/uC,GAAA2vB,WACAhkD,GAAAu0B,UAAAh/B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAGAgnD,EAAAsR,KAAA9wD,OAAAw/C,EAAAgmC,UAAAhmC,EAAAu8B,WAGAv8B,EAAAwiB,QAAAC,gBAAAziB,EAAAgmC,UAAA,sBAoBAhmC,EAAAqF,WAAAO,WAAA5F,EAAAgmC,YACChmC,OAED,WACA,YAEA,IAUAomC,KACOpgC,EAAA,EAAAC,EAAA,IACAD,GAAA,EAAAC,GAAA,IACAD,EAAA,EAAAC,GAAA,IACAD,EAAA,EAAAC,EAAA,IACAD,GAAA,EAAAC,EAAA,IAEPogC,EAAAD,EAAAzpF,MAyCAqjD,OAAAsmC,MAAA,SAAAj8E,GACAjQ,KAAAmsF,SAAAl8E,IAGA21C,MAAAsR,KAAAiE,WAAAvV,MAAAsmC,OACAC,SAAA,SAAAl8E,GACAjQ,KAAAw4B,SAAA,QACAx4B,KAAA+3D,OAAA,GAAAnS,OAAA+Z,YACA3/D,KAAA+/D,UAAA,GAAAna,OAAAia,WACArW,WAAA,IAGA5D,MAAAgmC,UAAAjtF,KAAAqB,KAAAiQ,IAEA05E,eAAA,SAAAvpC,EAAAE,GACAtgD,KAAA+3D,OAAAoH,QAAA/e,EAAAE,GACAtgD,KAAA+/D,UAAAZ,QAAA/e,EAAAE,IAEAmiC,aAAA,SAAAl1E,GACA,GAAAV,GAAAU,EAAA6B,SACA,WAAAvC,GAAA,UAAAA,GACA+4C,MAAAsR,KAAA8D,MAAA,mDAmBA0uB,gBAAA,SAAApsD,EAAAq6B,GACA,GAAAr3D,GAAA7B,EAAA2tF,EAAA9rB,CAEA,KAAAtgE,KAAA8uE,oBAAA9uE,KAAAwuE,YACA,WAOA,KAFA,GAAA6d,GAAA,EACAC,GAAA,IACA,CACA,IAAA7tF,EAAA,EAAmBA,EAAAwtF,EAA8BxtF,IAAA,CAOjD,GANA2tF,EAAAJ,EAAAvtF,GACA6B,EAAAN,KAAAusF,kBACA3gC,EAAAtuB,EAAAsuB,EAAAwgC,EAAAxgC,EAAAygC,EACAxgC,EAAAvuB,EAAAuuB,EAAAugC,EAAAvgC,EAAAwgC,KAEA/rB,EAAAhgE,EAAAggE,QACA3I,EACA,MAAA2I,GAAA+R,aAAA1a,GAAA,EACW,IAAA2I,EACX,MAAAA,EAMA,IAFAgsB,IAAAhsF,EAAAksF,aAEAlsF,EAAAksF,YACA,MAIA,IAAAF,EAGA,WAFAD,IAAA,IAMAI,cAAA,SAAA7gC,EAAAC,GACA,GAAAzL,GAAApgD,KAAA+/D,UAAA3f,OAAA,EACAE,EAAAtgD,KAAA+/D,UAAAzf,QAAA,EACA1/C,EAAAqD,KAAAm0D,MAAAvM,GAAAzL,EAAAn8C,KAAAm0D,MAAAxM,EAWA,OATA5rD,MAAA+rF,gBACA/rF,KAAA+rF,cAAA/rF,KAAA+/D,UAAA12D,QAAA05D,aACA,EACA,EACA3iB,EACAE,KAKAtgD,KAAA+rF,cAAA9iF,KAAA,EAAArI,EAAA,GACAZ,KAAA+rF,cAAA9iF,KAAA,EAAArI,EAAA,GACAZ,KAAA+rF,cAAA9iF,KAAA,EAAArI,EAAA,GACAZ,KAAA+rF,cAAA9iF,KAAA,EAAArI,EAAA,KAGA2rF,iBAAA,SAAAjvD,GACA,GAQA0qC,GACA1H,EATAkH,EAAAxnE,KAAA+/D,UAAAvW,WACA3pD,EAAAG,KAAA+/D,UAAA12D,QAAA05D,aACA9+D,KAAAm0D,MAAA96B,EAAAsuB,EAAA4b,GACAvjE,KAAAm0D,MAAA96B,EAAAuuB,EAAA2b,GACA,EACA,GACAv+D,KACAyjF,EAAA7sF,EAAA,EAIA,cAAA6sF,GACA1kB,EAAApiB,MAAAsR,KAAA6B,UAAAl5D,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAygE,EAAA1a,MAAAoD,OA7KA,IA6KAgf,GACA1H,GAEAA,UAIAksB,aAAA,IAEOE,EAAA,GAGPF,aAAA,OAMA1gB,UAAA,SAAA0X,EAAA9lD,GACA,GAAAmxC,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,KAAA3N,WAgBA,OAdAlhE,MAAA8yE,MAlMA,cAmMAh/D,KAAA9T,OAGAA,KAAA2sF,sBACA50B,EAAAW,aAAAjnD,QAGAm0C,MAAAu8B,UAAAxiF,UAAAmsE,UAAAntE,KAAAqB,KAAA+3D,EAAAr6B,GAEA19B,KAAA8yE,MA3MA,QA4MAh/D,KAAA9T,OAGAA,MAEA+rE,QAAA,SAAAyX,EAAA9lD,GACA,GAAAmxC,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,KAAA9O,SAWA,OATA8O,MAAA8d,sBACA9d,EACAid,eACApzB,aACAjnD,QAGAm0C,MAAAu8B,UAAAxiF,UAAAosE,QAAAptE,KAAAqB,KAAA+3D,EAAAr6B,GACA19B,KAAAgtE,UAAA,KACAhtE,MAEAyR,MAAA,SAAA2vD,GAMA,MALAxb,OAAAgmC,UAAAjsF,UAAA8R,MAAA9S,KAAAqB,KAAAohE,GACAphE,KAAA8rF,eACApzB,aACAjnD,MAAA2vD,GACAphE,KAAAgtE,UAAA,KACAhtE,MAGA+uE,WAAA,SAAAL,GASA,MARA9oB,OAAA6kB,KAAA9qE,UAAAovE,WAAApwE,KAAAqB,KAAA0uE,GACAA,GACA1uE,KAAAkhE,YAAArC,QAAAp6C,MAAAy1B,QAAA,QACAl6C,KAAA+/D,UAAAlB,QAAAp6C,MAAAy1B,QAAA,UAEAl6C,KAAAkhE,YAAArC,QAAAp6C,MAAAy1B,QAAA,OACAl6C,KAAA+/D,UAAAlB,QAAAp6C,MAAAy1B,QAAA,QAEAl6C,MASA4sF,eAAA,WAEA,MADA5sF,MAAA6sF,oBAAA,GACA7sF,MASA8sF,gBAAA,WAEA,MADA9sF,MAAA6sF,oBAAA,GACA7sF,MAEAm/D,QAAA,SAAA/e,EAAAE,GAGA,MAFAsF,OAAAgmC,UAAAjsF,UAAAw/D,QAAAxgE,KAAAqB,KAAAogD,EAAAE,GACAtgD,KAAA+/D,UAAAZ,QAAA/e,EAAAE,GACAtgD,QAGA4lD,MAAAsR,KAAA9wD,OAAAw/C,MAAAsmC,MAAAtmC,MAAAgmC,WAEAhmC,MAAAwiB,QAAAC,gBAAAziB,MAAAsmC,MAAA,sBAoBAtmC,MAAAqF,WAAAO,WAAA5F,MAAAsmC,UAGA,WACA,YA0BAtmC,OAAAmnC,UAAA,SAAA98E,GACAjQ,KAAAmsF,SAAAl8E,IAGA21C,MAAAsR,KAAAiE,WAAAvV,MAAAmnC,WACAZ,SAAA,SAAAl8E,GACAjQ,KAAAw4B,SAAA,QACAx4B,KAAA+3D,OAAA,GAAAnS,OAAA+Z,YAEA/Z,MAAAgmC,UAAAjtF,KAAAqB,KAAAiQ,IAEAwyE,aAAA,SAAAl1E,GAEA,UADAA,EAAA6B,WAEAw2C,MAAAsR,KAAA8D,MAAA,6CAGA2uB,eAAA,SAAAvpC,EAAAE,GACAtgD,KAAA+3D,OAAAoH,QAAA/e,EAAAE,IAEAwuB,gBAAA,WACA,UAEA4a,gBAAA,WACA,aAEA5d,UAAA,SAAA0X,GACA,GAAA3U,GAAA7uE,KAAA2+C,WACAoZ,EAAAyrB,GAAA3U,KAAA3N,WAQA,OANAlhE,MAAA2sF,sBACA50B,EAAAW,aAAAjnD,QAGAm0C,MAAAu8B,UAAAxiF,UAAAmsE,UAAAntE,KAAAqB,KAAA+3D,GAEA/3D,MAEAi1E,KAAA,WAEA,MADAj1E,MAAA8rE,YACA9rE,MAGA+uE,WAAA,SAAAL,GAOA,MANA9oB,OAAA6kB,KAAA9qE,UAAAovE,WAAApwE,KAAAqB,KAAA0uE,GAEA1uE,KAAAkhE,YAAArC,QAAAp6C,MAAAy1B,QADAw0B,EACA,QAEA,OAEA1uE,QAGA4lD,MAAAsR,KAAA9wD,OAAAw/C,MAAAmnC,UAAAnnC,MAAAgmC,WAEAhmC,MAAAqF,WAAAO,WAAA5F,MAAAmnC,cAGA,WACA,YAqCAnnC,OAAAonC,MAAA,SAAA/8E,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAsR,KAAAiE,WAAAvV,MAAAonC,OACArE,QAAA,SAAA14E,GACAjQ,KAAAw4B,SAAA,QAEAotB,MAAAu8B,UAAAxjF,KAAAqB,KAAAiQ,IAEAwyE,aAAA,SAAAl1E,GACA,GAAAV,GAAAU,EAAA6B,SACA,WAAAvC,GAAA,UAAAA,GACA+4C,MAAAsR,KAAA8D,MAAA,oDAIApV,MAAAsR,KAAA9wD,OAAAw/C,MAAAonC,MAAApnC,MAAAu8B,WAEAv8B,MAAAqF,WAAAO,WAAA5F,MAAAonC,UAGA,SAAApnC,GACA,YAaA,SAAAqnC,GAAAtpE,GACA9N,WAAA8N,EAAA,QAcA,QAAAupE,KACA,MAAAC,GAAAvnF,MAAAggD,EAAA3iD,OAAA0C,WA5BA,GAAAynF,GAAA,WACA,MAAAxnC,GAAA3iD,OAAA+qC,aAAA4X,EAAA3iD,OAAA+qC,YAAAo/C,IACA,WACA,MAAAxnC,GAAA3iD,OAAA+qC,YAAAo/C,OAIA,WACA,UAAAlmF,OAAAC,cAQAgmF,EAAA,WACA,MACAvnC,GAAA3iD,OAAAwyC,uBACAmQ,EAAA3iD,OAAAoqF,6BACAznC,EAAA3iD,OAAAqqF,0BACA1nC,EAAA3iD,OAAAsqF,wBACA3nC,EAAA3iD,OAAAuqF,yBACAP,IA+BArnC,GAAA6nC,UAAA,SAAAtiC,EAAAg+B,GACA,GAAAuE,GAAA9nC,EAAA6nC,SACAztF,MAAAmrD,OACAnrD,KAAA2iF,UAAAwG,GACAnpF,KAAAgO,GAAA0/E,EAAAC,gBACA3tF,KAAA4tF,OACAC,KAAA,EACAC,SAAA,EACAC,SAAAX,MAMAxnC,EAAA6nC,UAAA9tF,WAQAgjF,UAAA,SAAAwG,GACA,GAAA6E,KAeA,OAPAA,GANA7E,EAEOA,EAAA5mF,OAAA,EAIP4mF,GAGAA,MAGAnpF,KAAAmpF,OAAA6E,EACAhuF,MAQA2kF,UAAA,WACA,MAAA3kF,MAAAmpF,QASA8E,SAAA,SAAApf,GACA,GAEAtvE,GAFA4pF,EAAAnpF,KAAAmpF,OACA35E,EAAA25E,EAAA5mF,MAIA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1B,GAAA4pF,EAAA5pF,GAAAmiD,MAAAmtB,EAAAntB,IACA,QAKA,OADA1hD,MAAAmpF,OAAA5gF,KAAAsmE,IACA,GAQAqf,UAAA,WACA,GAGA3uF,GAHAmG,EAAAkgD,EAAA6nC,UACAU,EAAAzoF,EAAAyoF,WACA3+E,EAAA2+E,EAAA5rF,MAGA,KAAAhD,EAAA,EAAiBA,EAAAiQ,EAASjQ,IAC1B,GAAA4uF,EAAA5uF,GAAAyO,KAAAhO,KAAAgO,GACA,QAGA,WAQA/H,MAAA,WACA,GAAAynF,GAAA9nC,EAAA6nC,SAKA,OAJAztF,MAAAy9C,OACAz9C,KAAA4tF,MAAAE,SAAA,EACA9tF,KAAA4tF,MAAAG,SAAAX,IACAM,EAAAU,cAAApuF,MACAA,MAQAy9C,KAAA,WAEA,MADAmI,GAAA6nC,UAAAY,iBAAAruF,MACAA,MAEAsuF,mBAAA,SAAAT,GACA7tF,KAAA4tF,MAAAE,SAAAD,EAAA7tF,KAAA4tF,MAAAG,SACA/tF,KAAA4tF,MAAAG,SAAAF,EACA7tF,KAAA4tF,MAAAC,MAAA7tF,KAAA4tF,MAAAE,SACA9tF,KAAA4tF,MAAAW,UAAA,IAAAvuF,KAAA4tF,MAAAE,WAGAloC,EAAA6nC,UAAAU,cACAvoC,EAAA6nC,UAAAE,cAAA,EACA/nC,EAAA6nC,UAAAe,aAAA,EAEA5oC,EAAA6nC,UAAAW,cAAA,SAAA1L,GACA1iF,KAAAmuF,WAAA5lF,KAAAm6E,GACA1iF,KAAAyuF,oBAEA7oC,EAAA6nC,UAAAY,iBAAA,SAAA3L,GACA,GAGAnjF,GAHAyO,EAAA00E,EAAA10E,GACAmgF,EAAAnuF,KAAAmuF,WACA3+E,EAAA2+E,EAAA5rF,MAGA,KAAAhD,EAAA,EAAeA,EAAAiQ,EAASjQ,IACxB,GAAA4uF,EAAA5uF,GAAAyO,OAAA,CACAhO,KAAAmuF,WAAAlpF,OAAA1F,EAAA,EACA,SAKAqmD,EAAA6nC,UAAAiB,WAAA,WACA,GAEAhM,GACAyG,EACAh+B,EACA5rD,EACAd,EACAkwF,EACA9f,EACA1pE,EATAypF,KACAT,EAAAnuF,KAAAmuF,UAsBA,KAAA5uF,EAAA,EAAeA,EAAA4uF,EAAA5rF,OAAuBhD,IAetC,GAdAmjF,EAAAyL,EAAA5uF,GACA4pF,EAAAzG,EAAAyG,OACAh+B,EAAAu3B,EAAAv3B,KAEAu3B,EAAA4L,mBAAAlB,KACAuB,EAAAxF,EAAA5mF,QAGA4oD,IAEA,IAAAA,EAAAxsD,KAAA+jF,IAAAkL,OAOA,IAAAnvF,EAAA,EAAiBA,EAAAkwF,EAAelwF,IAChCowE,EAAAsa,EAAA1qF,OAEAiE,KAAAmsE,EAAAntB,MACAktC,EAAA/f,EAAAntB,KAAAmtB,EAKA,KAAA1pE,IAAAypF,GACAA,EAAAhvF,eAAAuF,IAGAypF,EAAAzpF,GAAA8vE,QAGArvB,EAAA6nC,UAAAoB,eAAA,WACA,GAAAnB,GAAA9nC,EAAA6nC,SACAC,GAAAS,WAAA5rF,QACAmrF,EAAAgB,aACAxB,EAAAQ,EAAAmB,iBAEAnB,EAAAc,aAAA,GAGA5oC,EAAA6nC,UAAAgB,iBAAA,WACAzuF,KAAAwuF,cACAxuF,KAAAwuF,aAAA,EACAtB,EAAAltF,KAAA6uF,kBAYAjpC,EAAAgmC,UAAAjsF,UAAAk/C,UAAA,WACA,GAAA+kB,GAAA5jE,KACA0tF,EAAA9nC,EAAA6nC,SAYA,OAVAztF,MAAA8uF,YACA9uF,KAAA8uF,UAAA,GAAApB,GAAA,WAEA9pB,EAAAkrB,UAAArxC,QACOz9C,OAGPA,KAAA8uF,UAAAZ,aACAluF,KAAA8uF,UAAA7oF,QAEAjG,MAUA4lD,EAAAE,MAAAnmD,UAAAk/C,UAAA,WAIA,MAHA7+C,MAAAirE,cAAA/f,KAAA,SAAA2jB,GACAA,EAAAhwB,cAEA7+C,OAEC4lD,OAED,WACA,YACA,IAAAmpC,IACAj7E,KAAA,EACAwlB,SAAA,EACA01D,OAAA,EACAC,SAAA,EACAC,KAAA,GAKArmC,EAAA,EACAsmC,GAAA,+BAEAC,EAAA,SAAA3gF,EAAA4gF,EAAAlkC,EAAAmkC,EAAAC,EAAAj2D,EAAA41D,GACAlvF,KAAAyO,OACAzO,KAAAqvF,WACArvF,KAAAsvF,QACAtvF,KAAAwvF,KAAAF,EACAtvF,KAAAs5B,WACAt5B,KAAAyvF,QAAA,EACAzvF,KAAA0vF,QAAA,EACA1vF,KAAAkvF,OACAlvF,KAAA2vF,MAAA,EACA3vF,KAAA4vF,UAAA,EACA5vF,KAAA6vF,WAAA,EACA7vF,KAAA8vF,QAAA,EACA9vF,KAAAmrD,OACAnrD,KAAAyvF,QAAAF,EAAAvvF,KAAAsvF,MACAtvF,KAAA+vF,QAKAX,GAAAzvF,WACA8tE,KAAA,SAAAhtE,GACA,GAAAwc,GAAAjd,KAAAS,EACAwc,IACAA,KAGA+yE,QAAA,SAAAr0B,GACAA,EAAA37D,KAAAs5B,SACAt5B,KAAAkvF,MACAlvF,KAAA2vF,MAAA3vF,KAAAs5B,SACAt5B,KAAAiwF,WAEAjwF,KAAAuvF,SAEO5zB,EAAA,EACP37D,KAAAkvF,MACAlvF,KAAA2vF,MAAA,EACA3vF,KAAAkwF,QAEAlwF,KAAAihE,SAGAjhE,KAAA2vF,MAAAh0B,EACA37D,KAAAoN,WAGAjG,QAAA,WACA,MAAAnH,MAAA2vF,OAEArgB,YAAA,SAAAzvE,GACAG,KAAA0vF,QAAA1vF,KAAAwvF,KACAxvF,KAAAqvF,SAAAxvF,GACAG,KAAAwvF,KAAA3vF,GAEA4vE,YAAA,SAAA9T,GAIA,WAHAj5D,KAAAi5D,IACAA,EAAA37D,KAAA2vF,OAEA3vF,KAAAmrD,KAAAwQ,EAAA37D,KAAAsvF,MAAAtvF,KAAAyvF,QAAAzvF,KAAAs5B,WAEA42D,KAAA,WACAlwF,KAAAypC,MAnEA,EAoEAzpC,KAAA6vF,WAAA7vF,KAAAmwF,WAAAnwF,KAAA2vF,MACA3vF,KAAAowF,eACApwF,KAAAytE,KAAA,WAEAwiB,QAAA,WACAjwF,KAAAypC,MAxEA,EAyEAzpC,KAAA2vF,MAAA3vF,KAAAs5B,SAAAt5B,KAAA2vF,MACA3vF,KAAA6vF,WAAA7vF,KAAAmwF,WAAAnwF,KAAA2vF,MACA3vF,KAAAowF,eACApwF,KAAAytE,KAAA,cAEA4iB,KAAA,SAAA10B,GACA37D,KAAA+vF,QACA/vF,KAAA2vF,MAAAh0B,EACA37D,KAAAoN,SACApN,KAAAytE,KAAA,WAEAxM,MAAA,WACAjhE,KAAA+vF,QACA/vF,KAAA2vF,MAAA,EACA3vF,KAAAoN,SACApN,KAAAytE,KAAA,YAEA8hB,OAAA,WACAvvF,KAAA+vF,QACA/vF,KAAA2vF,MAAA3vF,KAAAs5B,SACAt5B,KAAAoN,SACApN,KAAAytE,KAAA,aAEArgE,OAAA,WACApN,KAAAsvE,YAAAtvE,KAAAyvE,YAAAzvE,KAAA2vF,SAEAS,aAAA,WACA,GAAAz0B,GAAA37D,KAAAmwF,WAAAnwF,KAAA6vF,UArGA,KAsGA7vF,KAAAypC,MACAzpC,KAAAgwF,QAAAr0B,GAtGA,IAuGO37D,KAAAypC,OACPzpC,KAAAgwF,QAAAhwF,KAAAs5B,SAAAqiC,IAGAo0B,MAAA,WACA/vF,KAAAypC,MA9GA,EA+GAzpC,KAAAytE,KAAA,YAEA0iB,SAAA,WACA,UAAAjpF,OAAAC,YAyBAy+C,MAAAwpC,MAAA,SAAAn/E,GACA,GAGAqpB,GAGAn0B,EANAy+D,EAAA5jE,KACA8T,EAAA7D,EAAA6D,KACAw8E,EAAAx8E,EAAA4tC,IAEAstC,EAAA/+E,EAAA++E,QAAAppC,MAAA2qC,QAAAC,OACAtB,IAAAj/E,EAAAi/E,IAIA51D,OADA,KAAArpB,EAAAqpB,SACA,GACK,IAAArpB,EAAAqpB,SAEL,KAEArpB,EAAAqpB,SAEAt5B,KAAA8T,OACA9T,KAAA0hD,IAAAmH,GAEA,IAAAsgC,GACAr1E,EAAA6qC,aACA7qC,YAAA8xC,OAAAE,MAAAhyC,EAAA6wE,YAAA,KACAwE,IACAvjC,MAAAsR,KAAA3mD,MACA,2FAGAvQ,KAAA0iF,KAAA,GAAA98B,OAAA6nC,UAAA,WACA7pB,EAAA6sB,MAAAL,gBACKjH,GAELnpF,KAAAywF,MAAA,GAAArB,GACAjqF,EACA,SAAA1G,GACAmlE,EAAA8sB,WAAAjyF,IAEAuwF,EACA,EACA,EACA,IAAA11D,EACA41D,GAGAlvF,KAAA2wF,gBAGA/qC,MAAAwpC,MAAA/7E,MAAAi9E,KACA1qC,MAAAwpC,MAAA/7E,MAAAi9E,OAEA1qC,MAAAwpC,MAAA/7E,MAAAi9E,GAAAtwF,KAAA0hD,OACAkE,MAAAwpC,MAAA/7E,MAAAi9E,GAAAtwF,KAAA0hD,SAGAkE,MAAAwpC,MAAAwB,OAAAN,KACA1qC,MAAAwpC,MAAAwB,OAAAN,MAGA,KAAAnrF,IAAA8K,OACAvN,KAAAqsF,EAAA5pF,IACAnF,KAAA6wF,SAAA1rF,EAAA8K,EAAA9K,GAIAnF,MAAAihE,QAGAjhE,KAAAivF,SAAAh/E,EAAAg/E,SACAjvF,KAAA8wF,QAAA7gF,EAAA6gF,SAIAlrC,MAAAwpC,MAAA/7E,SAEAuyC,MAAAwpC,MAAAwB,UAEAhrC,MAAAwpC,MAAAzvF,WACAkxF,SAAA,SAAA1rF,EAAA2xB,GACA,GAEA7wB,GACA8qF,EACAC,EACAzxF,EACAiQ,EACAyhF,EACAC,EACAC,EATAr9E,EAAA9T,KAAA8T,KACAw8E,EAAAx8E,EAAA4tC,GAoBA,IATAsvC,EAAAprC,MAAAwpC,MAAAwB,OAAAN,GAAAnrF,GAEA6rF,SACAprC,OAAAwpC,MAAA/7E,MAAAi9E,GAAAU,GAAA7rF,GAIAc,EAAA6N,EAAA+0D,QAAA1jE,GAEAygD,MAAAsR,KAAAI,SAAAxgC,GAmBA,GAlBAi6D,KACAvhF,EAAAvL,KAAA0H,IAAAmrB,EAAAv0B,OAAA0D,EAAA1D,QAEA,WAAA4C,GAAA2xB,EAAAv0B,SAAA0D,EAAA1D,SAIAu0B,EAAAv0B,OAAA0D,EAAA1D,QAEA2uF,EAAAjrF,EACAA,EAAA2/C,MAAAsR,KAAAwG,sBAAAz3D,EAAA6wB,EAAAhjB,EAAAs9E,YAGAH,EAAAn6D,EACAA,EAAA8uB,MAAAsR,KAAAwG,sBAAA5mC,EAAA7wB,EAAA6N,EAAAs9E,YAIA,IAAAjsF,EAAAH,QAAA,QACA,IAAAzF,EAAA,EAAqBA,EAAAiQ,EAASjQ,IAC9B,GAAAA,EAAA,KACAwxF,EAAAxoF,KAAAuuB,EAAAv3B,GAAA0G,EAAA1G,QACa,CACb,GAAA8xF,GAAAzrC,MAAAsR,KAAAuC,YAAAxzD,EAAA1G,GACA4xF,GAAAvrC,MAAAsR,KAAAuC,YAAA3iC,EAAAv3B,IACA0G,EAAA1G,GAAA8xF,EACAN,EAAAxoF,MACAywD,EAAAm4B,EAAAn4B,EAAAq4B,EAAAr4B,EACAj5D,EAAAoxF,EAAApxF,EAAAsxF,EAAAtxF,EACA2G,EAAAyqF,EAAAzqF,EAAA2qF,EAAA3qF,EACAhB,EAAAyrF,EAAAzrF,EAAA2rF,EAAA3rF,QAKA,KAAAnG,EAAA,EAAqBA,EAAAiQ,EAASjQ,IAC9BwxF,EAAAxoF,KAAAuuB,EAAAv3B,GAAA0G,EAAA1G,SAGO,IAAA4vF,EAAAnqF,QAAAG,IACPc,EAAA2/C,MAAAsR,KAAAuC,YAAAxzD,GACAkrF,EAAAvrC,MAAAsR,KAAAuC,YAAA3iC,GACAi6D,GACA/3B,EAAAm4B,EAAAn4B,EAAA/yD,EAAA+yD,EACAj5D,EAAAoxF,EAAApxF,EAAAkG,EAAAlG,EACA2G,EAAAyqF,EAAAzqF,EAAAT,EAAAS,EACAhB,EAAAyrF,EAAAzrF,EAAAO,EAAAP,IAGAqrF,EAAAj6D,EAAA7wB,CAGA2/C,OAAAwpC,MAAA/7E,MAAAi9E,GAAAtwF,KAAA0hD,KAAAv8C,IACAc,QACA8qF,OACAj6D,MACAm6D,UACAC,aAEAtrC,MAAAwpC,MAAAwB,OAAAN,GAAAnrF,GAAAnF,KAAA0hD,KAEAgvC,WAAA,SAAAjyF,GACA,GAEA0G,GACAu8B,EACAz7B,EACA8qF,EACAtlF,EACAlM,EACAiQ,EACAsnB,EATAhjB,EAAA9T,KAAA8T,KACAT,EAAAuyC,MAAAwpC,MAAA/7E,MAAAS,EAAA4tC,KAAA1hD,KAAA0hD,IAUA,KAAAv8C,IAAAkO,GAAA,CAMA,GALAquB,EAAAruB,EAAAlO,GACAc,EAAAy7B,EAAAz7B,MACA8qF,EAAArvD,EAAAqvD,KACAj6D,EAAA4K,EAAA5K,IAEA8uB,MAAAsR,KAAAI,SAAArxD,GAGA,GAFAwF,KACA+D,EAAAvL,KAAA0H,IAAA1F,EAAA1D,OAAAu0B,EAAAv0B,QACA,IAAA4C,EAAAH,QAAA,QACA,IAAAzF,EAAA,EAAuBA,EAAAiQ,EAASjQ,IAChCA,EAAA,KACAkM,EAAAlD,MAAAtC,EAAA1G,IAAA,GAAAwxF,EAAAxxF,GAAAd,GAEAgN,EAAAlD,KACA,QACAtE,KAAAm0D,MAAAnyD,EAAA1G,GAAAy5D,EAAA+3B,EAAAxxF,GAAAy5D,EAAAv6D,GACA,IACAwF,KAAAm0D,MAAAnyD,EAAA1G,GAAAQ,EAAAgxF,EAAAxxF,GAAAQ,EAAAtB,GACA,IACAwF,KAAAm0D,MAAAnyD,EAAA1G,GAAAmH,EAAAqqF,EAAAxxF,GAAAmH,EAAAjI,GACA,KACAwH,EAAA1G,GAAAmG,EAAAqrF,EAAAxxF,GAAAmG,EAAAjH,GACA,SAKA,KAAAc,EAAA,EAAuBA,EAAAiQ,EAASjQ,IAChCkM,EAAAlD,MAAAtC,EAAA1G,IAAA,GAAAwxF,EAAAxxF,GAAAd,OAIAgN,IADS,IAAA0jF,EAAAnqF,QAAAG,GAET,QACAlB,KAAAm0D,MAAAnyD,EAAA+yD,EAAA+3B,EAAA/3B,EAAAv6D,GACA,IACAwF,KAAAm0D,MAAAnyD,EAAAlG,EAAAgxF,EAAAhxF,EAAAtB,GACA,IACAwF,KAAAm0D,MAAAnyD,EAAAS,EAAAqqF,EAAArqF,EAAAjI,GACA,KACAwH,EAAAP,EAAAqrF,EAAArrF,EAAAjH,GACA,IAEAwH,EAAA8qF,EAAAtyF,CAGAqV,GAAA+Y,QAAA1nB,EAAAsG,KAGAklF,cAAA,WACA,GAAA/sB,GAAA5jE,IAGAA,MAAAywF,MAAAa,OAAA,WACA1tB,EAAA8e,KAAAz8E,SAEAjG,KAAAywF,MAAAc,UAAA,WACA3tB,EAAA8e,KAAAz8E,SAIAjG,KAAAywF,MAAAe,QAAA,WACA5tB,EAAA8e,KAAAjlC,QAEAz9C,KAAAywF,MAAAxB,SAAA,WACA,GAAAn7E,GAAA8vD,EAAA9vD,KAGAT,EAAAuyC,MAAAwpC,MAAA/7E,MAAAS,EAAA4tC,KAAAkiB,EAAAliB,IACAruC,GAAAk5D,QAAAl5D,EAAAk5D,OAAA0kB,SACAn9E,EAAAy4D,OAAAl5D,EAAAk5D,OAAA0kB,SAGArtB,EAAAqrB,UACArrB,EAAAqrB,SAAAtwF,KAAAilE,IAGA5jE,KAAAywF,MAAAK,QAAA,WACA,GAAAh9E,GAAA8vD,EAAA9vD,KAEAT,EAAAuyC,MAAAwpC,MAAA/7E,MAAAS,EAAA4tC,KAAAkiB,EAAAliB,IACAruC,GAAAk5D,QAAAl5D,EAAAk5D,OAAA2kB,WACAp9E,EAAAy4D,OAAAl5D,EAAAk5D,OAAA2kB,WAGAttB,EAAAktB,SACAltB,EAAAktB,YAUAZ,KAAA,WAEA,MADAlwF,MAAAywF,MAAAP,OACAlwF,MAQAiwF,QAAA,WAEA,MADAjwF,MAAAywF,MAAAR,UACAjwF,MAQAihE,MAAA,WAEA,MADAjhE,MAAAywF,MAAAxvB,QACAjhE,MASAqwF,KAAA,SAAA10B,GAEA,MADA37D,MAAAywF,MAAAJ,KAAA,IAAA10B,GACA37D,MAQA+vF,MAAA,WAEA,MADA/vF,MAAAywF,MAAAV,QACA/vF,MAQAuvF,OAAA,WAEA,MADAvvF,MAAAywF,MAAAlB,SACAvvF,MAOAgyC,QAAA,WACA,GAGA7sC,GAHAmrF,EAAAtwF,KAAA8T,KAAA4tC,IACA+vC,EAAAzxF,KAAA0hD,IACAruC,EAAAuyC,MAAAwpC,MAAAwB,OAAAN,EAGAtwF,MAAA+vF,OAEA,KAAA5qF,IAAAkO,SACAuyC,OAAAwpC,MAAAwB,OAAAN,GAAAnrF,SAGAygD,OAAAwpC,MAAA/7E,MAAAi9E,GAAAmB,KAiBA7rC,MAAA6kB,KAAA9qE,UAAA0G,GAAA,SAAAwM,GACA,GAAAo8E,GAAAp8E,EAAAo8E,QACAp8E,GAAAiB,KAAA9T,KACA6S,EAAAo8E,SAAA,WACAjvF,KAAAgyC,UACAi9C,GACAA,KAGA,GAAArpC,OAAAwpC,MAAAv8E,GACAq9E,QAYAtqC,MAAA2qC,SAMAmB,WAAA,SAAA/1B,EAAAj1D,EAAA7H,EAAAC,GACA,GAAAgB,GAAA,OACA,OAAAjB,IAAA88D,GAAA78D,GAAA68D,IAAA77D,EAAA,GAAA67D,EAAA77D,GAAA4G,GAOAirF,YAAA,SAAAh2B,EAAAj1D,EAAA7H,EAAAC,GACA,GAAAgB,GAAA,OACA,OAAAjB,KAAA88D,IAAA78D,EAAA,GAAA68D,IAAA77D,EAAA,GAAA67D,EAAA77D,GAAA,GAAA4G,GAOAkrF,cAAA,SAAAj2B,EAAAj1D,EAAA7H,EAAAC,GACA,GAAAgB,GAAA,OACA,QAAA67D,GAAA78D,EAAA,KACAD,EAAA,GAAA88D,MAAA,GAAA77D,GAAA,QAAA67D,EAAA77D,IAAA4G,EAEA7H,EAAA,IAAA88D,GAAA,GAAAA,IAAA,GAAA77D,GAAA,QAAA67D,EAAA77D,GAAA,GAAA4G,GAOAmrF,cAAA,SAAAl2B,EAAAj1D,EAAA7H,EAAAC,EAAA4G,EAAA7F,GAEA,GAAAC,GAAA,CACA,YAAA67D,EACAj1D,EAEA,IAAAi1D,GAAA78D,GACA4H,EAAA7H,GAEAgB,IACAA,EAAA,GAAAf,IAEA4G,KAAAzB,KAAA2jE,IAAA/oE,IACA6G,EAAA7G,EACAiB,EAAAD,EAAA,GAEAC,EAAAD,GAAA,EAAAoE,KAAA0kD,IAAA1kD,KAAA6tF,KAAAjzF,EAAA6G,IAIAA,EACAzB,KAAA63D,IAAA,MAAAH,GAAA,IACA13D,KAAAooD,KAAAsP,EAAA78D,EAAAgB,IAAA,EAAAmE,KAAA0kD,IAAA9oD,GACA6G,IAQAqrF,eAAA,SAAAp2B,EAAAj1D,EAAA7H,EAAAC,EAAA4G,EAAA7F,GAEA,GAAAC,GAAA,CACA,YAAA67D,EACAj1D,EAEA,IAAAi1D,GAAA78D,GACA4H,EAAA7H,GAEAgB,IACAA,EAAA,GAAAf,IAEA4G,KAAAzB,KAAA2jE,IAAA/oE,IACA6G,EAAA7G,EACAiB,EAAAD,EAAA,GAEAC,EAAAD,GAAA,EAAAoE,KAAA0kD,IAAA1kD,KAAA6tF,KAAAjzF,EAAA6G,GAGAA,EAAAzB,KAAA63D,IAAA,MAAAH,GAAA13D,KAAAooD,KAAAsP,EAAA78D,EAAAgB,IAAA,EAAAmE,KAAA0kD,IAAA9oD,GACAhB,EACA6H,IAQAsrF,iBAAA,SAAAr2B,EAAAj1D,EAAA7H,EAAAC,EAAA4G,EAAA7F,GAEA,GAAAC,GAAA,CACA,YAAA67D,EACAj1D,EAEA,IAAAi1D,GAAA78D,EAAA,GACA4H,EAAA7H,GAEAgB,IACAA,EAAAf,GAAA,UAEA4G,KAAAzB,KAAA2jE,IAAA/oE,IACA6G,EAAA7G,EACAiB,EAAAD,EAAA,GAEAC,EAAAD,GAAA,EAAAoE,KAAA0kD,IAAA1kD,KAAA6tF,KAAAjzF,EAAA6G,GAEAi2D,EAAA,EAGAj2D,EACAzB,KAAA63D,IAAA,MAAAH,GAAA,IACA13D,KAAAooD,KAAAsP,EAAA78D,EAAAgB,IAAA,EAAAmE,KAAA0kD,IAAA9oD,IAHA,GAIA6G,EAIAhB,EACAzB,KAAA63D,IAAA,OAAAH,GAAA,IACA13D,KAAAooD,KAAAsP,EAAA78D,EAAAgB,IAAA,EAAAmE,KAAA0kD,IAAA9oD,GACA,GACAhB,EACA6H,IAQAurF,cAAA,SAAAt2B,EAAAj1D,EAAA7H,EAAAC,GACA,OAAA68D,GAAA78D,GAAA,OACAD,GAAA,OAAA88D,KAAAj1D,EACOi1D,EAAA,OACP98D,GAAA,QAAA88D,GAAA,UAAAA,EAAA,KAAAj1D,EACOi1D,EAAA,SACP98D,GAAA,QAAA88D,GAAA,WAAAA,EAAA,OAAAj1D,EAEA7H,GAAA,QAAA88D,GAAA,YAAAA,EAAA,SAAAj1D,GAQAwrF,aAAA,SAAAv2B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAAD,GAAA+mD,MAAA2qC,QAAA0B,cAAAnzF,EAAA68D,EAAA,EAAA98D,EAAAC,GAAA4H,GAOAyrF,gBAAA,SAAAx2B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAA68D,GAAA78D,EAAA,EACA,GAAA8mD,MAAA2qC,QAAA2B,aAAA,EAAAv2B,EAAA,EAAA98D,EAAAC,GAAA4H,EAGA,GAAAk/C,MAAA2qC,QAAA0B,cAAA,EAAAt2B,EAAA78D,EAAA,EAAAD,EAAAC,GAAA,GAAAD,EAAA6H,GASA0rF,OAAA,SAAAz2B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAAD,IAAA88D,GAAA78D,GAAA68D,EAAAj1D,GAOA2rF,QAAA,SAAA12B,EAAAj1D,EAAA7H,EAAAC,GACA,OAAAD,GAAA88D,GAAA78D,IAAA68D,EAAA,GAAAj1D,GAOA4rF,UAAA,SAAA32B,EAAAj1D,EAAA7H,EAAAC,GACA,OAAA68D,GAAA78D,EAAA,KACAD,EAAA,EAAA88D,IAAAj1D,GAEA7H,EAAA,KAAA88D,KAAA,MAAAj1D,GAOA6rF,aAAA,SAAA52B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAAD,IAAA88D,GAAA78D,GAAA68D,QAAAj1D,GAOA8rF,cAAA,SAAA72B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAAD,KAAA88D,IAAA78D,EAAA,GAAA68D,QAAA,GAAAj1D,GAOA+rF,gBAAA,SAAA92B,EAAAj1D,EAAA7H,EAAAC,GACA,OAAA68D,GAAA78D,EAAA,KACAD,EAAA,EAAA88D,UAAAj1D,EAEA7H,EAAA,IAAA88D,GAAA,GAAAA,QAAA,GAAAj1D,GAOA8pF,OAAA,SAAA70B,EAAAj1D,EAAA7H,EAAAC,GACA,MAAAD,GAAA88D,EAAA78D,EAAA4H,OAKA,WACA,YACAk/C,OAAAmE,IAEA24B,KAAA,GAAA98B,OAAA6nC,UAAA,WACA,GAAA/mF,GAAA1G,KAAA+c,KAEA,OADA/c,MAAA+c,OAAA,EACArW,IAEAmjD,YAAA,EACAihC,aAAA,EACAzjB,QACAzb,EAAA,EACAC,EAAA,GAEA/3C,KAAA,KAGA4+E,MAAA,SAAAllB,GACA,GAAA1jB,GAAAlE,MAAAmE,GACAj2C,EAAAg2C,EAAAh2C,IACA,IAAAA,EAAA,CACA,IAAAg2C,EAAAD,WAAA,CACA,GAAAvsB,GAAAxpB,EAAA8qC,WAAAyqC,oBAGA/rD,KACAxpB,EAAA8qC,WAAAirC,oBAAArc,GACAlwC,EAAAxpB,EAAA8qC,WAAAyqC,qBAEA,IAAA5/B,GAAA31C,EAAA21C,cAKA,IAJAxlD,KAAA0H,IACA1H,KAAA2jE,IAAAtqC,EAAAsuB,EAAA9B,EAAA6oC,gBAAA/mC,GACA3nD,KAAA2jE,IAAAtqC,EAAAuuB,EAAA/B,EAAA6oC,gBAAA9mC,IAEApC,EACA,OAKA,GADA31C,EAAA8qC,WAAAirC,oBAAArc,IACA1jB,EAAAD,aACAC,EAAAD,YAAA,EACA/1C,EAAA25D,KACA,aAEA5gE,KAAA,YACAxE,OAAAyL,EACA05D,QAEA,IAGA15D,EAAA+1C,cACA,MAGA/1C,GAAA8+E,iBAAAplB,GAGA15D,EAAA25D,KACA,YAEA5gE,KAAA,WACAxE,OAAAyL,EACA05D,QAEA,KAIAqlB,eAAA,SAAArlB,GACA,GAEAqB,GAFA/kB,EAAAlE,MAAAmE,GACAj2C,EAAAg2C,EAAAh2C,IAGAA,KACA+6D,EAAA/6D,EAAA6qC,WACAmL,EAAA44B,KAAAjlC,OAIAqM,EAAAD,aACAC,EAAAD,YAAA,EACAC,EAAAghC,aAAA,EACAllC,MAAAqD,gBAAA,EAEAukB,IACAA,EAAAslB,YAAAh/E,UAIAg2C,GAAAh2C,MAEAA,EAAA6qC,YAAAkwB,GAAA/6D,YAAA8xC,OAAAE,SACA+oB,GAAA/6D,GAAAmhE,SAIA8d,cAAA,SAAAvlB,GACAA,OACA,IAAAslB,GAAAtlB,EAAAslB,WAEAtlB,IAAAslB,GACAA,EAAArlB,KACA,WAEA5gE,KAAA,UACAxE,OAAAyqF,EACAtlB,QAEA,KAaA5nB,MAAA6kB,KAAA9qE,UAAAqzF,UAAA,WACA,GAAAlpC,GAAAlE,MAAAmE,GACAypB,EAAAxzE,KAAA4+C,WACAiwB,EAAA7uE,KAAA2+C,WACArhB,EAAAk2C,EAAA6V,qBACA4J,EAAAjzF,KAAA4vE,qBAEAtyC,KACAwsB,EAAAh2C,MACAg2C,EAAAh2C,KAAAo/E,WAGAppC,EAAAh2C,KAAA9T,KACA8pD,EAAA6oC,gBAAAr1D,EACAwsB,EAAAud,OAAAzb,EAAAtuB,EAAAsuB,EAAAqnC,EAAArnC,EACA9B,EAAAud,OAAAxb,EAAAvuB,EAAAuuB,EAAAonC,EAAApnC,EACA/B,EAAA44B,KAAAC,UAAA9T,GAAA7uE,KAAA2kF,aACA76B,EAAA44B,KAAAz8E,QAEAjG,KAAA4yF,qBAIAhtC,MAAA6kB,KAAA9qE,UAAAizF,iBAAA,SAAAplB,GACA,GAAA1jB,GAAAlE,MAAAmE,GACAzsB,EAAAt9B,KAAA4+C,WAAAyqC,qBACA8J,EAAAnzF,KAAAozF,kBACA,IAAA91D,EAAA,CAGA,GAAA+1D,IACAznC,EAAAtuB,EAAAsuB,EAAA9B,EAAAud,OAAAzb,EACAC,EAAAvuB,EAAAuuB,EAAA/B,EAAAud,OAAAxb,OAGAnpD,KAAAywF,IACAE,EAAAF,EAAAx0F,KAAAqB,KAAAqzF,EAAA7lB,IAEAxtE,KAAAstD,oBAAA+lC,GAGArzF,KAAAszF,UACAtzF,KAAAszF,SAAA1nC,IAAAynC,EAAAznC,GACA5rD,KAAAszF,SAAAznC,IAAAwnC,EAAAxnC,IAEA/B,EAAA44B,KAAA3lE,OAAA,GAGA/c,KAAAszF,SAAAD,IAQAztC,MAAA6kB,KAAA9qE,UAAAuzF,SAAA,WACA,GAAAppC,GAAAlE,MAAAmE,GACAyjB,IACA1jB,GAAA+oC,eAAArlB,GACA1jB,EAAAipC,cAAAvlB,IAGA5nB,MAAA6kB,KAAA9qE,UAAA4zF,aAAA,SAAAC,GACAxzF,KAAA2oE,SAAA,YAAA6qB,GACAxzF,KAAAyzF,cAGA,IAAAC,GAAA9tC,MAAA6kB,KAAA9qE,UAAAkF,MAEA+gD,OAAA6kB,KAAA9qE,UAAAmyE,iBAAA4hB,EACA9tC,MAAA6kB,KAAA9qE,UAAAkF,OAAA,WACA,GAAAilD,GAAAlE,MAAAmE,EAGAD,GAAAh2C,MAAAg2C,EAAAh2C,KAAA4tC,MAAA1hD,KAAA0hD,KACA1hD,KAAAkzF,WAGAQ,EAAA/0F,KAAAqB,OAQA4lD,MAAA6kB,KAAA9qE,UAAAkqD,WAAA,WACA,GAAAC,GAAAlE,MAAAmE,EACA,UAAAD,EAAAh2C,MAAAg2C,EAAAh2C,KAAA4tC,MAAA1hD,KAAA0hD,MAAAoI,EAAAD,aAGAjE,MAAA6kB,KAAA9qE,UAAAg0F,YAAA,WACA,GAAA/vB,GAAA5jE,IAEAA,MAAA4zF,eAEA,UAAA5zF,KAAAiyE,eACAjyE,KAAAqS,GAAA,0DAAAm7D,GACA5nB,MAAAmE,GAAAj2C,MACA8vD,EAAAovB,UAAAxlB,KAIAxtE,KAAAqS,GAAA,4CAAAm7D,GAEA,IAAAA,MAAAqmB,QAAA,IAAArmB,MAAAqmB,SAGAjuC,MAAAmE,GAAAj2C,MACA8vD,EAAAovB,UAAAxlB,OAYA5nB,MAAA6kB,KAAA9qE,UAAA8zF,YAAA,WACA,GAAAzzF,KAAAqT,MAAAmgF,UACAxzF,KAAA2zF,kBACK,CAEL3zF,KAAA4zF,cAOA,IAAApgB,GAAAxzE,KAAA4+C,WACAkL,EAAAlE,MAAAmE,EACAypB,IAAA1pB,EAAAh2C,MAAAg2C,EAAAh2C,KAAA4tC,MAAA1hD,KAAA0hD,KACAoI,EAAAh2C,KAAAo/E,aAKAttC,MAAA6kB,KAAA9qE,UAAAi0F,aAAA,WACA,UAAA5zF,KAAAiyE,gBACAjyE,KAAA+kD,IAAA,0BACA/kD,KAAA+kD,IAAA,6BAEA/kD,KAAA+kD,IAAA,mBACA/kD,KAAA+kD,IAAA,sBAIAa,MAAAwiB,QAAAC,gBAAAziB,MAAA6kB,KAAA,iBAyBA7kB,MAAAwiB,QAAAI,UAAA5iB,MAAA6kB,KAAA,gBACA7kB,MAAAwiB,QAAAM,0BAAA9iB,MAAA6kB,KAAA,aAoBA7kB,MAAAuD,YACA/oD,OAAA2tB,iBAAA,UAAA63B,MAAAmE,GAAA8oC,gBAAA,GACAzyF,OAAA2tB,iBAAA,WAAA63B,MAAAmE,GAAA8oC,gBAAA,GAEAzyF,OAAA2tB,iBAAA,YAAA63B,MAAAmE,GAAA2oC,OACAtyF,OAAA2tB,iBAAA,YAAA63B,MAAAmE,GAAA2oC,OAEAtyF,OAAA2tB,iBAAA,UAAA63B,MAAAmE,GAAAgpC,eAAA,GACA3yF,OAAA2tB,iBAAA,WAAA63B,MAAAmE,GAAAgpC,eAAA,OAIA,WACA,YAwFAntC,OAAAkuC,KAAA,SAAA7jF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAkuC,KAAAn0F,WACAgpF,QAAA,SAAA14E,GACA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,OACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAA2qF,GAAAh0F,KAAAi0F,kBACA7zC,EAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,WAEAh2D,GAAA24D,YAEAgyB,GAKAA,EAAA/vF,KAAA0jE,IAAAqsB,EAAA5zC,EAAA,EAAAE,EAAA,GACAj3C,EAAA45D,OAAA+wB,EAAA,GACA3qF,EAAA25D,OAAA5iB,EAAA4zC,EAAA,GACA3qF,EAAA04D,IACA3hB,EAAA4zC,EACAA,EACAA,EACA,EAAA/vF,KAAA0kD,GAAA,EACA,GACA,GAEAt/C,EAAA25D,OAAA5iB,EAAAE,EAAA0zC,GACA3qF,EAAA04D,IACA3hB,EAAA4zC,EACA1zC,EAAA0zC,EACAA,EACA,EACA/vF,KAAA0kD,GAAA,GACA,GAEAt/C,EAAA25D,OAAAgxB,EAAA1zC,GACAj3C,EAAA04D,IACAiyB,EACA1zC,EAAA0zC,EACAA,EACA/vF,KAAA0kD,GAAA,EACA1kD,KAAA0kD,IACA,GAEAt/C,EAAA25D,OAAA,EAAAgxB,GACA3qF,EAAA04D,IACAiyB,EACAA,EACAA,EACA/vF,KAAA0kD,GACA,EAAA1kD,KAAA0kD,GAAA,GACA,IAvCAt/C,EAAA65D,KAAA,IAAA9iB,EAAAE,GA0CAj3C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,QAIA4lD,MAAAsR,KAAA9wD,OAAAw/C,MAAAkuC,KAAAluC,MAAAy/B,OAEAz/B,MAAAwiB,QAAAC,gBACAziB,MAAAkuC,KACA,eACA,EACAluC,MAAA8jB,WAAAI,sBAiBAlkB,MAAAqF,WAAAO,WAAA5F,MAAAkuC,SAGA,SAAAluC,GACA,YAEA,IAAAsuC,GAAA,EAAAjwF,KAAA0kD,GAAA,IA0FA/C,GAAAuuC,OAAA,SAAAlkF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,EAAAuuC,OAAAx0F,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,EAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAlGA,SAmGAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACAA,EAAA24D,YACA34D,EAAA04D,IAAA,IAAA/hE,KAAAo0F,YAAA,EAAAF,GAAA,GACA7qF,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAAo0F,aAGA/0B,UAAA,WACA,SAAAr/D,KAAAo0F,aAGA90B,SAAA,SAAAlf,GACAwF,EAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA41E,WAAAx1B,EAAA,GACApgD,KAAAq0F,UAAAj0C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,EAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA41E,WAAAt1B,EAAA,GACAtgD,KAAAq0F,UAAA/zC,EAAA,KAIAsF,EAAAsR,KAAA9wD,OAAAw/C,EAAAuuC,OAAAvuC,EAAAy/B,OAGAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAuuC,OACA,SACA,EACAvuC,EAAA8jB,WAAAI,sBAEAlkB,EAAAwiB,QAAAM,0BAAA9iB,EAAAuuC,OAAA,UAiBAvuC,EAAAqF,WAAAO,WAAA5F,EAAAuuC,SACCvuC,OAED,WACA,YAEA,IAAAsuC,GAAA,EAAAjwF,KAAA0kD,GAAA,IAyFA/C,OAAA0uC,QAAA,SAAArkF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAA0uC,QAAA30F,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAjGA,UAkGAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAAkrF,GAAAv0F,KAAAw0F,aACAC,EAAAz0F,KAAA00F,YAEArrF,GAAA24D,YACA34D,EAAAg6D,OACAkxB,IAAAE,GACAprF,EAAA0iD,MAAA,EAAA0oC,EAAAF,GAEAlrF,EAAA04D,IAAA,IAAAwyB,EAAA,EAAAL,GAAA,GACA7qF,EAAA+5D,UACA/5D,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAAw0F,cAGAn1B,UAAA,WACA,SAAAr/D,KAAA00F,cAGAp1B,SAAA,SAAAlf,GACAwF,MAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAAq0F,WACAzoC,EAAAxL,EAAA,KAIAmf,UAAA,SAAAjf,GACAsF,MAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAAq0F,WACAxoC,EAAAvL,EAAA,MAIAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAA0uC,QAAA1uC,MAAAy/B,OAGAz/B,MAAAwiB,QAAAQ,0BAAAhjB,MAAA0uC,QAAA,oBAsBA1uC,MAAAwiB,QAAAC,gBACAziB,MAAA0uC,QACA,UACA,EACA1uC,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAA0uC,QACA,UACA,EACA1uC,MAAA8jB,WAAAI,sBAiBAlkB,MAAAqF,WAAAO,WAAA5F,MAAA0uC,YAGA,WACA,YAEA,IAAAJ,GAAA,EAAAjwF,KAAA0kD,GAAA,IAyFA/C,OAAA+uC,KAAA,SAAA1kF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAA+uC,KAAAh1F,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,OACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACAA,EAAA24D,YACA34D,EAAA04D,IAAA,IAAA/hE,KAAA40F,iBAAA,EAAAV,GAAA,GACA7qF,EAAA45D,OAAAjjE,KAAA60F,iBAAA,GACAxrF,EAAA04D,IAAA,IAAA/hE,KAAA60F,iBAAAX,EAAA,MACA7qF,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAA60F,kBAGAx1B,UAAA,WACA,SAAAr/D,KAAA60F,kBAGAv1B,SAAA,SAAAlf,GACAwF,MAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA80F,gBAAA10C,EAAA,GACApgD,KAAA+0F,eAAA30C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,MAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA80F,gBAAAx0C,EAAA,GACAtgD,KAAA+0F,eAAAz0C,EAAA,IAGAy0C,eAAA,SAAAjxF,GACA9D,KAAA2oE,SAAA,cAAA7kE,GACA9D,KAAAs/D,SAAA,EAAAx7D,GACA9D,KAAAu/D,UAAA,EAAAz7D,KAGA8hD,MAAAsR,KAAA9wD,OAAAw/C,MAAA+uC,KAAA/uC,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBACAziB,MAAA+uC,KACA,cACA,EACA/uC,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAI,UACA5iB,MAAA+uC,KACA,cACA,EACA/uC,MAAA8jB,WAAAI,sBAEAlkB,MAAAwiB,QAAAM,0BAAA9iB,MAAA+uC,KAAA,eAiBA/uC,MAAAqF,WAAAO,WAAA5F,MAAA+uC,SAGA,WACA,YA2FA/uC,OAAAovC,MAAA,SAAA/kF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAovC,MAAAr1F,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,QACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACAA,EAAA24D,YACA34D,EAAA04D,IACA,EACA,EACA/hE,KAAAo0F,YACA,EACAxuC,MAAAyE,SAAArqD,KAAAqqD,YACArqD,KAAAi1F,gBAEA5rF,EAAA25D,OAAA,KACA35D,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAAo0F,aAGA/0B,UAAA,WACA,SAAAr/D,KAAAo0F,aAGA90B,SAAA,SAAAlf,GACAwF,MAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA41E,WAAAx1B,EAAA,GACApgD,KAAAq0F,UAAAj0C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,MAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA41E,WAAAt1B,EAAA,GACAtgD,KAAAq0F,UAAA/zC,EAAA,KAIAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAAovC,MAAApvC,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBACAziB,MAAAovC,MACA,SACA,EACApvC,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAovC,MACA,QACA,EACApvC,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAAovC,MAAA,gBAoBApvC,MAAAwiB,QAAAc,WAAAtjB,MAAAovC,OACAtrC,SAAA,QACAwrC,YAAA,WACAC,YAAA,aAGAvvC,MAAAqF,WAAAO,WAAA5F,MAAAovC,UAGA,SAAApvC,GACA,YA6FAA,GAAAwvC,IAAA,SAAAnlF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,EAAAwvC,IAAAz1F,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,EAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,MACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAAihD,GAAA1E,EAAAyE,SAAArqD,KAAAsqD,SACA+qC,EAAAr1F,KAAAq1F,WAEAhsF,GAAA24D,YACA34D,EAAA04D,IAAA,IAAA/hE,KAAA60F,iBAAA,EAAAvqC,EAAA+qC,GACAhsF,EAAA04D,IAAA,IAAA/hE,KAAA40F,iBAAAtqC,EAAA,GAAA+qC,GACAhsF,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAA60F,kBAGAx1B,UAAA,WACA,SAAAr/D,KAAA60F,kBAGAv1B,SAAA,SAAAlf,GACAwF,EAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA60F,mBAAAz0C,EAAA,GACApgD,KAAA+0F,eAAA30C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,EAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA60F,mBAAAv0C,EAAA,GACAtgD,KAAA+0F,eAAAz0C,EAAA,KAIAsF,EAAAsR,KAAA9wD,OAAAw/C,EAAAwvC,IAAAxvC,EAAAy/B,OAGAz/B,EAAAwiB,QAAAC,gBACAziB,EAAAwvC,IACA,cACA,EACAxvC,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAwvC,IACA,cACA,EACAxvC,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAwvC,IACA,QACA,EACAxvC,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAwvC,IAAA,gBAoBAxvC,EAAAqF,WAAAO,WAAA5F,EAAAwvC,MACCxvC,OAED,WACA,YAgGAA,OAAA2S,MAAA,SAAAtoD,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAA2S,MAAA54D,WACAgpF,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAtGA,QAuGAhyE,KAAAqnF,UAAArnF,KAAA+zF,YACA/zF,KAAAsnF,QAAAtnF,KAAAs1F,WAEAlP,iBAAA,WACA,OACApmF,KAAAslF,aAAA,IAAAtlF,KAAA2hE,uBACA3hE,KAAA2mE,aACA3mE,KAAA4+C,YAGAm1C,WAAA,SAAA1qF,GACA,GAGAksF,GACAC,EACA3iF,EALAutC,EAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,YACAo2B,EAAAz1F,KAAA01F,UAKAD,KACAF,EAAAv1F,KAAA21F,eACAH,EAAAx1F,KAAA41F,gBAEA/iF,EADA0iF,GAAAC,GAEAC,EACAz1F,KAAA61F,WACA71F,KAAA81F,WACAP,EACAC,EACA,EACA,EACAp1C,EACAE,IAGAm1C,EAAA,IAAAr1C,EAAAE,KAIAtgD,KAAAgmF,WAAAhmF,KAAA2mE,eACAt9D,EAAA24D,YACA34D,EAAA65D,KAAA,IAAA9iB,EAAAE,GACAj3C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAy1F,GACApsF,EAAAm5D,UAAA58D,MAAAyD,EAAAwJ,IAGAyiF,SAAA,SAAAjsF,GACA,GAAA+2C,GAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,WAEAh2D,GAAA24D,YACA34D,EAAA65D,KAAA,IAAA9iB,EAAAE,GACAj3C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAEAo/D,SAAA,WACA,GAAAq2B,GAAAz1F,KAAA01F,UACA,OAAA11F,MAAAqT,MAAA+sC,QAAAq1C,IAAAr1C,MAAA,IAEAif,UAAA,WACA,GAAAo2B,GAAAz1F,KAAA01F,UACA,OAAA11F,MAAAqT,MAAAitC,SAAAm1C,IAAAn1C,OAAA,KAGAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAA2S,MAAA3S,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBAAAziB,MAAA2S,MAAA,SAkBA3S,MAAAwiB,QAAAQ,0BAAAhjB,MAAA2S,MAAA,QACA,IACA,IACA,QACA,WA0BA3S,MAAAwiB,QAAAC,gBACAziB,MAAA2S,MACA,QACA,EACA3S,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAA2S,MACA,QACA,EACA3S,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAA2S,MACA,YACA,EACA3S,MAAA8jB,WAAAI,sBAiBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAA2S,MACA,aACA,EACA3S,MAAA8jB,WAAAI,sBAiBAlkB,MAAAqF,WAAAO,WAAA5F,MAAA2S,OAeA3S,MAAA2S,MAAAw9B,QAAA,SAAAriB,EAAA/vD,GACA,GAAAiwD,GAAA,GAAArb,MACAqb,GAAApb,OAAA,WACA,GAAAi9B,GAAA,GAAA7vC,OAAA2S,OACAk9B,MAAA7hB,GAEAjwD,GAAA8xE,IAEA7hB,EAAAoiB,YAAA,YACApiB,EAAAzpE,IAAAupE,MAKA,WACA,YA4CA,SAAAuiB,KACA,MAAAC,KAGAA,EAAAtwC,MAAAsR,KAAAY,sBAAAY,WAAAy9B,IAyGA,QAAAnyB,GAAA36D,GACAA,EAAAw5D,SAAA7iE,KAAAo2F,YAAA,KAEA,QAAApvB,GAAA39D,GACAA,EAAAs6D,WAAA3jE,KAAAo2F,YAAA,KA1JA,GAwCAF,GAnCAC,EAAA,KAiBAE,GACA,aACA,WACA,YACA,cACA,UACA,QACA,gBACA,aACA,OACA,QACA,SACA,OACA,WACA,iBAGAC,EAAAD,EAAA9zF,MA4GAqjD,OAAA8gB,KAAA,SAAAz2D,GACAjQ,KAAA2oF,QAAA14E,IASA21C,MAAA8gB,KAAA/mE,WACAgpF,QAAA,SAAA14E,GACAA,QAIAA,EAAAsmF,8BACAtmF,EAAAumF,+BAEAvmF,EAAAyyD,KAAAzyD,EAAAyyD,MAAA,SAWA9c,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GAEAjQ,KAAAgkE,YACAhkE,KAAAgnE,cACAhnE,KAAAgyE,UA3KA,MA8KA,QAAAzyE,GAAA,EAAqBA,EAAA+2F,EAAuB/2F,IAC5CS,KAAAqS,GAAAgkF,EAAA92F,GArLA,eAqLAS,KAAAy2F,aAGAz2F,MAAAy2F,eACAz2F,KAAAqnF,UAAArnF,KAAA+zF,YACA/zF,KAAAsnF,QAAAtnF,KAAAs1F,WAEAvB,WAAA,SAAA1qF,GACA,GAaA9J,GAbAu/D,EAAA9+D,KAAA02F,aACAC,EAAA32F,KAAA42F,gBACAC,EAAA72F,KAAA82F,gBAAAH,EACAI,EAAA/2F,KAAA+2F,QACAC,EAAAD,EAAAx0F,OACA00F,EAAAj3F,KAAAk3F,mBACAC,EAAA,EACAC,EAAAp3F,KAAAq3F,WACAC,EAAAt3F,KAAAo/D,WACAm4B,EAAAv3F,KAAAw3F,mBACAC,EAAAz3F,KAAAy3F,iBACA/0B,EAAA1iE,KAAA0iE,OACAg1B,EAAA13F,KAAA03F,UAwBA,KArBAruF,EAAAwjB,QAAA,OAAA7sB,KAAA23F,mBAEAtuF,EAAAwjB,QAAA,eArMA,UAsMAxjB,EAAAwjB,QAAA,YA3MA,QAKA,WAyMAoqE,EACAE,GACAn3F,KAAAq/D,YAAA23B,EAAAH,EAAA,EAAA/3B,GAAA,EA5MA,WA6MOm4B,IACPE,EAAAn3F,KAAAq/D,YAAA23B,EAAAH,EAAA,EAAA/3B,GAGAA,GACAz1D,EAAAyiD,UAAAgT,EAAA,GACAz1D,EAAAyiD,UAAA,EAAAqrC,EAAAr4B,EAAA+3B,EAAA,IAEAxtF,EAAAyiD,UAAA,EAAAqrC,EAAAN,EAAA,GAIAt3F,EAAA,EAAiBA,EAAAy3F,EAAgBz3F,IAAA,CACjC,GAIAq4F,GACAC,EACAC,EANAx3F,EAAAy2F,EAAAx3F,GACA4J,EAAA7I,EAAA6I,KACAi3C,EAAA9/C,EAAA8/C,MACA23C,EAAAx4F,IAAAy3F,EAAA,CAgDA,IA1CA3tF,EAAAg6D,OA9NA,UA+NA+zB,EACA/tF,EAAAyiD,UAAAwrC,EAAAl3C,EAAA,EAAA0e,EAAA,GA/OA,WAgPSs4B,GACT/tF,EAAAyiD,WAAAwrC,EAAAl3C,EAAA,EAAA0e,GAAA,MAGA,IAAA24B,EAAAzyF,QAAA,eACAqE,EAAAg6D,OACAh6D,EAAA24D,YAEA34D,EAAA45D,OAAA,EAAAh/D,KAAAm0D,MAAAy+B,EAAA,IACAe,EAAAzuF,EAAAvE,MAAA,KAAArC,OAAA,EACAs1F,EAAA,IAAAD,EACAE,EA1PA,YA2PAV,GAAAW,IAAAF,EACAP,EAAA,EAAAx4B,EACA1e,EACA/2C,EAAA25D,OAAA/+D,KAAAm0D,MAAA0/B,GAAA7zF,KAAAm0D,MAAAy+B,EAAA,IAGAxtF,EAAAyuF,UAAAJ,EAAA,GACAruF,EAAA2uF,YAAAt1B,EACAr5D,EAAAq6D,SACAr6D,EAAA+5D,YAEA,IAAAq0B,EAAAzyF,QAAA,kBACAqE,EAAAg6D,OACAh6D,EAAA24D,YACA34D,EAAA45D,OAAA,KACA20B,EAAAzuF,EAAAvE,MAAA,KAAArC,OAAA,EACAs1F,EAAA,IAAAD,EACAE,EA5QA,YA6QAV,GAAAW,IAAAF,EACAP,EAAA,EAAAx4B,EACA1e,EACA/2C,EAAA25D,OAAA/+D,KAAAm0D,MAAA0/B,GAAA,GACAzuF,EAAAyuF,UAAAJ,EAAA,GACAruF,EAAA2uF,YAAAt1B,EACAr5D,EAAAq6D,SACAr6D,EAAA+5D,WAEA,IAAAm0B,GAtRA,YAsRAH,EAAA,CAEAQ,EAAAzuF,EAAAvE,MAAA,KAAArC,OAAA,CACA,QAAA01F,GAAA,EAA0BA,EAAA9uF,EAAA5G,OAAkB01F,IAAA,CAC5C,GAAAt3F,GAAAwI,EAAA8uF,EAEA,OAAAt3F,GAAApB,IAAAy3F,EAAA,GA5RA,YA4RAI,GACA/tF,EAAAyiD,UACA7nD,KAAAC,OAAAozF,EAAA,EAAAx4B,EAAA1e,GAAAw3C,GACA,GAGA53F,KAAAo2F,YAAAz1F,EACA0I,EAAAu3D,gBAAA5gE,MACAqJ,EAAAyiD,UACA7nD,KAAAm0D,MAAAp4D,KAAAk4F,aAAAv3F,GAAAy/C,OAAAm3C,EACA,QAIAv3F,MAAAo2F,YAAAjtF,EAEAE,EAAAu3D,gBAAA5gE,KAEAqJ,GAAA+5D,UACA4zB,EAAA,GACA3tF,EAAAyiD,UAAA,EAAA+qC,KAIAvB,SAAA,SAAAjsF,GACA,GAAA+2C,GAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,WAEAh2D,GAAA24D,YACA34D,EAAA65D,KAAA,IAAA9iB,EAAAE,GACAj3C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAEAm4F,QAAA,SAAAhvF,GACA,GAAA1I,GAAAmlD,MAAAsR,KAAAM,UAAAruD,SAAA,IAAA/E,UAEA,OADApE,MAAA2oE,SAzTA,OAyTAloE,GACAT,MAQAo/D,SAAA,WAEA,MA7UA,SA4UAp/D,KAAAqT,MAAA+sC,WAAA19C,KAAA1C,KAAAqT,MAAA+sC,MAEApgD,KAAAo4F,eAAA,EAAAp4F,KAAA02F,aACA12F,KAAAqT,MAAA+sC,OAQAif,UAAA,WAGA,MA1VA,SAyVAr/D,KAAAqT,MAAAitC,YAAA59C,KAAA1C,KAAAqT,MAAAitC,OAEAtgD,KAAA42F,gBAAA52F,KAAA+2F,QAAAx0F,OAAAvC,KAAA82F,gBACA,EAAA92F,KAAA02F,aACA12F,KAAAqT,MAAAitC,QAQA83C,aAAA,WACA,MAAAp4F,MAAAq4F,WAQAzB,cAAA,WACA,MAAA52F,MAAA22F,YAEAuB,aAAA,SAAA/uF,GACA,GAEAmvF,GAFA7/B,EAAAw9B,IACAyB,EAAA13F,KAAAu4F,aAQA,OALA9/B,GAAA4K,OACA5K,EAAAxX,KAAAjhD,KAAA23F,kBAEAW,EAAA7/B,EAAAqK,YAAA35D,GACAsvD,EAAA2K,WAEAhjB,MAAAk4C,EAAAl4C,MACAE,OAAAtX,SAAA0uD,EAAA,MAGAC,gBAAA,WAKA,MAAA/xC,OAAAlX,GAAA5hB,KAEA9sB,KAAAw4F,eAvXA,IAyXAx4F,KAAAu4F,cA1XA,MA4XAv4F,KAAAy4F,gBAIAz4F,KAAAw4F,eA/XA,IAiYAx4F,KAAA04F,iBAjYA,IAmYA14F,KAAAu4F,cApYA,MAsYAv4F,KAAAy4F,iBAGAE,aAAA,SAAA37B,GArZA,YAsZAh9D,KAAAo3F,UACAp6B,IAAAruC,OAEA,IAAAyxB,GAAApgD,KAAA44F,cAAA57B,EACA,OAAAh9D,MAAA+2F,QAAAxuF,MAAgCY,KAAA6zD,EAAA5c,WAEhCw4C,cAAA,SAAAzvF,GACA,GAAA0vF,GAAA74F,KAAAw3F,mBACAj1F,EAAA4G,EAAA5G,MACA,OACA0zF,KAAAnzB,YAAA35D,GAAAi3C,OACA79C,EAAAs2F,GAAAt2F,EAAA,OAGAk0F,aAAA,WACA,GAAAqC,GAAA94F,KAAA+4F,UAAAn0F,MAAA,MACA8yF,GAAA13F,KAAAu4F,cACAF,EAAA,EACAxB,EAAA72F,KAAA82F,gBAAAY,EACAt3C,EAAApgD,KAAAqT,MAAA+sC,MACAE,EAAAtgD,KAAAqT,MAAAitC,OACA04C,EA9aA,SA8aA54C,EACA64C,EA/aA,SA+aA34C,EACAwe,EAAA9+D,KAAA02F,aACAwC,EAAA94C,EAAA,EAAA0e,EACAq6B,EAAA74C,EAAA,EAAAwe,EACAs6B,EAAA,EACAC,EAAAr5F,KAAAs5F,UAEAC,EAlaA,SAkaAF,EACAG,EApaA,SAoaAH,GAAAE,EACAE,EAAAz5F,KAAA05F,gBAAAH,CAEAv5F,MAAA+2F,WACAd,IAAAh1C,KAAAjhD,KAAA23F,iBACA,QAAAl5F,GAAA,EAAAkN,EAAAmtF,EAAAv2F,OAAyC9D,EAAAkN,IAASlN,EAAA,CAClD,GAAAu+D,GAAA87B,EAAAr6F,GACAk7F,EAAAF,EACAz5F,KAAA44F,cA1aA,KA2aA,EAEAd,EAAA93F,KAAA44F,cAAA57B,EACA,IAAAg8B,GAAAlB,EAAAoB,EAKA,KAAAl8B,EAAAz6D,OAAA,IASA,IAJA,GAAAq3F,GAAA,EACAC,EAAA78B,EAAAz6D,OACA8M,EAAA,GACAyqF,EAAA,EACAF,EAAAC,GAAA,CACA,GAAAE,GAAAH,EAAAC,IAAA,EACAvyC,EAAA0V,EAAA97D,MAAA,EAAA64F,EAAA,GACAC,EAAAh6F,KAAA44F,cAAAtxC,GAAAqyC,CACAK,IAAAd,GACAU,EAAAG,EAAA,EACA1qF,EAAAi4C,GAAAmyC,EAlcA,IAkcA,IACAK,EAAAE,GAEAH,EAAAE,EAQA,IAAA1qF,EAsDA,KApDA,IAAAmqF,EAAA,CAEA,GAAAS,GACAC,EAAAl9B,EAAA3tD,EAAA9M,QACA43F,EAxdA,MAwdAD,GAleA,MAkeAA,CAEAD,GADAE,GAAAL,GAAAZ,EACA7pF,EAAA9M,OAGA0B,KAAA0H,IACA0D,EAAAmiB,YA9dA,KA+dAniB,EAAAmiB,YAzeA,MA0eA,EAEAyoE,EAAA,IAEAL,EAAAK,EACA5qF,IAAAnO,MAAA,EAAA04F,GACAE,EAAA95F,KAAA44F,cAAAvpF,IASA,GALAA,EAAAu2C,MAAAsR,KAAAmD,UAAAhrD,GAEArP,KAAA24F,aAAAtpF,GACAgpF,EAAAp0F,KAAA0H,IAAA0sF,EAAAyB,GACAV,GAAAvC,GAEA0C,GACAN,GAAAG,EAAAvC,EAAAsC,EAMA,KAIA,IAFAn8B,IAAA97D,MAAA04F,GACA58B,EAAApX,MAAAsR,KAAAoD,SAAA0C,GACAA,EAAAz6D,OAAA,IAEAu1F,EAAA93F,KAAA44F,cAAA57B,KACAk8B,EAAA,CAEAl5F,KAAA24F,aAAA37B,GACAo8B,GAAAvC,EACAwB,EAAAp0F,KAAA0H,IAAA0sF,EAAAP,EACA,YAUA93F,MAAA24F,aAAA37B,GACAo8B,GAAAvC,EACAwB,EAAAp0F,KAAA0H,IAAA0sF,EAAAP,EAGA,IAAAmB,GAAAG,EAAAvC,EAAAsC,EACA,MAGAn5F,KAAA22F,WAAAe,EAKA13F,KAAAq4F,cAGAzyC,MAAAsR,KAAA9wD,OAAAw/C,MAAA8gB,KAAA9gB,MAAAy/B,OAEAz/B,MAAAwiB,QAAAK,UACA7iB,MAAA6kB,KACA,QACA7kB,MAAA8jB,WAAAK,4BAGAnkB,MAAAwiB,QAAAK,UACA7iB,MAAA6kB,KACA,SACA7kB,MAAA8jB,WAAAK,4BAIAnkB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,sBAiBA9gB,MAAAwiB,QAAAC,gBACAziB,MAAA8gB,KACA,WACA,GACA9gB,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,YAtlBA,UAumBA9gB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,cAvmBA,UAwnBA9gB,MAAAwiB,QAAAC,gBACAziB,MAAA8gB,KACA,UACA,EACA9gB,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,QAppBA,QAwqBA9gB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,gBArqBA,OAsrBA9gB,MAAAwiB,QAAAC,gBACAziB,MAAA8gB,KACA,aACA,EACA9gB,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,OArsBA,QAstBA9gB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,eAkBA9gB,MAAAwiB,QAAAC,gBACAziB,MAAA8gB,KACA,gBACA,EACA9gB,MAAA8jB,WAAAI,sBAWAlkB,MAAAwiB,QAAAI,UAAA5iB,MAAA8gB,KAAA,OAlwBA,IAmwBA9gB,MAAAwiB,QAAAM,0BAAA9iB,MAAA8gB,KAAA,QAiBA9gB,MAAAwiB,QAAAC,gBAAAziB,MAAA8gB,KAAA,iBApxBA,IA2yBA9gB,MAAAqF,WAAAO,WAAA5F,MAAA8gB,SAGA,WACA,YA6FA9gB,OAAAw0C,KAAA,SAAAnqF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAw0C,KAAAz6F,WACAgpF,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,OAEAhyE,KAAAqS,GACA,+EACA,WACArS,KAAA6qE,YAAA,mBAIA7qE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAKAgxF,GACA7qF,EACAjQ,EAPAgtE,EAAAvsE,KAAAs6F,YACA/3F,EAAAgqE,EAAAhqE,OACA45D,EAAAn8D,KAAAu6F,aACAnJ,EAAApxF,KAAAw6F,YACAC,EAAAz6F,KAAA06F,WAKA,IAAAn4F,EAAA,CAQA,GAJA8G,EAAA24D,YACA34D,EAAA45D,OAAAsJ,EAAA,GAAAA,EAAA,IAGA,IAAApQ,GAAA55D,EAAA,GASA,IARA83F,EAAAr6F,KAAA26F,mBACAnrF,EAAA6qF,EAAA93F,OACAhD,EAAA6xF,EAAA,IAEAA,GACA/nF,EAAA85D,iBAAAk3B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA96F,EAAAiQ,EAAA,GACAnG,EAAA44D,cACAo4B,EAAA96F,KACA86F,EAAA96F,KACA86F,EAAA96F,KACA86F,EAAA96F,KACA86F,EAAA96F,KACA86F,EAAA96F,KAIA6xF,IACA/nF,EAAA85D,iBACAk3B,EAAA7qF,EAAA,GACA6qF,EAAA7qF,EAAA,GACA+8D,EAAAhqE,EAAA,GACAgqE,EAAAhqE,EAAA,QAGO,IAAAk4F,EAIP,IAFAl7F,EAAA,EAEAA,EAAAgD,GACA8G,EAAA44D,cACAsK,EAAAhtE,KACAgtE,EAAAhtE,KACAgtE,EAAAhtE,KACAgtE,EAAAhtE,KACAgtE,EAAAhtE,KACAgtE,EAAAhtE,UAKA,KAAAA,EAAA,EAAmBA,EAAAgD,EAAYhD,GAAA,EAC/B8J,EAAA25D,OAAAuJ,EAAAhtE,GAAAgtE,EAAAhtE,EAAA,GAKA6xF,IACA/nF,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAqJ,EAAAo3D,YAAAzgE,QAGA26F,iBAAA,WACA,MAAA36F,MAAA+qE,UAAA,gBAAA/qE,KAAA46F,oBAEAA,kBAAA,WACA,MAAA56F,MAAAw6F,YACAx6F,KAAA66F,0BAEAj1C,MAAAsR,KAAAgF,cAAAl8D,KAAAs6F,YAAAt6F,KAAAu6F,eAGAM,wBAAA,WACA,GAAAh7F,GAAAG,KAAAs6F,YACA9qF,EAAA3P,EAAA0C,OACA45D,EAAAn8D,KAAAu6F,aACA1mD,EAAA+R,MAAAsR,KACA4jC,EAAAjnD,EAAAunB,kBACAv7D,EAAA2P,EAAA,GACA3P,EAAA2P,EAAA,GACA3P,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAs8D,GAEA4+B,EAAAlnD,EAAAunB,kBACAv7D,EAAA2P,EAAA,GACA3P,EAAA2P,EAAA,GACA3P,EAAA2P,EAAA,GACA3P,EAAA2P,EAAA,GACA3P,EAAA,GACAA,EAAA,GACAs8D,GAEA5rC,EAAAq1B,MAAAsR,KAAAgF,cAAAr8D,EAAAs8D,EAgBA,QAfA2+B,EAAA,GAAAA,EAAA,IACAtuF,OAAA+jB,GACA/jB,QACAuuF,EAAA,GACAA,EAAA,GACAl7F,EAAA2P,EAAA,GACA3P,EAAA2P,EAAA,GACAurF,EAAA,GACAA,EAAA,GACAD,EAAA,GACAA,EAAA,GACAj7F,EAAA,GACAA,EAAA,MAKAu/D,SAAA,WACA,MAAAp/D,MAAAsmF,cAAAlmC,OAEAif,UAAA,WACA,MAAAr/D,MAAAsmF,cAAAhmC,QAGAgmC,YAAA,WACA,GAAA/Z,EAEAA,GADA,IAAAvsE,KAAAu6F,aACAv6F,KAAA46F,oBAEA56F,KAAAs6F,WAOA,QADA1uC,GAAAC,EAJAsgB,EAAAI,EAAA,GACAF,EAAAE,EAAA,GACAH,EAAAG,EAAA,GACAD,EAAAC,EAAA,GAEA9tE,EAAA,EAAqBA,EAAA8tE,EAAAhqE,OAAA,EAAuB9D,IAC5CmtD,EAAA2gB,EAAA,EAAA9tE,GACAotD,EAAA0gB,EAAA,EAAA9tE,EAAA,GACA0tE,EAAAloE,KAAA0jE,IAAAwE,EAAAvgB,GACAygB,EAAApoE,KAAA0H,IAAA0gE,EAAAzgB,GACAwgB,EAAAnoE,KAAA0jE,IAAAyE,EAAAvgB,GACAygB,EAAAroE,KAAA0H,IAAA2gE,EAAAzgB,EAEA,QACAD,EAAA3nD,KAAAm0D,MAAA+T,GACAtgB,EAAA5nD,KAAAm0D,MAAAgU,GACAhsB,MAAAn8C,KAAAm0D,MAAAiU,EAAAF,GACA7rB,OAAAr8C,KAAAm0D,MAAAkU,EAAAF,MAIAxmB,MAAAsR,KAAA9wD,OAAAw/C,MAAAw0C,KAAAx0C,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBAAAziB,MAAAw0C,KAAA,aAoBAx0C,MAAAwiB,QAAAC,gBAAAziB,MAAAw0C,KAAA,aAiBAx0C,MAAAwiB,QAAAC,gBACAziB,MAAAw0C,KACA,UACA,EACAx0C,MAAA8jB,WAAAI,sBAmBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAw0C,KACA,YAEAx0C,MAAA8jB,WAAAS,2BAoBAvkB,MAAAqF,WAAAO,WAAA5F,MAAAw0C,SAGA,WACA,YAqHAx0C,OAAAo1C,OAAA,SAAA/qF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAo1C,OAAAr7F,WACAgpF,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,SAEAhyE,KAAAi7F,UAAA,CACA,IAAAr3B,GAAA5jE,IACAA,MAAA0iF,KAAA,GAAA98B,OAAA6nC,UAAA,WAEA,GAAAnyC,GAAAsoB,EAAAq3B,QAEA,OADAr3B,GAAAq3B,UAAA,EACA3/C,IAEAt7C,KAAAqS,GAAA,mCAEArS,KAAAk7F,WAAA,KAEAl7F,KAAAqS,GAAA,oCACArS,KAAAi7F,UAAA,IAGAj7F,KAAAqS,GAAA,mCACArS,KAAA0iF,KAAAwL,cAGAnsC,cAAA/hD,KAAAm7F,UACAn7F,KAAAo7F,kBAGAp7F,KAAAqnF,UAAArnF,KAAA+zF,YACA/zF,KAAAsnF,QAAAtnF,KAAAs1F,WAEAvB,WAAA,SAAA1qF,GACA,GAAAq5E,GAAA1iF,KAAAq7F,eACAz6F,EAAAZ,KAAAk7F,aACAI,EAAA,EAAA16F,EACAyK,EAAArL,KAAAu7F,gBAAA7Y,GACA8Y,EAAAx7F,KAAAy7F,eACA7vC,EAAAvgD,EAAAiwF,EAAA,GACAzvC,EAAAxgD,EAAAiwF,EAAA,GACAl7C,EAAA/0C,EAAAiwF,EAAA,GACAh7C,EAAAj1C,EAAAiwF,EAAA,GACA7F,EAAAz1F,KAAA01F,UASA,KAPA11F,KAAAgmF,WAAAhmF,KAAA2mE,eACAt9D,EAAA24D,YACA34D,EAAA65D,KAAA,IAAA9iB,EAAAE,GACAj3C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAGAy1F,EACA,GAAA+F,EAAA,CACA,GAAAn0B,GAAAm0B,EAAA9Y,GACAgZ,EAAA,EAAA96F,CACAyI,GAAAm5D,UACAizB,EACA7pC,EACAC,EACAzL,EACAE,EACA+mB,EAAAq0B,EAAA,GACAr0B,EAAAq0B,EAAA,GACAt7C,EACAE,OAGAj3C,GAAAm5D,UAAAizB,EAAA7pC,EAAAC,EAAAzL,EAAAE,EAAA,IAAAF,EAAAE,IAIAg1C,SAAA,SAAAjsF,GACA,GAAAq5E,GAAA1iF,KAAAq7F,eACAz6F,EAAAZ,KAAAk7F,aACAI,EAAA,EAAA16F,EACAyK,EAAArL,KAAAu7F,gBAAA7Y,GACA8Y,EAAAx7F,KAAAy7F,eACAr7C,EAAA/0C,EAAAiwF,EAAA,GACAh7C,EAAAj1C,EAAAiwF,EAAA,EAGA,IADAjyF,EAAA24D,YACAw5B,EAAA,CACA,GAAAn0B,GAAAm0B,EAAA9Y,GACAgZ,EAAA,EAAA96F,CACAyI,GAAA65D,KAAAmE,EAAAq0B,EAAA,GAAAr0B,EAAAq0B,EAAA,GAAAt7C,EAAAE,OAEAj3C,GAAA65D,KAAA,IAAA9iB,EAAAE,EAEAj3C,GAAA84D,YACA94D,EAAAg3D,UAAArgE,OAEAomF,iBAAA,WACA,OACApmF,KAAAslF,aAAA,IAAAtlF,KAAA2hE,uBACA3hE,KAAA2mE,aAGAy0B,aAAA,WACA,GAAAx3B,GAAA5jE,IACAA,MAAAm7F,SAAAr5C,YAAA,WACA8hB,EAAA+3B,gBACO,IAAA37F,KAAA47F,iBAOP31F,MAAA,WACA,IAAAjG,KAAAkuF,YAAA,CAGA,GAAArf,GAAA7uE,KAAA2+C,UAQA3+C,MAAA0iF,KAAAC,UAAA9T,GACA7uE,KAAAo7F,eACAp7F,KAAA0iF,KAAAz8E,UAOAw3C,KAAA,WACAz9C,KAAA0iF,KAAAjlC,OACAsE,cAAA/hD,KAAAm7F,WAQAjN,UAAA,WACA,MAAAluF,MAAA0iF,KAAAwL,aAEAyN,aAAA,WACA,GAAA/6F,GAAAZ,KAAAk7F,aACAW,EAAA77F,KAAAq7F,cAKAz6F,GAJAZ,KAAAu7F,gBACAM,GACAt5F,OAAA,EAEA,EACAvC,KAAAk7F,WAAAt6F,EAAA,GAEAZ,KAAAk7F,WAAA,KAIAt1C,MAAAsR,KAAA9wD,OAAAw/C,MAAAo1C,OAAAp1C,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBAAAziB,MAAAo1C,OAAA,aAiBAp1C,MAAAwiB,QAAAC,gBAAAziB,MAAAo1C,OAAA,cAoCAp1C,MAAAwiB,QAAAC,gBAAAziB,MAAAo1C,OAAA,gBAoCAp1C,MAAAwiB,QAAAC,gBAAAziB,MAAAo1C,OAAA,SAiBAp1C,MAAAwiB,QAAAC,gBACAziB,MAAAo1C,OACA,aACA,EACAp1C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAo1C,OACA,YACA,GACAp1C,MAAA8jB,WAAAI,sBAoBAlkB,MAAAwiB,QAAAc,WAAAtjB,MAAAo1C,QACAp6F,MAAA,aACAk7F,SAAA,gBACAC,SAAA,kBAGAn2C,MAAAqF,WAAAO,WAAA5F,MAAAo1C,WAIA,WACA,YAyFAp1C,OAAAo2C,KAAA,SAAA/rF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAo2C,KAAAr8F,WACAgpF,QAAA,SAAA14E,GACAjQ,KAAAi8F,YACA,IAAAr4B,GAAA5jE,IAGA4lD,OAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,OAEAhyE,KAAAi8F,UAAAr2C,MAAAo2C,KAAAE,cAAAl8F,KAAAqc,WACArc,KAAAm8F,WAAA,CACA,QAAA19F,GAAA,EAAqBA,EAAAuB,KAAAi8F,UAAA15F,SAA2B9D,EAChDuB,KAAAm8F,YAAAn8F,KAAAi8F,UAAAx9F,GAAA09F,UAEAn8F,MAAAqS,GAAA,8BACAuxD,EAAAq4B,UAAAr2C,MAAAo2C,KAAAE,cAAAl8F,KAAAqc,WACArc,KAAAm8F,WAAA,CACA,QAAA19F,GAAA,EAAuBA,EAAAuB,KAAAi8F,UAAA15F,SAA2B9D,EAClDuB,KAAAm8F,YAAAn8F,KAAAi8F,UAAAx9F,GAAA09F,aAIAn8F,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAA+yF,GAAAp8F,KAAAi8F,SAGA5yF,GAAA24D,WACA,QAAAziE,GAAA,EAAqBA,EAAA68F,EAAA75F,OAAehD,IAAA,CACpC,GAAAV,GAAAu9F,EAAA78F,GAAA88F,QACAx8F,EAAAu8F,EAAA78F,GAAAgtE,MACA,QAAA1tE,GACA,QACAwK,EAAA25D,OAAAnjE,EAAA,GAAAA,EAAA,GACA,MACA,SACAwJ,EAAA45D,OAAApjE,EAAA,GAAAA,EAAA,GACA,MACA,SACAwJ,EAAA44D,cAAApiE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACAwJ,EAAA85D,iBAAAtjE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACA,GAAA25E,GAAA35E,EAAA,GACA05E,EAAA15E,EAAA,GACA00F,EAAA10F,EAAA,GACA40F,EAAA50F,EAAA,GACAuxE,EAAAvxE,EAAA,GACAy8F,EAAAz8F,EAAA,GACA08F,EAAA18F,EAAA,GACA28F,EAAA38F,EAAA,GAEAm5D,EAAAu7B,EAAAE,EAAAF,EAAAE,EACAhtB,EAAA8sB,EAAAE,EAAA,EAAAF,EAAAE,EACA/sB,EAAA6sB,EAAAE,IAAAF,EAAA,CAEAlrF,GAAAyiD,UAAA0tB,EAAAD,GACAlwE,EAAA6iD,OAAAqwC,GACAlzF,EAAA0iD,MAAA0b,EAAAC,GACAr+D,EAAA04D,IAAA,IAAA/I,EAAAoY,IAAAkrB,EAAA,EAAAE,GACAnzF,EAAA0iD,MAAA,EAAA0b,EAAA,EAAAC,GACAr+D,EAAA6iD,QAAAqwC,GACAlzF,EAAAyiD,WAAA0tB,GAAAD,EAEA,MACA,SACAlwE,EAAA84D,aAKA94D,EAAAu3D,gBAAA5gE,OAEAsmF,YAAA,WACA,GAAA/Z,KACAvsE,MAAAi8F,UAAAp6F,QAAA,SAAAoH,GACAsjE,IAAA//D,OAAAvD,EAAAsjE,SAOA,QADA3gB,GAAAC,EAJAsgB,EAAAI,EAAA,GACAF,EAAAE,EAAA,GACAH,EAAAG,EAAA,GACAD,EAAAC,EAAA,GAEA9tE,EAAA,EAAqBA,EAAA8tE,EAAAhqE,OAAA,EAAuB9D,IAC5CmtD,EAAA2gB,EAAA,EAAA9tE,GACAotD,EAAA0gB,EAAA,EAAA9tE,EAAA,GAIA6F,MAAAsnD,KACAugB,EAAAloE,KAAA0jE,IAAAwE,EAAAvgB,GACAygB,EAAApoE,KAAA0H,IAAA0gE,EAAAzgB,IAEAtnD,MAAAunD,KACAugB,EAAAnoE,KAAA0jE,IAAAyE,EAAAvgB,GACAygB,EAAAroE,KAAA0H,IAAA2gE,EAAAzgB,GAGA,QACAD,EAAA3nD,KAAAm0D,MAAA+T,GACAtgB,EAAA5nD,KAAAm0D,MAAAgU,GACAhsB,MAAAn8C,KAAAm0D,MAAAiU,EAAAF,GACA7rB,OAAAr8C,KAAAm0D,MAAAkU,EAAAF,KAWAqwB,UAAA,WACA,MAAAz8F,MAAAm8F,YAWAO,iBAAA,SAAAn6F,GACA,GAAAopD,GACAltD,EAAA,EACAk+F,EAAA38F,KAAAi8F,UAAA15F,MAEA,KAAAo6F,EACA,WAGA,MAAAl+F,EAAAk+F,GAAAp6F,EAAAvC,KAAAi8F,UAAAx9F,GAAA09F,YACA55F,GAAAvC,KAAAi8F,UAAAx9F,GAAA09F,aACA19F,CAGA,IAAAA,IAAAk+F,EAEA,MADAhxC,GAAA3rD,KAAAi8F,UAAAx9F,EAAA,GAAA8tE,OAAArrE,OAAA,IAEA0qD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAIA,IAAAppD,EAAA,IAEA,MADAopD,GAAA3rD,KAAAi8F,UAAAx9F,GAAA8tE,OAAArrE,MAAA,MAEA0qD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAIA,IAAAyQ,GAAAp8D,KAAAi8F,UAAAx9F,GACAoB,EAAAu8D,EAAAmQ,MACA,QAAAnQ,EAAAigC,SACA,QACA,MAAAz2C,OAAAo2C,KAAAY,eACAr6F,EACA65D,EAAAn2D,MAAA2lD,EACAwQ,EAAAn2D,MAAA4lD,EACAhsD,EAAA,GACAA,EAAA,GAEA,SACA,MAAA+lD,OAAAo2C,KAAAa,sBACAt6F,EAAA65D,EAAA+/B,WACA//B,EAAAn2D,MAAA2lD,EACAwQ,EAAAn2D,MAAA4lD,EACAhsD,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAEA,SACA,MAAA+lD,OAAAo2C,KAAAc,0BACAv6F,EAAA65D,EAAA+/B,WACA//B,EAAAn2D,MAAA2lD,EACAwQ,EAAAn2D,MAAA4lD,EACAhsD,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GAEA,SACA,GAAA25E,GAAA35E,EAAA,GACA05E,EAAA15E,EAAA,GACA00F,EAAA10F,EAAA,GACA40F,EAAA50F,EAAA,GACAuxE,EAAAvxE,EAAA,GACAy8F,EAAAz8F,EAAA,GACA08F,EAAA18F,EAAA,EAEA,OADAuxE,IAAAkrB,EAAA/5F,EAAA65D,EAAA+/B,WACAv2C,MAAAo2C,KAAAe,wBAAAvjB,EAAAD,EAAAgb,EAAAE,EAAArjB,EAAAmrB,GAGA,cAGA32C,MAAAsR,KAAA9wD,OAAAw/C,MAAAo2C,KAAAp2C,MAAAy/B,OAEAz/B,MAAAo2C,KAAAgB,cAAA,SAAAzhC,EAAAC,EAAAC,EAAAC,GACA,MAAAz3D,MAAA43D,MAAAJ,EAAAF,IAAAE,EAAAF,IAAAG,EAAAF,IAAAE,EAAAF,KAEA5V,MAAAo2C,KAAAY,eAAA,SAAAjgC,EAAAsgC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,OACA56F,KAAA26F,IACAA,EAAAJ,OAEAv6F,KAAA46F,IACAA,EAAAJ,EAGA,IAAAt+F,IAAAw+F,EAAAF,IAAAC,EAAAF,EAAA,MACAviF,EAAAzW,KAAA43D,KAAAc,KAAA,EAAA/9D,KACAu+F,GAAAF,IACAviF,IAAA,EAEA,IACAqiD,GADAwgC,EAAA3+F,EAAA8b,CAGA,IAAAyiF,IAAAF,EAEAlgC,GACAnR,EAAAyxC,EACAxxC,EAAAyxC,EAAAC,OAEK,KAAAD,EAAAJ,IAAAG,EAAAJ,EAAA,QAAAr+F,EACLm+D,GACAnR,EAAAyxC,EAAA3iF,EACAmxC,EAAAyxC,EAAAC,OAEK,CACL,GAAAC,GAAAC,EAEAjuF,EAAAxP,KAAAg9F,cAAAC,EAAAC,EAAAC,EAAAC,EACA,IAAA5tF,EAAA,KACA,MAEA,IAAAqtD,IAAAwgC,EAAAJ,IAAAE,EAAAF,IAAAK,EAAAJ,IAAAE,EAAAF,EACArgC,IAAArtD,IACAguF,EAAAP,EAAApgC,GAAAsgC,EAAAF,GACAQ,EAAAP,EAAArgC,GAAAugC,EAAAF,EAEA,IAAAQ,GAAA19F,KAAAg9F,cAAAK,EAAAC,EAAAE,EAAAC,GACAE,EAAA15F,KAAA43D,KAAAc,IAAA+gC,IACAhjF,GAAAzW,KAAA43D,KAAA8hC,KAAA,EAAA/+F,MACAu+F,EAAAF,IACAviF,IAAA,GAEA6iF,EAAA3+F,EAAA8b,EACAqiD,GACAnR,EAAA4xC,EAAA9iF,EACAmxC,EAAA4xC,EAAAF,GAIA,MAAAxgC,IAGAnX,MAAAo2C,KAAAa,sBAAA,SACAe,EACAX,EACAC,EACAC,EACAC,EACAS,EACAC,EACAC,EACAC,GAEA,QAAAC,GAAAtiC,GACA,MAAAA,OAEA,QAAAuiC,GAAAviC,GACA,SAAAA,KAAA,EAAAA,GAEA,QAAAwiC,GAAAxiC,GACA,SAAAA,GAAA,EAAAA,IAAA,EAAAA,GAEA,QAAAyiC,GAAAziC,GACA,SAAAA,IAAA,EAAAA,IAAA,EAAAA,GAKA,OACA/P,EAJAmyC,EAAAE,EAAAL,GAAAC,EAAAK,EAAAN,GAAAT,EAAAgB,EAAAP,GAAAX,EAAAmB,EAAAR,GAKA/xC,EAJAmyC,EAAAC,EAAAL,GAAAE,EAAAI,EAAAN,GAAAR,EAAAe,EAAAP,GAAAV,EAAAkB,EAAAR,KAOAh4C,MAAAo2C,KAAAc,0BAAA,SACAc,EACAX,EACAC,EACAC,EACAC,EACAS,EACAC,GAEA,QAAAO,GAAA1iC,GACA,MAAAA,KAEA,QAAA2iC,GAAA3iC,GACA,SAAAA,GAAA,EAAAA,GAEA,QAAA4iC,GAAA5iC,GACA,SAAAA,IAAA,EAAAA,GAKA,OACA/P,EAJAiyC,EAAAQ,EAAAT,GAAAT,EAAAmB,EAAAV,GAAAX,EAAAsB,EAAAX,GAKA/xC,EAJAiyC,EAAAO,EAAAT,GAAAR,EAAAkB,EAAAV,GAAAV,EAAAqB,EAAAX,KAOAh4C,MAAAo2C,KAAAe,wBAAA,SAAAvjB,EAAAD,EAAAgb,EAAAE,EAAArjB,EAAAmrB,GACA,GAAAiC,GAAAv6F,KAAAmoD,IAAAmwC,GACAkC,EAAAx6F,KAAAooD,IAAAkwC,GACAx/B,GACAnR,EAAA2oC,EAAAtwF,KAAAmoD,IAAAglB,GACAvlB,EAAA4oC,EAAAxwF,KAAAooD,IAAA+kB,GAEA,QACAxlB,EAAA4tB,GAAAzc,EAAAnR,EAAA4yC,EAAAzhC,EAAAlR,EAAA4yC,GACA5yC,EAAA0tB,GAAAxc,EAAAnR,EAAA6yC,EAAA1hC,EAAAlR,EAAA2yC,KASA54C,MAAAo2C,KAAAE,cAAA,SAAAjzF,GAwBA,IAAAA,EACA,QAIA,IAAAy1F,GAAAz1F,EAGA01F,GACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IAGAD,KAAAh+F,QAAA,GAAA8/B,QAAA,aAEA,QAAAjhC,GAAA,EAAmBA,EAAAo/F,EAAAp8F,OAAehD,IAClCm/F,IAAAh+F,QAAA,GAAA8/B,QAAAm+D,EAAAp/F,GAAA,SAAAo/F,EAAAp/F,GAGA,IAQA8P,GARAvK,EAAA45F,EAAA95F,MAAA,KACAw3F,KACAwC,KAEAC,EAAA,EACAC,EAAA,EAEA78F,EAAA,qDAEA,KAAA1C,EAAA,EAAeA,EAAAuF,EAAAvC,OAAgBhD,IAAA,CAC/B,GAAAkB,GAAAqE,EAAAvF,GACAV,EAAA4B,EAAAQ,OAAA,EAIA,KAHAR,IAAAS,MAAA,GAEA09F,EAAAr8F,OAAA,EACA8M,EAAApN,EAAAs8B,KAAA99B,IACAm+F,EAAAr2F,KAAA8G,EAAA,GAQA,QAFAxP,MAEAma,EAAA,EAAA+kF,EAAAH,EAAAr8F,OAA2CyX,EAAA+kF,EAAU/kF,IAAA,CACrD,GAAAglF,GAAAj7F,WAAA66F,EAAA5kF,GACA1V,OAAA06F,GAGAn/F,EAAA0I,KAAA,GAFA1I,EAAA0I,KAAAy2F,GAMA,KAAAn/F,EAAA0C,OAAA,IACA+B,MAAAzE,EAAA,KADA,CAMA,GAKAo/F,GAAAC,EAAAC,EACA5K,EAAAE,EAAA8H,EAAAvgC,EAAAwgC,EAAAjhC,EAAAC,EANA4jC,EAAA,KACA7yB,KACA8yB,EAAAR,EACAS,EAAAR,CAMA,QAAAjgG,GAEA,QACAggG,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAD,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAq4D,EAAAhkE,KAAAs2F,EAAAC,EACA,MAEA,SACA,GAAAvhE,GAAA19B,EAAAqU,QACAupB,EAAA59B,EAAAqU,OAMA,IALA2qF,GAAAthE,EACAuhE,GAAArhE,EACA2hE,EAAA,IAGAhD,EAAA75F,OAAA,SAAA65F,IAAA75F,OAAA,GAAA85F,QACA,OAAApkB,GAAAmkB,EAAA75F,OAAA,EAA2C01E,GAAA,EAAUA,IACrD,SAAAmkB,EAAAnkB,GAAAokB,QAAA,CACAwC,EAAAzC,EAAAnkB,GAAA1L,OAAA,GAAAhvC,EACAuhE,EAAA1C,EAAAnkB,GAAA1L,OAAA,GAAA9uC,CACA,OAIA8uC,EAAAhkE,KAAAs2F,EAAAC,GACAjgG,EAAA,GAEA,MACA,SACAggG,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,GACAjgG,EAAA,GAEA,MAEA,SACAggG,GAAAh/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAD,EAAAh/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAA,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAA,EAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAvyB,EAAAhkE,KAAA1I,EAAAqU,QAAArU,EAAAqU,QAAArU,EAAAqU,QAAArU,EAAAqU,SACA2qF,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAq4D,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAvyB,EAAAhkE,KACAs2F,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACA2qF,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,SAEA2qF,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAI,EAAAL,EACAM,EAAAL,EACAG,EAAA7C,IAAA75F,OAAA,GACA,MAAA08F,EAAA5C,UACA6C,EAAAL,KAAAI,EAAA1yB,OAAA,IACA4yB,EAAAL,KAAAG,EAAA1yB,OAAA,KAEAA,EAAAhkE,KAAA22F,EAAAC,EAAAt/F,EAAAqU,QAAArU,EAAAqU,SACA2qF,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAI,EAAAL,EACAM,EAAAL,EACAG,EAAA7C,IAAA75F,OAAA,GACA,MAAA08F,EAAA5C,UACA6C,EAAAL,KAAAI,EAAA1yB,OAAA,IACA4yB,EAAAL,KAAAG,EAAA1yB,OAAA,KAEAA,EAAAhkE,KAAA22F,EAAAC,EAAAN,EAAAh/F,EAAAqU,QAAA4qF,EAAAj/F,EAAAqU,SACA2qF,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAvyB,EAAAhkE,KAAA1I,EAAAqU,QAAArU,EAAAqU,SACA2qF,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAq4D,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAvyB,EAAAhkE,KAAAs2F,EAAAh/F,EAAAqU,QAAA4qF,EAAAj/F,EAAAqU,SACA2qF,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAAs2F,EAAAC,EACA,MACA,SACAI,EAAAL,EACAM,EAAAL,EACAG,EAAA7C,IAAA75F,OAAA,GACA,MAAA08F,EAAA5C,UACA6C,EAAAL,KAAAI,EAAA1yB,OAAA,IACA4yB,EAAAL,KAAAG,EAAA1yB,OAAA,KAEAsyB,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAA22F,EAAAC,EAAAN,EAAAC,EACA,MACA,SACAI,EAAAL,EACAM,EAAAL,EACAG,EAAA7C,IAAA75F,OAAA,GACA,MAAA08F,EAAA5C,UACA6C,EAAAL,KAAAI,EAAA1yB,OAAA,IACA4yB,EAAAL,KAAAG,EAAA1yB,OAAA,KAEAsyB,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAhkE,KAAA22F,EAAAC,EAAAN,EAAAC,EACA,MACA,SACAvK,EAAA10F,EAAAqU,QACAugF,EAAA50F,EAAAqU,QACAqoF,EAAA18F,EAAAqU,QACA8nD,EAAAn8D,EAAAqU,QACAsoF,EAAA38F,EAAAqU,QACAqnD,EAAAsjC,EACArjC,EAAAsjC,EACAD,EAAAh/F,EAAAqU,QACA4qF,EAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAvsE,KAAAu/F,wCACAhkC,EACAC,EACAqjC,EACAC,EACA9iC,EACAwgC,EACAjI,EACAE,EACA8H,EAEA,MACA,SACAhI,EAAA10F,EAAAqU,QACAugF,EAAA50F,EAAAqU,QACAqoF,EAAA18F,EAAAqU,QACA8nD,EAAAn8D,EAAAqU,QACAsoF,EAAA38F,EAAAqU,QACAqnD,EAAAsjC,EACArjC,EAAAsjC,EACAD,GAAAh/F,EAAAqU,QACA4qF,GAAAj/F,EAAAqU,QACAkrF,EAAA,IACA7yB,EAAAvsE,KAAAu/F,wCACAhkC,EACAC,EACAqjC,EACAC,EACA9iC,EACAwgC,EACAjI,EACAE,EACA8H,GAKAH,EAAA7zF,MACA8zF,QAAA+C,GAAAvgG,EACA0tE,SACAtmE,OACA2lD,EAAAyzC,EACAxzC,EAAAyzC,GAEAnD,WAAAn8F,KAAAw/F,WAAAH,EAAAC,EAAAF,GAAAvgG,EAAA0tE,KAIA,MAAA1tE,GAAA,MAAAA,GACAu9F,EAAA7zF,MACA8zF,QAAA,IACA9vB,UACAtmE,UAAAvD,GACAy5F,WAAA,IAKA,MAAAC,IAEAx2C,MAAAo2C,KAAAwD,WAAA,SAAA5zC,EAAAC,EAAAuzC,EAAA7yB,GACA,GAAA/8D,GAAA4tD,EAAAC,EAAA1B,EACA7zD,EAAA89C,MAAAo2C,IAEA,QAAAoD,GACA,QACA,MAAAt3F,GAAAk1F,cAAApxC,EAAAC,EAAA0gB,EAAA,GAAAA,EAAA,GACA,SAcA,IAZA/8D,EAAA,EACA4tD,EAAAt1D,EAAA+0F,sBACA,EACAjxC,EACAC,EACA0gB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEA5Q,EAAA,IAAsBA,GAAA,EAAQA,GAAA,IAC9B0B,EAAAv1D,EAAA+0F,sBACAlhC,EACA/P,EACAC,EACA0gB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEA/8D,GAAA1H,EAAAk1F,cAAA5/B,EAAAxR,EAAAwR,EAAAvR,EAAAwR,EAAAzR,EAAAyR,EAAAxR,GACAuR,EAAAC,CAEA,OAAA7tD,EACA,SAYA,IAVAA,EAAA,EACA4tD,EAAAt1D,EAAAg1F,0BACA,EACAlxC,EACAC,EACA0gB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEA5Q,EAAA,IAAsBA,GAAA,EAAQA,GAAA,IAC9B0B,EAAAv1D,EAAAg1F,0BACAnhC,EACA/P,EACAC,EACA0gB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,IAEA/8D,GAAA1H,EAAAk1F,cAAA5/B,EAAAxR,EAAAwR,EAAAvR,EAAAwR,EAAAzR,EAAAyR,EAAAxR,GACAuR,EAAAC,CAEA,OAAA7tD,EACA,SAEAA,EAAA,CACA,IAAAvJ,GAAAsmE,EAAA,GAEA+vB,EAAA/vB,EAAA,GAEAz1C,EAAAy1C,EAAA,GAAA+vB,EACAmD,EAAAx7F,KAAA0kD,GAAA,GAcA,IAZA1kD,KAAA2jE,IAAA3hE,EAAA6wB,GAAA2oE,IACAA,EAAAx7F,KAAA2jE,IAAA3hE,EAAA6wB,IAGAsmC,EAAAt1D,EAAAi1F,wBACAxwB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAtmE,EACA,GAEAq2F,EAAA,EAEA,IAAA3gC,EAAA11D,EAAAw5F,EAA+B9jC,EAAA7kC,EAAS6kC,GAAA8jC,EACxCpiC,EAAAv1D,EAAAi1F,wBACAxwB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA5Q,EACA,GAEAnsD,GAAA1H,EAAAk1F,cAAA5/B,EAAAxR,EAAAwR,EAAAvR,EAAAwR,EAAAzR,EAAAyR,EAAAxR,GACAuR,EAAAC,MAIA,KAAA1B,EAAA11D,EAAAw5F,EAA+B9jC,EAAA7kC,EAAS6kC,GAAA8jC,EACxCpiC,EAAAv1D,EAAAi1F,wBACAxwB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACA5Q,EACA,GAEAnsD,GAAA1H,EAAAk1F,cAAA5/B,EAAAxR,EAAAwR,EAAAvR,EAAAwR,EAAAzR,EAAAyR,EAAAxR,GACAuR,EAAAC,CAaA,OAVAA,GAAAv1D,EAAAi1F,wBACAxwB,EAAA,GACAA,EAAA,GACAA,EAAA,GACAA,EAAA,GACAz1C,EACA,GAEAtnB,GAAA1H,EAAAk1F,cAAA5/B,EAAAxR,EAAAwR,EAAAvR,EAAAwR,EAAAzR,EAAAyR,EAAAxR,GAKA,UAEAjG,MAAAo2C,KAAAuD,wCAAA,SACAhkC,EACAC,EACAC,EACAC,EACAM,EACAwgC,EACAjI,EACAE,EACAiL,GAGA,GAAAnD,GAAAmD,GAAAz7F,KAAA0kD,GAAA,KACAg3C,EAAA17F,KAAAmoD,IAAAmwC,IAAAhhC,EAAAE,GAAA,EAAAx3D,KAAAooD,IAAAkwC,IAAA/gC,EAAAE,GAAA,EACAma,GACA,EAAA5xE,KAAAooD,IAAAkwC,IAAAhhC,EAAAE,GAAA,EAAAx3D,KAAAmoD,IAAAmwC,IAAA/gC,EAAAE,GAAA,EAEAkkC,EAAAD,KAAApL,KAAA1e,KAAA4e,IAEAmL,GAAA,IACArL,GAAAtwF,KAAA43D,KAAA+jC,GACAnL,GAAAxwF,KAAA43D,KAAA+jC,GAGA,IAAAC,GAAA57F,KAAA43D,MACA04B,KAAAE,KAAAF,KAAA1e,KAAA4e,KAAAkL,OACApL,KAAA1e,KAAA4e,KAAAkL,MAGA3jC,KAAAwgC,IACAqD,IAAA,GAEAv7F,MAAAu7F,KACAA,EAAA,EAGA,IAAAC,GAAAD,EAAAtL,EAAA1e,EAAA4e,EACAsL,EAAAF,GAAApL,EAAAkL,EAAApL,EAEA/a,GAAAje,EAAAE,GAAA,EAAAx3D,KAAAmoD,IAAAmwC,GAAAuD,EAAA77F,KAAAooD,IAAAkwC,GAAAwD,EACAxmB,GAAA/d,EAAAE,GAAA,EAAAz3D,KAAAooD,IAAAkwC,GAAAuD,EAAA77F,KAAAmoD,IAAAmwC,GAAAwD,EAEAC,EAAA,SAAA58F,GACA,MAAAa,MAAA43D,KAAAz4D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA68F,EAAA,SAAApjC,EAAAz5D,GACA,OAAAy5D,EAAA,GAAAz5D,EAAA,GAAAy5D,EAAA,GAAAz5D,EAAA,KAAA48F,EAAAnjC,GAAAmjC,EAAA58F,KAEA88F,EAAA,SAAArjC,EAAAz5D,GACA,OAAAy5D,EAAA,GAAAz5D,EAAA,GAAAy5D,EAAA,GAAAz5D,EAAA,SAAAa,KAAAk8F,KAAAF,EAAApjC,EAAAz5D,KAEAguE,EAAA8uB,GAAA,OAAAP,EAAAG,GAAAvL,GAAA1e,EAAAkqB,GAAAtL,IACA53B,IAAA8iC,EAAAG,GAAAvL,GAAA1e,EAAAkqB,GAAAtL,GACArxF,KAAA,EAAAu8F,EAAAG,GAAAvL,IAAA,EAAA1e,EAAAkqB,GAAAtL,GACA6H,EAAA4D,EAAArjC,EAAAz5D,EAcA,OAZA68F,GAAApjC,EAAAz5D,KAAA,IACAk5F,EAAAr4F,KAAA0kD,IAEAs3C,EAAApjC,EAAAz5D,IAAA,IACAk5F,EAAA,GAEA,IAAAE,GAAAF,EAAA,IACAA,GAAA,EAAAr4F,KAAA0kD,IAEA,IAAA6zC,GAAAF,EAAA,IACAA,GAAA,EAAAr4F,KAAA0kD,KAEA6wB,EAAAD,EAAAgb,EAAAE,EAAArjB,EAAAkrB,EAAAC,EAAAC,IAGA52C,MAAAwiB,QAAAC,gBAAAziB,MAAAo2C,KAAA,QAoBAp2C,MAAAqF,WAAAO,WAAA5F,MAAAo2C,SAGA,WACA,YA0HA,SAAAh4B,GAAA36D,GACAA,EAAAw5D,SAAA7iE,KAAAo2F,YAAA,KAEA,QAAApvB,GAAA39D,GACAA,EAAAs6D,WAAA3jE,KAAAo2F,YAAA,KARAxwC,MAAAw6C,SAAA,SAAAnwF,GACAjQ,KAAA2oF,QAAA14E,IAUA21C,MAAAw6C,SAAAzgG,WACAgpF,QAAA,SAAA14E,GACA,GAAA2zD,GAAA5jE,IACAA,MAAAqgG,YAAAz6C,MAAAsR,KAAAY,sBACA93D,KAAAi8F,aAGAr2C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GAIAjQ,KAAAgkE,YACAhkE,KAAAgnE,cACAhnE,KAAAioE,aAAAjE,EACAhkE,KAAAmoE,eAAAnB,EAEAhnE,KAAAgyE,UAAA,WAEAhyE,KAAAi8F,UAAAr2C,MAAAo2C,KAAAE,cAAAl8F,KAAAqT,MAAApK,MACAjJ,KAAAqS,GAAA,8BACAuxD,EAAAq4B,UAAAr2C,MAAAo2C,KAAAE,cAAAl8F,KAAAqT,MAAApK,MACA26D,EAAA6yB,iBAIAz2F,KAAAqS,GACA,uFACAuxD,EAAA6yB,cAGAxmF,KAAAqwF,aACA16C,MAAAsR,KAAA7mC,KACA,4EAEArwB,KAAAugG,eAAAtwF,EAAAqwF,aAGA18B,EAAA6yB,eACAz2F,KAAAqnF,UAAArnF,KAAA+zF,YACA/zF,KAAAsnF,QAAAtnF,KAAAs1F,WAEAvB,WAAA,SAAA1qF,GACAA,EAAAwjB,QAAA,OAAA7sB,KAAA23F,mBACAtuF,EAAAwjB,QAAA,eAAA7sB,KAAAwgG,mBACAn3F,EAAAwjB,QAAA,oBACAxjB,EAAAg6D,MAEA,IAAAo0B,GAAAz3F,KAAAy3F,iBACA/0B,EAAA1iE,KAAA0iE,OACAg1B,EAAA13F,KAAA03F,WAEA+I,EAAAzgG,KAAAygG,SACA,eAAAhJ,GACApuF,EAAA24D,WAEA,QAAAvjE,GAAA,EAAqBA,EAAAgiG,EAAAl+F,OAAsB9D,IAAA,CAC3C4K,EAAAg6D,MAEA,IAAAq9B,GAAAD,EAAAhiG,GAAAiiG,EAEAr3F,GAAAyiD,UAAA40C,EAAA90C,EAAA80C,EAAA70C,GACAxiD,EAAA6iD,OAAAu0C,EAAAhiG,GAAA0xE,UACAnwE,KAAAo2F,YAAAqK,EAAAhiG,GAAA0K,KAEAE,EAAAu3D,gBAAA5gE,MACA,cAAAy3F,IACA,IAAAh5F,GACA4K,EAAA45D,OAAA,EAAAy0B,EAAA,KAGAruF,EAAA25D,OAAA00B,IAAA,MAEAruF,EAAA+5D,UAaA,cAAAq0B,IACApuF,EAAA2uF,YAAAt1B,EACAr5D,EAAAyuF,UAAAJ,EAAA,GACAruF,EAAAq6D,UAGAr6D,EAAA+5D,WAEAkyB,SAAA,SAAAjsF,GACAA,EAAA24D,WAEA,IAAAy+B,GAAAzgG,KAAAygG,SACA,IAAAA,EAAAl+F,QAAA,GACA,GAAAm+F,GAAAD,EAAA,GAAAC,EACAr3F,GAAA45D,OAAAy9B,EAAA90C,EAAA80C,EAAA70C,GAEA,OAAAptD,GAAA,EAAqBA,EAAAgiG,EAAAl+F,OAAsB9D,IAAA,CAC3C,GAAA2+D,GAAAqjC,EAAAhiG,GAAA2+D,EACA/zD,GAAA25D,OAAA5F,EAAAxR,EAAAwR,EAAAvR,GAEAxiD,EAAAwjB,QAAA,YAAA7sB,KAAAu4F,eACAlvF,EAAAwjB,QAAA,cAAA7sB,KAAAgoE,UACA3+D,EAAAq6D,UAOA00B,aAAA,WACA,MAAAp4F,MAAAq4F,WAOAzB,cAAA,WACA,MAAA52F,MAAA22F,YAQAwB,QAAA,SAAAhvF,GACAy8C,MAAA8gB,KAAA/mE,UAAAw4F,QAAAx5F,KAAAqB,KAAAmJ,IAEA+uF,aAAA,SAAA/uF,GACA,GAAAk3F,GAAArgG,KAAAqgG,YACA5nC,EAAA4nC,EAAA3nC,WAAA,KAEAD,GAAA4K,OAEA5K,EAAAxX,KAAAjhD,KAAA23F,iBACA,IAAAW,GAAA7/B,EAAAqK,YAAA35D,EAIA,OAFAsvD,GAAA2K,WAGAhjB,MAAAk4C,EAAAl4C,MACAE,OAAAtX,SAAAhpC,KAAAqT,MAAAqkF,SAAA,MAGAjB,aAAA,WACA,GAAA7yB,GAAA5jE,KACA6zE,EAAA7zE,KAAAk4F,aAAAl4F,KAAAqT,MAAAlK,MACAouF,EAAAv3F,KAAAw3F,mBACAJ,EAAAp3F,KAAAo3F,QACAuJ,EAAA3gG,KAAA4gG,gBAEA5gG,MAAAq4F,UAAAxkB,EAAAzzB,MACApgD,KAAA22F,WAAA9iB,EAAAvzB,MAEA,IAAAugD,GAAA58F,KAAA0H,IACA3L,KAAAq4F,YAAAr4F,KAAAqT,MAAAlK,MAAA,IAAA5G,OAAA,GAAAg1F,EACA,EAGAv3F,MAAAygG,YAGA,QADAK,GAAA,EACApiG,EAAA,EAAqBA,EAAAklE,EAAAq4B,UAAA15F,OAA2B7D,IAChDklE,EAAAq4B,UAAAv9F,GAAAy9F,WAAA,IACA2E,GAAAl9B,EAAAq4B,UAAAv9F,GAAAy9F,WAIA,IAAA90B,GAAA,CACA,YAAA+vB,IACA/vB,EAAApjE,KAAA0H,IAAA,EAAAm1F,EAAA,EAAAD,EAAA,IAEA,UAAAzJ,IACA/vB,EAAApjE,KAAA0H,IAAA,EAAAm1F,EAAAD,GAwMA,QAlMAH,GAAAtjC,EAAA2jC,EAHAC,EAAAhhG,KAAA+4F,UAAAn0F,MAAA,IACAgzF,EAAA53F,KAAA+4F,UAAAn0F,MAAA,KAAArC,OAAA,EAIA0+F,GAAA,EACAC,EAAA,EAUAC,EAAA,WACAD,EAAA,CAGA,QAFAE,GAAAx9B,EAAAq4B,UAEAjiF,EAAAinF,EAAA,EAAgCjnF,EAAAonF,EAAA7+F,OAAqByX,IAAA,CACrD,GAAAonF,EAAApnF,GAAAmiF,WAAA,EAGA,MAFA8E,GAAAjnF,EAEAonF,EAAApnF,EACW,OAAAonF,EAAApnF,GAAAqiF,UACXqE,GACA90C,EAAAw1C,EAAApnF,GAAAuyD,OAAA,GACA1gB,EAAAu1C,EAAApnF,GAAAuyD,OAAA,KAKA,UAGA80B,EAAA,SAAAxiG,GACA,GAAAyiG,GAAA19B,EAAAs0B,aAAAr5F,GAAAuhD,MAAAm3C,CAEA,OAAA14F,GAAA,YAAAu4F,IACAkK,IAAAR,EAAAD,GAAAjJ,EAGA,IAAA2J,GAAA,EACAC,EAAA,CAGA,KADApkC,MAAA16D,GAEAuB,KAAA2jE,IAAA05B,EAAAC,GAAAD,EAAA,KACAE,EAAA,IACA,CACAA,GAEA,KADA,GAAAC,GAAAF,MACA7+F,KAAAq+F,IACAA,EAAAI,MAIAM,EAAAV,EAAA5E,WAAAmF,IAEAG,GAAAV,EAAA5E,WACA4E,MAAAr+F,GAIA,IAAAq+F,YAA4Br+F,KAAAg+F,EAC5B,MAGA,IAAAgB,IAAA,CAEA,QAAAX,EAAA1E,SACA,QAEAz2C,MAAAo2C,KAAAgB,cACA0D,EAAA90C,EACA80C,EAAA70C,EACAk1C,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,IACA+0B,EAEAlkC,EAAAxX,MAAAo2C,KAAAY,eACA0E,EACAZ,EAAA90C,EACA80C,EAAA70C,EACAk1C,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAm0B,EAAA90C,EACA80C,EAAA70C,GAGAk1C,MAAAr+F,EAEA,MACA,SACA,GAAAuD,GAAA86F,EAAAx0B,OAAA,GAEA+vB,EAAAyE,EAAAx0B,OAAA,GAEAz1C,EAAAiqE,EAAAx0B,OAAA,GAAA+vB,CAEA,KAAA4E,EACAA,EAAAj7F,EAAA,KACeq7F,EAAAC,EAEfL,GAAAj9F,KAAA0kD,GAAA,IAAA2zC,EAAAr4F,KAAA2jE,IAAA00B,GAEA4E,GAAAj9F,KAAA0kD,GAAA,IAAA2zC,EAAAr4F,KAAA2jE,IAAA00B,IAMAA,EAAA,GAAA4E,EAAApqE,GACAwlE,GAAA,GAAA4E,EAAApqE,KAEAoqE,EAAApqE,EACA4qE,GAAA,GAEAtkC,EAAAxX,MAAAo2C,KAAAe,wBACAgE,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACA20B,EACAH,EAAAx0B,OAAA,GAEA,MACA,SACA,IAAA20B,EAEAA,EADAI,EAAAP,EAAA5E,WACA,KAEAmF,EAAAP,EAAA5E,WAEemF,EAAAC,EACfL,IAAAI,EAAAC,GAAAR,EAAA5E,WAEA+E,IAAAK,EAAAD,GAAAP,EAAA5E,WAGA+E,EAAA,IACAA,EAAA,EACAQ,GAAA,GAEAtkC,EAAAxX,MAAAo2C,KAAAa,sBACAqE,EACAH,EAAA96F,MAAA2lD,EACAm1C,EAAA96F,MAAA4lD,EACAk1C,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GAEA,MACA,SACA,IAAA20B,EACAA,EAAAI,EAAAP,EAAA5E,WACemF,EAAAC,EACfL,IAAAI,EAAAC,GAAAR,EAAA5E,WAEA+E,IAAAK,EAAAD,GAAAP,EAAA5E,WAGA+E,EAAA,IACAA,EAAA,EACAQ,GAAA,GAEAtkC,EAAAxX,MAAAo2C,KAAAc,0BACAoE,EACAH,EAAA96F,MAAA2lD,EACAm1C,EAAA96F,MAAA4lD,EACAk1C,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,GACAw0B,EAAAx0B,OAAA,QAKA7pE,KAAA06D,IACAmkC,EAAA37C,MAAAo2C,KAAAgB,cAAA0D,EAAA90C,EAAA80C,EAAA70C,EAAAuR,EAAAxR,EAAAwR,EAAAvR,IAGA61C,IACAA,GAAA,EACAX,MAAAr+F,MAQA4+F,EAAA19B,EAAAs0B,aADA,KACA93C,MAAAm3C,EACAvxC,EAAA,EAAqBA,EAAAqhB,EAAAi6B,IACrBD,EAHA,SAIA3+F,KAAAg+F,OAAAh+F,KAAA06D,GAF8CpX,IAK9C06C,EAAAtjC,CAGA,QAAA3+D,GAAA,EAAqBA,EAAAuiG,EAAAz+F,SAErB8+F,EAAAL,EAAAviG,QAEAiE,KAAAg+F,OAAAh+F,KAAA06D,GAJyC3+D,IAAA,CAQzC,GAAA2hD,GAAAwF,MAAAo2C,KAAAgB,cAAA0D,EAAA90C,EAAA80C,EAAA70C,EAAAuR,EAAAxR,EAAAwR,EAAAvR,GAEA81C,EAAA,CACA,IAAAhB,EACA,IAEAgB,EAAAhB,EAAAK,EAAAviG,EAAA,GAAAuiG,EAAAviG,IAAAuB,KAAA03F,WACW,MAAAv3F,GACXwhG,EAAA,EAIAjB,EAAA90C,GAAA+1C,EACAvkC,EAAAxR,GAAA+1C,EACA3hG,KAAAq4F,WAAAsJ,CAEA,IAAAC,GAAAh8C,MAAAo2C,KAAAY,eACA+E,EAAAvhD,EAAA,EACAsgD,EAAA90C,EACA80C,EAAA70C,EACAuR,EAAAxR,EACAwR,EAAAvR,GAGAskB,EAAAlsE,KAAAg9E,MAAA7jB,EAAAvR,EAAA60C,EAAA70C,EAAAuR,EAAAxR,EAAA80C,EAAA90C,EACA5rD,MAAAygG,UAAAl4F,MACAs5F,WAAAD,EAAAh2C,EACAk2C,WAAAF,EAAA/1C,EACA1iD,KAAA63F,EAAAviG,GACA0xE,WACAuwB,KACAtjC,OAEAsjC,EAAAtjC,IAGAkpB,YAAA,WACA,GAAA/Z,KAEAvsE,MAAAygG,UAAA5+F,QAAA,SAAA8N,GACA48D,EAAAhkE,KAAAoH,EAAA+wF,GAAA90C,GACA2gB,EAAAhkE,KAAAoH,EAAA+wF,GAAA70C,GACA0gB,EAAAhkE,KAAAoH,EAAAytD,GAAAxR,GACA2gB,EAAAhkE,KAAAoH,EAAAytD,GAAAvR,IAOA,QADAD,GAAAC,EAJAsgB,EAAAI,EAAA,GACAF,EAAAE,EAAA,GACAH,EAAAG,EAAA,GACAD,EAAAC,EAAA,GAEA9tE,EAAA,EAAqBA,EAAA8tE,EAAAhqE,OAAA,EAAuB9D,IAC5CmtD,EAAA2gB,EAAA,EAAA9tE,GACAotD,EAAA0gB,EAAA,EAAA9tE,EAAA,GACA0tE,EAAAloE,KAAA0jE,IAAAwE,EAAAvgB,GACAygB,EAAApoE,KAAA0H,IAAA0gE,EAAAzgB,GACAwgB,EAAAnoE,KAAA0jE,IAAAyE,EAAAvgB,GACAygB,EAAAroE,KAAA0H,IAAA2gE,EAAAzgB,EAEA,IAAA6rC,GAAA13F,KAAA03F,UACA,QACA9rC,EAAA3nD,KAAAm0D,MAAA+T,GAAAurB,EAAA,EACA7rC,EAAA5nD,KAAAm0D,MAAAgU,GAAAsrB,EAAA,EACAt3C,MAAAn8C,KAAAm0D,MAAAiU,EAAAF,GAAAurB,EACAp3C,OAAAr8C,KAAAm0D,MAAAkU,EAAAF,GAAAsrB,KAMA9xC,MAAAw6C,SAAAzgG,UAAAg4F,gBACA/xC,MAAA8gB,KAAA/mE,UAAAg4F,gBAEA/xC,MAAAsR,KAAA9wD,OAAAw/C,MAAAw6C,SAAAx6C,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,QAoBAx6C,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,sBAiBAx6C,MAAAwiB,QAAAC,gBACAziB,MAAAw6C,SACA,WACA,GACAx6C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,YA/oBA,UAwpBAx6C,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,gBAoBAx6C,MAAAwiB,QAAAC,gBACAziB,MAAAw6C,SACA,gBACA,EACAx6C,MAAA8jB,WAAAI,sBAWAlkB,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,yBAkBAx6C,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,cA7sBA,UA8tBAx6C,MAAAwiB,QAAAI,UAAA5iB,MAAAw6C,SAAA,OAhuBA,IAyuBAx6C,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,uBAiBAx6C,MAAAwiB,QAAAC,gBAAAziB,MAAAw6C,SAAA,oBAmBAx6C,MAAAqF,WAAAO,WAAA5F,MAAAw6C,aAGA,WACA,YA2FAx6C,OAAAm8C,eAAA,SAAA9xF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAm8C,eAAApiG,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,iBACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAEA9J,GACAqsD,EACAC,EAJAm2C,EAAAhiG,KAAAqT,MAAA2uF,MACApsB,EAAA51E,KAAAqT,MAAAuiE,MAQA,KAHAvsE,EAAA24D,YACA34D,EAAA45D,OAAA,IAAA2S,GAEAr2E,EAAA,EAAiBA,EAAAyiG,EAAWziG,IAC5BqsD,EAAAgqB,EAAA3xE,KAAAooD,IAAA,EAAA9sD,EAAA0E,KAAA0kD,GAAAq5C,GACAn2C,GAAA,EAAA+pB,EAAA3xE,KAAAmoD,IAAA,EAAA7sD,EAAA0E,KAAA0kD,GAAAq5C,GACA34F,EAAA25D,OAAApX,EAAAC,EAEAxiD,GAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAEAo/D,SAAA,WACA,SAAAp/D,KAAAo0F,aAGA/0B,UAAA,WACA,SAAAr/D,KAAAo0F,aAGA90B,SAAA,SAAAlf,GACAwF,MAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA41E,WAAAx1B,EAAA,GACApgD,KAAAq0F,UAAAj0C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,MAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA41E,WAAAt1B,EAAA,GACAtgD,KAAAq0F,UAAA/zC,EAAA,KAIAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAAm8C,eAAAn8C,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBACAziB,MAAAm8C,eACA,SACA,EACAn8C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAm8C,eACA,QACA,EACAn8C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAqF,WAAAO,WAAA5F,MAAAm8C,mBAGA,WACA,YA6FAn8C,OAAAq8C,KAAA,SAAAhyF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAq8C,KAAAtiG,WACA4mF,WAAA,EACAoC,QAAA,SAAA14E,GAEA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,OACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAA64F,GAAAliG,KAAAkiG,cACApN,EAAA90F,KAAA80F,cACAqN,EAAAniG,KAAAmiG,WAEA94F,GAAA24D,YACA34D,EAAA45D,OAAA,IAAA6xB,EAEA,QAAAv1F,GAAA,EAAqBA,EAAA,EAAA4iG,EAAmB5iG,IAAA,CACxC,GAAAq2E,GAAAr2E,EAAA,KAAAu1F,EAAAoN,EACAt2C,EAAAgqB,EAAA3xE,KAAAooD,IAAA9sD,EAAA0E,KAAA0kD,GAAAw5C,GACAt2C,GAAA,EAAA+pB,EAAA3xE,KAAAmoD,IAAA7sD,EAAA0E,KAAA0kD,GAAAw5C,EACA94F,GAAA25D,OAAApX,EAAAC,GAEAxiD,EAAA84D,YAEA94D,EAAAu3D,gBAAA5gE,OAGAo/D,SAAA,WACA,SAAAp/D,KAAA60F,kBAGAx1B,UAAA,WACA,SAAAr/D,KAAA60F,kBAGAv1B,SAAA,SAAAlf,GACAwF,MAAA6kB,KAAA9qE,UAAA2/D,SAAA3gE,KAAAqB,KAAAogD,GACApgD,KAAA80F,gBAAA10C,EAAA,GACApgD,KAAA+0F,eAAA30C,EAAA,IAIAmf,UAAA,SAAAjf,GACAsF,MAAA6kB,KAAA9qE,UAAA4/D,UAAA5gE,KAAAqB,KAAAsgD,GACAtgD,KAAA80F,gBAAAx0C,EAAA,GACAtgD,KAAA+0F,eAAAz0C,EAAA,KAIAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAAq8C,KAAAr8C,MAAAy/B,OAGAz/B,MAAAwiB,QAAAC,gBACAziB,MAAAq8C,KACA,YACA,EACAr8C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAq8C,KACA,cACA,EACAr8C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAq8C,KACA,cACA,EACAr8C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAqF,WAAAO,WAAA5F,MAAAq8C,SAGA,WACA,YAEA,IAAA5L,IACA,aACA,WACA,YACA,UACA,aACA,OACA,SAUAC,EAAAD,EAAA9zF,MA2DAqjD,OAAAw8C,MAAA,SAAAnyF,GACAjQ,KAAAmsF,SAAAl8E,IAGA21C,MAAAw8C,MAAAziG,WACAwsF,SAAA,SAAAl8E,GACA,GAAA2zD,GAAA5jE,IAEA4lD,OAAAonC,MAAAruF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAtEA,QAwEAhyE,KAAAqS,GAAA,qBAAAm7D,GACA5J,EAAA+sB,cAAAnjB,EAAAjgE,OACAq2D,EAAAy+B,WAUAtJ,QAAA,WACA,MAAA/4F,MAAA4iF,KAAA,YASA0f,OAAA,WACA,MAAAtiG,MAAA4iF,KAAA,WAEA+N,cAAA,SAAAxnF,GACA,GACA5J,GADAqkE,EAAA5jE,KAEAmrD,EAAA,WACAyY,EAAAy+B,QAIA,KAAA9iG,EAAA,EAAiBA,EAAA+2F,EAAuB/2F,IACxC4J,EAAAkJ,GAAAgkF,EAAA92F,GAhHA,eAgHA4rD,IAGAiU,SAAA,WACA,MAAAp/D,MAAA+4F,UAAA35B,YAEAC,UAAA,WACA,MAAAr/D,MAAA+4F,UAAA15B,aAEAgjC,MAAA,WACA,GAEAjiD,GACAE,EACAiiD,EACAC,EACA52C,EACAC,EACA42C,EARAt5F,EAAAnJ,KAAA+4F,UACA/vF,EAAAhJ,KAAAsiG,QASA,IAAAn5F,GAAAH,EAAA,CASA,OARAo3C,EAAAj3C,EAAAi2D,WACA9e,EAAAn3C,EAAAk2D,YACAkjC,EAAAv5F,EAAA05F,sBACAF,EAAAx5F,EAAA25F,kBACAF,EAAAz5F,EAAA45F,mBACAh3C,EAAA,EACAC,EAAA,EAEA02C,GACA,IA5IA,KA6IA32C,EAAAxL,EAAA,EACAyL,GAAA,EAAA42C,CACA,MACA,KA/IA,QAgJA72C,EAAAxL,EAAAoiD,EACA32C,EAAAvL,EAAA,CACA,MACA,KAlJA,OAmJAsL,EAAAxL,EAAA,EACAyL,EAAAvL,EAAAmiD,CACA,MACA,KArJA,OAsJA72C,GAAA,EAAA42C,EACA32C,EAAAvL,EAAA,EAIAt3C,EAAA6+C,UACA+D,GAAA,EAAAA,EACAC,GAAA,EAAAA,EACAzL,QACAE,WAGAn3C,EAAA0+C,UACA+D,GAAA,EAAAA,EACAC,GAAA,EAAAA,OAMAjG,MAAAsR,KAAA9wD,OAAAw/C,MAAAw8C,MAAAx8C,MAAAonC,OAEApnC,MAAAqF,WAAAO,WAAA5F,MAAAw8C,OAcAx8C,MAAAi9C,IAAA,SAAA5yF,GACAjQ,KAAA2oF,QAAA14E,IAGA21C,MAAAi9C,IAAAljG,WACAgpF,QAAA,SAAA14E,GACA21C,MAAAy/B,MAAA1mF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,MACAhyE,KAAAqnF,UAAArnF,KAAA+zF,aAEAA,WAAA,SAAA1qF,GACA,GAAA+2C,GAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,YACAkjC,EAAAviG,KAAA0iG,sBACAF,EAAAxiG,KAAA2iG,kBACAF,EAAAziG,KAAA4iG,mBACA5O,EAAA/vF,KAAA0jE,IAAA3nE,KAAAi0F,kBAAA7zC,EAAA,EAAAE,EAAA,EAEAj3C,GAAA24D,YACAgyB,EAGA3qF,EAAA45D,OAAA+wB,EAAA,GAFA3qF,EAAA45D,OAAA,KAjNA,OAsNAs/B,IACAl5F,EAAA25D,QAAA5iB,EAAAoiD,GAAA,KACAn5F,EAAA25D,OAAA5iB,EAAA,KAAAqiD,GACAp5F,EAAA25D,QAAA5iB,EAAAoiD,GAAA,MAGAxO,GAGA3qF,EAAA25D,OAAA5iB,EAAA4zC,EAAA,GACA3qF,EAAA04D,IACA3hB,EAAA4zC,EACAA,EACAA,EACA,EAAA/vF,KAAA0kD,GAAA,EACA,GACA,IATAt/C,EAAA25D,OAAA5iB,EAAA,GA5NA,UAyOAmiD,IACAl5F,EAAA25D,OAAA5iB,GAAAE,EAAAmiD,GAAA,GACAp5F,EAAA25D,OAAA5iB,EAAAoiD,EAAAliD,EAAA,GACAj3C,EAAA25D,OAAA5iB,GAAAE,EAAAmiD,GAAA,IAGAzO,GAGA3qF,EAAA25D,OAAA5iB,EAAAE,EAAA0zC,GACA3qF,EAAA04D,IACA3hB,EAAA4zC,EACA1zC,EAAA0zC,EACAA,EACA,EACA/vF,KAAA0kD,GAAA,GACA,IATAt/C,EAAA25D,OAAA5iB,EAAAE,GA/OA,SA4PAiiD,IACAl5F,EAAA25D,QAAA5iB,EAAAoiD,GAAA,EAAAliD,GACAj3C,EAAA25D,OAAA5iB,EAAA,EAAAE,EAAAmiD,GACAp5F,EAAA25D,QAAA5iB,EAAAoiD,GAAA,EAAAliD,IAGA0zC,GAGA3qF,EAAA25D,OAAAgxB,EAAA1zC,GACAj3C,EAAA04D,IACAiyB,EACA1zC,EAAA0zC,EACAA,EACA/vF,KAAA0kD,GAAA,EACA1kD,KAAA0kD,IACA,IATAt/C,EAAA25D,OAAA,EAAA1iB,GAlQA,SA+QAiiD,IACAl5F,EAAA25D,OAAA,GAAA1iB,EAAAmiD,GAAA,GACAp5F,EAAA25D,QAAA,EAAAw/B,EAAAliD,EAAA,GACAj3C,EAAA25D,OAAA,GAAA1iB,EAAAmiD,GAAA,IAGAzO,IACA3qF,EAAA25D,OAAA,EAAAgxB,GACA3qF,EAAA04D,IACAiyB,EACAA,EACAA,EACA/vF,KAAA0kD,GACA,EAAA1kD,KAAA0kD,GAAA,GACA,IAIAt/C,EAAA84D,YACA94D,EAAAu3D,gBAAA5gE,OAEAsmF,YAAA,WACA,GAAA16B,GAAA,EACAC,EAAA,EACA22C,EAAAxiG,KAAA2iG,kBACAF,EAAAziG,KAAA4iG,mBACAnnB,EAAAz7E,KAAAuiG,mBACAniD,EAAApgD,KAAAo/D,WACA9e,EAAAtgD,KAAAq/D,WAcA,OA5TA,OAgTAoc,GACA5vB,GAAA42C,EACAniD,GAAAmiD,GAhTA,SAiTOhnB,EACPn7B,GAAAmiD,EAjTA,SAkTOhnB,GAEP7vB,GAAA,IAAA42C,EACApiD,GAAAoiD,GAvTA,UAwTO/mB,IACPr7B,GAAA,IAAAoiD,IAGA52C,IACAC,IACAzL,QACAE,YAKAsF,MAAAsR,KAAA9wD,OAAAw/C,MAAAi9C,IAAAj9C,MAAAy/B,OACAz/B,MAAAwiB,QAAAC,gBAAAziB,MAAAi9C,IAAA,mBAvUA,QAyVAj9C,MAAAwiB,QAAAC,gBACAziB,MAAAi9C,IACA,eACA,EACAj9C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAi9C,IACA,gBACA,EACAj9C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAwiB,QAAAC,gBACAziB,MAAAi9C,IACA,eACA,EACAj9C,MAAA8jB,WAAAI,sBAkBAlkB,MAAAqF,WAAAO,WAAA5F,MAAAi9C,QAGA,SAAAj9C,GACA,YA6FAA,GAAAk9C,MAAA,SAAA7yF,GACAjQ,KAAAmsF,SAAAl8E,IAGA21C,EAAAk9C,MAAAnjG,WACAwsF,SAAA,SAAAl8E,GAEA21C,EAAAw0C,KAAAz7F,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,SAEA+hB,WAAA,SAAAvuF,GACAogD,EAAAw0C,KAAAz6F,UAAAo0F,WAAAnuF,MAAA5F,KAAA2F,UACA,IAAAo9F,GAAA,EAAA9+F,KAAA0kD,GACA4jB,EAAAvsE,KAAAusE,SAEA8tB,EAAA9tB,EACAy2B,EAAA,IAAAhjG,KAAAu6F,cAAAhuB,EAAAhqE,OAAA,CACAygG,KACA3I,EAAAr6F,KAAA26F,mBAGA,IAEAp9D,GAAAE,EAFAl+B,EAAAgtE,EAAAhqE,MAGAygG,IACAzlE,EAAAgvC,EAAAhtE,EAAA,GAAA86F,EAAA96F,EAAA,GACAk+B,EAAA8uC,EAAAhtE,EAAA,GAAA86F,EAAA96F,EAAA,KAEAg+B,EAAAgvC,EAAAhtE,EAAA,GAAAgtE,EAAAhtE,EAAA,GACAk+B,EAAA8uC,EAAAhtE,EAAA,GAAAgtE,EAAAhtE,EAAA,GAGA,IAAA0jG,IAAAh/F,KAAAg9E,MAAAxjD,EAAAF,GAAAwlE,KACAxgG,EAAAvC,KAAAkjG,gBACA9iD,EAAApgD,KAAAwiG,cAEAh9F,GAAA69D,OACA79D,EAAAw8D,YACAx8D,EAAAsmD,UAAAygB,EAAAhtE,EAAA,GAAAgtE,EAAAhtE,EAAA,IACAiG,EAAA0mD,OAAA+2C,GACAz9F,EAAAy9D,OAAA,KACAz9D,EAAAw9D,QAAAzgE,EAAA69C,EAAA,GACA56C,EAAAw9D,QAAAzgE,GAAA69C,EAAA,GACA56C,EAAA28D,YACA38D,EAAA49D,UAEApjE,KAAAmjG,uBACA39F,EAAA69D,OACA79D,EAAAsmD,UAAAygB,EAAA,GAAAA,EAAA,IACAy2B,GACAzlE,EAAA88D,EAAA,GAAA9tB,EAAA,GACA9uC,EAAA48D,EAAA,GAAA9tB,EAAA,KAEAhvC,EAAAgvC,EAAA,GAAAA,EAAA,GACA9uC,EAAA8uC,EAAA,GAAAA,EAAA,IAGA/mE,EAAA0mD,QAAAjoD,KAAAg9E,OAAAxjD,GAAAF,GAAAwlE,MACAv9F,EAAAy9D,OAAA,KACAz9D,EAAAw9D,QAAAzgE,EAAA69C,EAAA,GACA56C,EAAAw9D,QAAAzgE,GAAA69C,EAAA,GACA56C,EAAA28D,YACA38D,EAAA49D,UAKA,IAAAggC,GAAApjG,KAAA4mE,aACAw8B,KAIApjG,KAAAqT,MAAAuzD,aAAA,EACAphE,EAAA89D,iBAGA99D,EAAAo7D,gBAAA5gE,MAGAojG,IACApjG,KAAAqT,MAAAuzD,aAAA,KAKAhhB,EAAAsR,KAAA9wD,OAAAw/C,EAAAk9C,MAAAl9C,EAAAw0C,MAiBAx0C,EAAAwiB,QAAAC,gBACAziB,EAAAk9C,MACA,gBACA,GACAl9C,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAk9C,MACA,eACA,GACAl9C,EAAA8jB,WAAAI,sBAkBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAk9C,MAAA,yBACAl9C,EAAAqF,WAAAO,WAAA5F,EAAAk9C,QACCl9C,OAED,SAAAA,GACA,YA2DA,SAAAy9C,GAAAC,EAAAn3C,EAAAo3C,GACA,eAAAD,EACA,iBAGAn3C,IAAAvG,EAAAsR,KAAA0D,UAAA4oC,EAAAF,IAAA,GAGAC,IACAp3C,IAAA,EAEA,IAAA7B,IAAA1E,EAAAsR,KAAA4D,UAAA3O,GAAA,YAEA,OACAvG,GAAAsR,KAAAqF,SAAAjS,EAAA,YACA1E,EAAAsR,KAAAqF,SAAAjS,EAAA,QAGA,YACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,WAEL,cACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,YAEL,YACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,aAEL,cACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,aAEL,YACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,aAEL,cACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,aAEL,YACK1E,EAAAsR,KAAAqF,SAAAjS,EAAA,aAEL,eAIA1E,EAAAsR,KAAA3mD,MACA,uDAAA+5C,GAEA,WA8tBA,QAAAm5C,GAAA3/F,GAgBA,MAfAA,aAAAqC,QACAy/C,EAAAsR,KAAA7mC,KAAA,2CAEAvsB,YAAAqC,QACArC,EAAAjC,QAAA,SAAA9C,IACA,IAAA2kG,EAAA1+F,QAAAjG,IACA6mD,EAAAsR,KAAA7mC,KACA,wBACAtxB,EACA,0BACA2kG,EAAAj3E,KAAA,SAKA3oB,MAr1BA,GAAAuyF,IACA,sBACA,2BACA,sBACA,uBACA,mBACA,sBACA,qBACA,0BACA,mBACA,qBACA,0BACA,mBACA,2BACA,sBACA5pE,KAAA,KAIA89C,GACA,kBACA,kBACA,sBACA,uBACA,uBACA,uBACA,sBACA,sBACA,yBACA,wBACA,wBACA,mCACA99C,KAAA,KAEAk3E,GACA,sBACA,uBACA,uBACA,uBACA,sBACA,sBACA,yBACA,wBACA,yBACAl3E,KAAA,KAEA+2E,GACAI,YAAA,GACAC,aAAA,EACAC,YAAA,GACAC,gBAAA,GACAC,cAAA,GACAC,eAAA,IACAC,gBAAA,IACAC,eAAA,IAuFAv+C,GAAAw+C,YAAA,SAAAn0F,GACAjQ,KAAAmsF,SAAAl8E,GAGA,IAAAyzF,IACA,WACA,aACA,YACA,eACA,cACA,cACA,gBACA,eAGA99C,GAAAw+C,YAAAzkG,WACA4mF,WAAA,EACA4F,SAAA,SAAAl8E,GAEA21C,EAAAonC,MAAAruF,KAAAqB,KAAAiQ,GACAjQ,KAAAgyE,UAAA,cACAhyE,KAAAqkG,kBAGArkG,KAAAskG,iBAAAtkG,KAAAskG,iBAAAv+F,KAAA/F,MACAA,KAAAukG,eAAAvkG,KAAAukG,eAAAx+F,KAAA/F,MACAA,KAAAoN,OAAApN,KAAAoN,OAAArH,KAAA/F,MAGAA,KAAAqS,GAAAgkF,EAAAr2F,KAAAoN,QAEApN,KAAAqC,WACArC,KAAAoN,UAYA81C,SAAA,SAAApvC,GACA9T,KAAAwkG,QAAA1wF,IAWA0wF,QAAA,SAAA1wF,GAsBA,MArBA9T,MAAAykG,OACAzkG,KAAA0kG,SAEA1kG,KAAAykG,MAAA3wF,EACA9T,KAAA2kG,uBAEA7wF,EAAAzB,GAAAk4D,EAAAvqE,KAAA2kG,qBAAA5+F,KAAA/F,OACA8T,EAAAzB,GACAsxF,EACA,WACA3jG,KAAA4kG,eACA5kG,KAAAoN,UAESrH,KAAA/F,SAITA,KAAA8iF,QAAA,cAEA9iF,KAAAoN,SAEApN,MAGAqC,QAAA,WACA,MAAArC,MAAAykG,OAWAC,OAAA,WACA1kG,KAAAqC,YACArC,KAAAqC,UAAA0iD,IAAA,YACA/kD,KAAAykG,UAAA/hG,IAEA1C,KAAA2kG,wBAGAA,qBAAA,WACA3kG,KAAA6qE,YAlOA,YAmOA7qE,KAAA6qE,YAAA,aACA7qE,KAAA8qE,6BAAA,sBAGA+5B,aAAA,WACA,MAAA7kG,MAAA+qE,UAxOA,WAwOA/qE,KAAA8kG,gBAGAA,cAAA,WACA,GAAAhxF,GAAA9T,KAAAqC,SACA,KAAAyR,EACA,OACA83C,GAAA3zB,OAAA8sE,iBACAl5C,GAAA5zB,OAAA8sE,iBACA3kD,MAAA,EACAE,OAAA,EACA6vB,SAAA,EAGA,IAAAjN,GAAApvD,EAAAq3D,eACAC,eAAA,EACA0Z,YAAA,EACAC,WAAA/kF,KAAAglG,iBAEA70B,EAAAvqB,EAAAyE,SAAAv2C,EAAAq8D,YAEA5yC,EAAA2lC,EAAAtX,EAAA93C,EAAA2zD,SAAA3zD,EAAAy8D,UAAAz8D,EAAA2zD,SACAhqC,EAAAylC,EAAArX,EAAA/3C,EAAA4zD,SAAA5zD,EAAA28D,UAAA38D,EAAA4zD,QAEA,QACA9b,EAAA93C,EAAA83C,IAAAruB,EAAAt5B,KAAAmoD,IAAA+jB,GAAA1yC,EAAAx5B,KAAAooD,KAAA8jB,GACAtkB,EAAA/3C,EAAA+3C,IAAApuB,EAAAx5B,KAAAmoD,IAAA+jB,GAAA5yC,EAAAt5B,KAAAooD,IAAA8jB,GACA/vB,MAAA8iB,EAAA9iB,MAAAtsC,EAAA2zD,SACAnnB,OAAA4iB,EAAA5iB,OAAAxsC,EAAA4zD,SACAyI,SAAAr8D,EAAAq8D,aAIAT,KAAA,WACA,MAAA1vE,MAAA6kG,eAAAj5C,GAGA+jB,KAAA,WACA,MAAA3vE,MAAA6kG,eAAAh5C,GAGAukB,YAAA,WACA,MAAApwE,MAAA6kG,eAAA10B,UAGA/Q,SAAA,WACA,MAAAp/D,MAAA6kG,eAAAzkD,OAGAif,UAAA,WACA,MAAAr/D,MAAA6kG,eAAAvkD,QAGA+jD,gBAAA,WACArkG,KAAAilG,cAEAvB,EAAA7hG,QACA,SAAA9C,GACAiB,KAAAklG,cAAAnmG,IACSgH,KAAA/F,OAGTA,KAAAklG,cAAA,YAGAA,cAAA,SAAAnmG,GACA,GAAAomG,GAAA,GAAAv/C,GAAAkuC,MACApwB,OAAA,mBACAhB,KAAA,QACAoE,YAAA,EACA/nE,OAAA,WACA0qD,aAAA,EACA+pC,WAAA,IAEA71C,EAAA39C,IACAmlG,GAAA9yF,GAAA,gCAAAlS,GACAw9C,EAAAynD,iBAAAjlG,KAEAglG,EAAA9yF,GAAA,qBAAAlS,GACAA,EAAA60E,cAAA,IAEAmwB,EAAA9yF,GAAA,oBAAAlS,GACAA,EAAA60E,cAAA,IAEAmwB,EAAA9yF,GAAA,mBAAAlS,GACAA,EAAA60E,cAAA,IAIAmwB,EAAA9yF,GAAA,wBACA,GAAAgzF,GAAArlG,KAAAsrE,YAEAnf,EAAAvG,EAAAyE,SAAAg7C,EAAAl1B,YAEApkB,EAAAs5C,EAAAhjG,UAAAklE,mBAEAg8B,EAAAx3C,EAAAF,EAAAE,EAAAH,EAAA,EACA05C,EAAAjC,EAAAtkG,EAAAotD,EAAAo3C,EACA4B,GAAAvmD,WAAA2pC,QAAA9jE,MAAA6gF,SACAD,EAAAE,eAAA,IAEAJ,EAAA9yF,GAAA,sBACA8yF,EAAAvmD,YAAA5+C,KAAAsrE,cAGA65B,EAAAvmD,WAAA2pC,QAAA9jE,MAAA6gF,OAAA,GACAtlG,KAAAsrE,YAAAi6B,eAAA,KAEAvlG,KAAA+R,IAAAozF,IAGAF,YAAA,WACA,GAAAO,GAAA,GAAA5/C,GAAAy/B,OACAtmF,KAAA,OACAqhD,MAAA,EACAE,OAAA,EACAguB,WAAA,EACA+Y,UAAA,SAAA7hF,GACA,GAAA6/F,GAAArlG,KAAAsrE,YACAxM,EAAAumC,EAAA3O,YACAlxF,GAAAw8D,YACAx8D,EAAA09D,MACApE,GACAA,EACA9+D,KAAAogD,QAAA,EAAA0e,EACA9+D,KAAAsgD,SAAA,EAAAwe,GAEAt5D,EAAAy9D,OAAAjjE,KAAAogD,QAAA,GAAA0e,GACAumC,EAAAI,iBACAjgG,EAAAw9D,OACAhjE,KAAAogD,QAAA,GACAilD,EAAAK,qBAAA9/C,EAAAsR,KAAAW,MAAA73D,KAAAsgD,WAIA96C,EAAAo7D,gBAAA5gE,QAGAA,MAAA+R,IAAAyzF,IAGAJ,iBAAA,SAAAjlG,GACAH,KAAA2lG,cAAAxlG,EAAAkI,OAAAtJ,OAAA6F,MAAA,OAGA,IAAAyO,GAAArT,KAAA6kG,eACAzkD,EAAA/sC,EAAA+sC,MACAE,EAAAjtC,EAAAitC,OACAslD,EAAA3hG,KAAA43D,KAAA53D,KAAA63D,IAAA1b,EAAA,GAAAn8C,KAAA63D,IAAAxb,EAAA,GACAtgD,MAAAqsD,IAAA/L,EAAAslD,EACA5lG,KAAAosD,IAAAhM,EAAAwlD,EAEAxlG,OAAA2tB,iBAAA,YAAA/tB,KAAAskG,kBACAlkG,OAAA2tB,iBAAA,YAAA/tB,KAAAskG,kBACAlkG,OAAA2tB,iBAAA,UAAA/tB,KAAAukG,gBAAA,GACAnkG,OAAA2tB,iBAAA,WAAA/tB,KAAAukG,gBAAA,GAEAvkG,KAAA4kG,eAAA,EAEA5kG,KAAA8yE,MAAA,kBAAoCtF,IAAArtE,IACpCH,KAAAqC,UAAAywE,MAAA,kBAA8CtF,IAAArtE,KAG9CmkG,iBAAA,SAAAnkG,GACA,GAAAyrD,GAAAC,EAAAg6C,EACAC,EAAA9lG,KAAA8iF,QAAA,IAAA9iF,KAAA2lG,eACAnyB,EAAAsyB,EAAAlnD,WAEA20B,EAAAC,EAAA+V,aAAApsD,wBACA4oE,GACAn6C,EAAA2nB,EAAA/1C,KACAquB,EAAA0nB,EAAA71C,KAEA4rD,GACA9rD,SAAA96B,KAAAvC,EAAAmrF,QAAAnrF,EAAAmrF,QAAAnrF,EAAAirF,QAAA,GAAAE,QACA5tD,QAAAh7B,KAAAvC,EAAAmrF,QAAAnrF,EAAAorF,QAAAprF,EAAAirF,QAAA,GAAAG,SAEAya,GACAp6C,EAAA09B,EAAA9rD,KAAAuoE,EAAAn6C,EACAC,EAAAy9B,EAAA5rD,IAAAqoE,EAAAl6C,EAGAi6C,GAAAx4C,oBAAA04C,EAEA,IAAAC,GAAAjmG,KAAAkmG,aAAA/lG,EAAAgmG,QAIA,iBAAAnmG,KAAA2lG,cACAM,IACAJ,EAAA5hG,KAAA43D,KACA53D,KAAA63D,IAAA97D,KAAA8iF,QAAA,iBAAAl3B,IAAAk6C,EAAAl6C,IAAA,GACA3nD,KAAA63D,IAAA97D,KAAA8iF,QAAA,iBAAAj3B,IAAAi6C,EAAAj6C,IAAA,IAGAD,EAAAi6C,EAAA7lG,KAAAosD,IACAP,EAAAg6C,EAAA7lG,KAAAqsD,IAEArsD,KAAA8iF,QAAA,aAAAl3B,EAAA5rD,KAAA8iF,QAAA,iBAAAl3B,OACA5rD,KAAA8iF,QAAA,aAAAj3B,EAAA7rD,KAAA8iF,QAAA,iBAAAj3B,YAEO,mBAAA7rD,KAAA2lG,cACP3lG,KAAA8iF,QAAA,aAAAj3B,EAAAi6C,EAAAj6C,SACO,kBAAA7rD,KAAA2lG,cAAA,CACPM,IACAJ,EAAA5hG,KAAA43D,KACA53D,KAAA63D,IAAA97D,KAAA8iF,QAAA,gBAAAl3B,IAAAk6C,EAAAl6C,IAAA,GACA3nD,KAAA63D,IAAA97D,KAAA8iF,QAAA,gBAAAj3B,IAAAi6C,EAAAj6C,IAAA,IAGAD,EAAAi6C,EAAA7lG,KAAAosD,IACAP,EAAAg6C,EAAA7lG,KAAAqsD,IAEArsD,KAAA8iF,QAAA,cAAAl3B,KACA5rD,KAAA8iF,QAAA,cAAAj3B,EAAA7rD,KAAA8iF,QAAA,gBAAAj3B,OAEA,IAAAvuB,GAAAwoE,EAAA/lD,UAEA//C,MAAA8iF,QAAA,aAAAj3B,EAAAvuB,EAAAuuB,GACA7rD,KAAA8iF,QAAA,iBAAAl3B,EAAAtuB,EAAAsuB,OACO,oBAAA5rD,KAAA2lG,cACP3lG,KAAA8iF,QAAA,aAAAl3B,EAAAk6C,EAAAl6C,SACO,qBAAA5rD,KAAA2lG,cACP3lG,KAAA8iF,QAAA,iBAAAl3B,EAAAk6C,EAAAl6C,SACO,oBAAA5rD,KAAA2lG,cACPM,IACAJ,EAAA5hG,KAAA43D,KACA53D,KAAA63D,IAAA97D,KAAA8iF,QAAA,cAAAl3B,IAAAk6C,EAAAl6C,IAAA,GACA3nD,KAAA63D,IAAA97D,KAAA8iF,QAAA,cAAAj3B,IAAAi6C,EAAAj6C,IAAA,IAGAD,EAAAi6C,EAAA7lG,KAAAosD,IACAP,EAAAg6C,EAAA7lG,KAAAqsD,IAEArsD,KAAA8iF,QAAA,gBAAAl3B,EAAA5rD,KAAA8iF,QAAA,cAAAl3B,OACA5rD,KAAA8iF,QAAA,gBAAAj3B,MAGAvuB,EAAAwoE,EAAA/lD,WAEA//C,KAAA8iF,QAAA,aAAAl3B,EAAAtuB,EAAAsuB,GACA5rD,KAAA8iF,QAAA,iBAAAj3B,EAAAvuB,EAAAuuB,OACO,sBAAA7rD,KAAA2lG,cACP3lG,KAAA8iF,QAAA,iBAAAj3B,EAAAi6C,EAAAj6C,SACO,qBAAA7rD,KAAA2lG,cACPM,IACAJ,EAAA5hG,KAAA43D,KACA53D,KAAA63D,IAAA97D,KAAA8iF,QAAA,iBAAAl3B,IAAA,GACA3nD,KAAA63D,IAAA97D,KAAA8iF,QAAA,iBAAAj3B,IAAA,IAGAD,EAAAi6C,EAAA7lG,KAAAosD,IACAP,EAAAg6C,EAAA7lG,KAAAqsD,IAEArsD,KAAA8iF,QAAA,iBAAAl3B,KACA5rD,KAAA8iF,QAAA,iBAAAj3B,UAEO,gBAAA7rD,KAAA2lG,cAAA,CACP,GAAA7mC,GAAA9+D,KAAA02F,aACArjF,EAAArT,KAAA6kG,cACAj5C,GAAAk6C,EAAAl6C,IAAAv4C,EAAA+sC,MAAA,EACAyL,GAAAi6C,EAAAj6C,IAAAx4C,EAAAitC,OAAA,CAEA,IAAA8lD,GAAAniG,KAAAg9E,OAAAp1B,EAAAD,GAAA3nD,KAAA0kD,GAAA,CAEAt1C,GAAAitC,OAAA,IACA8lD,GAAAniG,KAAA0kD,GAaA,QAVA09C,GAAAzgD,EAAAyE,SAAArqD,KAAAmwE,YAEAm2B,EACA1gD,EAAAsR,KAAA4D,UAAAurC,GAAAzgD,EAAAsR,KAAA4D,UAAAsrC,GAEAttC,EAAAlT,EAAAyE,SAAArqD,KAAAqC,UAAA8tE,YACAo2B,EAAA3gD,EAAAsR,KAAA0D,UAAA0rC,GAEAE,EAAAxmG,KAAAymG,gBAEAhoG,EAAA,EAAuBA,EAAA+nG,EAAAjkG,OAAkB9D,IAAA,CACzC,GAAA6rD,GAAA1E,EAAAyE,SAAAm8C,EAAA/nG,IAEA+9E,EACAv4E,KAAA2jE,IAAAtd,EAAA1E,EAAAsR,KAAA0D,UAAA0rC,KAAA,EAAAriG,KAAA0kD,GAEA6zB,GAPA,KAQA8pB,EAAA1gD,EAAAsR,KAAA4D,UAAAxQ,GACAi8C,EAAA3gD,EAAAsR,KAAA0D,UAAA0rC,IAIA,GAAA/oE,GAAAuhC,EACArhC,EAAAqhC,CAEA9+D,MAAA0mG,cAEAv2B,SAAAvqB,EAAA8D,SACA48C,EACA1gD,EAAAsR,KAAA0D,UAAA0rC,GACA16C,EACAv4C,EAAAu4C,GACAv4C,EAAA+sC,MAAA,EAAA0e,IACA76D,KAAAmoD,IAAA0M,GAAA70D,KAAAmoD,IAAAm6C,KACAlzF,EAAAitC,OAAA,EAAAwe,IACA76D,KAAAooD,KAAAyM,GAAA70D,KAAAooD,KAAAk6C,KACAhpE,EAAAt5B,KAAAmoD,IAAAi6C,GAAA5oE,EAAAx5B,KAAAooD,KAAAg6C,IACAx6C,EACAx4C,EAAAw4C,GACAx4C,EAAAitC,OAAA,EAAAwe,IACA76D,KAAAmoD,IAAA0M,GAAA70D,KAAAmoD,IAAAm6C,KACAlzF,EAAA+sC,MAAA,EAAA0e,IACA76D,KAAAooD,IAAAyM,GAAA70D,KAAAooD,IAAAk6C,KACA9oE,EAAAx5B,KAAAmoD,IAAAi6C,GAAA9oE,EAAAt5B,KAAAooD,IAAAg6C,IACAjmD,MAAA/sC,EAAA+sC,MAAA,EAAA0e,EACAxe,OAAAjtC,EAAAitC,OAAA,EAAAwe,GAEA3+D,OAGAmQ,SAAAC,MACA,GAAAgvC,OACA,iDACAv/C,KAAA2lG,eAKA,gBAAA3lG,KAAA2lG,cAAA,CAIA,GAAAgB,GAAA3mG,KAAA8iF,QAAA,aAAAlT,oBACA5vE,KAAAsrE,YAIA,IADAtrE,KAAA4mG,sBAAAzmG,EAAAmT,OACA,CACA,GAAAuzF,GAAA7mG,KAAA8iF,QAAA,aACAgkB,EAAA9mG,KAAA8iF,QAAA,iBACAikB,EAAAF,EAAAj7C,IACAo7C,EAAAH,EAAAh7C,IAEAo7C,EAAAjnG,KAAAo/D,WAAA0nC,EAAAl7C,IACAs7C,EAAAlnG,KAAAq/D,YAAAynC,EAAAj7C,GAIAi7C,GAAA/1B,MACAnlB,GAAAm7C,EACAl7C,GAAAm7C,IAGAH,EAAA91B,MACAnlB,EAAAq7C,EACAp7C,EAAAq7C,IAGAP,EAAAE,EAAAj3B,oBAAA5vE,KAAAsrE,aAGA1f,EAAA+6C,EAAA/6C,EACAC,EAAA86C,EAAA96C,CACA,IAAAzL,GACApgD,KAAA8iF,QAAA,iBAAAl3B,IAAA5rD,KAAA8iF,QAAA,aAAAl3B,IAEAtL,EACAtgD,KAAA8iF,QAAA,iBAAAj3B,IAAA7rD,KAAA8iF,QAAA,aAAAj3B,GAIA7rD,MAAA0mG,cAEA96C,IAAA5rD,KAAAuwE,UACA1kB,IAAA7rD,KAAAywE,UACArwB,QACAE,UAEAngD,KAIAokG,eAAA,SAAApkG,GACAH,KAAAmnG,cAAAhnG,IAGAgnG,cAAA,SAAAhnG,GACA,GAAAH,KAAA4kG,cAAA,CACA5kG,KAAA4kG,eAAA,EACAxkG,OAAA0tB,oBAAA,YAAA9tB,KAAAskG,kBACAlkG,OAAA0tB,oBAAA,YAAA9tB,KAAAskG,kBACAlkG,OAAA0tB,oBAAA,UAAA9tB,KAAAukG,gBAAA,GACAnkG,OAAA0tB,oBAAA,WAAA9tB,KAAAukG,gBAAA,GACAvkG,KAAA8yE,MAAA,gBAAoCtF,IAAArtE,GACpC,IAAA2T,GAAA9T,KAAAqC,SACAyR,IACAA,EAAA25D,KAAA,gBAAqCD,IAAArtE,MAKrCumG,aAAA,SAAAU,EAAA55B,GAEA,GAAA65B,GAAArnG,KAAAsnG,iBACA,IAAAD,EAAA,CACA,GAAAz6E,GAAA5sB,KAAA6kG,cACAuC,GAAAC,EAAA1oG,KAAAqB,KAAA4sB,EAAAw6E,GAEApnG,KAAAunG,WAAA,CACA,IAAAzzF,GAAA9T,KAAAqC,cACAK,KAAA0kG,EAAAj3B,UACAnwE,KAAAqC,UAAA8tE,SAAAi3B,EAAAj3B,SAEA,IAAAq3B,GAAA1zF,EAAAq3D,eACAC,eAAA,EACA0Z,YAAA,EACAC,WAAA/kF,KAAAglG,iBAGAlmC,EAAA9+D,KAAA02F,aACAjvB,GAAA2/B,EAAAhnD,MAAA,EAAA0e,GAAA0oC,EAAApnD,MACAsnB,GAAA0/B,EAAA9mD,OAAA,EAAAwe,GAAA0oC,EAAAlnD,OAEA6vB,EAAAvqB,EAAAyE,SAAAv2C,EAAAs8D,eACA7yC,EAAAiqE,EAAA57C,EAAA6b,EAAA3I,EAAAhrD,EAAAy8D,UAAA9I,EACAhqC,EAAA+pE,EAAA37C,EAAA6b,EAAA5I,EAAAhrD,EAAA28D,UAAA/I,CAEA1nE,MAAAqC,UAAAwlD,UACA4f,SACAC,SACA9b,EAAAw7C,EAAAx7C,GAAAruB,EAAAt5B,KAAAmoD,IAAA+jB,GAAA1yC,EAAAx5B,KAAAooD,KAAA8jB,IACAtkB,EAAAu7C,EAAAv7C,GAAApuB,EAAAx5B,KAAAmoD,IAAA+jB,GAAA5yC,EAAAt5B,KAAAooD,IAAA8jB,MAEAnwE,KAAAunG,WAAA,EAEAvnG,KAAA8yE,MAAA,aAA+BtF,QAC/BxtE,KAAAqC,UAAAywE,MAAA,aAAyCtF,QACzCxtE,KAAAoN,SACApN,KAAA2+C,WAAAE,aAQA4oD,YAAA,WACAznG,KAAA2kG,uBACA3kG,KAAAoN,UAEAA,OAAA,WACA,GAAAiG,GAAArT,KAAA6kG,eACA/wF,EAAA9T,KAAAqC,UACA0pD,GAAmBH,EAAA,EAAAC,EAAA,EACnB/3C,MAAAw3D,cACAvf,EAAAj4C,EAAAw3D,YAAA/D,mBAEA,IAAAmgC,IACA97C,EAAA,EAAAG,EAAAH,EACAC,EAAA,EAAAE,EAAAF,GAEAzL,EAAA/sC,EAAA+sC,MACAE,EAAAjtC,EAAAitC,OAEAqnD,EAAA3nG,KAAA2nG,iBACAC,EAAA5nG,KAAA4nG,gBACA9oC,EAAA9+D,KAAA02F,aAEAmR,EAAA7nG,KAAA8nG,eACA9nG,MAAA4iF,KAAA,YAAA/6B,UACAzH,MAAAynD,EACAvnD,OAAAunD,EACAt3B,QAAAs3B,EAAA,EACAp3B,QAAAo3B,EAAA,EACAnkC,OAAA1jE,KAAA+nG,kBACAjhC,YAAA9mE,KAAAgoG,uBACAtlC,KAAA1iE,KAAAioG,gBACAjU,aAAAh0F,KAAAkoG,0BAGAloG,KAAA8iF,QAAA,aAAAj7B,UACA+D,GAAAkT,EACAjT,GAAAiT,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,iBAEAhF,KAAA8iF,QAAA,eAAAj7B,UACA+D,EAAAxL,EAAA,EACAyL,GAAAiT,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,mBAEAhF,KAAA8iF,QAAA,cAAAj7B,UACA+D,EAAAxL,EAAA0e,EACAjT,GAAAiT,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,kBAEAhF,KAAA8iF,QAAA,gBAAAj7B,UACA+D,GAAAkT,EACAjT,EAAAvL,EAAA,EACAyL,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,oBAEAhF,KAAA8iF,QAAA,iBAAAj7B,UACA+D,EAAAxL,EAAA0e,EACAjT,EAAAvL,EAAA,EACAyL,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,qBAEAhF,KAAA8iF,QAAA,gBAAAj7B,UACA+D,GAAAkT,EACAjT,EAAAvL,EAAAwe,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,oBAEAhF,KAAA8iF,QAAA,kBAAAj7B,UACA+D,EAAAxL,EAAA,EACAyL,EAAAvL,EAAAwe,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,sBAEAhF,KAAA8iF,QAAA,iBAAAj7B,UACA+D,EAAAxL,EAAA0e,EACAjT,EAAAvL,EAAAwe,EACA/S,MAAA27C,EACAh5B,QAAAk5B,GAAAD,EAAA3iG,QAAA,oBAGA,IAAAmjG,IACAnoG,KAAA0lG,qBAAAzhG,KAAA2jE,IAAA8/B,EAAA77C,EACA7rD,MAAA8iF,QAAA,YAAAj7B,UACA+D,EAAAxL,EAAA,EACAyL,EAAAs8C,EAAAviD,EAAAsR,KAAAW,MAAAvX,GACAyL,MAAA27C,EACAh5B,QAAA1uE,KAAAylG,kBAGAzlG,KAAA8iF,QAAA,SAAAj7B,UACAzH,QAAA2L,EAAAH,EACAtL,SAAAyL,EAAAF,EACAE,MAAA27C,EACAh5B,QAAA1uE,KAAAooG,gBACA1kC,OAAA1jE,KAAAqoG,kBACAvhC,YAAA9mE,KAAAsoG,uBACA/hC,KAAAvmE,KAAAuoG,mBASAC,eAAA,WACA,MAAAxoG,MAAA4kG,eAQA6D,cAAA,WACA,GAAAzoG,KAAA4kG,cAAA,CACA5kG,KAAAmnG,eACA,IAAArB,GAAA9lG,KAAA8iF,QAAA,IAAA9iF,KAAA2lG,cACAG,IACAA,EAAA5S,aAIAlhD,QAAA,WAEAhyC,KAAA4+C,YAAA5+C,KAAAulG,gBACAvlG,KAAA4+C,WAAA2pC,QAAA9jE,MAAA6gF,OAAA,IAEA1/C,EAAAonC,MAAArtF,UAAAqyC,QAAArzC,KAAAqB,MACAA,KAAA0kG,SACA1kG,KAAAmnG,iBAIA5gG,SAAA,WACA,MAAAq/C,GAAA6kB,KAAA9qE,UAAA4G,SAAA5H,KAAAqB,QAGA4lD,EAAAsR,KAAA9wD,OAAAw/C,EAAAw+C,YAAAx+C,EAAAonC,OAmCApnC,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,iBACAV,EACAD,GAiBA79C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,oBAeAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,aACA,GACAx+C,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,oBAgBAx+C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,oBAgBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,qBACA,GACAx+C,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,oBAgBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,eACA,oBAiBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,oBACA,EACAx+C,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,sBAgBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,qBACA,EACAx+C,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,eACA,oBAiBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,oBACA,EACAx+C,EAAA8jB,WAAAI,sBAiBAlkB,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,cAgBAx+C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,gBAgBAx+C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,sBAiBAx+C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,mBAgBAx+C,EAAAwiB,QAAAC,gBACAziB,EAAAw+C,YACA,UACA,EACAx+C,EAAA8jB,WAAAI,sBAGAlkB,EAAAwiB,QAAAM,0BAAA9iB,EAAAw+C,YAAA,QAqBAx+C,EAAAwiB,QAAAC,gBAAAziB,EAAAw+C,YAAA,gBAEAx+C,EAAAwiB,QAAAc,WAAAtjB,EAAAw+C,aACAsE,YAAA,gBACAC,oBAAA,qBACAC,gBAAA,mBAGAhjD,EAAAqF,WAAAO,WAAA5F,EAAAw+C,cACCx+C,ShBw0Y4BjnD,KAAKJ,EAASH,EAAoB,KAIzD,SAAUI,EAAQuE,EAAqB3E,GAE7C,YiB9lhCA,SAAAyqG,GAAA70D,GACE51C,EAAQ,IADV,GAAA0qG,GAAA1qG,EAAA,GAAA2qG,EAAA3qG,EAAA,IAGA4qG,EAAyB5qG,EAAQ,IASjC6qG,EAAAJ,EAKAK,EAAAF,EACEF,EAAA,EACAC,EAAA,GATF,EAWAE,EAPA,KAEA,KAUelmG,GAAA,EAAAmmG,EAAiB,SjBumhC1B,SAAU1qG,EAAQD,EAASH,GkB9nhCjC,GAAAmqF,GAAcnqF,EAAQ,GACtB,iBAAAmqF,SAA4C/pF,EAAAC,EAAS8pF,EAAA,MACrDA,EAAA4gB,SAAA3qG,EAAAD,QAAAgqF,EAAA4gB,OAEa/qG,GAAQ,IAA0D,WAAAmqF,GAAA,OlBuohCzE,SAAU/pF,EAAQD,EAASH,GmB9ohCjCG,EAAAC,EAAAD,QAA2BH,EAAQ,KAA4C,GAK/EG,EAAAgK,MAAc/J,EAAAC,EAAS,SnBuphCjB,SAAUD,EAAQD,GoB3mhCxB,QAAA6qG,GAAArkG,EAAAskG,GACA,GAAA9gB,GAAAxjF,EAAA,OACAukG,EAAAvkG,EAAA,EACA,KAAAukG,EACA,MAAA/gB,EAGA,IAAA8gB,GAAA,kBAAAE,MAAA,CACA,GAAAC,GAAAC,EAAAH,EAKA,QAAA/gB,GAAA/7E,OAJA88F,EAAAI,QAAAjlG,IAAA,SAAAsZ,GACA,uBAAAurF,EAAAK,WAAA5rF,EAAA,SAGAvR,QAAAg9F,IAAA/8E,KAAA,MAGA,OAAA87D,GAAA97D,KAAA,MAIA,QAAAg9E,GAAAG,GAKA,yEAHAL,KAAAM,SAAAC,mBAAAvoG,KAAAE,UAAAmoG,MAGA,MArEAprG,EAAAD,QAAA,SAAA8qG,GACA,GAAA1kG,KAwCA,OArCAA,GAAAP,SAAA,WACA,MAAApE,MAAAyE,IAAA,SAAAM,GACA,GAAAwjF,GAAA6gB,EAAArkG,EAAAskG,EACA,OAAAtkG,GAAA,GACA,UAAAA,EAAA,OAAmCwjF,EAAA,IAEnCA,IAEG97D,KAAA,KAIH9nB,EAAAlG,EAAA,SAAAN,EAAA4rG,GACA,gBAAA5rG,KACAA,IAAA,KAAAA,EAAA,KAEA,QADA6rG,MACAvrG,EAAA,EAAgBA,EAAAuB,KAAAuC,OAAiB9D,IAAA,CACjC,GAAAuP,GAAAhO,KAAAvB,GAAA,EACA,iBAAAuP,KACAg8F,EAAAh8F,IAAA,GAEA,IAAAvP,EAAA,EAAYA,EAAAN,EAAAoE,OAAoB9D,IAAA,CAChC,GAAAsG,GAAA5G,EAAAM,EAKA,iBAAAsG,GAAA,IAAAilG,EAAAjlG,EAAA,MACAglG,IAAAhlG,EAAA,GACAA,EAAA,GAAAglG,EACKA,IACLhlG,EAAA,OAAAA,EAAA,aAAAglG,EAAA,KAEAplG,EAAA4D,KAAAxD,MAIAJ,IpBgshCM,SAAUnG,EAAQD,EAASH,GqBzphCjC,QAAA6rG,GAAAjzE,GACA,OAAAv4B,GAAA,EAAiBA,EAAAu4B,EAAAz0B,OAAmB9D,IAAA,CACpC,GAAAsG,GAAAiyB,EAAAv4B,GACAyrG,EAAAC,EAAAplG,EAAAiJ,GACA,IAAAk8F,EAAA,CACAA,EAAAx/E,MACA,QAAA1Q,GAAA,EAAqBA,EAAAkwF,EAAAnwC,MAAAx3D,OAA2ByX,IAChDkwF,EAAAnwC,MAAA//C,GAAAjV,EAAAg1D,MAAA//C,GAEA,MAAYA,EAAAjV,EAAAg1D,MAAAx3D,OAAuByX,IACnCkwF,EAAAnwC,MAAAxxD,KAAA6hG,EAAArlG,EAAAg1D,MAAA//C,IAEAkwF,GAAAnwC,MAAAx3D,OAAAwC,EAAAg1D,MAAAx3D,SACA2nG,EAAAnwC,MAAAx3D,OAAAwC,EAAAg1D,MAAAx3D,YAEK,CAEL,OADAw3D,MACA//C,EAAA,EAAqBA,EAAAjV,EAAAg1D,MAAAx3D,OAAuByX,IAC5C+/C,EAAAxxD,KAAA6hG,EAAArlG,EAAAg1D,MAAA//C,IAEAmwF,GAAAplG,EAAAiJ,KAA8BA,GAAAjJ,EAAAiJ,GAAA0c,KAAA,EAAAqvC,WAK9B,QAAAswC,KACA,GAAAC,GAAAxhF,SAAA5G,cAAA,QAGA,OAFAooF,GAAAz9F,KAAA,WACA09F,EAAAtgF,YAAAqgF,GACAA,EAGA,QAAAF,GAAA9pG,GACA,GAAA8M,GAAAvI,EACAylG,EAAAxhF,SAAAK,cAAA,SAAAqhF,EAAA,MAAAlqG,EAAA0N,GAAA,KAEA,IAAAs8F,EAAA,CACA,GAAAG,EAGA,MAAAhkG,EAOA6jG,GAAAriF,WAAA+B,YAAAsgF,GAIA,GAAAI,EAAA,CAEA,GAAAC,GAAAC,GACAN,GAAAO,MAAAR,KACAj9F,EAAA09F,EAAA/kG,KAAA,KAAAukG,EAAAK,GAAA,GACA9lG,EAAAimG,EAAA/kG,KAAA,KAAAukG,EAAAK,GAAA,OAGAL,GAAAD,IACAj9F,EAAA29F,EAAAhlG,KAAA,KAAAukG,GACAzlG,EAAA,WACAylG,EAAAriF,WAAA+B,YAAAsgF,GAMA,OAFAl9F,GAAA9M,GAEA,SAAA0qG,GACA,GAAAA,EAAA,CACA,GAAAA,EAAAj1E,MAAAz1B,EAAAy1B,KACAi1E,EAAAC,QAAA3qG,EAAA2qG,OACAD,EAAApB,YAAAtpG,EAAAspG,UACA,MAEAx8F,GAAA9M,EAAA0qG,OAEAnmG,MAcA,QAAAimG,GAAAR,EAAA1pG,EAAAiE,EAAAvE,GACA,GAAAy1B,GAAAlxB,EAAA,GAAAvE,EAAAy1B,GAEA,IAAAu0E,EAAAY,WACAZ,EAAAY,WAAAx2D,QAAAy2D,EAAAvqG,EAAAm1B,OACG,CACH,GAAAq1E,GAAAtiF,SAAAa,eAAAoM,GACAlC,EAAAy2E,EAAAz2E,UACAA,GAAAjzB,IAAA0pG,EAAAtgF,YAAA6J,EAAAjzB,IACAizB,EAAAtxB,OACA+nG,EAAAzgF,aAAAuhF,EAAAv3E,EAAAjzB,IAEA0pG,EAAArgF,YAAAmhF,IAKA,QAAAL,GAAAT,EAAAhqG,GACA,GAAAy1B,GAAAz1B,EAAAy1B,IACAk1E,EAAA3qG,EAAA2qG,MACArB,EAAAtpG,EAAAspG,SAiBA,IAfAqB,GACAX,EAAA/gF,aAAA,QAAA0hF,GAEAt+F,EAAA0+F,OACAf,EAAA/gF,aAAAihF,EAAAlqG,EAAA0N,IAGA47F,IAGA7zE,GAAA,mBAAA6zE,EAAAF,QAAA,SAEA3zE,GAAA,uDAAyDwzE,KAAAM,SAAAC,mBAAAvoG,KAAAE,UAAAmoG,MAAA,OAGzDU,EAAAY,WACAZ,EAAAY,WAAAx2D,QAAA3e,MACG,CACH,KAAAu0E,EAAArxD,YACAqxD,EAAAtgF,YAAAsgF,EAAArxD,WAEAqxD,GAAArgF,YAAAnB,SAAAa,eAAAoM,KArNA,GAAAu1E,GAAA,mBAAAxiF,SAEA,uBAAAyiF,gBACAD,EACA,SAAA/rD,OACA,0JAKA,IAAAisD,GAAmBptG,EAAQ,IAe3B+rG,KAQAI,EAAAe,IAAAxiF,SAAAyhF,MAAAzhF,SAAA2iF,qBAAA,YACAZ,EAAA,KACAD,EAAA,EACAH,GAAA,EACAhkG,EAAA,aACAkG,EAAA,KACA69F,EAAA,kBAIAE,EAAA,mBAAA/7D,YAAA,eAAA3mC,KAAA2mC,UAAAC,UAAA/tC,cAEArC,GAAAD,QAAA,SAAAmtG,EAAA/mG,EAAAgnG,EAAAC,GACAnB,EAAAkB,EAEAh/F,EAAAi/F,KAEA,IAAA50E,GAAAw0E,EAAAE,EAAA/mG,EAGA,OAFAslG,GAAAjzE,GAEA,SAAA60E,GAEA,OADAC,MACArtG,EAAA,EAAmBA,EAAAu4B,EAAAz0B,OAAmB9D,IAAA,CACtC,GAAAsG,GAAAiyB,EAAAv4B,GACAyrG,EAAAC,EAAAplG,EAAAiJ,GACAk8F,GAAAx/E,OACAohF,EAAAvjG,KAAA2hG,GAEA2B,GACA70E,EAAAw0E,EAAAE,EAAAG,GACA5B,EAAAjzE,IAEAA,IAEA,QAAAv4B,GAAA,EAAmBA,EAAAqtG,EAAAvpG,OAAsB9D,IAAA,CACzC,GAAAyrG,GAAA4B,EAAArtG,EACA,QAAAyrG,EAAAx/E,KAAA,CACA,OAAA1Q,GAAA,EAAuBA,EAAAkwF,EAAAnwC,MAAAx3D,OAA2ByX,IAClDkwF,EAAAnwC,MAAA//C,WAEAmwF,GAAAD,EAAAl8F,OAwFA,IAAAm9F,GAAA,WACA,GAAAY,KAEA,iBAAAnrG,EAAAorG,GAEA,MADAD,GAAAnrG,GAAAorG,EACAD,EAAAluF,OAAAhP,SAAA4d,KAAA,WrBsyhCM,SAAUjuB,EAAQD,GsB98hCxBC,EAAAD,QAAA,SAAAmtG,EAAA/mG,GAGA,OAFAqyB,MACAi1E,KACAxtG,EAAA,EAAiBA,EAAAkG,EAAApC,OAAiB9D,IAAA,CAClC,GAAAsG,GAAAJ,EAAAlG,GACAuP,EAAAjJ,EAAA,GACAgxB,EAAAhxB,EAAA,GACAkmG,EAAAlmG,EAAA,GACA6kG,EAAA7kG,EAAA,GACAmnG,GACAl+F,GAAA09F,EAAA,IAAAjtG,EACAs3B,MACAk1E,QACArB,YAEAqC,GAAAj+F,GAGAi+F,EAAAj+F,GAAA+rD,MAAAxxD,KAAA2jG,GAFAl1E,EAAAzuB,KAAA0jG,EAAAj+F,IAAmCA,KAAA+rD,OAAAmyC,KAKnC,MAAAl1E,KtB09hCM,SAAUx4B,EAAQD,GuB7+hCxBC,EAAAD,QAAA,SACA4tG,EACAC,EACAC,EACAC,EACAhiF,EACAiiF,GAEA,GAAAC,GACAC,EAAAN,QAGAt/F,QAAAs/F,GAAA5rG,OACA,YAAAsM,GAAA,aAAAA,IACA2/F,EAAAL,EACAM,EAAAN,EAAA5rG,QAIA,IAAAoM,GAAA,kBAAA8/F,GACAA,EAAA9/F,QACA8/F,CAGAL,KACAz/F,EAAAyL,OAAAg0F,EAAAh0F,OACAzL,EAAAqT,gBAAAosF,EAAApsF,gBACArT,EAAAkV,WAAA,GAIAwqF,IACA1/F,EAAAmW,YAAA,GAIAwH,IACA3d,EAAAqV,SAAAsI,EAGA,IAAAtX,EA4BA,IA3BAu5F,GACAv5F,EAAA,SAAA3J,GAEAA,EACAA,GACArJ,KAAA2Y,QAAA3Y,KAAA2Y,OAAAq7B,YACAh0C,KAAAsN,QAAAtN,KAAAsN,OAAAqL,QAAA3Y,KAAAsN,OAAAqL,OAAAq7B,WAEA3qC,GAAA,mBAAAqjG,uBACArjG,EAAAqjG,qBAGAJ,GACAA,EAAA3tG,KAAAqB,KAAAqJ,GAGAA,KAAAsjG,uBACAtjG,EAAAsjG,sBAAA56F,IAAAw6F,IAKA5/F,EAAAigG,aAAA55F,GACGs5F,IACHt5F,EAAAs5F,GAGAt5F,EAAA,CACA,GAAA8P,GAAAnW,EAAAmW,WACAvC,EAAAuC,EACAnW,EAAAyL,OACAzL,EAAAkgG,YAEA/pF,IAQAnW,EAAAmgG,cAAA95F,EAEArG,EAAAyL,OAAA,SAAAskB,EAAArzB,GAEA,MADA2J,GAAArU,KAAA0K,GACAkX,EAAAmc,EAAArzB,KAVAsD,EAAAkgG,aAAAtsF,KACA/T,OAAA+T,EAAAvN,IACAA,GAaA,OACAw5F,WACAjuG,QAAAkuG,EACA9/F,avB4/hCM,SAAUnO,EAAQuE,EAAqB3E,GAE7C,YwBlmiCA,IAAAga,GAAA,WAA0B,GAAA20F,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiB5O,OAAOrF,GAAA,SAAYiU,EAAA,OAAYoG,YAAA,cAAwBpG,EAAA,OAAYoG,YAAA,UAAoBpG,EAAA,OAAYoG,YAAA,cAAwBpG,EAAA,OAAYoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,MAAAl+E,WAAA,UAAoExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,OAAoB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAAtsD,MAAA9gC,EAAAtX,OAAArF,aAAgC+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA0BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,SAAAl+E,WAAA,aAA0ExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,UAAuB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAArsD,SAAA/gC,EAAAtX,OAAArF,aAAmC+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA0BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,OAAAl+E,WAAA,WAAsExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,QAAqB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAApsD,OAAAhhC,EAAAtX,OAAArF,aAAiC+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA0BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,WAAAl+E,WAAA,eAA8ExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,YAAyB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAAnsD,WAAAjhC,EAAAtX,OAAArF,aAAqC+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA0BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,UAAAl+E,WAAA,cAA4ExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,WAAwB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAAlsD,UAAAlhC,EAAAtX,OAAArF,aAAoC+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA0BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,UAAqC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,KAAAl+E,WAAA,SAAkExG,YAAA,sBAAAhV,OAA2CrF,GAAA,SAAaqE,IAAK+gB,OAAA,SAAAzT,GAA0B,GAAAytF,GAAAjnG,MAAAxG,UAAAke,OAAAlf,KAAAghB,EAAAtX,OAAAsE,QAAA,SAAA1N,GAAkF,MAAAA,GAAAiqB,WAAkBzkB,IAAA,SAAAxF,GAA+D,MAA7C,UAAAA,KAAA60B,OAAA70B,EAAA+D,OAA0D+pG,GAAAjsD,KAAAnhC,EAAAtX,OAAAihB,SAAA8jF,IAAA,MAAsEL,EAAAlsF,GAAAksF,EAAA,eAAAjsD,GAAmC,MAAA7+B,GAAA,UAAoBxC,UAAUzc,MAAA89C,KAAcisD,EAAA1rF,GAAA0rF,EAAAnsF,GAAAkgC,QAAyB,KAAAisD,EAAA1rF,GAAA,KAAAY,EAAA,OAA6BoG,YAAA,qBAA+B0kF,EAAA9rF,GAAA,GAAA8rF,EAAA1rF,GAAA,KAAAY,EAAA,SAAoC9U,aAAapO,KAAA,QAAAytB,QAAA,UAAAxpB,MAAA+pG,EAAA,KAAAl+E,WAAA,SAAkExG,YAAA,eAAAhV,OAAoCxG,KAAA,OAAAogG,aAAA,uBAAAC,mBAAA,6BAAiGztF,UAAWzc,MAAA+pG,EAAA,MAAmB16F,IAAK86F,MAAA,SAAAxtF,GAAyBA,EAAAtX,OAAA6rB,YAAsC64E,EAAA9rD,KAAAthC,EAAAtX,OAAArF,eAA+B+pG,EAAA1rF,GAAA,KAAAY,EAAA,OAA4BoG,YAAA,YAAA5D,OAAgC4oF,mBAAAN,EAAAnsD,WAAA0sD,gBAAAP,EAAAhsD,OAAA,QAA2E9+B,EAAA,OAAYoG,YAAA,cAAwBpG,EAAA,OAAAA,EAAA,WAA0BwI,IAAA,QAAApX,OAAmBpD,OAAA88F,EAAAvsD,aAAwBv+B,EAAA,WAAAA,EAAA,UAA6B5O,OAAOpD,QAAU9G,KAAAnJ,KAAAygD,MAAAi3C,SAAA13F,KAAAihD,KAAAuyC,WAAA,MAAyDuZ,EAAA1rF,GAAA,KAAAY,EAAA,UAA2B5O,OAAOpD,QAAU9G,KAAAnJ,KAAA0gD,SAAAg3C,SAAA13F,KAAAihD,KAAAuyC,WAAA,MAA4DuZ,EAAA1rF,GAAA,KAAAY,EAAA,UAA2B5O,OAAOpD,QAAU9G,KAAAnJ,KAAA2gD,OAAA+2C,SAAA13F,KAAAihD,KAAAuyC,WAAA,MAA0DuZ,EAAA1rF,GAAA,KAAAY,EAAA,UAA2B5O,OAAOpD,QAAU9G,KAAAnJ,KAAA6gD,UAAA62C,SAAA13F,KAAAihD,KAAAuyC,WAAA,MAA6DuZ,EAAA1rF,GAAA,KAAAY,EAAA,UAA2B5O,OAAOpD,QAAU9G,KAAAnJ,KAAA8gD,KAAA42C,SAAA13F,KAAAihD,KAAAuyC,WAAA,OAAwD,GAAAuZ,EAAA1rF,GAAA,KAAAY,EAAA,WAAgCwI,IAAA,eAAgB,eAAAsiF,EAAA1rF,GAAA,KAAAY,EAAA,OAAwCoG,YAAA,SAAmBpG,EAAA,OAAYoG,YAAA,cAAwBpG,EAAA,KAAUwC,OAAQ8oF,YAAAR,EAAA9rD,KAAA,QAA+B8rD,EAAA1rF,GAAA,uMACl2IrB,GAAA,WAAoC,GAAA+sF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,cAAsB,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,kBAA0B,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,oBAA4B,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,yBAAiC,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,kBAA0B,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,SAAcoG,YAAA,mBAAAhV,OAAsC8xB,IAAA,wBAA4B4nE,EAAA1rF,GAAA,aAAqB,WAAc,GAAA0rF,GAAA/sG,KAAagtG,EAAAD,EAAAxuF,eAA0B0D,EAAA8qF,EAAA56D,MAAAlwB,IAAA+qF,CAAwB,OAAA/qF,GAAA,OAAiBoG,YAAA,wBAAkCpG,EAAA,QAAaoG,YAAA,mBAAAqM,aAA4C84E,cAAA,WAAwBn6F,OAAQrF,GAAA,+BAAkC++F,EAAA1rF,GAAA,mBACp2DosF,GAAiBr1F,SAAA4H,kBACFjd,GAAA","file":"build.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 6);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.applyNodeProps = exports.updatePicture = exports.componentPrefix = undefined;\nexports.getName = getName;\nexports.copy = copy;\nexports.createListener = createListener;\nexports.findParentKonva = findParentKonva;\nexports.findKonvaNode = findKonvaNode;\n\nvar _updatePicture = __webpack_require__(3);\n\nvar _updatePicture2 = _interopRequireDefault(_updatePicture);\n\nvar _applyNodeProps = __webpack_require__(12);\n\nvar _applyNodeProps2 = _interopRequireDefault(_applyNodeProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar componentPrefix = exports.componentPrefix = 'v';\n\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/(\\s|-)+/g, '');\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getName(componentTag) {\n  return capitalizeFirstLetter(camelize(componentTag.replace(componentPrefix + '-', '')));\n}\n\nfunction copy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction createListener(obj) {\n  var output = {};\n  Object.keys(obj).forEach(function (eventName) {\n    output['on' + eventName] = obj[eventName];\n  });\n  return output;\n}\n\nfunction findParentKonva(instance) {\n  function re(instance) {\n    if (instance.StageEmitter) {\n      return instance;\n    }\n    if (instance.$parent) {\n      return re(instance.$parent);\n    }\n    return {};\n  }\n  return re(instance.$parent);\n}\n\nfunction findKonvaNode(instance) {\n  if (instance.getNode) {\n    return instance.getNode();\n  } else if (instance.$children.length === 0) {\n    return null;\n  } else {\n    return findKonvaNode(instance.$children[0]);\n  }\n}\n\nexports.updatePicture = _updatePicture2.default;\nexports.applyNodeProps = _applyNodeProps2.default;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* WEBPACK VAR INJECTION */(function(global, setImmediate) {/*!\n * Vue.js v2.5.21\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: \"production\" !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: \"production\" !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (false) {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (false) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (false) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (false\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (false\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    \"production\" !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (false) {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      \"production\" !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    \"production\" !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (false) {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && \"production\" !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (false) {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (false) {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (false) {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  \n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (false) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    false\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (false) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (false) {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    try {\n      return fn.apply(null, arguments)\n    } finally {\n      useMacroTask = false;    \n    }\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (false) {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (false) {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      \"production\" !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (false) {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        contexts.length = 0;\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      }\n    });\n\n    var reject = once(function (reason) {\n      \"production\" !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                 false\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (false) {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (false) {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (false) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (false) {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (false) {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (false) {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (false) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (false) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression =  false\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      \"production\" !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (false) {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    \"production\" !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (false) {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      \"production\" !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (false) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (false) {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (false) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (false) {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (false) {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (false) {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (false) {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (false) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        if (!(key in hash) && !(camelizedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + camelizedKey)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      \"production\" !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (false) {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (false) {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    \"production\" !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (false\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (false) {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (false) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (false) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (false) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (false) {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (false) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (false\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (false) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (false) {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (false) {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.21';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      \"production\" !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (false) {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (false) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (false) {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (false) {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (false) {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (false) {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (false\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (false) {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    false\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (false) {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (false) {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (false) {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (false) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    \"production\" !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (false) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (false\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (false) {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        false\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (false\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (false) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (false) {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (false) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (false\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        \"production\" !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (false) {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (false) {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (false) {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (false) {\n      if (el.tag === 'template') {\n        warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\"\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (false) {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (false) {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (false) {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (false) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (false) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (\n          false\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (false) {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (false) {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      false\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (false) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !(isReservedTag(el.tag) && !el.component); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      \"production\" !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (false\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (false) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (false) {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (false) {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (false) {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (false) {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    \"production\" !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (false) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (false) {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (false) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Vue);\n\n/* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(0), __webpack_require__(7).setImmediate))\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = updatePicture;\n// adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nvar width = window.innerWidth;\nvar height = window.innerHeight;\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n    name: 'app',\n    data: function data() {\n        return {\n            stageSize: {\n                width: width,\n                height: height\n            },\n            title: ' ',\n\n            subtitle: ' ',\n            author: ' ',\n            background: ' ',\n            publisher: ' ',\n            year: ' ',\n            border: 50,\n            years: [],\n            font: 20\n\n        };\n    },\n\n\n    created: function created() {\n\n        for (var i = 0; i < 60; i++) {\n\n            this.years.push(2018 - i);\n        }\n    }\n});\n\n/***/ }),\n/* 6 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(2);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_konva__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_konva___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_konva__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__App_vue__ = __webpack_require__(15);\n\n\n\n\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_1_vue_konva___default.a);\n\nnew __WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"]({\n  el: '#app',\n  render: function render(h) {\n    return h(__WEBPACK_IMPORTED_MODULE_2__App_vue__[\"a\" /* default */]);\n  }\n});\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(8);\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(9)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _Stage = __webpack_require__(11);\n\nvar _Stage2 = _interopRequireDefault(_Stage);\n\nvar _KonvaNode = __webpack_require__(13);\n\nvar _KonvaNode2 = _interopRequireDefault(_KonvaNode);\n\nvar _utils = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (typeof window !== 'undefined' && !window.Konva) {\n  __webpack_require__(14);\n}\n\nvar KONVA_NODES = ['Layer', 'FastLayer', 'Group', 'Label', 'Rect', 'Circle', 'Ellipse', 'Wedge', 'Line', 'Sprite', 'Image', 'Text', 'TextPath', 'Star', 'Ring', 'Arc', 'Tag', 'Path', 'RegularPolygon', 'Arrow', 'Shape', 'Transformer'];\nvar components = {\n  Stage: _Stage2.default\n};\n\nKONVA_NODES.forEach(function (nodeName) {\n  components[nodeName] = (0, _KonvaNode2.default)();\n});\n\nvar VueKonva = _extends({}, components, {\n  install: function install(Vue) {\n    return Object.keys(components).forEach(function (k) {\n      Vue.component('' + _utils.componentPrefix + k, components[k]);\n    });\n  }\n});\n\nexports.default = VueKonva;\n\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueKonva);\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _vue = __webpack_require__(2);\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _utils = __webpack_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(4);\n\nvar StageEmitter = function (_EventEmitter) {\n  _inherits(StageEmitter, _EventEmitter);\n\n  function StageEmitter() {\n    _classCallCheck(this, StageEmitter);\n\n    return _possibleConstructorReturn(this, _EventEmitter.apply(this, arguments));\n  }\n\n  return StageEmitter;\n}(EventEmitter);\n\nvar cacheConfig = {};\n\nexports.default = _vue2.default.component('v-stage', {\n  render: function render(createElement) {\n    return createElement('div', [this.config, this.$slots.default]);\n  },\n  props: {\n    config: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      _stage: {}\n    };\n  },\n  created: function created() {\n    this.StageEmitter = new StageEmitter();\n    this.StageEmitter.setMaxListeners(0);\n    this._stage = {};\n  },\n  mounted: function mounted() {\n    this._stage = new window.Konva.Stage({\n      width: this.config.width,\n      height: this.config.height,\n      container: this.$el\n    });\n    this.StageEmitter.emit('mounted', this._stage);\n    this.uploadKonva();\n  },\n  updated: function updated() {\n    this.uploadKonva();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._stage.destroy();\n  },\n\n  methods: {\n    getNode: function getNode() {\n      return this._stage;\n    },\n    getStage: function getStage() {\n      return this._stage;\n    },\n    uploadKonva: function uploadKonva() {\n      var props = _extends({}, this.config, (0, _utils.createListener)(this.$listeners));\n      (0, _utils.applyNodeProps)(this, props, cacheConfig);\n      cacheConfig = props;\n    }\n  }\n});\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\nexports.default = applyNodeProps;\n\nvar _updatePicture = __webpack_require__(3);\n\nvar _updatePicture2 = _interopRequireDefault(_updatePicture);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propsToSkip = { key: true, style: true, elm: true, isRootInsert: true }; // adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\n\nvar EVENTS_NAMESPACE = '.vue-konva-event';\n\nfunction applyNodeProps(vueComponent) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if ('id' in props) {\n    var message = 'VueKonva: You are using \"id\" attribute for Konva node. In some very rare cases it may produce bugs. Currently we recommend not to use it and use \"name\" attribute instead.';\n    console.warn(message);\n  }\n  var instance = vueComponent._stage;\n  var updatedProps = {};\n  var hasUpdates = false;\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName + EVENTS_NAMESPACE, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n  for (var _key in props) {\n    if (propsToSkip[_key]) {\n      continue;\n    }\n    var _isEvent = _key.slice(0, 2) === 'on';\n    var toAdd = oldProps[_key] !== props[_key];\n    if (_isEvent && toAdd) {\n      var _eventName = _key.substr(2).toLowerCase();\n      if (_eventName.substr(0, 7) === 'content') {\n        _eventName = 'content' + _eventName.substr(7, 1).toUpperCase() + _eventName.substr(8);\n      }\n      if (props[_key]) {\n        instance.off(_eventName + EVENTS_NAMESPACE);\n        instance.on(_eventName + EVENTS_NAMESPACE, props[_key]);\n      }\n    }\n    if (!_isEvent && props[_key] !== oldProps[_key]) {\n      hasUpdates = true;\n      updatedProps[_key] = props[_key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    (0, _updatePicture2.default)(instance);\n    // var val, prop;\n    // for (prop in updatedProps) {\n    //   val = updatedProps[prop];\n    //   if (val instanceof window.Image && !val.complete) {\n    //     var node = instance;\n    //     val.addEventListener('load', function() {\n    //       var layer = node.getLayer();\n    //       layer && layer.batchDraw();\n    //     });\n    //   }\n    // }\n  }\n}\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function () {\n  var StageEmitter = function (_EventEmitter) {\n    _inherits(StageEmitter, _EventEmitter);\n\n    function StageEmitter() {\n      _classCallCheck(this, StageEmitter);\n\n      return _possibleConstructorReturn(this, _EventEmitter.apply(this, arguments));\n    }\n\n    return StageEmitter;\n  }(EventEmitter);\n\n  return {\n    render: function render(createElement) {\n      return createElement('div', [this.config, this.$slots.default]);\n    },\n\n    watch: {\n      // $attrs: {\n      //   handler(val) {\n      //     this.uploadKonva();\n      //   },\n      //   deep: true\n      // },\n      config: {\n        handler: function handler(val) {\n          this.uploadKonva();\n        },\n\n        deep: true\n      }\n    },\n    props: {\n      config: {\n        type: Object,\n        default: function _default() {\n          return {};\n        }\n      }\n    },\n    created: function created() {\n      this.StageEmitter = new StageEmitter();\n      this.StageEmitter.setMaxListeners(0);\n      this._stage = {};\n      this._parentStage = {};\n      this.name = this.$options._componentTag;\n    },\n    mounted: function mounted() {\n      var _this2 = this;\n\n      var parentKonva = (0, _utils.findParentKonva)(this);\n      var _parentStage = parentKonva._stage;\n\n      if (_parentStage && Object.keys(_parentStage).length) {\n        this.initKonva(_parentStage);\n      }\n      parentKonva.StageEmitter.on('mounted', function (parentStage) {\n        _this2.initKonva(parentStage);\n      });\n    },\n    updated: function updated() {\n      var _this3 = this;\n\n      this.uploadKonva();\n      // check indexes\n      // somehow this.$children are not ordered correctly\n      // so we have to dive-in into componentOptions of vnode\n      this.$children.forEach(function (component) {\n        var vnode = component.$vnode;\n        var index = _this3.$vnode.componentOptions.children.indexOf(vnode);\n        var konvaNode = (0, _utils.findKonvaNode)(component);\n        konvaNode.setZIndex(index);\n      });\n    },\n    destroyed: function destroyed() {\n      (0, _utils.updatePicture)(this._stage);\n      this._stage.destroy();\n      this._stage.off(EVENTS_NAMESPACE);\n    },\n\n    methods: {\n      getNode: function getNode() {\n        return this._stage;\n      },\n      getStage: function getStage() {\n        return this._stage;\n      },\n      initKonva: function initKonva(parentStage) {\n        var vm = this;\n        var tagName = this.name;\n        var nameNode = (0, _utils.getName)(tagName);\n        var NodeClass = window.Konva[nameNode];\n\n        if (!NodeClass) {\n          console.error('vue-konva error: Can not find node ' + nameNode);\n          return;\n        }\n\n        this._stage = new NodeClass();\n        this._stage.VueComponent = this;\n        var animationStage = this._stage.to.bind(this._stage);\n\n        this._stage.to = function (newConfig) {\n          animationStage(newConfig);\n          setTimeout(function () {\n            Object.keys(vm._stage.attrs).forEach(function (key) {\n              if (typeof vm._stage.attrs[key] !== 'function') {\n                vm.config[key] = vm._stage.attrs[key];\n              }\n            });\n          }, 200);\n        };\n\n        this.uploadKonva();\n        this.StageEmitter.emit('mounted', this._stage);\n        // const index = this.$parent.$children.indexOf(this);\n        parentStage.add(this._stage);\n        // this._stage.setZIndex(index);\n        (0, _utils.updatePicture)(parentStage);\n      },\n      uploadKonva: function uploadKonva() {\n        var oldProps = this.oldProps || {};\n        var props = _extends({}, this.$attrs, this.config, (0, _utils.createListener)(this.$listeners));\n        (0, _utils.applyNodeProps)(this, props, oldProps);\n        this.oldProps = props;\n      }\n    }\n  };\n};\n\nvar _utils = __webpack_require__(1);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = __webpack_require__(4);\n\nvar EVENTS_NAMESPACE = '.vue-konva-event';\n\nmodule.exports = exports['default'];\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/*\n * Konva JavaScript Framework v2.6.0\n * http://konvajs.github.io/\n * Licensed under the MIT\n * Date: Fri Dec 14 2018\n *\n * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n * Modified work Copyright (C) 2014 - present by Anton Lavrenov (Konva)\n *\n * @license\n */\n\n// runtime check for already included Konva\n(function() {\n  'use strict';\n  /**\n   * @namespace Konva\n   */\n\n  var PI_OVER_180 = Math.PI / 180;\n\n  var Konva = {\n    // public\n    version: '2.6.0',\n\n    // private\n    stages: [],\n    idCounter: 0,\n    ids: {},\n    names: {},\n    shapes: {},\n    listenClickTap: false,\n    inDblClickWindow: false,\n\n    isBrowser:\n      typeof window !== 'undefined' &&\n      // browser case\n      ({}.toString.call(window) === '[object Window]' ||\n        // electron case\n        {}.toString.call(window) === '[object global]'),\n\n    isUnminified: /comment/.test(function() {\n      /* comment */\n    }),\n\n    // configurations\n    enableTrace: false,\n    traceArrMax: 100,\n    dblClickWindow: 400,\n    /**\n     * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n     * But you may override such property, if you want to use your value.\n     * @property pixelRatio\n     * @default undefined\n     * @memberof Konva\n     * @example\n     * Konva.pixelRatio = 1;\n     */\n    pixelRatio: undefined,\n    /**\n     * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n     * only then start dragging. Default is 3px.\n     * @property dragDistance\n     * @default 0\n     * @memberof Konva\n     * @example\n     * Konva.dragDistance = 10;\n     */\n    dragDistance: 3,\n    /**\n     * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n     * @property angleDeg\n     * @default true\n     * @memberof Konva\n     * @example\n     * node.rotation(45); // 45 degrees\n     * Konva.angleDeg = false;\n     * node.rotation(Math.PI / 2); // PI/2 radian\n     */\n    angleDeg: true,\n    /**\n     * Show different warnings about errors or wrong API usage\n     * @property showWarnings\n     * @default true\n     * @memberof Konva\n     * @example\n     * Konva.showWarnings = false;\n     */\n    showWarnings: true,\n\n    /**\n     * @namespace Filters\n     * @memberof Konva\n     */\n    Filters: {},\n\n    /**\n     * returns whether or not drag and drop is currently active\n     * @method\n     * @memberof Konva\n     */\n    isDragging: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return dd.isDragging;\n      }\n      return false;\n    },\n    /**\n     * returns whether or not a drag and drop operation is ready, but may\n     *  not necessarily have started\n     * @method\n     * @memberof Konva\n     */\n    isDragReady: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return !!dd.node;\n      }\n      return false;\n    },\n    _addId: function(node, id) {\n      if (!id) {\n        return;\n      }\n      // do we need this warning?\n      // if (this.ids[id]) {\n      //   Konva.Util.warn(\n      //     'Duplicate id \"' +\n      //       id +\n      //       '\". Please don not use same id several times. It may break find() method look up.'\n      //   );\n      // }\n      this.ids[id] = node;\n    },\n    _removeId: function(id) {\n      if (id !== undefined) {\n        delete this.ids[id];\n      }\n    },\n    _addName: function(node, name) {\n      if (name) {\n        if (!this.names[name]) {\n          this.names[name] = [];\n        }\n        this.names[name].push(node);\n      }\n    },\n    _removeName: function(name, _id) {\n      if (!name) {\n        return;\n      }\n      var nodes = this.names[name];\n      if (!nodes) {\n        return;\n      }\n      for (var n = 0; n < nodes.length; n++) {\n        var no = nodes[n];\n        if (no._id === _id) {\n          nodes.splice(n, 1);\n        }\n      }\n      if (nodes.length === 0) {\n        delete this.names[name];\n      }\n    },\n    getAngle: function(angle) {\n      return this.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    _detectIE: function(ua) {\n      var msie = ua.indexOf('msie ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('edge/');\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n    _parseUA: function(userAgent) {\n      var ua = userAgent.toLowerCase(),\n        // jQuery UA regex\n        match =\n          /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n          /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n          /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n          /(msie) ([\\w.]+)/.exec(ua) ||\n          (ua.indexOf('compatible') < 0 &&\n            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n          [],\n        // adding mobile flag as well\n        mobile = !!userAgent.match(\n          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i\n        ),\n        ieMobile = !!userAgent.match(/IEMobile/i);\n\n      return {\n        browser: match[1] || '',\n        version: match[2] || '0',\n        isIE: Konva._detectIE(ua),\n        // adding mobile flab\n        mobile: mobile,\n        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n      };\n    },\n    // user agent\n    UA: undefined\n  };\n\n  var glob =\n    typeof global !== 'undefined'\n      ? global\n      : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n          ? self\n          : {};\n\n  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\n  if (glob.Konva) {\n    console.error(\n      'Konva instance is already exist in current eviroment. ' +\n        'Please use only one instance.'\n    );\n  }\n  glob.Konva = Konva;\n  Konva.global = glob;\n  Konva.window = glob;\n  Konva.document = glob.document;\n\n  if (true) {\n    module.exports = Konva;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function() {\n      return Konva;\n    });\n  }\n})();\n\n/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n(function() {\n  'use strict';\n  /**\n   * Collection constructor.  Collection extends\n   *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n   * @constructor\n   * @memberof Konva\n   */\n  Konva.Collection = function() {\n    var args = [].slice.call(arguments),\n      length = args.length,\n      i = 0;\n\n    this.length = length;\n    for (; i < length; i++) {\n      this[i] = args[i];\n    }\n    return this;\n  };\n  Konva.Collection.prototype = [];\n  /**\n   * iterate through node array and run a function for each node.\n   *  The node and index is passed into the function\n   * @method\n   * @memberof Konva.Collection.prototype\n   * @param {Function} func\n   * @example\n   * // get all nodes with name foo inside layer, and set x to 10 for each\n   * layer.get('.foo').each(function(shape, n) {\n   *   shape.setX(10);\n   * });\n   */\n  Konva.Collection.prototype.each = function(func) {\n    for (var n = 0; n < this.length; n++) {\n      func(this[n], n);\n    }\n  };\n  /**\n   * convert collection into an array\n   * @method\n   * @memberof Konva.Collection.prototype\n   */\n  Konva.Collection.prototype.toArray = function() {\n    var arr = [],\n      len = this.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      arr.push(this[n]);\n    }\n    return arr;\n  };\n  /**\n   * convert array into a collection\n   * @method\n   * @memberof Konva.Collection\n   * @param {Array} arr\n   */\n  Konva.Collection.toCollection = function(arr) {\n    var collection = new Konva.Collection(),\n      len = arr.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      collection.push(arr[n]);\n    }\n    return collection;\n  };\n\n  // map one method by it's name\n  Konva.Collection._mapMethod = function(methodName) {\n    Konva.Collection.prototype[methodName] = function() {\n      var len = this.length,\n        i;\n\n      var args = [].slice.call(arguments);\n      for (i = 0; i < len; i++) {\n        this[i][methodName].apply(this[i], args);\n      }\n\n      return this;\n    };\n  };\n\n  Konva.Collection.mapMethods = function(constructor) {\n    var prot = constructor.prototype;\n    for (var methodName in prot) {\n      Konva.Collection._mapMethod(methodName);\n    }\n  };\n\n  /*\n    * Last updated November 2011\n    * By Simon Sarris\n    * www.simonsarris.com\n    * sarris@acm.org\n    *\n    * Free to use and distribute at will\n    * So long as you are nice to people, etc\n    */\n\n  /*\n    * The usage of this class was inspired by some of the work done by a forked\n    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n    * class.  Modified by Eric Rowell\n    */\n\n  /**\n   * Transform constructor. Transform object is a private class of Konva framework.\n   * In most of the cases you don't need to use it in your app.\n   * But there is a documentation for that class in case you still want\n   * to make some manual calculations.\n   * @constructor\n   * @param {Array} [m] Optional six-element matrix\n   * @memberof Konva\n   */\n  Konva.Transform = function(m) {\n    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n  };\n\n  Konva.Transform.prototype = {\n    /**\n     * Copy Konva.Transform object\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    copy: function() {\n      return new Konva.Transform(this.m);\n    },\n    /**\n     * Transform point\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Object} point 2D point(x, y)\n     * @returns {Object} 2D point(x, y)\n     */\n    point: function(point) {\n      var m = this.m;\n      return {\n        x: m[0] * point.x + m[2] * point.y + m[4],\n        y: m[1] * point.x + m[3] * point.y + m[5]\n      };\n    },\n    /**\n     * Apply translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Konva.Transform}\n     */\n    translate: function(x, y) {\n      this.m[4] += this.m[0] * x + this.m[2] * y;\n      this.m[5] += this.m[1] * x + this.m[3] * y;\n      return this;\n    },\n    /**\n     * Apply scale\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    scale: function(sx, sy) {\n      this.m[0] *= sx;\n      this.m[1] *= sx;\n      this.m[2] *= sy;\n      this.m[3] *= sy;\n      return this;\n    },\n    /**\n     * Apply rotation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} rad  Angle in radians\n     * @returns {Konva.Transform}\n     */\n    rotate: function(rad) {\n      var c = Math.cos(rad);\n      var s = Math.sin(rad);\n      var m11 = this.m[0] * c + this.m[2] * s;\n      var m12 = this.m[1] * c + this.m[3] * s;\n      var m21 = this.m[0] * -s + this.m[2] * c;\n      var m22 = this.m[1] * -s + this.m[3] * c;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Returns the translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Object} 2D point(x, y)\n     */\n    getTranslation: function() {\n      return {\n        x: this.m[4],\n        y: this.m[5]\n      };\n    },\n    /**\n     * Apply skew\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    skew: function(sx, sy) {\n      var m11 = this.m[0] + this.m[2] * sy;\n      var m12 = this.m[1] + this.m[3] * sy;\n      var m21 = this.m[2] + this.m[0] * sx;\n      var m22 = this.m[3] + this.m[1] * sx;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Transform multiplication\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Konva.Transform} matrix\n     * @returns {Konva.Transform}\n     */\n    multiply: function(matrix) {\n      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      this.m[4] = dx;\n      this.m[5] = dy;\n      return this;\n    },\n    /**\n     * Invert the matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    invert: function() {\n      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n      var m0 = this.m[3] * d;\n      var m1 = -this.m[1] * d;\n      var m2 = -this.m[2] * d;\n      var m3 = this.m[0] * d;\n      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n      this.m[0] = m0;\n      this.m[1] = m1;\n      this.m[2] = m2;\n      this.m[3] = m3;\n      this.m[4] = m4;\n      this.m[5] = m5;\n      return this;\n    },\n    /**\n     * return matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     */\n    getMatrix: function() {\n      return this.m;\n    },\n    /**\n     * set to absolute position via translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     * @author ericdrowell\n     */\n    setAbsolutePosition: function(x, y) {\n      var m0 = this.m[0],\n        m1 = this.m[1],\n        m2 = this.m[2],\n        m3 = this.m[3],\n        m4 = this.m[4],\n        m5 = this.m[5],\n        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n        xt = (x - m4 - m2 * yt) / m0;\n\n      return this.translate(xt, yt);\n    }\n  };\n\n  // CONSTANTS\n  var CONTEXT_2D = '2d',\n    OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    OBJECT_BOOLEAN = '[object Boolean]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n      aliceblue: [240, 248, 255],\n      antiquewhite: [250, 235, 215],\n      aqua: [0, 255, 255],\n      aquamarine: [127, 255, 212],\n      azure: [240, 255, 255],\n      beige: [245, 245, 220],\n      bisque: [255, 228, 196],\n      black: [0, 0, 0],\n      blanchedalmond: [255, 235, 205],\n      blue: [0, 0, 255],\n      blueviolet: [138, 43, 226],\n      brown: [165, 42, 42],\n      burlywood: [222, 184, 135],\n      cadetblue: [95, 158, 160],\n      chartreuse: [127, 255, 0],\n      chocolate: [210, 105, 30],\n      coral: [255, 127, 80],\n      cornflowerblue: [100, 149, 237],\n      cornsilk: [255, 248, 220],\n      crimson: [220, 20, 60],\n      cyan: [0, 255, 255],\n      darkblue: [0, 0, 139],\n      darkcyan: [0, 139, 139],\n      darkgoldenrod: [184, 132, 11],\n      darkgray: [169, 169, 169],\n      darkgreen: [0, 100, 0],\n      darkgrey: [169, 169, 169],\n      darkkhaki: [189, 183, 107],\n      darkmagenta: [139, 0, 139],\n      darkolivegreen: [85, 107, 47],\n      darkorange: [255, 140, 0],\n      darkorchid: [153, 50, 204],\n      darkred: [139, 0, 0],\n      darksalmon: [233, 150, 122],\n      darkseagreen: [143, 188, 143],\n      darkslateblue: [72, 61, 139],\n      darkslategray: [47, 79, 79],\n      darkslategrey: [47, 79, 79],\n      darkturquoise: [0, 206, 209],\n      darkviolet: [148, 0, 211],\n      deeppink: [255, 20, 147],\n      deepskyblue: [0, 191, 255],\n      dimgray: [105, 105, 105],\n      dimgrey: [105, 105, 105],\n      dodgerblue: [30, 144, 255],\n      firebrick: [178, 34, 34],\n      floralwhite: [255, 255, 240],\n      forestgreen: [34, 139, 34],\n      fuchsia: [255, 0, 255],\n      gainsboro: [220, 220, 220],\n      ghostwhite: [248, 248, 255],\n      gold: [255, 215, 0],\n      goldenrod: [218, 165, 32],\n      gray: [128, 128, 128],\n      green: [0, 128, 0],\n      greenyellow: [173, 255, 47],\n      grey: [128, 128, 128],\n      honeydew: [240, 255, 240],\n      hotpink: [255, 105, 180],\n      indianred: [205, 92, 92],\n      indigo: [75, 0, 130],\n      ivory: [255, 255, 240],\n      khaki: [240, 230, 140],\n      lavender: [230, 230, 250],\n      lavenderblush: [255, 240, 245],\n      lawngreen: [124, 252, 0],\n      lemonchiffon: [255, 250, 205],\n      lightblue: [173, 216, 230],\n      lightcoral: [240, 128, 128],\n      lightcyan: [224, 255, 255],\n      lightgoldenrodyellow: [250, 250, 210],\n      lightgray: [211, 211, 211],\n      lightgreen: [144, 238, 144],\n      lightgrey: [211, 211, 211],\n      lightpink: [255, 182, 193],\n      lightsalmon: [255, 160, 122],\n      lightseagreen: [32, 178, 170],\n      lightskyblue: [135, 206, 250],\n      lightslategray: [119, 136, 153],\n      lightslategrey: [119, 136, 153],\n      lightsteelblue: [176, 196, 222],\n      lightyellow: [255, 255, 224],\n      lime: [0, 255, 0],\n      limegreen: [50, 205, 50],\n      linen: [250, 240, 230],\n      magenta: [255, 0, 255],\n      maroon: [128, 0, 0],\n      mediumaquamarine: [102, 205, 170],\n      mediumblue: [0, 0, 205],\n      mediumorchid: [186, 85, 211],\n      mediumpurple: [147, 112, 219],\n      mediumseagreen: [60, 179, 113],\n      mediumslateblue: [123, 104, 238],\n      mediumspringgreen: [0, 250, 154],\n      mediumturquoise: [72, 209, 204],\n      mediumvioletred: [199, 21, 133],\n      midnightblue: [25, 25, 112],\n      mintcream: [245, 255, 250],\n      mistyrose: [255, 228, 225],\n      moccasin: [255, 228, 181],\n      navajowhite: [255, 222, 173],\n      navy: [0, 0, 128],\n      oldlace: [253, 245, 230],\n      olive: [128, 128, 0],\n      olivedrab: [107, 142, 35],\n      orange: [255, 165, 0],\n      orangered: [255, 69, 0],\n      orchid: [218, 112, 214],\n      palegoldenrod: [238, 232, 170],\n      palegreen: [152, 251, 152],\n      paleturquoise: [175, 238, 238],\n      palevioletred: [219, 112, 147],\n      papayawhip: [255, 239, 213],\n      peachpuff: [255, 218, 185],\n      peru: [205, 133, 63],\n      pink: [255, 192, 203],\n      plum: [221, 160, 203],\n      powderblue: [176, 224, 230],\n      purple: [128, 0, 128],\n      rebeccapurple: [102, 51, 153],\n      red: [255, 0, 0],\n      rosybrown: [188, 143, 143],\n      royalblue: [65, 105, 225],\n      saddlebrown: [139, 69, 19],\n      salmon: [250, 128, 114],\n      sandybrown: [244, 164, 96],\n      seagreen: [46, 139, 87],\n      seashell: [255, 245, 238],\n      sienna: [160, 82, 45],\n      silver: [192, 192, 192],\n      skyblue: [135, 206, 235],\n      slateblue: [106, 90, 205],\n      slategray: [119, 128, 144],\n      slategrey: [119, 128, 144],\n      snow: [255, 255, 250],\n      springgreen: [0, 255, 127],\n      steelblue: [70, 130, 180],\n      tan: [210, 180, 140],\n      teal: [0, 128, 128],\n      thistle: [216, 191, 216],\n      transparent: [255, 255, 255, 0],\n      tomato: [255, 99, 71],\n      turquoise: [64, 224, 208],\n      violet: [238, 130, 238],\n      wheat: [245, 222, 179],\n      white: [255, 255, 255],\n      whitesmoke: [245, 245, 245],\n      yellow: [255, 255, 0],\n      yellowgreen: [154, 205, 5]\n    },\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\n  /**\n   * @namespace Util\n   * @memberof Konva\n   */\n  Konva.Util = {\n    /*\n    * cherry-picked utilities from underscore.js\n    */\n    _isElement: function(obj) {\n      return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction: function(obj) {\n      return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isObject: function(obj) {\n      return !!obj && obj.constructor === Object;\n    },\n    _isArray: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber: function(obj) {\n      return (\n        Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n        !isNaN(obj) &&\n        isFinite(obj)\n      );\n    },\n    _isString: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    // arrays are objects too\n    isObject: function(val) {\n      return val instanceof Object;\n    },\n    isValidSelector: function(selector) {\n      if (typeof selector !== 'string') {\n        return false;\n      }\n      var firstChar = selector[0];\n      return (\n        firstChar === '#' ||\n        firstChar === '.' ||\n        firstChar === firstChar.toUpperCase()\n      );\n    },\n    _sign: function(number) {\n      if (number === 0) {\n        return 0;\n      }\n      if (number > 0) {\n        return 1;\n      } else {\n        return -1;\n      }\n    },\n    createCanvasElement: function() {\n      var canvas = Konva.isBrowser\n        ? Konva.document.createElement('canvas')\n        : new Konva._nodeCanvas();\n      // on some environments canvas.style is readonly\n      try {\n        canvas.style = canvas.style || {};\n      } catch (e) {}\n      return canvas;\n    },\n    _isInDocument: function(el) {\n      while ((el = el.parentNode)) {\n        if (el == Konva.document) {\n          return true;\n        }\n      }\n      return false;\n    },\n    _simplifyArray: function(arr) {\n      var retArr = [],\n        len = arr.length,\n        util = Konva.Util,\n        n,\n        val;\n\n      for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n          val = Math.round(val * 1000) / 1000;\n        } else if (!util._isString(val)) {\n          val = val.toString();\n        }\n\n        retArr.push(val);\n      }\n\n      return retArr;\n    },\n    /*\n    * arg can be an image object or image data\n    */\n    _getImage: function(arg, callback) {\n      var imageObj, canvas;\n\n      // if arg is null or undefined\n      if (!arg) {\n        callback(null);\n      } else if (this._isElement(arg)) {\n        // if arg is already an image object\n        callback(arg);\n      } else if (this._isString(arg)) {\n        // if arg is a string, then it's a data url\n        imageObj = new Konva.window.Image();\n        imageObj.onload = function() {\n          callback(imageObj);\n        };\n        imageObj.src = arg;\n      } else if (arg.data) {\n        //if arg is an object that contains the data property, it's an image object\n        canvas = Konva.Util.createCanvasElement();\n        canvas.width = arg.width;\n        canvas.height = arg.height;\n        var _context = canvas.getContext(CONTEXT_2D);\n        _context.putImageData(arg, 0, 0);\n        this._getImage(canvas.toDataURL(), callback);\n      } else {\n        callback(null);\n      }\n    },\n    _getRGBAString: function(obj) {\n      var red = obj.red || 0,\n        green = obj.green || 0,\n        blue = obj.blue || 0,\n        alpha = obj.alpha || 1;\n\n      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(\n        EMPTY_STRING\n      );\n    },\n    _rgbToHex: function(r, g, b) {\n      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb: function(hex) {\n      hex = hex.replace(HASH, EMPTY_STRING);\n      var bigint = parseInt(hex, 16);\n      return {\n        r: (bigint >> 16) & 255,\n        g: (bigint >> 8) & 255,\n        b: bigint & 255\n      };\n    },\n    /**\n     * return random hex color\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    getRandomColor: function() {\n      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n      while (randColor.length < 6) {\n        randColor = ZERO + randColor;\n      }\n      return HASH + randColor;\n    },\n    /**\n     * return value with default fallback\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    get: function(val, def) {\n      if (val === undefined) {\n        return def;\n      } else {\n        return val;\n      }\n    },\n    /**\n     * get RGB components of a color\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {String} color\n     * @example\n     * // each of the following examples return {r:0, g:0, b:255}\n     * var rgb = Konva.Util.getRGB('blue');\n     * var rgb = Konva.Util.getRGB('#0000ff');\n     * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n     */\n    getRGB: function(color) {\n      var rgb;\n      // color string\n      if (color in COLORS) {\n        rgb = COLORS[color];\n        return {\n          r: rgb[0],\n          g: rgb[1],\n          b: rgb[2]\n        };\n      } else if (color[0] === HASH) {\n        // hex\n        return this._hexToRgb(color.substring(1));\n      } else if (color.substr(0, 4) === RGB_PAREN) {\n        // rgb string\n        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n        return {\n          r: parseInt(rgb[1], 10),\n          g: parseInt(rgb[2], 10),\n          b: parseInt(rgb[3], 10)\n        };\n      } else {\n        // default\n        return {\n          r: 0,\n          g: 0,\n          b: 0\n        };\n      }\n    },\n    // convert any color string to RGBA object\n    // from https://github.com/component/color-parser\n    colorToRGBA: function(str) {\n      str = str || 'black';\n      return (\n        Konva.Util._namedColorToRBA(str) ||\n        Konva.Util._hex3ColorToRGBA(str) ||\n        Konva.Util._hex6ColorToRGBA(str) ||\n        Konva.Util._rgbColorToRGBA(str) ||\n        Konva.Util._rgbaColorToRGBA(str)\n      );\n    },\n    // Parse named css color. Like \"green\"\n    _namedColorToRBA: function(str) {\n      var c = COLORS[str.toLowerCase()];\n      if (!c) {\n        return null;\n      }\n      return {\n        r: c[0],\n        g: c[1],\n        b: c[2],\n        a: 1\n      };\n    },\n    // Parse rgb(n, n, n)\n    _rgbColorToRGBA: function(str) {\n      if (str.indexOf('rgb(') === 0) {\n        str = str.match(/rgb\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: 1\n        };\n      }\n    },\n    // Parse rgba(n, n, n, n)\n    _rgbaColorToRGBA: function(str) {\n      if (str.indexOf('rgba(') === 0) {\n        str = str.match(/rgba\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: parts[3]\n        };\n      }\n    },\n    // Parse #nnnnnn\n    _hex6ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 7) {\n        return {\n          r: parseInt(str.slice(1, 3), 16),\n          g: parseInt(str.slice(3, 5), 16),\n          b: parseInt(str.slice(5, 7), 16),\n          a: 1\n        };\n      }\n    },\n    // Parse #nnn\n    _hex3ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 4) {\n        return {\n          r: parseInt(str[1] + str[1], 16),\n          g: parseInt(str[2] + str[2], 16),\n          b: parseInt(str[3] + str[3], 16),\n          a: 1\n        };\n      }\n    },\n    // o1 takes precedence over o2\n    _merge: function(o1, o2) {\n      var retObj = this._clone(o2);\n      for (var key in o1) {\n        if (this._isObject(o1[key])) {\n          retObj[key] = this._merge(o1[key], retObj[key]);\n        } else {\n          retObj[key] = o1[key];\n        }\n      }\n      return retObj;\n    },\n    trimRight: function(str) {\n      return str.replace(/\\s+$/, '');\n    },\n    trimLeft: function(str) {\n      return str.replace(/^\\s+/, '');\n    },\n    /**\n     * check intersection of two client rectangles\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    haveIntersection: function(r1, r2) {\n      return !(\n        r2.x > r1.x + r1.width ||\n        r2.x + r2.width < r1.x ||\n        r2.y > r1.y + r1.height ||\n        r2.y + r2.height < r1.y\n      );\n    },\n    cloneObject: function(obj) {\n      var retObj = {};\n      for (var key in obj) {\n        if (this._isObject(obj[key])) {\n          retObj[key] = this.cloneObject(obj[key]);\n        } else if (this._isArray(obj[key])) {\n          retObj[key] = this.cloneArray(obj[key]);\n        } else {\n          retObj[key] = obj[key];\n        }\n      }\n      return retObj;\n    },\n    cloneArray: function(arr) {\n      return arr.slice(0);\n    },\n    _degToRad: function(deg) {\n      return deg * PI_OVER_DEG180;\n    },\n    _radToDeg: function(rad) {\n      return rad * DEG180_OVER_PI;\n    },\n    _capitalize: function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw: function(str) {\n      throw new Error(KONVA_ERROR + str);\n    },\n    error: function(str) {\n      console.error(KONVA_ERROR + str);\n    },\n    warn: function(str) {\n      /*\n             * IE9 on Windows7 64bit will throw a JS error\n             * if we don't use window.console in the conditional\n             */\n      if (Konva.global.console && console.warn && Konva.showWarnings) {\n        console.warn(KONVA_WARNING + str);\n      }\n    },\n    extend: function(child, parent) {\n      function Ctor() {\n        this.constructor = child;\n      }\n      Ctor.prototype = parent.prototype;\n      var oldProto = child.prototype;\n      child.prototype = new Ctor();\n      for (var key in oldProto) {\n        if (oldProto.hasOwnProperty(key)) {\n          child.prototype[key] = oldProto[key];\n        }\n      }\n      child.__super__ = parent.prototype;\n      // create reference to parent\n      child.super = parent;\n    },\n    /**\n     * adds methods to a constructor prototype\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {Function} constructor\n     * @param {Object} methods\n     */\n    addMethods: function(constructor, methods) {\n      var key;\n\n      for (key in methods) {\n        constructor.prototype[key] = methods[key];\n      }\n    },\n    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n        fa = t * d01 / (d01 + d12),\n        fb = t * d12 / (d01 + d12),\n        p1x = x1 - fa * (x2 - x0),\n        p1y = y1 - fa * (y2 - y0),\n        p2x = x1 + fb * (x2 - x0),\n        p2y = y1 + fb * (y2 - y0);\n\n      return [p1x, p1y, p2x, p2y];\n    },\n    _expandPoints: function(p, tension) {\n      var len = p.length,\n        allPoints = [],\n        n,\n        cp;\n\n      for (n = 2; n < len - 2; n += 2) {\n        cp = Konva.Util._getControlPoints(\n          p[n - 2],\n          p[n - 1],\n          p[n],\n          p[n + 1],\n          p[n + 2],\n          p[n + 3],\n          tension\n        );\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n      }\n\n      return allPoints;\n    },\n    _removeLastLetter: function(str) {\n      return str.substring(0, str.length - 1);\n    },\n    each: function(obj, func) {\n      for (var key in obj) {\n        func(key, obj[key]);\n      }\n    },\n    _inRange: function(val, left, right) {\n      return left <= val && val < right;\n    },\n    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n      var x, y, dist;\n\n      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n      if (pd2 == 0) {\n        x = x1;\n        y = y1;\n        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n      } else {\n        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n        if (u < 0) {\n          x = x1;\n          y = y1;\n          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n        } else if (u > 1.0) {\n          x = x2;\n          y = y2;\n          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n        } else {\n          x = x1 + u * (x2 - x1);\n          y = y1 + u * (y2 - y1);\n          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n        }\n      }\n      return [x, y, dist];\n    },\n    // line as array of points.\n    // line might be closed\n    _getProjectionToLine: function(pt, line, isClosed) {\n      var pc = Konva.Util.cloneObject(pt);\n      var dist = Number.MAX_VALUE;\n      line.forEach(function(p1, i) {\n        if (!isClosed && i === line.length - 1) {\n          return;\n        }\n        var p2 = line[(i + 1) % line.length];\n        var proj = Konva.Util._getProjectionToSegment(\n          p1.x,\n          p1.y,\n          p2.x,\n          p2.y,\n          pt.x,\n          pt.y\n        );\n        var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n        if (pdist < dist) {\n          pc.x = px;\n          pc.y = py;\n          dist = pdist;\n        }\n      });\n      return pc;\n    },\n    _prepareArrayForTween: function(startArray, endArray, isClosed) {\n      var n,\n        start = [],\n        end = [];\n      if (startArray.length > endArray.length) {\n        var temp = endArray;\n        endArray = startArray;\n        startArray = temp;\n      }\n      for (n = 0; n < startArray.length; n += 2) {\n        start.push({\n          x: startArray[n],\n          y: startArray[n + 1]\n        });\n      }\n      for (n = 0; n < endArray.length; n += 2) {\n        end.push({\n          x: endArray[n],\n          y: endArray[n + 1]\n        });\n      }\n\n      var newStart = [];\n      end.forEach(function(point) {\n        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n        newStart.push(pr.x);\n        newStart.push(pr.y);\n      });\n      return newStart;\n    },\n    _prepareToStringify: function(obj) {\n      var desc;\n\n      obj.visitedByCircularReferenceRemoval = true;\n\n      for (var key in obj) {\n        if (\n          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')\n        ) {\n          continue;\n        }\n        desc = Object.getOwnPropertyDescriptor(obj, key);\n        if (\n          obj[key].visitedByCircularReferenceRemoval ||\n          Konva.Util._isElement(obj[key])\n        ) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        }\n      }\n\n      delete obj.visitedByCircularReferenceRemoval;\n\n      return obj;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  // calculate pixel ratio\n\n  var _pixelRatio;\n  function getDevicePixelRatio() {\n    if (_pixelRatio) {\n      return _pixelRatio;\n    }\n    var canvas = Konva.Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function() {\n      var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n        backingStoreRatio =\n          context.webkitBackingStorePixelRatio ||\n          context.mozBackingStorePixelRatio ||\n          context.msBackingStorePixelRatio ||\n          context.oBackingStorePixelRatio ||\n          context.backingStorePixelRatio ||\n          1;\n      return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n  }\n\n  /**\n   * Canvas Renderer constructor\n   * @constructor\n   * @abstract\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Number} config.width\n   * @param {Number} config.height\n   * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n   *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n   *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n   *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n   *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n   *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n   *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n   */\n  Konva.Canvas = function(config) {\n    this.init(config);\n  };\n\n  Konva.Canvas.prototype = {\n    init: function(config) {\n      var conf = config || {};\n\n      var pixelRatio =\n        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n\n      this.pixelRatio = pixelRatio;\n      this._canvas = Konva.Util.createCanvasElement();\n\n      // set inline styles\n      this._canvas.style.padding = 0;\n      this._canvas.style.margin = 0;\n      this._canvas.style.border = 0;\n      this._canvas.style.background = 'transparent';\n      this._canvas.style.position = 'absolute';\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n    },\n    /**\n     * get canvas context\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {CanvasContext} context\n     */\n    getContext: function() {\n      return this.context;\n    },\n    /**\n     * get pixel ratio\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} pixel ratio\n     */\n    getPixelRatio: function() {\n      return this.pixelRatio;\n    },\n    /**\n     * get pixel ratio\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n     *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n     *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n     */\n    setPixelRatio: function(pixelRatio) {\n      var previousRatio = this.pixelRatio;\n      this.pixelRatio = pixelRatio;\n      this.setSize(\n        this.getWidth() / previousRatio,\n        this.getHeight() / previousRatio\n      );\n    },\n    /**\n     * set width\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      // take into account pixel ratio\n      this.width = this._canvas.width = width * this.pixelRatio;\n      this._canvas.style.width = width + 'px';\n\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n     * set height\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      // take into account pixel ratio\n      this.height = this._canvas.height = height * this.pixelRatio;\n      this._canvas.style.height = height + 'px';\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n     * get width\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} width\n     */\n    getWidth: function() {\n      return this.width;\n    },\n    /**\n     * get height\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} height\n     */\n    getHeight: function() {\n      return this.height;\n    },\n    /**\n     * set size\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} width\n     * @param {Number} height\n     */\n    setSize: function(width, height) {\n      this.setWidth(width);\n      this.setHeight(height);\n    },\n    /**\n     * to data url\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {String} mimeType\n     * @param {Number} quality between 0 and 1 for jpg mime types\n     * @returns {String} data url string\n     */\n    toDataURL: function(mimeType, quality) {\n      try {\n        // If this call fails (due to browser bug, like in Firefox 3.6),\n        // then revert to previous no-parameter image/png behavior\n        return this._canvas.toDataURL(mimeType, quality);\n      } catch (e) {\n        try {\n          return this._canvas.toDataURL();\n        } catch (err) {\n          Konva.Util.warn('Unable to get data URL. ' + err.message);\n          return '';\n        }\n      }\n    }\n  };\n\n  Konva.SceneCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.SceneContext(this);\n    this.setSize(width, height);\n  };\n\n  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\n  Konva.HitCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.HitContext(this);\n    this.setSize(width, height);\n    this.hitCanvas = true;\n  };\n  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n})();\n\n(function() {\n  'use strict';\n  var COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    // EMPTY_STRING = '',\n    EQUALS = '=',\n    // SET = 'set',\n    CONTEXT_METHODS = [\n      'arc',\n      'arcTo',\n      'beginPath',\n      'bezierCurveTo',\n      'clearRect',\n      'clip',\n      'closePath',\n      'createLinearGradient',\n      'createPattern',\n      'createRadialGradient',\n      'drawImage',\n      'fill',\n      'fillText',\n      'getImageData',\n      'createImageData',\n      'lineTo',\n      'moveTo',\n      'putImageData',\n      'quadraticCurveTo',\n      'rect',\n      'restore',\n      'rotate',\n      'save',\n      'scale',\n      'setLineDash',\n      'setTransform',\n      'stroke',\n      'strokeText',\n      'transform',\n      'translate'\n    ];\n\n  var CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation'\n  ];\n\n  /**\n   * Canvas Context constructor\n   * @constructor\n   * @abstract\n   * @memberof Konva\n   */\n  Konva.Context = function(canvas) {\n    this.init(canvas);\n  };\n\n  Konva.Context.prototype = {\n    init: function(canvas) {\n      this.canvas = canvas;\n      this._context = canvas._canvas.getContext('2d');\n\n      if (Konva.enableTrace) {\n        this.traceArr = [];\n        this._enableTrace();\n      }\n    },\n    /**\n     * fill shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillShape: function(shape) {\n      if (shape.getFillEnabled()) {\n        this._fill(shape);\n      }\n    },\n    /**\n     * stroke shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    strokeShape: function(shape) {\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * fill then stroke\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillStrokeShape: function(shape) {\n      var fillEnabled = shape.getFillEnabled();\n      if (fillEnabled) {\n        this._fill(shape);\n      }\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * get context trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n     *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n     *  properites.\n     * @returns {String}\n     */\n    getTrace: function(relaxed) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n\n        // methods\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Konva.Util._isArray(args[0])) {\n              str +=\n                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          // properties\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n\n        str += SEMICOLON;\n      }\n\n      return str;\n    },\n    /**\n     * clear trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    clearTrace: function() {\n      this.traceArr = [];\n    },\n    _trace: function(str) {\n      var traceArr = this.traceArr,\n        len;\n\n      traceArr.push(str);\n      len = traceArr.length;\n\n      if (len >= Konva.traceArrMax) {\n        traceArr.shift();\n      }\n    },\n    /**\n     * reset canvas context transform\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    reset: function() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    },\n    /**\n     * get canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * clear canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     */\n    clear: function(bounds) {\n      var canvas = this.getCanvas();\n\n      if (bounds) {\n        this.clearRect(\n          bounds.x || 0,\n          bounds.y || 0,\n          bounds.width || 0,\n          bounds.height || 0\n        );\n      } else {\n        this.clearRect(\n          0,\n          0,\n          canvas.getWidth() / canvas.pixelRatio,\n          canvas.getHeight() / canvas.pixelRatio\n        );\n      }\n    },\n    _applyLineCap: function(shape) {\n      var lineCap = shape.getLineCap();\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    },\n    _applyOpacity: function(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    },\n    _applyLineJoin: function(shape) {\n      var lineJoin = shape.getLineJoin();\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    },\n    setAttr: function(attr, val) {\n      this._context[attr] = val;\n    },\n\n    // context pass through methods\n    arc: function() {\n      var a = arguments;\n      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    beginPath: function() {\n      this._context.beginPath();\n    },\n    bezierCurveTo: function() {\n      var a = arguments;\n      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    clearRect: function() {\n      var a = arguments;\n      this._context.clearRect(a[0], a[1], a[2], a[3]);\n    },\n    clip: function() {\n      this._context.clip();\n    },\n    closePath: function() {\n      this._context.closePath();\n    },\n    createImageData: function() {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a[0], a[1]);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a[0]);\n      }\n    },\n    createLinearGradient: function() {\n      var a = arguments;\n      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n    },\n    createPattern: function() {\n      var a = arguments;\n      return this._context.createPattern(a[0], a[1]);\n    },\n    createRadialGradient: function() {\n      var a = arguments;\n      return this._context.createRadialGradient(\n        a[0],\n        a[1],\n        a[2],\n        a[3],\n        a[4],\n        a[5]\n      );\n    },\n    drawImage: function() {\n      var a = arguments,\n        _context = this._context;\n\n      if (a.length === 3) {\n        _context.drawImage(a[0], a[1], a[2]);\n      } else if (a.length === 5) {\n        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n      } else if (a.length === 9) {\n        _context.drawImage(\n          a[0],\n          a[1],\n          a[2],\n          a[3],\n          a[4],\n          a[5],\n          a[6],\n          a[7],\n          a[8]\n        );\n      }\n    },\n    isPointInPath: function(x, y) {\n      return this._context.isPointInPath(x, y);\n    },\n    fill: function() {\n      this._context.fill();\n    },\n    fillRect: function(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    },\n    strokeRect: function(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    },\n    fillText: function() {\n      var a = arguments;\n      this._context.fillText(a[0], a[1], a[2]);\n    },\n    measureText: function(text) {\n      return this._context.measureText(text);\n    },\n    getImageData: function() {\n      var a = arguments;\n      return this._context.getImageData(a[0], a[1], a[2], a[3]);\n    },\n    lineTo: function() {\n      var a = arguments;\n      this._context.lineTo(a[0], a[1]);\n    },\n    moveTo: function() {\n      var a = arguments;\n      this._context.moveTo(a[0], a[1]);\n    },\n    rect: function() {\n      var a = arguments;\n      this._context.rect(a[0], a[1], a[2], a[3]);\n    },\n    putImageData: function() {\n      var a = arguments;\n      this._context.putImageData(a[0], a[1], a[2]);\n    },\n    quadraticCurveTo: function() {\n      var a = arguments;\n      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n    },\n    restore: function() {\n      this._context.restore();\n    },\n    rotate: function() {\n      var a = arguments;\n      this._context.rotate(a[0]);\n    },\n    save: function() {\n      this._context.save();\n    },\n    scale: function() {\n      var a = arguments;\n      this._context.scale(a[0], a[1]);\n    },\n    setLineDash: function() {\n      var a = arguments,\n        _context = this._context;\n\n      // works for Chrome and IE11\n      if (this._context.setLineDash) {\n        _context.setLineDash(a[0]);\n      } else if ('mozDash' in _context) {\n        // verified that this works in firefox\n        _context.mozDash = a[0];\n      } else if ('webkitLineDash' in _context) {\n        // does not currently work for Safari\n        _context.webkitLineDash = a[0];\n      }\n\n      // no support for IE9 and IE10\n    },\n    getLineDash: function() {\n      return this._context.getLineDash();\n    },\n    setTransform: function() {\n      var a = arguments;\n      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    stroke: function() {\n      this._context.stroke();\n    },\n    strokeText: function() {\n      var a = arguments;\n      this._context.strokeText(a[0], a[1], a[2]);\n    },\n    transform: function() {\n      var a = arguments;\n      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    translate: function() {\n      var a = arguments;\n      this._context.translate(a[0], a[1]);\n    },\n    _enableTrace: function() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        _simplifyArray = Konva.Util._simplifyArray,\n        origSetter = this.setAttr,\n        n,\n        args;\n\n      // to prevent creating scope function at each loop\n      var func = function(methodName) {\n        var origMethod = that[methodName],\n          ret;\n\n        that[methodName] = function() {\n          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n\n          that._trace({\n            method: methodName,\n            args: args\n          });\n\n          return ret;\n        };\n      };\n      // methods\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n\n      // attrs\n      that.setAttr = function() {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (\n          prop === 'shadowOffsetX' ||\n          prop === 'shadowOffsetY' ||\n          prop === 'shadowBlur'\n        ) {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  };\n\n  CONTEXT_PROPERTIES.forEach(function(prop) {\n    Object.defineProperty(Konva.Context.prototype, prop, {\n      get: function() {\n        return this._context[prop];\n      },\n      set: function(val) {\n        this._context[prop] = val;\n      }\n    });\n  });\n\n  Konva.SceneContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.SceneContext.prototype = {\n    _fillColor: function(shape) {\n      var fill = shape.fill();\n\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    },\n    _fillPattern: function(shape) {\n      var fillPatternX = shape.getFillPatternX(),\n        fillPatternY = shape.getFillPatternY(),\n        fillPatternScale = shape.getFillPatternScale(),\n        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n        fillPatternOffset = shape.getFillPatternOffset();\n\n      if (fillPatternX || fillPatternY) {\n        this.translate(fillPatternX || 0, fillPatternY || 0);\n      }\n      if (fillPatternRotation) {\n        this.rotate(fillPatternRotation);\n      }\n      if (fillPatternScale) {\n        this.scale(fillPatternScale.x, fillPatternScale.y);\n      }\n      if (fillPatternOffset) {\n        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n      }\n\n      this.setAttr(\n        'fillStyle',\n        this.createPattern(\n          shape.getFillPatternImage(),\n          shape.getFillPatternRepeat() || 'repeat'\n        )\n      );\n      this.fill();\n    },\n    _fillLinearGradient: function(shape) {\n      var start = shape.getFillLinearGradientStartPoint(),\n        end = shape.getFillLinearGradientEndPoint(),\n        colorStops = shape.getFillLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    },\n    _fillRadialGradient: function(shape) {\n      var start = shape.getFillRadialGradientStartPoint(),\n        end = shape.getFillRadialGradientEndPoint(),\n        startRadius = shape.getFillRadialGradientStartRadius(),\n        endRadius = shape.getFillRadialGradientEndRadius(),\n        colorStops = shape.getFillRadialGradientColorStops(),\n        grd = this.createRadialGradient(\n          start.x,\n          start.y,\n          startRadius,\n          end.x,\n          end.y,\n          endRadius\n        );\n\n      // build color stops\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('fillStyle', grd);\n      this.fill();\n    },\n    _fill: function(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n\n      // priority fills\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n\n      // now just try and fill with whatever is available\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    },\n    _strokeLinearGradient: function(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    },\n    _stroke: function(shape) {\n      var dash = shape.dash(),\n        // ignore strokeScaleEnabled for Text\n        strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n\n        this.setAttr('lineWidth', shape.strokeWidth());\n\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n\n        // TODO - do we need to make like a fill function?\n\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n\n        shape._strokeFunc(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    },\n    _applyShadow: function(shape) {\n      var util = Konva.Util,\n        color = util.get(shape.getShadowRGBA(), 'black'),\n        blur = util.get(shape.getShadowBlur(), 5),\n        offset = util.get(shape.getShadowOffset(), {\n          x: 0,\n          y: 0\n        }),\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n\n      this.setAttr('shadowColor', color);\n      this.setAttr(\n        'shadowBlur',\n        blur * Math.min(Math.abs(scaleX), Math.abs(scaleY))\n      );\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    },\n    _applyGlobalCompositeOperation: function(shape) {\n      var globalCompositeOperation = shape.getGlobalCompositeOperation();\n      if (globalCompositeOperation !== 'source-over') {\n        this.setAttr('globalCompositeOperation', globalCompositeOperation);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\n  Konva.HitContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.HitContext.prototype = {\n    _fill: function(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    },\n    _stroke: function(shape) {\n      if (shape.hasStroke() && shape.strokeHitEnabled()) {\n        // ignore strokeScaleEnabled for Text\n        var strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        this._applyLineCap(shape);\n        this.setAttr('lineWidth', shape.strokeWidth());\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  };\n  Konva.Util.extend(Konva.HitContext, Konva.Context);\n})();\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var GET = 'get',\n    SET = 'set';\n\n  Konva.Factory = {\n    addGetterSetter: function(constructor, attr, def, validator, after) {\n      this.addGetter(constructor, attr, def);\n      this.addSetter(constructor, attr, validator, after);\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function(constructor, attr, def) {\n      var method = GET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function() {\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n    },\n    addSetter: function(constructor, attr, validator, after) {\n      // if (!validator && validator !== null) {\n      //   console.error(constructor, attr, 'has no validator.');\n      // }\n      var method = SET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function(val) {\n        if (validator && val !== undefined && val !== null) {\n          val = validator.call(this, val, attr);\n        }\n\n        this._setAttr(attr, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n    },\n    addComponentsGetterSetter: function(\n      constructor,\n      attr,\n      components,\n      validator,\n      after\n    ) {\n      var len = components.length,\n        capitalize = Konva.Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n      // getter\n      constructor.prototype[getter] = function() {\n        var ret = {};\n\n        for (n = 0; n < len; n++) {\n          component = components[n];\n          ret[component] = this.getAttr(attr + capitalize(component));\n        }\n\n        return ret;\n      };\n\n      // setter\n      constructor.prototype[setter] = function(val) {\n        var oldVal = this.attrs[attr],\n          key;\n\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        for (key in val) {\n          if (!val.hasOwnProperty(key)) {\n            continue;\n          }\n          this._setAttr(attr + capitalize(key), val[key]);\n        }\n\n        this._fireChangeEvent(attr, oldVal, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function(constructor, attr) {\n      var capitalizedAttr = Konva.Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n      constructor.prototype[attr] = function() {\n        // setting\n        if (arguments.length) {\n          this[setter](arguments[0]);\n          return this;\n        }\n        // getting\n        return this[getter]();\n      };\n    },\n    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n      Konva.Util.error('Adding deprecated ' + attr);\n\n      var method = GET + Konva.Util._capitalize(attr);\n\n      var message =\n        attr +\n        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n      constructor.prototype[method] = function() {\n        Konva.Util.error(message);\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n      this.addSetter(constructor, attr, validator, function() {\n        Konva.Util.error(message);\n      });\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function(constructor, methods) {\n      Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n        var method = constructor.prototype[newMethodName];\n        var oldGetter = GET + Konva.Util._capitalize(oldMethodName);\n        var oldSetter = SET + Konva.Util._capitalize(oldMethodName);\n\n        function deprecated() {\n          method.apply(this, arguments);\n          Konva.Util.error(\n            '\"' +\n              oldMethodName +\n              '\" method is deprecated and will be removed soon. Use \"\"' +\n              newMethodName +\n              '\" instead.'\n          );\n        }\n\n        constructor.prototype[oldMethodName] = deprecated;\n        constructor.prototype[oldGetter] = deprecated;\n        constructor.prototype[oldSetter] = deprecated;\n      });\n    },\n    afterSetFilter: function() {\n      this._filterUpToDate = false;\n    }\n  };\n\n  Konva.Validators = {\n    /**\n     * @return {number}\n     */\n    RGBComponent: function(val) {\n      if (val > 255) {\n        return 255;\n      } else if (val < 0) {\n        return 0;\n      }\n      return Math.round(val);\n    },\n    alphaComponent: function(val) {\n      if (val > 1) {\n        return 1;\n      } else if (val < 0.0001) {\n        // chrome does not honor alpha values of 0\n        return 0.0001;\n      }\n\n      return val;\n    },\n    _formatValue: function(val) {\n      if (Konva.Util._isString(val)) {\n        return '\"' + val + '\"';\n      }\n      if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n      }\n      if (Konva.Util._isBoolean(val)) {\n        return val;\n      }\n      return Object.prototype.toString.call(val);\n    },\n    getNumberValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isNumber(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a number.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getNumberOrAutoValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          var isNumber = Konva.Util._isNumber(val);\n          var isAuto = val === 'auto';\n\n          if (!(isNumber || isAuto)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a number or \"auto\".'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getStringValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isString(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a string.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getFunctionValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isFunction(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a function.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getNumberArrayValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isArray(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a array of numbers.'\n            );\n          } else {\n            val.forEach(function(item) {\n              if (!Konva.Util._isNumber(item)) {\n                Konva.Util.warn(\n                  '\"' +\n                    attr +\n                    '\" attribute has non numeric element ' +\n                    item +\n                    '. Make sure that all elements are numbers.'\n                );\n              }\n            });\n          }\n          return val;\n        };\n      }\n    },\n    getBooleanValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          var isBool = val === true || val === false;\n          if (!isBool) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a boolean.'\n            );\n          }\n          return val;\n        };\n      }\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  // CONSTANTS\n  var ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    DOT = '.',\n    EMPTY_STRING = '',\n    GET = 'get',\n    ID = 'id',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    CLONE_BLACK_LIST = ['id'],\n    TRANSFORM_CHANGE_STR = [\n      'xChange.konva',\n      'yChange.konva',\n      'scaleXChange.konva',\n      'scaleYChange.konva',\n      'skewXChange.konva',\n      'skewYChange.konva',\n      'rotationChange.konva',\n      'offsetXChange.konva',\n      'offsetYChange.konva',\n      'transformsEnabledChange.konva'\n    ].join(SPACE),\n    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\n\n  /**\n   * Node constructor. Nodes are entities that can be transformed, layered,\n   * and have bound events. The stage, layers, groups, and shapes all extend Node.\n   * @constructor\n   * @memberof Konva\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   */\n  Konva.Node = function(config) {\n    this._init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Node, {\n    _init: function(config) {\n      this._id = Konva.idCounter++;\n      this.eventListeners = {};\n      this.attrs = {};\n      this._cache = {};\n      this._filterUpToDate = false;\n      this._isUnderCache = false;\n      this.setAttrs(config);\n\n      // event bindings for cache handling\n      this.on(TRANSFORM_CHANGE_STR, function() {\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      });\n\n      this.on(SCALE_CHANGE_STR, function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      });\n\n      this.on('visibleChange.konva', function() {\n        this._clearSelfAndDescendantCache(VISIBLE);\n      });\n      this.on('listeningChange.konva', function() {\n        this._clearSelfAndDescendantCache(LISTENING);\n      });\n      this.on('opacityChange.konva', function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      });\n    },\n    _clearCache: function(attr) {\n      if (attr) {\n        delete this._cache[attr];\n      } else {\n        this._cache = {};\n      }\n    },\n    _getCache: function(attr, privateGetter) {\n      var cache = this._cache[attr];\n\n      // if not cached, we need to set it using the private getter method.\n      if (cache === undefined) {\n        this._cache[attr] = privateGetter.call(this);\n      }\n\n      return this._cache[attr];\n    },\n    /*\n     * when the logic for a cached result depends on ancestor propagation, use this\n     * method to clear self and children cache\n     */\n    _clearSelfAndDescendantCache: function(attr) {\n      this._clearCache(attr);\n\n      // skip clearing of node is cached with canvas\n      if (this._cache.canvas) {\n        return;\n      }\n      if (this.children) {\n        this.getChildren().each(function(node) {\n          node._clearSelfAndDescendantCache(attr);\n        });\n      }\n    },\n    /**\n     * clear cached canvas\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.clearCache();\n     */\n    clearCache: function() {\n      delete this._cache.canvas;\n      this._filterUpToDate = false;\n      this._clearSelfAndDescendantCache();\n      return this;\n    },\n    /**\n     *  cache node to improve drawing performance, apply filters, or create more accurate\n     *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n     *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n     *  properties. Look at [https://konvajs.github.io/docs/performance/Shape_Caching.html](link to demo page) for more information.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} [config]\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n     * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n     *  region for debugging purposes\n     * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.\n     * @returns {Konva.Node}\n     * @example\n     * // cache a shape with the x,y position of the bounding box at the center and\n     * // the width and height of the bounding box equal to the width and height of\n     * // the shape obtained from shape.width() and shape.height()\n     * image.cache();\n     *\n     * // cache a node and define the bounding box position and size\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200\n     * });\n     *\n     * // cache a node and draw a red border around the bounding box\n     * // for debugging purposes\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200,\n     *   offset : 10,\n     *   drawBorder: true\n     * });\n     */\n    cache: function(config) {\n      var conf = config || {};\n      var rect = {};\n\n      // don't call getClientRect if we have all attributes\n      // it means call it only if have one undefined\n      if (\n        conf.x === undefined ||\n        conf.y === undefined ||\n        conf.width === undefined ||\n        conf.height === undefined\n      ) {\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        });\n      }\n      var width = conf.width || rect.width,\n        height = conf.height || rect.height,\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? rect.x : conf.x,\n        y = conf.y === undefined ? rect.y : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false;\n\n      if (!width || !height) {\n        Konva.Util.error(\n          'Can not cache the node. Width or height of the node equals 0. Caching is skipped.'\n        );\n        return;\n      }\n\n      width += offset * 2;\n      height += offset * 2;\n\n      x -= offset;\n      y -= offset;\n\n      var cachedSceneCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedFilterCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedHitCanvas = new Konva.HitCanvas({\n          pixelRatio: 1,\n          width: width,\n          height: height\n        }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n\n      cachedHitCanvas.isCache = true;\n\n      this.clearCache();\n\n      sceneContext.save();\n      hitContext.save();\n\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n\n      // extra flag to skip on getAbsolute opacity calc\n      this._isUnderCache = true;\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this.drawScene(cachedSceneCanvas, this, true);\n      this.drawHit(cachedHitCanvas, this, true);\n      this._isUnderCache = false;\n\n      sceneContext.restore();\n      hitContext.restore();\n\n      // this will draw a red border around the cached box for\n      // debugging purposes\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n\n      this._cache.canvas = {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      };\n\n      return this;\n    },\n    /**\n     * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n     * The rectangle position is relative to parent container.\n     * The purpose of the method is similar to getBoundingClientRect API of the DOM.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?\n     * @param {Boolean} [config.skipShadow] should we apply shadow to the node for calculating bound box?\n     * @param {Boolean} [config.skipStroke] should we apply stroke to the node for calculating bound box?\n     * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     * var rect = new Konva.Rect({\n     *      width : 100,\n     *      height : 100,\n     *      x : 50,\n     *      y : 50,\n     *      strokeWidth : 4,\n     *      stroke : 'black',\n     *      offsetX : 50,\n     *      scaleY : 2\n     * });\n     *\n     * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n     * rect.getClientRect({ skipTransform: true});\n     * // returns {\n     * //     x : -2,   // two pixels for stroke / 2\n     * //     y : -2,\n     * //     width : 104, // increased by 4 for stroke\n     * //     height : 104\n     * //}\n     *\n     * // get client rect with transformation applied\n     * rect.getClientRect();\n     * // returns Object {x: -2, y: 46, width: 104, height: 208}\n     */\n    getClientRect: function() {\n      // abstract method\n      // redefine in Container and Shape\n      throw new Error('abstract \"getClientRect\" method call');\n    },\n    _transformedRect: function(rect, top) {\n      var points = [\n        { x: rect.x, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y + rect.height },\n        { x: rect.x, y: rect.y + rect.height }\n      ];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function(point) {\n        var transformed = trans.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    },\n    _drawCachedSceneCanvas: function(context) {\n      context.save();\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\n      var cacheCanvas = this._getCachedSceneCanvas();\n      var ratio = cacheCanvas.pixelRatio;\n\n      context.drawImage(\n        cacheCanvas._canvas,\n        0,\n        0,\n        cacheCanvas.width / ratio,\n        cacheCanvas.height / ratio\n      );\n      context.restore();\n    },\n    _drawCachedHitCanvas: function(context) {\n      var cachedCanvas = this._cache.canvas,\n        hitCanvas = cachedCanvas.hit;\n      context.save();\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n      context.drawImage(hitCanvas._canvas, 0, 0);\n      context.restore();\n    },\n    _getCachedSceneCanvas: function() {\n      var filters = this.filters(),\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n\n          try {\n            len = filters.length;\n            filterContext.clear();\n\n            // copy cached canvas onto filter context\n            filterContext.drawImage(\n              sceneCanvas._canvas,\n              0,\n              0,\n              sceneCanvas.getWidth() / ratio,\n              sceneCanvas.getHeight() / ratio\n            );\n            imageData = filterContext.getImageData(\n              0,\n              0,\n              filterCanvas.getWidth(),\n              filterCanvas.getHeight()\n            );\n\n            // apply filters to filter context\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n              if (typeof filter !== 'function') {\n                Konva.Util.error(\n                  'Filter should be type of function, but got ' +\n                    typeof filter +\n                    ' insted. Please check correct filters'\n                );\n                continue;\n              }\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Konva.Util.error('Unable to apply filter. ' + e.message);\n          }\n\n          this._filterUpToDate = true;\n        }\n\n        return filterCanvas;\n      }\n      return sceneCanvas;\n    },\n    /**\n     * bind events to the node. KonvaJS supports mouseover, mousemove,\n     *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, contextmenu, click, dblclick, touchstart, touchmove,\n     *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n     *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu\n     *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n     *  and contentDblTap.  Pass in a string of events delimited by a space to bind multiple events at once\n     *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n     *  event by name such as 'click.foobar'.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n     * @param {Function} handler The handler function is passed an event object\n     * @returns {Konva.Node}\n     * @example\n     * // add click listener\n     * node.on('click', function() {\n     *   console.log('you clicked me!');\n     * });\n     *\n     * // get the target node\n     * node.on('click', function(evt) {\n     *   console.log(evt.target);\n     * });\n     *\n     * // stop event propagation\n     * node.on('click', function(evt) {\n     *   evt.cancelBubble = true;\n     * });\n     *\n     * // bind multiple listeners\n     * node.on('click touchstart', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // namespace listener\n     * node.on('click.foo', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // get the event type\n     * node.on('click tap', function(evt) {\n     *   var eventType = evt.type;\n     * });\n     *\n     * // get native event object\n     * node.on('click tap', function(evt) {\n     *   var nativeEvent = evt.evt;\n     * });\n     *\n     * // for change events, get the old and new val\n     * node.on('xChange', function(evt) {\n     *   var oldVal = evt.oldVal;\n     *   var newVal = evt.newVal;\n     * });\n     *\n     * // get event targets\n     * // with event delegations\n     * layer.on('click', 'Group', function(evt) {\n     *   var shape = evt.target;\n     *   var group = evtn.currentTarger;\n     * });\n     */\n    on: function(evtStr, handler) {\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n      var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      /*\n       * loop through types and attach event listeners to\n       * each one.  eg. 'click mouseover.namespace mouseout'\n       * will create three event bindings\n       */\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1] || EMPTY_STRING;\n\n        // create events array if it doesn't exist\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n\n      return this;\n    },\n    /**\n     * remove event bindings from the node. Pass in a string of\n     *  event types delimmited by a space to remove multiple event\n     *  bindings at once such as 'mousedown mouseup mousemove'.\n     *  include a namespace to remove an event binding by name\n     *  such as 'click.foobar'. If you only give a name like '.foobar',\n     *  all events in that namespace will be removed.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n     * @returns {Konva.Node}\n     * @example\n     * // remove listener\n     * node.off('click');\n     *\n     * // remove multiple listeners\n     * node.off('click touchstart');\n     *\n     * // remove listener by name\n     * node.off('click.foo');\n     */\n    off: function(evtStr, callback) {\n      var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      if (!evtStr) {\n        // remove all events\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1];\n\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name, callback);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name, callback);\n          }\n        }\n      }\n      return this;\n    },\n    // some event aliases for third party integration like HammerJS\n    dispatchEvent: function(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    },\n    addEventListener: function(type, handler) {\n      // we have to pass native event to handler\n      this.on(type, function(evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    },\n    removeEventListener: function(type) {\n      this.off(type);\n      return this;\n    },\n    // like node.on\n    _delegate: function(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function(evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n        for (var i = 0; i < targets.length; i++) {\n          evt = Konva.Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    },\n    /**\n     * remove self from parent, but don't destroy. You can reuse node later.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.remove();\n     */\n    remove: function() {\n      var parent = this.getParent();\n\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n        parent._setChildrenIndices();\n        delete this.parent;\n      }\n\n      // every cached attr that is calculated via node tree\n      // traversal must be cleared when removing a node\n      this._clearSelfAndDescendantCache(STAGE);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      this._clearSelfAndDescendantCache(VISIBLE);\n      this._clearSelfAndDescendantCache(LISTENING);\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      return this;\n    },\n    /**\n     * remove and destroy a node. Kill it and delete forever! You should not reuse node after destroy().\n     * @method\n     * @memberof Konva.Node.prototype\n     * @example\n     * node.destroy();\n     */\n    destroy: function() {\n      // remove from ids and names hashes\n      Konva._removeId(this.getId());\n\n      // remove all names\n      var names = (this.getName() || '').split(/\\s/g);\n      for (var i = 0; i < names.length; i++) {\n        var subname = names[i];\n        Konva._removeName(subname, this._id);\n      }\n\n      this.remove();\n      return this;\n    },\n    /**\n     * get attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @returns {Integer|String|Object|Array}\n     * @example\n     * var x = node.getAttr('x');\n     */\n    getAttr: function(attr) {\n      var method = GET + Konva.Util._capitalize(attr);\n      if (Konva.Util._isFunction(this[method])) {\n        return this[method]();\n      }\n      // otherwise get directly\n      return this.attrs[attr];\n    },\n    /**\n     * get ancestors\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Collection}\n     * @example\n     * shape.getAncestors().each(function(node) {\n     *   console.log(node.getId());\n     * })\n     */\n    getAncestors: function() {\n      var parent = this.getParent(),\n        ancestors = new Konva.Collection();\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n\n      return ancestors;\n    },\n    /**\n     * get attrs object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAttrs: function() {\n      return this.attrs || {};\n    },\n    /**\n     * set multiple attrs at once using an object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config object containing key value pairs\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttrs({\n     *   x: 5,\n     *   fill: 'red'\n     * });\n     */\n    setAttrs: function(config) {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Konva.Util._capitalize(key);\n        // use setter if available\n        if (Konva.Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          // otherwise set directly\n          this._setAttr(key, config[key]);\n        }\n      }\n      return this;\n    },\n    /**\n     * determine if node is listening for events by taking into account ancestors.\n     *\n     * Parent    | Self      | isListening\n     * listening | listening |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n     *\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    isListening: function() {\n      return this._getCache(LISTENING, this._isListening);\n    },\n    _isListening: function() {\n      var listening = this.getListening(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (listening === 'inherit') {\n        if (parent) {\n          return parent.isListening();\n        } else {\n          return true;\n        }\n      } else {\n        return listening;\n      }\n    },\n    /**\n     * determine if node is visible by taking into account ancestors.\n     *\n     * Parent    | Self      | isVisible\n     * visible   | visible   |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n\n      * @method\n      * @memberof Konva.Node.prototype\n      * @returns {Boolean}\n      */\n    isVisible: function() {\n      return this._getCache(VISIBLE, this._isVisible);\n    },\n    _isVisible: function(relativeTo) {\n      var visible = this.getVisible(),\n        parent = this.getParent();\n\n      if (relativeTo === parent && visible === 'inherit') {\n        return true;\n      } else if (relativeTo === parent) {\n        return visible;\n      }\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (visible === 'inherit') {\n        if (parent) {\n          return parent._isVisible(relativeTo);\n        } else {\n          return true;\n        }\n      } else {\n        return visible;\n      }\n    },\n    /**\n     * determine if listening is enabled by taking into account descendants.  If self or any children\n     * have _isListeningEnabled set to true, then self also has listening enabled.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    shouldDrawHit: function() {\n      var layer = this.getLayer();\n\n      return (\n        (!layer && this.isListening() && this.isVisible()) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isListening() &&\n          this.isVisible())\n      );\n    },\n    /**\n     * show node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    show: function() {\n      this.setVisible(true);\n      return this;\n    },\n    /**\n     * hide node.  Hidden nodes are no longer detectable\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    hide: function() {\n      this.setVisible(false);\n      return this;\n    },\n    /**\n     * get zIndex relative to the node's siblings who share the same parent\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getZIndex: function() {\n      return this.index || 0;\n    },\n    /**\n     * get absolute z-index which takes into account sibling\n     *  and ancestor indices\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getAbsoluteZIndex: function() {\n      var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().toArray());\n          }\n\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n\n      return index;\n    },\n    /**\n     * get node depth in node tree.  Returns an integer.\n     *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n     *  be >= 2\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getDepth: function() {\n      var depth = 0,\n        parent = this.parent;\n\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n      return depth;\n    },\n    setPosition: function(pos) {\n      this.setX(pos.x);\n      this.setY(pos.y);\n      return this;\n    },\n    getPosition: function() {\n      return {\n        x: this.getX(),\n        y: this.getY()\n      };\n    },\n    /**\n     * get absolute position relative to the top left corner of the stage container div\n     * or relative to passed node\n     * @method\n     * @param {Object} [top] optional parent node\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAbsolutePosition: function(top) {\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Konva.Transform(),\n        offset = this.offset();\n\n      // clone the matrix array\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n\n      return absoluteTransform.getTranslation();\n    },\n    /**\n     * set absolute position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Konva.Node}\n     */\n    setAbsolutePosition: function(pos) {\n      var origTrans = this._clearTransform(),\n        it;\n\n      // don't clear translation\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n\n      // unravel transform\n      it = this.getAbsoluteTransform();\n\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n\n      this.setPosition({ x: pos.x, y: pos.y });\n      this._setTransform(origTrans);\n\n      return this;\n    },\n    _setTransform: function(trans) {\n      var key;\n\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    },\n    _clearTransform: function() {\n      var trans = {\n        x: this.getX(),\n        y: this.getY(),\n        rotation: this.getRotation(),\n        scaleX: this.getScaleX(),\n        scaleY: this.getScaleY(),\n        offsetX: this.getOffsetX(),\n        offsetY: this.getOffsetY(),\n        skewX: this.getSkewX(),\n        skewY: this.getSkewY()\n      };\n\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      // return original transform\n      return trans;\n    },\n    /**\n     * move node by an amount relative to its current position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} change\n     * @param {Number} change.x\n     * @param {Number} change.y\n     * @returns {Konva.Node}\n     * @example\n     * // move node in x direction by 1px and y direction by 2px\n     * node.move({\n     *   x: 1,\n     *   y: 2)\n     * });\n     */\n    move: function(change) {\n      var changeX = change.x,\n        changeY = change.y,\n        x = this.getX(),\n        y = this.getY();\n\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n\n      this.setPosition({ x: x, y: y });\n      return this;\n    },\n    _eachAncestorReverse: function(func, top) {\n      var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n      // if top node is defined, and this node is top node,\n      // there's no need to build a family tree.  just execute\n      // func with this because it will be the only node\n      if (top && top._id === this._id) {\n        func(this);\n        return;\n      }\n\n      family.unshift(this);\n\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n\n      len = family.length;\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    },\n    /**\n     * rotate node by an amount in degrees relative to its current rotation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} theta\n     * @returns {Konva.Node}\n     */\n    rotate: function(theta) {\n      this.setRotation(this.getRotation() + theta);\n      return this;\n    },\n    /**\n     * move node to the top of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToTop: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    },\n    /**\n     * move node up\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean} flag is moved or not\n     */\n    moveUp: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node down\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveDown: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node to the bottom of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToBottom: function() {\n      if (!this.parent) {\n        Konva.Util.warn(\n          'Node has no parent. moveToBottom function is ignored.'\n        );\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * set zIndex relative to siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Integer} zIndex\n     * @returns {Konva.Node}\n     */\n    setZIndex: function(zIndex) {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n      this.parent._setChildrenIndices();\n      return this;\n    },\n    /**\n     * get absolute opacity\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     */\n    getAbsoluteOpacity: function() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    },\n    _getAbsoluteOpacity: function() {\n      var absOpacity = this.getOpacity();\n      var parent = this.getParent();\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= this.getParent().getAbsoluteOpacity();\n      }\n      return absOpacity;\n    },\n    /**\n     * move node to another container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Container} newContainer\n     * @returns {Konva.Node}\n     * @example\n     * // move node from current layer into layer2\n     * node.moveTo(layer2);\n     */\n    moveTo: function(newContainer) {\n      // do nothing if new container is already parent\n      if (this.getParent() !== newContainer) {\n        // this.remove my be overrided by drag and drop\n        // buy we need original\n        (this.__originalRemove || this.remove).call(this);\n        newContainer.add(this);\n      }\n      return this;\n    },\n    /**\n     * convert Node into an object for serialization.  Returns an object.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    toObject: function() {\n      var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue;\n\n      obj.attrs = {};\n\n      for (key in attrs) {\n        val = attrs[key];\n        getter = typeof this[key] === 'function' && this[key];\n        // remove attr value so that we can extract the default value from the getter\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        // restore attr value\n        attrs[key] = val;\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n\n      obj.className = this.getClassName();\n      return Konva.Util._prepareToStringify(obj);\n    },\n    /**\n     * convert Node into a JSON string.  Returns a JSON string.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}}\n     */\n    toJSON: function() {\n      return JSON.stringify(this.toObject());\n    },\n    /**\n     * get parent container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    getParent: function() {\n      return this.parent;\n    },\n    /**\n     * get all ancestros (parent then parent of the parent, etc) of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Array} [ancestors]\n     * @example\n     * // get one of the parent group\n     * var parentGroups = node.findAncestors('Group');\n     */\n    findAncestors: function(selector, includeSelf, stopNode) {\n      var res = [];\n\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n      var ancestor = this.parent;\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n        ancestor = ancestor.parent;\n      }\n      return res;\n    },\n    /**\n     * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Konva.Node} ancestor\n     * @example\n     * // get one of the parent group\n     * var group = node.findAncestors('.mygroup');\n     */\n    findAncestor: function(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    },\n    // is current node match passed selector?\n    _isMatch: function(selector) {\n      if (!selector) {\n        return false;\n      }\n      var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this._get(sel).length !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * get layer ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Layer}\n     */\n    getLayer: function() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    },\n    /**\n     * get stage ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Stage}\n     */\n    getStage: function() {\n      return this._getCache(STAGE, this._getStage);\n    },\n    _getStage: function() {\n      var parent = this.getParent();\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    },\n    /**\n     * fire event\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n     * @param {Event} [evt] event object\n     * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n     *  not bubbling.  Setting the value to true will result in the event bubbling.\n     * @returns {Konva.Node}\n     * @example\n     * // manually fire click event\n     * node.fire('click');\n     *\n     * // fire custom event\n     * node.fire('foo');\n     *\n     * // fire custom event with custom event object\n     * node.fire('foo', {\n     *   bar: 10\n     * });\n     *\n     * // fire click event that bubbles\n     * node.fire('click', null, true);\n     */\n    fire: function(eventType, evt, bubble) {\n      evt = evt || {};\n      evt.target = evt.target || this;\n      // bubble\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        // no bubble\n        this._fire(eventType, evt);\n      }\n      return this;\n    },\n    /**\n     * get absolute transform of the node which takes into\n     *  account its ancestor transforms\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteTransform: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    },\n    _getAbsoluteTransform: function(top) {\n      var at = new Konva.Transform();\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        var transformsEnabled = node.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(\n            node.getX() - node.getOffsetX(),\n            node.getY() - node.getOffsetY()\n          );\n        }\n      }, top);\n      return at;\n    },\n    /**\n     * get absolute scale of the node which takes into\n     *  account its ancestor scales\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteScale: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteScale(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n      }\n    },\n    _getAbsoluteScale: function(top) {\n      // this is special logic for caching with some shapes with shadow\n      var parent = this;\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n        parent = parent.getParent();\n      }\n\n      var scaleX = 1,\n        scaleY = 1;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        scaleX *= node.scaleX();\n        scaleY *= node.scaleY();\n      }, top);\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    },\n    /**\n     * get transform of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getTransform: function() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    },\n    _getTransform: function() {\n      var m = new Konva.Transform(),\n        x = this.getX(),\n        y = this.getY(),\n        rotation = Konva.getAngle(this.getRotation()),\n        scaleX = this.getScaleX(),\n        scaleY = this.getScaleY(),\n        skewX = this.getSkewX(),\n        skewY = this.getSkewY(),\n        offsetX = this.getOffsetX(),\n        offsetY = this.getOffsetY();\n\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n\n      return m;\n    },\n    /**\n     * clone node.  Returns a new Node instance with identical attributes.  You can also override\n     *  the node properties with an object literal, enabling you to use an existing node as a template\n     *  for another node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} obj override attrs\n     * @returns {Konva.Node}\n     * @example\n     * // simple clone\n     * var clone = node.clone();\n     *\n     * // clone a node and override the x position\n     * var clone = rect.clone({\n     *   x: 5\n     * });\n     */\n    clone: function(obj) {\n      // instantiate new node\n      var attrs = Konva.Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n      // filter black attrs\n      for (var i in CLONE_BLACK_LIST) {\n        var blockAttr = CLONE_BLACK_LIST[i];\n        delete attrs[blockAttr];\n      }\n      // apply attr overrides\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n\n      var node = new this.constructor(attrs);\n      // copy over listeners\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n          /*\n           * don't include konva namespaced listeners because\n           *  these are generated by the constructors\n           */\n          if (listener.name.indexOf(KONVA) < 0) {\n            // if listeners array doesn't exist, then create it\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n      return node;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var box = this.getClientRect();\n\n      var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : box.x,\n        y = config.y !== undefined ? config.y : box.y,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || box.width || (stage ? stage.getWidth() : 0),\n          height:\n            config.height || box.height || (stage ? stage.getHeight() : 0),\n          pixelRatio: pixelRatio\n        }),\n        context = canvas.getContext();\n\n      context.save();\n\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n\n      this.drawScene(canvas);\n      context.restore();\n\n      return canvas;\n    },\n    /**\n     * converts node into an canvas element.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var canvas = node.toCanvas();\n     */\n    toCanvas: function(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    },\n    /**\n     * Creates a composite data URL (base64 string). If MIME type is not\n     * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n     * level as quality (range 0.0 - 1.0)\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @param {Number} [config.pixelRatio] pixelRatio of output image url. Default is 1\n     * @returns {String}\n     */\n    toDataURL: function(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n      var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n      if (config.callback) {\n        config.callback(url);\n      }\n      return url;\n    },\n    /**\n     * converts node into an image.  Since the toImage\n     *  method is asynchronous, a callback is required.  toImage is most commonly used\n     *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var image = node.toImage({\n     *   callback: function(img) {\n     *     // do stuff with img\n     *   }\n     * });\n     */\n    toImage: function(config) {\n      if (!config || !config.callback) {\n        throw 'callback required for toImage method config argument';\n      }\n      var callback = config.callback;\n      delete config.callback;\n      Konva.Util._getImage(this.toDataURL(config), function(img) {\n        callback(img);\n      });\n    },\n    setSize: function(size) {\n      this.setWidth(size.width);\n      this.setHeight(size.height);\n      return this;\n    },\n    getSize: function() {\n      return {\n        width: this.getWidth(),\n        height: this.getHeight()\n      };\n    },\n    getWidth: function() {\n      return this.attrs.width || 0;\n    },\n    getHeight: function() {\n      return this.attrs.height || 0;\n    },\n    /**\n     * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getClassName: function() {\n      return this.className || this.nodeType;\n    },\n    /**\n     * get the node type, which may return Stage, Layer, Group, or Node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getType: function() {\n      return this.nodeType;\n    },\n    getDragDistance: function() {\n      // compare with undefined because we need to track 0 value\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    },\n    _get: function(selector) {\n      return this.className === selector || this.nodeType === selector\n        ? [this]\n        : [];\n    },\n    _off: function(type, name, callback) {\n      var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        handler = evtListeners[i].handler;\n\n        // the following two conditions must be true in order to remove a handler:\n        // 1) the current event name cannot be konva unless the event name is konva\n        //    this enables developers to force remove a konva specific listener for whatever reason\n        // 2) an event name is not specified, or if one is specified, it matches the current event name\n        if (\n          (evtName !== 'konva' || name === 'konva') &&\n          (!name || evtName === name) &&\n          (!callback || callback === handler)\n        ) {\n          evtListeners.splice(i, 1);\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n          i--;\n        }\n      }\n    },\n    _fireChangeEvent: function(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    },\n    setId: function(id) {\n      var oldId = this.getId();\n\n      Konva._removeId(oldId);\n      Konva._addId(this, id);\n      this._setAttr(ID, id);\n      return this;\n    },\n    setName: function(name) {\n      var oldNames = (this.getName() || '').split(/\\s/g);\n      var newNames = (name || '').split(/\\s/g);\n      var subname, i;\n      // remove all subnames\n      for (i = 0; i < oldNames.length; i++) {\n        subname = oldNames[i];\n        if (newNames.indexOf(subname) === -1 && subname) {\n          Konva._removeName(subname, this._id);\n        }\n      }\n\n      // add new names\n      for (i = 0; i < newNames.length; i++) {\n        subname = newNames[i];\n        if (oldNames.indexOf(subname) === -1 && subname) {\n          Konva._addName(this, subname);\n        }\n      }\n\n      this._setAttr(NAME, name);\n      return this;\n    },\n    // naming methods\n    /**\n     * add name to node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red');\n     * node.addName('selected');\n     * node.name(); // return 'red selected'\n     */\n    addName: function(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.setName(newName);\n      }\n      return this;\n    },\n    /**\n     * check is node has name\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Boolean}\n     * @example\n     * node.name('red');\n     * node.hasName('red');   // return true\n     * node.hasName('selected'); // return false\n     */\n    hasName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    },\n    /**\n     * remove name from node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red selected');\n     * node.removeName('selected');\n     * node.hasName('selected'); // return false\n     * node.name(); // return 'red'\n     */\n    removeName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.setName(names.join(' '));\n      }\n      return this;\n    },\n    /**\n     * set attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @param {*} val\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttr('x', 5);\n     */\n    setAttr: function(attr, val) {\n      var method = SET + Konva.Util._capitalize(attr),\n        func = this[method];\n\n      if (Konva.Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        // otherwise set directly\n        this._setAttr(attr, val);\n      }\n      return this;\n    },\n    _setAttr: function(key, val) {\n      var oldVal;\n      oldVal = this.attrs[key];\n      var same = oldVal === val;\n      if (same && !Konva.Util.isObject(val)) {\n        return;\n      }\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n      this._fireChangeEvent(key, oldVal, val);\n    },\n    _setComponentAttr: function(key, component, val) {\n      var oldVal;\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n\n        if (!oldVal) {\n          // set value to default value using getAttr\n          this.attrs[key] = this.getAttr(key);\n        }\n\n        this.attrs[key][component] = val;\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    },\n    _fireAndBubble: function(eventType, evt, compareShape) {\n      var okayToRun = true;\n\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n\n      if (\n        eventType === MOUSEENTER &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      } else if (\n        eventType === MOUSELEAVE &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      }\n      if (okayToRun) {\n        this._fire(eventType, evt);\n\n        // simulate event bubbling\n        var stopBubble =\n          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n          (compareShape &&\n            compareShape.isAncestorOf &&\n            compareShape.isAncestorOf(this) &&\n            !compareShape.isAncestorOf(this.parent));\n        if (\n          ((evt && !evt.cancelBubble) || !evt) &&\n          this.parent &&\n          this.parent.isListening() &&\n          !stopBubble\n        ) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(\n              this.parent,\n              eventType,\n              evt,\n              compareShape.parent\n            );\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    },\n    _fire: function(eventType, evt) {\n      var events = this.eventListeners[eventType],\n        i;\n\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n\n      if (events) {\n        for (i = 0; i < events.length; i++) {\n          events[i].handler.call(this, evt);\n        }\n      }\n    },\n    /**\n     * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    draw: function() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  });\n\n  /**\n   * create node with JSON string or an Object.  De-serializtion does not generate custom\n   *  shape drawing functions, images, or event handlers (this would make the\n   *  serialized object huge).  If your app uses custom shapes, images, and\n   *  event handlers (it probably does), then you need to select the appropriate\n   *  shapes after loading the stage and set these properties via on(), setSceneFunc(),\n   *  and setImage() methods\n   * @method\n   * @memberof Konva.Node\n   * @param {String|Object} json string or object\n   * @param {Element} [container] optional container dom element used only if you're\n   *  creating a stage node\n   */\n  Konva.Node.create = function(data, container) {\n    if (Konva.Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  };\n  Konva.Node._createNode = function(obj, container) {\n    var className = Konva.Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n\n    // if container was passed in, add it to attrs\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    no = new Konva[className](obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(this._createNode(children[n]));\n      }\n    }\n\n    return no;\n  };\n\n  // =========================== add getters setters ===========================\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n  /**\n   * get/set node position relative to parent\n   * @name position\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} pos\n   * @param {Number} pos.x\n   * @param {Number} pos.y\n   * @returns {Object}\n   * @example\n   * // get position\n   * var position = node.position();\n   *\n   * // set position\n   * node.position({\n   *   x: 5\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'x',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set x position\n   * @name x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Object}\n   * @example\n   * // get x\n   * var x = node.x();\n   *\n   * // set x\n   * node.x(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'y',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set y position\n   * @name y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Integer}\n   * @example\n   * // get y\n   * var y = node.y();\n   *\n   * // set y\n   * node.y(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'globalCompositeOperation',\n    'source-over',\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set globalCompositeOperation of a shape\n   * @name globalCompositeOperation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} type\n   * @returns {String}\n   * @example\n   * // get globalCompositeOperation\n   * var globalCompositeOperation = shape.globalCompositeOperation();\n   *\n   * // set globalCompositeOperation\n   * shape.globalCompositeOperation('source-in');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'opacity',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set opacity.  Opacity values range from 0 to 1.\n   *  A node with an opacity of 0 is fully transparent, and a node\n   *  with an opacity of 1 is fully opaque\n   * @name opacity\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} opacity\n   * @returns {Number}\n   * @example\n   * // get opacity\n   * var opacity = node.opacity();\n   *\n   * // set opacity\n   * node.opacity(0.5);\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'name');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\n  /**\n   * get/set name\n   * @name name\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} name\n   * @returns {String}\n   * @example\n   * // get name\n   * var name = node.name();\n   *\n   * // set name\n   * node.name('foo');\n   *\n   * // also node may have multiple names (as css classes)\n   * node.name('foo bar');\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'id');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\n  /**\n   * get/set id. Id is global for whole page.\n   * @name id\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} id\n   * @returns {String}\n   * @example\n   * // get id\n   * var name = node.id();\n   *\n   * // set id\n   * node.id('foo');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'rotation',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set rotation in degrees\n   * @name rotation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} rotation\n   * @returns {Number}\n   * @example\n   * // get rotation in degrees\n   * var rotation = node.rotation();\n   *\n   * // set rotation in degrees\n   * node.rotation(45);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\n  /**\n   * get/set scale\n   * @name scale\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get scale\n   * var scale = node.scale();\n   *\n   * // set scale\n   * shape.scale({\n   *   x: 2\n   *   y: 3\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'scaleX',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set scale x\n   * @name scaleX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale x\n   * var scaleX = node.scaleX();\n   *\n   * // set scale x\n   * node.scaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'scaleY',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set scale y\n   * @name scaleY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale y\n   * var scaleY = node.scaleY();\n   *\n   * // set scale y\n   * node.scaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\n  /**\n   * get/set skew\n   * @name skew\n   * @param {Object} skew\n   * @param {Number} skew.x\n   * @param {Number} skew.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get skew\n   * var skew = node.skew();\n   *\n   * // set skew\n   * node.skew({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'skewX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set skew x\n   * @name skewX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew x\n   * var skewX = node.skewX();\n   *\n   * // set skew x\n   * node.skewX(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'skewY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set skew y\n   * @name skewY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew y\n   * var skewY = node.skewY();\n   *\n   * // set skew y\n   * node.skewY(3);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\n  /**\n   * get/set offset.  Offsets the default position and rotation point\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get offset\n   * var offset = node.offset();\n   *\n   * // set offset\n   * node.offset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'offsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set offset x\n   * @name offsetX\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get offset x\n   * var offsetX = node.offsetX();\n   *\n   * // set offset x\n   * node.offsetX(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'offsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set offset y\n   * @name offsetY\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get offset y\n   * var offsetY = node.offsetY();\n   *\n   * // set offset y\n   * node.offsetY(3);\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'dragDistance',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\n  /**\n   * get/set drag distance\n   * @name dragDistance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} distance\n   * @returns {Number}\n   * @example\n   * // get drag distance\n   * var dragDistance = node.dragDistance();\n   *\n   * // set distance\n   * // node starts dragging only if pointer moved more then 3 pixels\n   * node.dragDistance(3);\n   * // or set globally\n   * Konva.dragDistance = 3;\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'width',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n  /**\n   * get/set width\n   * @name width\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get width\n   * var width = node.width();\n   *\n   * // set width\n   * node.width(100);\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'height',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n  /**\n   * get/set height\n   * @name height\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get height\n   * var height = node.height();\n   *\n   * // set height\n   * node.height(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit', function(\n    val\n  ) {\n    var isValid = val === true || val === false || val === 'inherit';\n    if (!isValid) {\n      Konva.Util.warn(\n        val +\n          ' is a not valid value for \"listening\" attribute. The value may be true, false or \"inherit\".'\n      );\n    }\n    return val;\n  });\n  /**\n   * get/set listenig attr.  If you need to determine if a node is listening or not\n   *   by taking into account its parents, use the isListening() method\n   * @name listening\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n   * @returns {Boolean|String}\n   * @example\n   * // get listening attr\n   * var listening = node.listening();\n   *\n   * // stop listening for events\n   * node.listening(false);\n   *\n   * // listen for events\n   * node.listening(true);\n   *\n   * // listen to events according to the parent\n   * node.listening('inherit');\n   */\n\n  /**\n   * get/set preventDefault\n   * By default all shapes will prevent default behaviour\n   * of a browser on a pointer move or tap.\n   * that will prevent native scrolling when you are trying to drag&drop a node\n   * but sometimes you may need to enable default actions\n   * in that case you can set the property to false\n   * @name preventDefault\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} preventDefault\n   * @returns {Number}\n   * @example\n   * // get preventDefault\n   * var shouldPrevent = shape.preventDefault();\n   *\n   * // set preventDefault\n   * shape.preventDefault(false);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'preventDefault',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'filters', null, function(val) {\n    this._filterUpToDate = false;\n    return val;\n  });\n  /**\n   * get/set filters.  Filters are applied to cached canvases\n   * @name filters\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Array} filters array of filters\n   * @returns {Array}\n   * @example\n   * // get filters\n   * var filters = node.filters();\n   *\n   * // set a single filter\n   * node.cache();\n   * node.filters([Konva.Filters.Blur]);\n   *\n   * // set multiple filters\n   * node.cache();\n   * node.filters([\n   *   Konva.Filters.Blur,\n   *   Konva.Filters.Sepia,\n   *   Konva.Filters.Invert\n   * ]);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit', function(\n    val\n  ) {\n    var isValid = val === true || val === false || val === 'inherit';\n    if (!isValid) {\n      Konva.Util.warn(\n        val +\n          ' is a not valid value for \"visible\" attribute. The value may be true, false or \"inherit\".'\n      );\n    }\n    return val;\n  });\n  /**\n   * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n   *   If you need to determine if a node is visible or not\n   *   by taking into account its parents, use the isVisible() method\n   * @name visible\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} visible\n   * @returns {Boolean|String}\n   * @example\n   * // get visible attr\n   * var visible = node.visible();\n   *\n   * // make invisible\n   * node.visible(false);\n   *\n   * // make visible\n   * node.visible(true);\n   *\n   * // make visible according to the parent\n   * node.visible('inherit');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'transformsEnabled',\n    'all',\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n   *  is \"all\"\n   * @name transformsEnabled\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} enabled\n   * @returns {String}\n   * @example\n   * // enable position transform only to improve draw performance\n   * node.transformsEnabled('position');\n   *\n   * // enable all transforms\n   * node.transformsEnabled('all');\n   */\n\n  /**\n   * get/set node size\n   * @name size\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} size\n   * @param {Number} size.width\n   * @param {Number} size.height\n   * @returns {Object}\n   * @example\n   * // get node size\n   * var size = node.size();\n   * var x = size.x;\n   * var y = size.y;\n   *\n   * // set size\n   * node.size({\n   *   width: 100,\n   *   height: 200\n   * });\n   */\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\n  Konva.Factory.backCompat(Konva.Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation'\n  });\n\n  Konva.Collection.mapMethods(Konva.Node);\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Grayscale Filter\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Grayscale]);\n   */\n  Konva.Filters.Grayscale = function(imageData) {\n    var data = imageData.data,\n      len = data.length,\n      i,\n      brightness;\n\n    for (i = 0; i < len; i += 4) {\n      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n      // red\n      data[i] = brightness;\n      // green\n      data[i + 1] = brightness;\n      // blue\n      data[i + 2] = brightness;\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Brighten Filter.\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Brighten]);\n   * node.brightness(0.8);\n   */\n  Konva.Filters.Brighten = function(imageData) {\n    var brightness = this.brightness() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] += brightness;\n      // green\n      data[i + 1] += brightness;\n      // blue\n      data[i + 2] += brightness;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'brightness',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n   *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n   * @name brightness\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} brightness value between -1 and 1\n   * @returns {Number}\n   */\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Invert Filter\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Invert]);\n   */\n  Konva.Filters.Invert = function(imageData) {\n    var data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] = 255 - data[i];\n      // green\n      data[i + 1] = 255 - data[i + 1];\n      // blue\n      data[i + 2] = 255 - data[i + 2];\n    }\n  };\n})();\n\n/*\n the Gauss filter\n master repo: https://github.com/pavelpower/kineticjsGaussFilter\n*/\n(function(Konva) {\n  'use strict';\n  /*\n\n     StackBlur - a fast almost Gaussian Blur For Canvas\n\n     Version:   0.5\n     Author:    Mario Klingemann\n     Contact:   mario@quasimondo.com\n     Website:   http://www.quasimondo.com/StackBlurForCanvas\n     Twitter:   @quasimondo\n\n     In case you find this class useful - especially in commercial projects -\n     I am not totally unhappy for a small donation to my PayPal account\n     mario@quasimondo.de\n\n     Or support me on flattr:\n     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n     Copyright (c) 2010 Mario Klingemann\n\n     Permission is hereby granted, free of charge, to any person\n     obtaining a copy of this software and associated documentation\n     files (the \"Software\"), to deal in the Software without\n     restriction, including without limitation the rights to use,\n     copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the\n     Software is furnished to do so, subject to the following\n     conditions:\n\n     The above copyright notice and this permission notice shall be\n     included in all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n     OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n  function BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n\n  var mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n  ];\n\n  var shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n  ];\n\n  function filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data,\n      width = imageData.width,\n      height = imageData.height;\n\n    var x,\n      y,\n      i,\n      p,\n      yp,\n      yi,\n      yw,\n      r_sum,\n      g_sum,\n      b_sum,\n      a_sum,\n      r_out_sum,\n      g_out_sum,\n      b_out_sum,\n      a_out_sum,\n      r_in_sum,\n      g_in_sum,\n      b_in_sum,\n      a_in_sum,\n      pr,\n      pg,\n      pb,\n      pa,\n      rbs;\n\n    var div = radius + radius + 1,\n      widthMinus1 = width - 1,\n      heightMinus1 = height - 1,\n      radiusPlus1 = radius + 1,\n      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n      stackStart = new BlurStack(),\n      stackEnd = null,\n      stack = stackStart,\n      stackIn = null,\n      stackOut = null,\n      mul_sum = mul_table[radius],\n      shg_sum = shg_table[radius];\n\n    for (i = 1; i < div; i++) {\n      stack = stack.next = new BlurStack();\n      if (i === radiusPlus1) {\n        stackEnd = stack;\n      }\n    }\n\n    stack.next = stackStart;\n\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      for (i = 1; i < radiusPlus1; i++) {\n        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n      }\n\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (x = 0; x < width; x++) {\n        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa !== 0) {\n          pa = 255 / pa;\n          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n        r_in_sum += stackIn.r = pixels[p];\n        g_in_sum += stackIn.g = pixels[p + 1];\n        b_in_sum += stackIn.b = pixels[p + 2];\n        a_in_sum += stackIn.a = pixels[p + 3];\n\n        r_sum += r_in_sum;\n        g_sum += g_in_sum;\n        b_sum += b_in_sum;\n        a_sum += a_in_sum;\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += 4;\n      }\n      yw += width;\n    }\n\n    for (x = 0; x < width; x++) {\n      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n      yi = x << 2;\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      yp = width;\n\n      for (i = 1; i <= radius; i++) {\n        yi = (yp + x) << 2;\n\n        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n\n        if (i < heightMinus1) {\n          yp += width;\n        }\n      }\n\n      yi = x;\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (y = 0; y < height; y++) {\n        p = yi << 2;\n        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa > 0) {\n          pa = 255 / pa;\n          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p =\n          (x +\n            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n              width) <<\n          2;\n\n        r_sum += r_in_sum += stackIn.r = pixels[p];\n        g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n        b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n        a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += width;\n      }\n    }\n  }\n\n  /**\n   * Blur Filter\n   * @function\n   * @name Blur\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Blur]);\n   * node.blurRadius(10);\n   */\n  Konva.Filters.Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n\n    if (radius > 0) {\n      filterGaussBlurRGBA(imageData, radius);\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blurRadius',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n   * @name blurRadius\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} radius\n   * @returns {Integer}\n   */\n})(Konva);\n\n/*eslint-disable  max-depth */\n(function() {\n  'use strict';\n  function pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++]\n    );\n    return d;\n  }\n\n  function rgbDistance(p1, p2) {\n    return Math.sqrt(\n      Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2)\n    );\n  }\n\n  function rgbMean(pTab) {\n    var m = [0, 0, 0];\n\n    for (var i = 0; i < pTab.length; i++) {\n      m[0] += pTab[i][0];\n      m[1] += pTab[i][1];\n      m[2] += pTab[i][2];\n    }\n\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n\n    return m;\n  }\n\n  function backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\n    var thres = threshold || 10;\n    if (\n      rgbDistance(rgbv_no, rgbv_ne) < thres &&\n      rgbDistance(rgbv_ne, rgbv_se) < thres &&\n      rgbDistance(rgbv_se, rgbv_so) < thres &&\n      rgbDistance(rgbv_so, rgbv_no) < thres\n    ) {\n      // Mean color\n      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\n      // Mask based on color distance\n      var mask = [];\n      for (var i = 0; i < idata.width * idata.height; i++) {\n        var d = rgbDistance(mean, [\n          idata.data[i * 4],\n          idata.data[i * 4 + 1],\n          idata.data[i * 4 + 2]\n        ]);\n        mask[i] = d < thres ? 0 : 255;\n      }\n\n      return mask;\n    }\n  }\n\n  function applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      idata.data[4 * i + 3] = mask[i];\n    }\n  }\n\n  function erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a === 255 * 8 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a >= 255 * 4 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function smoothEdgeMask(mask, sw, sh) {\n    var weights = [\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a;\n      }\n    }\n\n    return maskResult;\n  }\n\n  /**\n   * Mask Filter\n   * @function\n   * @name Mask\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Mask]);\n   * node.threshold(200);\n   */\n  Konva.Filters.Mask = function(imageData) {\n    // Detect pixels close to the background color\n    var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n    if (mask) {\n      // Erode\n      mask = erodeMask(mask, imageData.width, imageData.height);\n\n      // Dilate\n      mask = dilateMask(mask, imageData.width, imageData.height);\n\n      // Gradient\n      mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\n      // Apply mask\n      applyMask(imageData, mask);\n\n      // todo : Update hit region function according to mask\n    }\n\n    return imageData;\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RGB Filter\n   * @function\n   * @name RGB\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.RGB]);\n   * node.blue(120);\n   * node.green(200);\n   */\n  Konva.Filters.RGB = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      i,\n      brightness;\n\n    for (i = 0; i < nPixels; i += 4) {\n      brightness =\n        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n      data[i] = brightness * red; // r\n      data[i + 1] = brightness * green; // g\n      data[i + 2] = brightness * blue; // b\n      data[i + 3] = data[i + 3]; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n   * @name red\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} red value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n   * @name green\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} green value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n   * @name blue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} blue value between 0 and 255\n   * @returns {Integer}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RGBA Filter\n   * @function\n   * @name RGBA\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author codefo\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.RGBA]);\n   * node.blue(120);\n   * node.green(200);\n   * node.alpha(0.3);\n   */\n  Konva.Filters.RGBA = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      alpha = this.alpha(),\n      i,\n      ia;\n\n    for (i = 0; i < nPixels; i += 4) {\n      ia = 1 - alpha;\n\n      data[i] = red * alpha + data[i] * ia; // r\n      data[i + 1] = green * alpha + data[i + 1] * ia; // g\n      data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name red\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} red value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name green\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} green value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name blue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} blue value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n      return 1;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return val;\n    }\n  });\n  /**\n   * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name alpha\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Float} alpha value between 0 and 1\n   * @returns {Float}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * HSV Filter. Adjusts the hue, saturation and value\n   * @function\n   * @name HSV\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * image.filters([Konva.Filters.HSV]);\n   * image.value(200);\n   */\n\n  Konva.Filters.HSV = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = Math.pow(2, this.value()),\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b;\n      data[i + 1] = gr * r + gg * g + gb * b;\n      data[i + 2] = br * r + bg * g + bb * b;\n      data[i + 3] = a; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name hue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} hue value between 0 and 359\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name saturation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'value',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n   * @name value\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name hue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} hue value between 0 and 359\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name saturation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'luminance',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n   * @name luminance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} value from -1 to 1\n   * @returns {Number}\n   */\n\n  /**\n   * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * image.filters([Konva.Filters.HSL]);\n   * image.luminance(0.2);\n   */\n\n  Konva.Filters.HSL = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = 1,\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      l = this.luminance() * 127,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos((h * Math.PI) / 180),\n      vsw = v * s * Math.sin((h * Math.PI) / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b + l;\n      data[i + 1] = gr * r + gg * g + gb * b + l;\n      data[i + 2] = br * r + bg * g + bb * b + l;\n      data[i + 3] = a; // alpha\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Emboss Filter.\n   * Pixastic Lib - Emboss filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * License: [http://www.pixastic.com/lib/license.txt]\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Emboss]);\n   * node.embossStrength(0.8);\n   * node.embossWhiteLevel(0.3);\n   * node.embossDirection('right');\n   * node.embossBlend(true);\n   */\n  Konva.Filters.Emboss = function(imageData) {\n    // pixastic strength is between 0 and 10.  I want it between 0 and 1\n    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n    // a max value of greyLevel yields a white emboss, and the min value yields a black\n    // emboss.  Therefore, I changed greyLevel to whiteLevel\n    var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    switch (direction) {\n      case 'top-left':\n        dirY = -1;\n        dirX = -1;\n        break;\n      case 'top':\n        dirY = -1;\n        dirX = 0;\n        break;\n      case 'top-right':\n        dirY = -1;\n        dirX = 1;\n        break;\n      case 'right':\n        dirY = 0;\n        dirX = 1;\n        break;\n      case 'bottom-right':\n        dirY = 1;\n        dirX = 1;\n        break;\n      case 'bottom':\n        dirY = 1;\n        dirX = 0;\n        break;\n      case 'bottom-left':\n        dirY = 1;\n        dirX = -1;\n        break;\n      case 'left':\n        dirY = 0;\n        dirX = -1;\n        break;\n      default:\n        Konva.Util.error('Unknown emboss direction: ' + direction);\n    }\n\n    do {\n      var offsetY = (y - 1) * w4;\n\n      var otherY = dirY;\n      if (y + otherY < 1) {\n        otherY = 0;\n      }\n      if (y + otherY > h) {\n        otherY = 0;\n      }\n\n      var offsetYOther = (y - 1 + otherY) * w * 4;\n\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n\n        var otherX = dirX;\n        if (x + otherX < 1) {\n          otherX = 0;\n        }\n        if (x + otherX > w) {\n          otherX = 0;\n        }\n\n        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\n        var dR = data[offset] - data[offsetOther];\n        var dG = data[offset + 1] - data[offsetOther + 1];\n        var dB = data[offset + 2] - data[offsetOther + 2];\n\n        var dif = dR;\n        var absDif = dif > 0 ? dif : -dif;\n\n        var absG = dG > 0 ? dG : -dG;\n        var absB = dB > 0 ? dB : -dB;\n\n        if (absG > absDif) {\n          dif = dG;\n        }\n        if (absB > absDif) {\n          dif = dB;\n        }\n\n        dif *= strength;\n\n        if (blend) {\n          var r = data[offset] + dif;\n          var g = data[offset + 1] + dif;\n          var b = data[offset + 2] + dif;\n\n          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n        } else {\n          var grey = greyLevel - dif;\n          if (grey < 0) {\n            grey = 0;\n          } else if (grey > 255) {\n            grey = 255;\n          }\n\n          data[offset] = data[offset + 1] = data[offset + 2] = grey;\n        }\n      } while (--x);\n    } while (--y);\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossStrength',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossStrength\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} level between 0 and 1.  Default is 0.5\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossWhiteLevel',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossWhiteLevel\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossDirection',\n    'top-left',\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossDirection\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n   *   The default is top-left\n   * @returns {String}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossBlend',\n    false,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossBlend\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean} embossBlend\n   * @returns {Boolean}\n   */\n})();\n\n(function() {\n  'use strict';\n  function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    // Compute the range of the data\n    var fromRange = fromMax - fromMin,\n      toRange = toMax - toMin,\n      toValue;\n\n    // If either range is 0, then the value can only be mapped to 1 value\n    if (fromRange === 0) {\n      return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n      return toMin;\n    }\n\n    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n\n    return toValue;\n  }\n\n  /**\n   * Enhance Filter. Adjusts the colors so that they span the widest\n   *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n   *  writes.\n   * @function\n   * @name Enhance\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Enhance]);\n   * node.enhance(0.4);\n   */\n  Konva.Filters.Enhance = function(imageData) {\n    var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n\n    // If we are not enhancing anything - don't do any computation\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n      return;\n    }\n\n    // 1st Pass - find the min and max for each channel:\n    for (i = 0; i < nSubPixels; i += 4) {\n      r = data[i + 0];\n      if (r < rMin) {\n        rMin = r;\n      } else if (r > rMax) {\n        rMax = r;\n      }\n      g = data[i + 1];\n      if (g < gMin) {\n        gMin = g;\n      } else if (g > gMax) {\n        gMax = g;\n      }\n      b = data[i + 2];\n      if (b < bMin) {\n        bMin = b;\n      } else if (b > bMax) {\n        bMax = b;\n      }\n      //a = data[i + 3];\n      //if (a < aMin) { aMin = a; } else\n      //if (a > aMax) { aMax = a; }\n    }\n\n    // If there is only 1 level - don't remap\n    if (rMax === rMin) {\n      rMax = 255;\n      rMin = 0;\n    }\n    if (gMax === gMin) {\n      gMax = 255;\n      gMin = 0;\n    }\n    if (bMax === bMin) {\n      bMax = 255;\n      bMin = 0;\n    }\n\n    var rMid,\n      rGoalMax,\n      rGoalMin,\n      gMid,\n      gGoalMax,\n      gGoalMin,\n      bMid,\n      bGoalMax,\n      bGoalMin;\n\n    // If the enhancement is positive - stretch the histogram\n    if (enhanceAmount > 0) {\n      rGoalMax = rMax + enhanceAmount * (255 - rMax);\n      rGoalMin = rMin - enhanceAmount * (rMin - 0);\n      gGoalMax = gMax + enhanceAmount * (255 - gMax);\n      gGoalMin = gMin - enhanceAmount * (gMin - 0);\n      bGoalMax = bMax + enhanceAmount * (255 - bMax);\n      bGoalMin = bMin - enhanceAmount * (bMin - 0);\n      // If the enhancement is negative -   compress the histogram\n    } else {\n      rMid = (rMax + rMin) * 0.5;\n      rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n      rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n      gMid = (gMax + gMin) * 0.5;\n      gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n      gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n      bMid = (bMax + bMin) * 0.5;\n      bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n      bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n\n    // Pass 2 - remap everything, except the alpha\n    for (i = 0; i < nSubPixels; i += 4) {\n      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n    }\n  };\n\n  /**\n   * get/set enhance. Use with {@link Konva.Filters.Enhance} filter. -1 to 1 values\n   * @name enhance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Float} amount\n   * @returns {Float}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'enhance',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Posterize Filter. Adjusts the channels so that there are no more\n   *  than n different values for that channel. This is also applied\n   *  to the alpha channel.\n   * @function\n   * @name Posterize\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Posterize]);\n   * node.levels(0.8); // between 0 and 1\n   */\n\n  Konva.Filters.Posterize = function(imageData) {\n    // level must be between 1 and 255\n    var levels = Math.round(this.levels() * 254) + 1,\n      data = imageData.data,\n      len = data.length,\n      scale = 255 / levels,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = Math.floor(data[i] / scale) * scale;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'levels',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n   * @name levels\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} level between 0 and 1\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Noise Filter. Randomly adds or substracts to the color channels\n   * @function\n   * @name Noise\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Noise]);\n   * node.noise(0.8);\n   */\n  Konva.Filters.Noise = function(imageData) {\n    var amount = this.noise() * 255,\n      data = imageData.data,\n      nPixels = data.length,\n      half = amount / 2,\n      i;\n\n    for (i = 0; i < nPixels; i += 4) {\n      data[i + 0] += half - 2 * half * Math.random();\n      data[i + 1] += half - 2 * half * Math.random();\n      data[i + 2] += half - 2 * half * Math.random();\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'noise',\n    0.2,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\n   * @name noise\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} noise\n   * @returns {Number}\n   */\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  /**\n   * Pixelate Filter. Averages groups of pixels and redraws\n   *  them as larger pixels\n   * @function\n   * @name Pixelate\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Pixelate]);\n   * node.pixelSize(10);\n   */\n\n  Konva.Filters.Pixelate = function(imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()),\n      width = imageData.width,\n      height = imageData.height,\n      x,\n      y,\n      i,\n      //pixelsPerBin = pixelSize * pixelSize,\n      red,\n      green,\n      blue,\n      alpha,\n      nBinsX = Math.ceil(width / pixelSize),\n      nBinsY = Math.ceil(height / pixelSize),\n      xBinStart,\n      xBinEnd,\n      yBinStart,\n      yBinEnd,\n      xBin,\n      yBin,\n      pixelsInBin;\n    imageData = imageData.data;\n\n    if (pixelSize <= 0) {\n      Konva.Util.error('pixelSize value can not be <= 0');\n      return;\n    }\n\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n      for (yBin = 0; yBin < nBinsY; yBin += 1) {\n        // Initialize the color accumlators to 0\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n\n        // Determine which pixels are included in this bin\n        xBinStart = xBin * pixelSize;\n        xBinEnd = xBinStart + pixelSize;\n        yBinStart = yBin * pixelSize;\n        yBinEnd = yBinStart + pixelSize;\n\n        // Add all of the pixels to this bin!\n        pixelsInBin = 0;\n        for (x = xBinStart; x < xBinEnd; x += 1) {\n          if (x >= width) {\n            continue;\n          }\n          for (y = yBinStart; y < yBinEnd; y += 1) {\n            if (y >= height) {\n              continue;\n            }\n            i = (width * y + x) * 4;\n            red += imageData[i + 0];\n            green += imageData[i + 1];\n            blue += imageData[i + 2];\n            alpha += imageData[i + 3];\n            pixelsInBin += 1;\n          }\n        }\n\n        // Make sure the channels are between 0-255\n        red = red / pixelsInBin;\n        green = green / pixelsInBin;\n        blue = blue / pixelsInBin;\n        alpha = alpha / pixelsInBin;\n\n        // Draw this bin\n        for (x = xBinStart; x < xBinEnd; x += 1) {\n          if (x >= width) {\n            continue;\n          }\n          for (y = yBinStart; y < yBinEnd; y += 1) {\n            if (y >= height) {\n              continue;\n            }\n            i = (width * y + x) * 4;\n            imageData[i + 0] = red;\n            imageData[i + 1] = green;\n            imageData[i + 2] = blue;\n            imageData[i + 3] = alpha;\n          }\n        }\n      }\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'pixelSize',\n    8,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\n   * @name pixelSize\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} pixelSize\n   * @returns {Integer}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Threshold Filter. Pushes any value above the mid point to\n   *  the max and any value below the mid point to the min.\n   *  This affects the alpha channel.\n   * @function\n   * @name Threshold\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Threshold]);\n   * node.threshold(0.1);\n   */\n\n  Konva.Filters.Threshold = function(imageData) {\n    var level = this.threshold() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = data[i] < level ? 0 : 255;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\n   * @name threshold\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} threshold\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Sepia Filter\n   * Based on: Pixastic Lib - Sepia filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * @function\n   * @name Sepia\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n   * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Sepia]);\n   */\n  Konva.Filters.Sepia = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      y = imageData.height,\n      w4 = w * 4,\n      offsetY,\n      x,\n      offset,\n      or,\n      og,\n      ob,\n      r,\n      g,\n      b;\n\n    do {\n      offsetY = (y - 1) * w4;\n      x = w;\n      do {\n        offset = offsetY + (x - 1) * 4;\n\n        or = data[offset];\n        og = data[offset + 1];\n        ob = data[offset + 2];\n\n        r = or * 0.393 + og * 0.769 + ob * 0.189;\n        g = or * 0.349 + og * 0.686 + ob * 0.168;\n        b = or * 0.272 + og * 0.534 + ob * 0.131;\n\n        data[offset] = r > 255 ? 255 : r;\n        data[offset + 1] = g > 255 ? 255 : g;\n        data[offset + 2] = b > 255 ? 255 : b;\n        data[offset + 3] = data[offset + 3];\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Solarize Filter\n   * Pixastic Lib - Solarize filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * License: [http://www.pixastic.com/lib/license.txt]\n   * @function\n   * @name Solarize\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Solarize]);\n   */\n  Konva.Filters.Solarize = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    do {\n      var offsetY = (y - 1) * w4;\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n        var r = data[offset];\n        var g = data[offset + 1];\n        var b = data[offset + 2];\n\n        if (r > 127) {\n          r = 255 - r;\n        }\n        if (g > 127) {\n          g = 255 - g;\n        }\n        if (b > 127) {\n          b = 255 - b;\n        }\n\n        data[offset] = r;\n        data[offset + 1] = g;\n        data[offset + 2] = b;\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /*\n   * ToPolar Filter. Converts image data to polar coordinates. Performs\n   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n   *  what would be the y axis and the theta axis along the x axis.\n   * @function\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {ImageData} src, the source image data (what will be transformed)\n   * @param {ImageData} dst, the destination image data (where it will be saved)\n   * @param {Object} opt\n   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n   *  default is in the middle\n   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n   *  default is in the middle\n   */\n\n  var ToPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng y as the radius, and x as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta;\n\n    // We want to cover all angles (0-360) and we need to convert to\n    // radians (*PI/180)\n    var conversion = 360 / tSize * Math.PI / 180,\n      sin,\n      cos;\n\n    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\n    for (theta = 0; theta < tSize; theta += 1) {\n      sin = Math.sin(theta * conversion);\n      cos = Math.cos(theta * conversion);\n      for (radius = 0; radius < rSize; radius += 1) {\n        x = Math.floor(xMid + rMax * radius / rSize * cos);\n        y = Math.floor(yMid + rMax * radius / rSize * sin);\n        i = (y * xSize + x) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        //i = (theta * xSize  +  radius) * 4;\n        i = (theta + radius * xSize) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  /*\n     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n     *  Performs w*h*4 pixel reads and w*h pixel writes.\n     * @function\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {ImageData} src, the source image data (what will be transformed)\n     * @param {ImageData} dst, the destination image data (where it will be saved)\n     * @param {Object} opt\n     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n     *  0 is no rotation, 360 degrees is a full rotation\n     */\n\n  var FromPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng x as the radius, and y as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta,\n      phaseShift = opt.polarRotation || 0;\n\n    // We need to convert to degrees and we need to make sure\n    // it's between (0-360)\n    // var conversion = tSize/360*180/Math.PI;\n    //var conversion = tSize/360*180/Math.PI;\n\n    var x1, y1;\n\n    for (x = 0; x < xSize; x += 1) {\n      for (y = 0; y < ySize; y += 1) {\n        dx = x - xMid;\n        dy = y - yMid;\n        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n        theta = theta * tSize / 360;\n        x1 = Math.floor(theta);\n        y1 = Math.floor(radius);\n        i = (y1 * xSize + x1) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        i = (y * xSize + x) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\n  // create a temporary canvas for working - shared between multiple calls\n\n  /*\n     * Kaleidoscope Filter.\n     * @function\n     * @name Kaleidoscope\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Kaleidoscope]);\n     * node.kaleidoscopePower(3);\n     * node.kaleidoscopeAngle(45);\n     */\n  Konva.Filters.Kaleidoscope = function(imageData) {\n    var xSize = imageData.width,\n      ySize = imageData.height;\n\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor(xSize * (angle % 360) / 360);\n\n    if (power < 1) {\n      return;\n    }\n\n    // Work with our shared buffer canvas\n    var tempCanvas = Konva.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n      .getContext('2d')\n      .getImageData(0, 0, xSize, ySize);\n\n    // Convert thhe original to polar coordinates\n    ToPolar(imageData, scratchData, {\n      polarCenterX: xSize / 2,\n      polarCenterY: ySize / 2\n    });\n\n    // Determine how big each section will be, if it's too small\n    // make it bigger\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n      minSectionSize = minSectionSize * 2;\n      power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n\n    // Copy the offset region to 0\n    // Depending on the size of filter and location of the offset we may need\n    // to copy the section backwards to prevent it from rewriting itself\n    var xStart = 0,\n      xEnd = sectionSize,\n      xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n      xStart = sectionSize;\n      xEnd = 0;\n      xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n      for (x = xStart; x !== xEnd; x += xDelta) {\n        xoff = Math.round(x + offset) % xSize;\n        srcPos = (xSize * y + xoff) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + x) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n      }\n    }\n\n    // Perform the actual effect\n    for (y = 0; y < ySize; y += 1) {\n      sectionSize = Math.floor(minSectionSize);\n      for (i = 0; i < power; i += 1) {\n        for (x = 0; x < sectionSize + 1; x += 1) {\n          srcPos = (xSize * y + x) * 4;\n          r = scratchData.data[srcPos + 0];\n          g = scratchData.data[srcPos + 1];\n          b = scratchData.data[srcPos + 2];\n          a = scratchData.data[srcPos + 3];\n          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n          scratchData.data[dstPos + 0] = r;\n          scratchData.data[dstPos + 1] = g;\n          scratchData.data[dstPos + 2] = b;\n          scratchData.data[dstPos + 3] = a;\n        }\n        sectionSize *= 2;\n      }\n    }\n\n    // Convert back from polar coordinates\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n  };\n\n  /**\n   * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n   * @name kaleidoscopePower\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} power of kaleidoscope\n   * @returns {Integer}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopePower',\n    2,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n   * @name kaleidoscopeAngle\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} degrees\n   * @returns {Integer}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopeAngle',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Contrast Filter.\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Contrast]);\n   * node.contrast(10);\n   */\n\n  Konva.Filters.Contrast = function(imageData) {\n    var adjust = Math.pow((parseInt(this.contrast()) + 100) / 100, 2);\n\n    var data = imageData.data,\n      nPixels = data.length,\n      red = 150,\n      green = 150,\n      blue = 150,\n      i;\n\n    for (i = 0; i < nPixels; i += 4) {\n      red = data[i];\n      green = data[i + 1];\n      blue = data[i + 2];\n\n      //Red channel\n      red /= 255;\n      red -= 0.5;\n      red *= adjust;\n      red += 0.5;\n      red *= 255;\n\n      //Green channel\n      green /= 255;\n      green -= 0.5;\n      green *= adjust;\n      green += 0.5;\n      green *= 255;\n\n      //Blue channel\n      blue /= 255;\n      blue -= 0.5;\n      blue *= adjust;\n      blue += 0.5;\n      blue *= 255;\n\n      red = red < 0 ? 0 : red > 255 ? 255 : red;\n      green = green < 0 ? 0 : green > 255 ? 255 : green;\n      blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n\n      data[i] = red;\n      data[i + 1] = green;\n      data[i + 2] = blue;\n    }\n  };\n\n  /**\n   * get/set filter contrast.  The contrast is a number between -100 and 100.\n   * Use with {@link Konva.Filters.Contrast} filter.\n   * @name contrast\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} contrast value between -100 and 100\n   * @returns {Number}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'contrast',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   */\n  Konva.Container = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Container, {\n    __init: function(config) {\n      this.children = new Konva.Collection();\n      Konva.Node.call(this, config);\n    },\n    /**\n     * returns a {@link Konva.Collection} of direct descendant nodes\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Function} [filterFunc] filter function\n     * @returns {Konva.Collection}\n     * @example\n     * // get all children\n     * var children = layer.getChildren();\n     *\n     * // get only circles\n     * var circles = layer.getChildren(function(node){\n     *    return node.getClassName() === 'Circle';\n     * });\n     */\n    getChildren: function(filterFunc) {\n      if (!filterFunc) {\n        return this.children;\n      }\n\n      var results = new Konva.Collection();\n      this.children.each(function(child) {\n        if (filterFunc(child)) {\n          results.push(child);\n        }\n      });\n      return results;\n    },\n    /**\n     * determine if node has children\n     * @method\n     * @memberof Konva.Container.prototype\n     * @returns {Boolean}\n     */\n    hasChildren: function() {\n      return this.getChildren().length > 0;\n    },\n    /**\n     * remove all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    removeChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.remove();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * destroy all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    destroyChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.destroy();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * Add node or nodes to container.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {...Konva.Node} child\n     * @returns {Container}\n     * @example\n     * layer.add(shape1, shape2, shape3);\n     */\n    add: function(child) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      if (child.getParent()) {\n        child.moveTo(this);\n        return this;\n      }\n      var children = this.children;\n      this._validateAdd(child);\n      child.index = children.length;\n      child.parent = this;\n      children.push(child);\n      this._fire('add', {\n        child: child\n      });\n\n      // if node under drag we need to update drag animation\n      if (Konva.DD && child.isDragging()) {\n        Konva.DD.anim.setLayers(child.getLayer());\n      }\n\n      // chainable\n      return this;\n    },\n    destroy: function() {\n      // destroy children\n      if (this.hasChildren()) {\n        this.destroyChildren();\n      }\n      // then destroy self\n      Konva.Node.prototype.destroy.call(this);\n      return this;\n    },\n    /**\n     * return a {@link Konva.Collection} of nodes that match the selector.\n     * You can provide a string with '#' for id selections and '.' for name selections.\n     * Or a function that will return true/false when a node is passed through.  See example below.\n     * With strings you can also select by type or class name. Pass multiple selectors\n     * separated by a space.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Collection}\n     * @example\n     *\n     * Passing a string as a selector\n     * // select node with id foo\n     * var node = stage.find('#foo');\n     *\n     * // select nodes with name bar inside layer\n     * var nodes = layer.find('.bar');\n     *\n     * // select all groups inside layer\n     * var nodes = layer.find('Group');\n     *\n     * // select all rectangles inside layer\n     * var nodes = layer.find('Rect');\n     *\n     * // select node with an id of foo or a name of bar inside layer\n     * var nodes = layer.find('#foo, .bar');\n     *\n     * Passing a function as a selector\n     *\n     * // get all Groups\n     * var groups = stage.find(node => {\n     *  return node.getType() === 'Group';\n     * });\n     *\n     * // get only Nodes with partial opacity\n     * var alphaNodes = layer.find(node => {\n     *  return node.getType() === 'Node' && node.getAbsoluteOpacity() < 1;\n     * });\n     */\n    find: function(selector) {\n      // protecting _generalFind to prevent user from accidentally adding\n      // second argument and getting unexpected `findOne` result\n      return this._generalFind(selector, false);\n    },\n    /**\n     * return a first node from `find` method\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Konva.Node | Undefined}\n     * @example\n     * // select node with id foo\n     * var node = stage.findOne('#foo');\n     *\n     * // select node with name bar inside layer\n     * var nodes = layer.findOne('.bar');\n     *\n     * // select the first node to return true in a function\n     * var node = stage.findOne(node => {\n     *  return node.getType() === 'Shape'\n     * })\n     */\n    findOne: function(selector) {\n      var result = this._generalFind(selector, true);\n      return result.length > 0 ? result[0] : undefined;\n    },\n    _generalFind: function(selector, findOne) {\n      var retArr = [];\n\n      if (typeof selector === 'string') {\n        retArr = this._findByString(selector, findOne);\n      } else if (typeof selector === 'function') {\n        retArr = this._findByFunction(selector, findOne);\n      }\n\n      return Konva.Collection.toCollection(retArr);\n    },\n    _findByString: function(selector) {\n      var retArr = [],\n        selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        i,\n        sel,\n        arr,\n        node,\n        children,\n        clen;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          var message =\n            'Selector \"' +\n            sel +\n            '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".\\n' +\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".\\n' +\n            'Konva is awesome, right?';\n          Konva.Util.warn(message);\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          node = this._getNodeById(sel.slice(1));\n          if (node) {\n            retArr.push(node);\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          arr = this._getNodesByName(sel.slice(1));\n          retArr = retArr.concat(arr);\n        } else {\n          // unrecognized selector, pass to children\n          children = this.getChildren();\n          clen = children.length;\n          for (i = 0; i < clen; i++) {\n            retArr = retArr.concat(children[i]._get(sel));\n          }\n        }\n      }\n\n      return retArr;\n    },\n    // (fn: ((Node) => boolean, findOne?: boolean)\n    _findByFunction: function(fn, findOne) {\n      var retArr = [];\n\n      var addItems = function(el) {\n        // escape function if we've already found one.\n        if (findOne && retArr.length > 0) {\n          return;\n        }\n\n        var children = el.getChildren();\n        var clen = children.length;\n\n        if (fn(el)) {\n          retArr = retArr.concat(el);\n        }\n\n        for (var i = 0; i < clen; i++) {\n          addItems(children[i]);\n        }\n      };\n\n      addItems(this);\n\n      return retArr;\n    },\n    _getNodeById: function(key) {\n      var node = Konva.ids[key];\n\n      if (node !== undefined && this.isAncestorOf(node)) {\n        return node;\n      }\n      return null;\n    },\n    _getNodesByName: function(key) {\n      var arr = Konva.names[key] || [];\n      return this._getDescendants(arr);\n    },\n    _get: function(selector) {\n      var retArr = Konva.Node.prototype._get.call(this, selector);\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        retArr = retArr.concat(children[n]._get(selector));\n      }\n      return retArr;\n    },\n    // extenders\n    toObject: function() {\n      var obj = Konva.Node.prototype.toObject.call(this);\n\n      obj.children = [];\n\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        var child = children[n];\n        obj.children.push(child.toObject());\n      }\n\n      return obj;\n    },\n    _getDescendants: function(arr) {\n      var retArr = [];\n      var len = arr.length;\n      for (var n = 0; n < len; n++) {\n        var node = arr[n];\n        if (this.isAncestorOf(node)) {\n          retArr.push(node);\n        }\n      }\n\n      return retArr;\n    },\n    /**\n     * determine if node is an ancestor\n     * of descendant\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Konva.Node} node\n     */\n    isAncestorOf: function(node) {\n      var parent = node.getParent();\n      while (parent) {\n        if (parent._id === this._id) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n\n      return false;\n    },\n    clone: function(obj) {\n      // call super method\n      var node = Konva.Node.prototype.clone.call(this, obj);\n\n      this.getChildren().each(function(no) {\n        node.add(no.clone());\n      });\n      return node;\n    },\n    /**\n     * get all shapes that intersect a point.  Note: because this method must clear a temporary\n     * canvas and redraw every shape inside the container, it should only be used for special sitations\n     * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     * because it performs much better\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Array} array of shapes\n     */\n    getAllIntersections: function(pos) {\n      var arr = [];\n\n      this.find('Shape').each(function(shape) {\n        if (shape.isVisible() && shape.intersects(pos)) {\n          arr.push(shape);\n        }\n      });\n\n      return arr;\n    },\n    _setChildrenIndices: function() {\n      this.children.each(function(child, n) {\n        child.index = n;\n      });\n    },\n    drawScene: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas()),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n      if (this.isVisible() || caching) {\n        if (!caching && cachedSceneCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedSceneCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawScene', top, false, caching);\n        }\n      }\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (this.shouldDrawHit(canvas) || caching) {\n        if (layer) {\n          layer.clearHitCache();\n        }\n        if (!caching && cachedHitCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedHitCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawHit', top);\n        }\n      }\n      return this;\n    },\n    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        context = canvas && canvas.getContext(),\n        clipWidth = this.getClipWidth(),\n        clipHeight = this.getClipHeight(),\n        clipFunc = this.getClipFunc(),\n        hasClip = (clipWidth && clipHeight) || clipFunc,\n        clipX,\n        clipY;\n\n      if (hasClip && layer) {\n        context.save();\n        var transform = this.getAbsoluteTransform(top);\n        var m = transform.getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        context.beginPath();\n        if (clipFunc) {\n          clipFunc.call(this, context, this);\n        } else {\n          clipX = this.getClipX();\n          clipY = this.getClipY();\n          context.rect(clipX, clipY, clipWidth, clipHeight);\n        }\n        context.clip();\n        m = transform\n          .copy()\n          .invert()\n          .getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      this.children.each(function(child) {\n        child[drawMethod](canvas, top, caching, skipBuffer);\n      });\n\n      if (hasClip) {\n        context.restore();\n      }\n    },\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      var dd = Konva.DD;\n      var layerUnderDrag =\n        dd &&\n        Konva.isDragging() &&\n        Konva.DD.anim.getLayers().indexOf(layer) !== -1;\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isVisible() &&\n          !layerUnderDrag)\n      );\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var minX, minY, maxX, maxY;\n      var selfRect = {\n        x: Infinity,\n        y: Infinity,\n        width: 0,\n        height: 0\n      };\n      var that = this;\n      this.children.each(function(child) {\n        // skip invisible children\n        if (!child.getVisible()) {\n          return;\n        }\n\n        var rect = child.getClientRect({\n          relativeTo: that,\n          skipShadow: attrs.skipShadow,\n          skipStroke: attrs.skipStroke\n        });\n\n        // skip invisible children (like empty groups)\n        if (rect.width === 0 && rect.height === 0) {\n          return;\n        }\n\n        if (minX === undefined) {\n          // initial value for first child\n          minX = rect.x;\n          minY = rect.y;\n          maxX = rect.x + rect.width;\n          maxY = rect.y + rect.height;\n        } else {\n          minX = Math.min(minX, rect.x);\n          minY = Math.min(minY, rect.y);\n          maxX = Math.max(maxX, rect.x + rect.width);\n          maxY = Math.max(maxY, rect.y + rect.height);\n        }\n      });\n\n      // if child is group we need to make sure it has visible shapes inside\n      var shapes = this.find('Shape');\n      var hasVisible = false;\n      for (var i = 0; i < shapes.length; i++) {\n        var shape = shapes[i];\n        if (shape._isVisible(this)) {\n          hasVisible = true;\n          break;\n        }\n      }\n\n      if (hasVisible) {\n        selfRect = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n      } else {\n        selfRect = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (!skipTransform) {\n        return this._transformedRect(selfRect, relativeTo);\n      }\n      return selfRect;\n    }\n  });\n\n  Konva.Util.extend(Konva.Container, Konva.Node);\n  // deprecated methods\n  Konva.Container.prototype.get = Konva.Container.prototype.find;\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n   * get/set clip\n   * @method\n   * @name clip\n   * @memberof Konva.Container.prototype\n   * @param {Object} clip\n   * @param {Number} clip.x\n   * @param {Number} clip.y\n   * @param {Number} clip.width\n   * @param {Number} clip.height\n   * @returns {Object}\n   * @example\n   * // get clip\n   * var clip = container.clip();\n   *\n   * // set clip\n   * container.setClip({\n   *   x: 20,\n   *   y: 20,\n   *   width: 20,\n   *   height: 20\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipX',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip x\n   * @name clipX\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get clip x\n   * var clipX = container.clipX();\n   *\n   * // set clip x\n   * container.clipX(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipY',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip y\n   * @name clipY\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get clip y\n   * var clipY = container.clipY();\n   *\n   * // set clip y\n   * container.clipY(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipWidth',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip width\n   * @name clipWidth\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get clip width\n   * var clipWidth = container.clipWidth();\n   *\n   * // set clip width\n   * container.clipWidth(100);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipHeight',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip height\n   * @name clipHeight\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get clip height\n   * var clipHeight = container.clipHeight();\n   *\n   * // set clip height\n   * container.clipHeight(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n  /**\n   * get/set clip function\n   * @name clipFunc\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Function} function\n   * @returns {Function}\n   * @example\n   * // get clip function\n   * var clipFunction = container.clipFunc();\n   *\n   * // set clip height\n   * container.clipFunc(function(ctx) {\n   *   ctx.rect(0, 0, 100, 100);\n   * });\n   */\n\n  Konva.Collection.mapMethods(Konva.Container);\n})();\n\n(function(Konva) {\n  'use strict';\n  var HAS_SHADOW = 'hasShadow';\n  var SHADOW_RGBA = 'shadowRGBA';\n\n  function _fillFunc(context) {\n    context.fill();\n  }\n  function _strokeFunc(context) {\n    context.stroke();\n  }\n  function _fillFuncHit(context) {\n    context.fill();\n  }\n  function _strokeFuncHit(context) {\n    context.stroke();\n  }\n\n  function _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n  }\n\n  function _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n  }\n\n  /**\n   * Shape constructor.  Shapes are primitive objects such as rectangles,\n   *  circles, text, lines, etc.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @param {Object} config\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var customShape = new Konva.Shape({\n   *   x: 5,\n   *   y: 10,\n   *   fill: 'red',\n   *   // a Konva.Canvas renderer is passed into the sceneFunc function\n   *   sceneFunc: function(context, shape) {\n   *     context.beginPath();\n   *     context.moveTo(200, 50);\n   *     context.lineTo(420, 80);\n   *     context.quadraticCurveTo(300, 100, 260, 170);\n   *     context.closePath();\n   *     // Konva specific method\n   *     context.fillStrokeShape(shape);\n   *   }\n   *});\n   */\n  Konva.Shape = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Shape, {\n    __init: function(config) {\n      this.nodeType = 'Shape';\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFuncHit;\n      this._strokeFuncHit = _strokeFuncHit;\n\n      // set colorKey\n      var shapes = Konva.shapes;\n      var key;\n\n      while (true) {\n        key = Konva.Util.getRandomColor();\n        if (key && !(key in shapes)) {\n          break;\n        }\n      }\n\n      this.colorKey = key;\n      shapes[key] = this;\n\n      // call super constructor\n      Konva.Node.call(this, config);\n\n      this.on(\n        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearHasShadowCache\n      );\n\n      this.on(\n        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearGetShadowRGBACache\n      );\n    },\n    hasChildren: function() {\n      return false;\n    },\n    getChildren: function() {\n      return [];\n    },\n    /**\n     * get canvas context tied to the layer\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Context}\n     */\n    getContext: function() {\n      return this.getLayer().getContext();\n    },\n    /**\n     * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.getLayer().getCanvas();\n    },\n    /**\n     * returns whether or not a shadow will be rendered\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasShadow: function() {\n      return this._getCache(HAS_SHADOW, this._hasShadow);\n    },\n    _hasShadow: function() {\n      return (\n        this.getShadowEnabled() &&\n        (this.getShadowOpacity() !== 0 &&\n          !!(\n            this.getShadowColor() ||\n            this.getShadowBlur() ||\n            this.getShadowOffsetX() ||\n            this.getShadowOffsetY()\n          ))\n      );\n    },\n    getShadowRGBA: function() {\n      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    },\n    _getShadowRGBA: function() {\n      if (this.hasShadow()) {\n        var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n        return (\n          'rgba(' +\n          rgba.r +\n          ',' +\n          rgba.g +\n          ',' +\n          rgba.b +\n          ',' +\n          rgba.a * (this.getShadowOpacity() || 1) +\n          ')'\n        );\n      }\n    },\n    /**\n     * returns whether or not the shape will be filled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasFill: function() {\n      return !!(\n        this.getFill() ||\n        this.getFillPatternImage() ||\n        this.getFillLinearGradientColorStops() ||\n        this.getFillRadialGradientColorStops()\n      );\n    },\n    /**\n     * returns whether or not the shape will be stroked\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasStroke: function() {\n      return (\n        this.strokeEnabled() &&\n        !!(this.stroke() || this.getStrokeLinearGradientColorStops())\n        // TODO: do we need radial gradient\n        // this.getStrokeRadialGradientColorStops()\n      );\n    },\n    /**\n     * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n     *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n     *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     *  because it performs much better\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} point\n     * @param {Number} point.x\n     * @param {Number} point.y\n     * @returns {Boolean}\n     */\n    intersects: function(point) {\n      var stage = this.getStage(),\n        bufferHitCanvas = stage.bufferHitCanvas,\n        p;\n\n      bufferHitCanvas.getContext().clear();\n      this.drawHit(bufferHitCanvas);\n      p = bufferHitCanvas.context.getImageData(\n        Math.round(point.x),\n        Math.round(point.y),\n        1,\n        1\n      ).data;\n      return p[3] > 0;\n    },\n    // extends Node.prototype.destroy\n    destroy: function() {\n      Konva.Node.prototype.destroy.call(this);\n      delete Konva.shapes[this.colorKey];\n      return this;\n    },\n    _useBufferCanvas: function(caching) {\n      return (\n        (!caching &&\n          (this.perfectDrawEnabled() &&\n            this.getAbsoluteOpacity() !== 1 &&\n            this.hasFill() &&\n            this.hasStroke() &&\n            this.getStage())) ||\n        (this.perfectDrawEnabled() &&\n          this.hasShadow() &&\n          this.getAbsoluteOpacity() !== 1 &&\n          this.hasFill() &&\n          this.hasStroke() &&\n          this.getStage())\n      );\n    },\n    /**\n     * return self rectangle (x, y, width, height) of shape.\n     * This method are not taken into account transformation and styles.\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     *\n     * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n     * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n     *\n     */\n    getSelfRect: function() {\n      var size = this.getSize();\n      return {\n        x: this._centroid ? Math.round(-size.width / 2) : 0,\n        y: this._centroid ? Math.round(-size.height / 2) : 0,\n        width: size.width,\n        height: size.height\n      };\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n\n      var relativeTo = attrs.relativeTo;\n\n      var fillRect = this.getSelfRect();\n\n      var applyStroke = !attrs.skipStroke && this.hasStroke();\n      var strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n\n      // var scale = {\n      //   x: 1,\n      //   y: 1\n      // };\n      // if (!this.strokeScaleEnabled()) {\n      //   var scale = this.getAbsoluteScale();\n      //   // scale = {\n      //   //   x: Math.abs(scale.x)\n      //   // }\n      // }\n\n      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\n      var applyShadow = !attrs.skipShadow && this.hasShadow();\n      var shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n      var shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n\n      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\n      var blurRadius = (applyShadow && this.shadowBlur()) || 0;\n\n      var width = preWidth + blurRadius * 2;\n      var height = preHeight + blurRadius * 2;\n\n      // if stroke, for example = 3\n      // we need to set x to 1.5, but after Math.round it will be 2\n      // as we have additional offset we need to increase width and height by 1 pixel\n      var roundingOffset = 0;\n      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n        roundingOffset = 1;\n      }\n      var rect = {\n        width: width + roundingOffset,\n        height: height + roundingOffset,\n        x:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetX, 0) +\n          fillRect.x,\n        y:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetY, 0) +\n          fillRect.y\n      };\n      if (!skipTransform) {\n        return this._transformedRect(rect, relativeTo);\n      }\n      return rect;\n    },\n    drawScene: function(can, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        drawFunc = this.sceneFunc(),\n        hasShadow = this.hasShadow(),\n        hasStroke = this.hasStroke(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n\n      if (!this.isVisible() && !caching) {\n        return this;\n      }\n      if (cachedCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedSceneCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      // if buffer canvas is needed\n      if (this._useBufferCanvas(caching) && !skipBuffer) {\n        stage = this.getStage();\n        bufferCanvas = stage.bufferCanvas;\n        bufferContext = bufferCanvas.getContext();\n        bufferContext.clear();\n        bufferContext.save();\n        bufferContext._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, bufferContext, top);\n          } else {\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n          }\n        }\n\n        drawFunc.call(this, bufferContext, this);\n        bufferContext.restore();\n\n        var ratio = bufferCanvas.pixelRatio;\n        if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n\n          context._applyShadow(this);\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n          context.restore();\n        } else {\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n        }\n      } else {\n        // if buffer canvas is not needed\n        context._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, context, top);\n          } else {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n          }\n        }\n\n        if (hasShadow && hasStroke && !canvas.hitCanvas) {\n          context.save();\n          // apply shadow\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n\n          drawFunc.call(this, context, this);\n          context.restore();\n          // if shape has stroke we need to redraw shape\n          // otherwise we will see a shadow under stroke (and over fill)\n          // but I think this is unexpected behavior\n          if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n            drawFunc.call(this, context, this);\n          }\n        } else if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n          drawFunc.call(this, context, this);\n          context.restore();\n        } else {\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          drawFunc.call(this, context, this);\n        }\n      }\n      context.restore();\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (!this.shouldDrawHit(canvas) && !caching) {\n        return this;\n      }\n      if (layer) {\n        layer.clearHitCache();\n      }\n      if (cachedHitCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedHitCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      context._applyLineJoin(this);\n      if (!caching) {\n        if (layer) {\n          layer._applyTransform(this, context, top);\n        } else {\n          var o = this.getAbsoluteTransform(top).getMatrix();\n          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n      }\n      drawFunc.call(this, context, this);\n      context.restore();\n      return this;\n    },\n    /**\n     * draw hit graph using the cached scene canvas\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n     *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n     *  The default is 0\n     * @returns {Konva.Shape}\n     * @example\n     * shape.cache();\n     * shape.drawHitFromCache();\n     */\n    drawHitFromCache: function(alphaThreshold) {\n      var threshold = alphaThreshold || 0,\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n\n      hitContext.clear();\n      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n      try {\n        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n        hitData = hitImageData.data;\n        len = hitData.length;\n        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\n        // replace non transparent pixels with color key\n        for (i = 0; i < len; i += 4) {\n          alpha = hitData[i + 3];\n          if (alpha > threshold) {\n            hitData[i] = rgbColorKey.r;\n            hitData[i + 1] = rgbColorKey.g;\n            hitData[i + 2] = rgbColorKey.b;\n            hitData[i + 3] = 255;\n          } else {\n            hitData[i + 3] = 0;\n          }\n        }\n        hitContext.putImageData(hitImageData, 0, 0);\n      } catch (e) {\n        Konva.Util.error(\n          'Unable to draw hit graph from cached scene canvas. ' + e.message\n        );\n      }\n\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Shape, Konva.Node);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'stroke',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set stroke color\n   * @name stroke\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get stroke color\n   * var stroke = shape.stroke();\n   *\n   * // set stroke color with color string\n   * shape.stroke('green');\n   *\n   * // set stroke color with hex\n   * shape.stroke('#00ff00');\n   *\n   * // set stroke color with rgb\n   * shape.stroke('rgb(0,255,0)');\n   *\n   * // set stroke color with rgba and make it 50% opaque\n   * shape.stroke('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeWidth',\n    2,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set stroke width\n   * @name strokeWidth\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} strokeWidth\n   * @returns {Number}\n   * @example\n   * // get stroke width\n   * var strokeWidth = shape.strokeWidth();\n   *\n   * // set stroke width\n   * shape.strokeWidth();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeHitEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set strokeHitEnabled property. Useful for performance optimization.\n   * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n   * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n   * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n   * Default value is true\n   * @name strokeHitEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} strokeHitEnabled\n   * @returns {Boolean}\n   * @example\n   * // get strokeHitEnabled\n   * var strokeHitEnabled = shape.strokeHitEnabled();\n   *\n   * // set strokeHitEnabled\n   * shape.strokeHitEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'perfectDrawEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.\n   * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n   * Default value is true\n   * @name perfectDrawEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} perfectDrawEnabled\n   * @returns {Boolean}\n   * @example\n   * // get perfectDrawEnabled\n   * var perfectDrawEnabled = shape.perfectDrawEnabled();\n   *\n   * // set perfectDrawEnabled\n   * shape.perfectDrawEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowForStrokeEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set shadowForStrokeEnabled. Useful for performance optimization.\n   * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n   * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n   * Default value is true\n   * @name shadowForStrokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} shadowForStrokeEnabled\n   * @returns {Boolean}\n   * @example\n   * // get shadowForStrokeEnabled\n   * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n   *\n   * // set shadowForStrokeEnabled\n   * shape.shadowForStrokeEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\n  /**\n   * get/set line join.  Can be miter, round, or bevel.  The\n   *  default is miter\n   * @name lineJoin\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineJoin\n   * @returns {String}\n   * @example\n   * // get line join\n   * var lineJoin = shape.lineJoin();\n   *\n   * // set line join\n   * shape.lineJoin('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\n  /**\n   * get/set line cap.  Can be butt, round, or square\n   * @name lineCap\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineCap\n   * @returns {String}\n   * @example\n   * // get line cap\n   * var lineCap = shape.lineCap();\n   *\n   * // set line cap\n   * shape.lineCap('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\n  /**\n   * get/set scene draw function\n   * @name sceneFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get scene draw function\n   * var sceneFunc = shape.sceneFunc();\n   *\n   * // set scene draw function\n   * shape.sceneFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\n  /**\n   * get/set hit draw function\n   * @name hitFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get hit draw function\n   * var hitFunc = shape.hitFunc();\n   *\n   * // set hit draw function\n   * shape.hitFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\n  /**\n   * get/set dash array for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} dash\n   * @returns {Array}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart\n   *  line.dash([10, 5]);\n   *  // apply dashed stroke that is made up of alternating dashed\n   *  // lines that are 10px long and 20px apart, and dots that have\n   *  // a radius of 5px and are 20px apart\n   *  line.dash([10, 20, 0.001, 20]);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'dashOffset',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set dash offset for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} dash offset\n   * @returns {Number}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px\n   *  line.dash([10, 5]);\n   *  line.dashOffset(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowColor',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set shadow color\n   * @name shadowColor\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get shadow color\n   * var shadow = shape.shadowColor();\n   *\n   * // set shadow color with color string\n   * shape.shadowColor('green');\n   *\n   * // set shadow color with hex\n   * shape.shadowColor('#00ff00');\n   *\n   * // set shadow color with rgb\n   * shape.shadowColor('rgb(0,255,0)');\n   *\n   * // set shadow color with rgba and make it 50% opaque\n   * shape.shadowColor('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowBlur',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow blur\n   * @name shadowBlur\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} blur\n   * @returns {Number}\n   * @example\n   * // get shadow blur\n   * var shadowBlur = shape.shadowBlur();\n   *\n   * // set shadow blur\n   * shape.shadowBlur(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOpacity',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow opacity.  must be a value between 0 and 1\n   * @name shadowOpacity\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} opacity\n   * @returns {Number}\n   * @example\n   * // get shadow opacity\n   * var shadowOpacity = shape.shadowOpacity();\n   *\n   * // set shadow opacity\n   * shape.shadowOpacity(0.5);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set shadow offset\n   * @name shadowOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get shadow offset\n   * var shadowOffset = shape.shadowOffset();\n   *\n   * // set shadow offset\n   * shape.shadowOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOffsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow offset x\n   * @name shadowOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get shadow offset x\n   * var shadowOffsetX = shape.shadowOffsetX();\n   *\n   * // set shadow offset x\n   * shape.shadowOffsetX(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOffsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow offset y\n   * @name shadowOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get shadow offset y\n   * var shadowOffsetY = shape.shadowOffsetY();\n   *\n   * // set shadow offset y\n   * shape.shadowOffsetY(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\n  /**\n   * get/set fill pattern image\n   * @name fillPatternImage\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Image} image object\n   * @returns {Image}\n   * @example\n   * // get fill pattern image\n   * var fillPatternImage = shape.fillPatternImage();\n   *\n   * // set fill pattern image\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   shape.fillPatternImage(imageObj);\n   * };\n   * imageObj.src = 'path/to/image/jpg';\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fill',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set fill color\n   * @name fill\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get fill color\n   * var fill = shape.fill();\n   *\n   * // set fill color with color string\n   * shape.fill('green');\n   *\n   * // set fill color with hex\n   * shape.fill('#00ff00');\n   *\n   * // set fill color with rgb\n   * shape.fill('rgb(0,255,0)');\n   *\n   * // set fill color with rgba and make it 50% opaque\n   * shape.fill('rgba(0,255,0,0.5');\n   *\n   * // shape without fill\n   * shape.fill(null);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern x\n   * @name fillPatternX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern x\n   * var fillPatternX = shape.fillPatternX();\n   * // set fill pattern x\n   * shape.fillPatternX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern y\n   * @name fillPatternY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern y\n   * var fillPatternY = shape.fillPatternY();\n   * // set fill pattern y\n   * shape.fillPatternY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\n  /**\n   * get/set fill linear gradient color stops\n   * @name fillLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get fill linear gradient color stops\n   * var colorStops = shape.fillLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeLinearGradientColorStops');\n\n  /**\n   * get/set stroke linear gradient color stops\n   * @name strokeLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get stroke linear gradient color stops\n   * var colorStops = shape.strokeLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.strokeLinearGradientColorStops([0, 'red', 0.5, 'blue', 1, 'green']);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartRadius',\n    0\n  );\n\n  /**\n   * get/set fill radial gradient start radius\n   * @name fillRadialGradientStartRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient start radius\n   * var startRadius = shape.fillRadialGradientStartRadius();\n   *\n   * // set radial gradient start radius\n   * shape.fillRadialGradientStartRadius(0);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\n  /**\n   * get/set fill radial gradient end radius\n   * @name fillRadialGradientEndRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient end radius\n   * var endRadius = shape.fillRadialGradientEndRadius();\n   *\n   * // set radial gradient end radius\n   * shape.fillRadialGradientEndRadius(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\n  /**\n   * get/set fill radial gradient color stops\n   * @name fillRadialGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} colorStops\n   * @returns {Array}\n   * @example\n   * // get fill radial gradient color stops\n   * var colorStops = shape.fillRadialGradientColorStops();\n   *\n   * // create a radial gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\n  /**\n   * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n   * @name fillPatternRepeat\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} repeat\n   * @returns {String}\n   * @example\n   * // get fill pattern repeat\n   * var repeat = shape.fillPatternRepeat();\n   *\n   * // repeat pattern in x direction only\n   * shape.fillPatternRepeat('repeat-x');\n   *\n   * // do not repeat the pattern\n   * shape.fillPatternRepeat('no repeat');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\n  /**\n   * get/set fill enabled flag\n   * @name fillEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get fill enabled flag\n   * var fillEnabled = shape.fillEnabled();\n   *\n   * // disable fill\n   * shape.fillEnabled(false);\n   *\n   * // enable fill\n   * shape.fillEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\n  /**\n   * get/set stroke enabled flag\n   * @name strokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke enabled flag\n   * var strokeEnabled = shape.strokeEnabled();\n   *\n   * // disable stroke\n   * shape.strokeEnabled(false);\n   *\n   * // enable stroke\n   * shape.strokeEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\n  /**\n   * get/set shadow enabled flag\n   * @name shadowEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get shadow enabled flag\n   * var shadowEnabled = shape.shadowEnabled();\n   *\n   * // disable shadow\n   * shape.shadowEnabled(false);\n   *\n   * // enable shadow\n   * shape.shadowEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\n  /**\n   * get/set dash enabled flag\n   * @name dashEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get dash enabled flag\n   * var dashEnabled = shape.dashEnabled();\n   *\n   * // disable dash\n   * shape.dashEnabled(false);\n   *\n   * // enable dash\n   * shape.dashEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\n  /**\n   * get/set strokeScale enabled flag\n   * @name strokeScaleEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke scale enabled flag\n   * var strokeScaleEnabled = shape.strokeScaleEnabled();\n   *\n   * // disable stroke scale\n   * shape.strokeScaleEnabled(false);\n   *\n   * // enable stroke scale\n   * shape.strokeScaleEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\n  /**\n   * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n   *   This is handy if you want to toggle between different fill types.\n   * @name fillPriority\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} priority\n   * @returns {String}\n   * @example\n   * // get fill priority\n   * var fillPriority = shape.fillPriority();\n   *\n   * // set fill priority\n   * shape.fillPriority('linear-gradient');\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern offset\n   * @name fillPatternOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern offset\n   * var patternOffset = shape.fillPatternOffset();\n   *\n   * // set fill pattern offset\n   * shape.fillPatternOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternOffsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern offset x\n   * @name fillPatternOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset x\n   * var patternOffsetX = shape.fillPatternOffsetX();\n   *\n   * // set fill pattern offset x\n   * shape.fillPatternOffsetX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternOffsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern offset y\n   * @name fillPatternOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset y\n   * var patternOffsetY = shape.fillPatternOffsetY();\n   *\n   * // set fill pattern offset y\n   * shape.fillPatternOffsetY(10);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern scale\n   * @name fillPatternScale\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern scale\n   * var patternScale = shape.fillPatternScale();\n   *\n   * // set fill pattern scale\n   * shape.fillPatternScale({\n   *   x: 2\n   *   y: 2\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternScaleX',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern scale x\n   * @name fillPatternScaleX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale x\n   * var patternScaleX = shape.fillPatternScaleX();\n   *\n   * // set fill pattern scale x\n   * shape.fillPatternScaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternScaleY',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern scale y\n   * @name fillPatternScaleY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale y\n   * var patternScaleY = shape.fillPatternScaleY();\n   *\n   * // set fill pattern scale y\n   * shape.fillPatternScaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient start point\n   * @name fillLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient start point\n   * var startPoint = shape.fillLinearGradientStartPoint();\n   *\n   * // set fill linear gradient start point\n   * shape.fillLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient start point\n   * @name strokeLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient start point\n   * var startPoint = shape.strokeLinearGradientStartPoint();\n   *\n   * // set stroke linear gradient start point\n   * shape.strokeLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point x\n   * @name fillLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point x\n   * var startPointX = shape.fillLinearGradientStartPointX();\n   *\n   * // set fill linear gradient start point x\n   * shape.fillLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set stroke linear gradient start point x\n   * @name linearLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point x\n   * var startPointX = shape.strokeLinearGradientStartPointX();\n   *\n   * // set stroke linear gradient start point x\n   * shape.strokeLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointY',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point y\n   * @name fillLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point y\n   * var startPointY = shape.fillLinearGradientStartPointY();\n   *\n   * // set fill linear gradient start point y\n   * shape.fillLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient start point y\n   * @name strokeLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point y\n   * var startPointY = shape.strokeLinearGradientStartPointY();\n   *\n   * // set stroke linear gradient start point y\n   * shape.strokeLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient end point\n   * @name fillLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient end point\n   * var endPoint = shape.fillLinearGradientEndPoint();\n   *\n   * // set fill linear gradient end point\n   * shape.fillLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient end point\n   * @name strokeLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient end point\n   * var endPoint = shape.strokeLinearGradientEndPoint();\n   *\n   * // set stroke linear gradient end point\n   * shape.strokeLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n  /**\n   * get/set fill linear gradient end point x\n   * @name fillLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point x\n   * var endPointX = shape.fillLinearGradientEndPointX();\n   *\n   * // set fill linear gradient end point x\n   * shape.fillLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointX',\n    0\n  );\n  /**\n   * get/set fill linear gradient end point x\n   * @name strokeLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point x\n   * var endPointX = shape.strokeLinearGradientEndPointX();\n   *\n   * // set stroke linear gradient end point x\n   * shape.strokeLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n  /**\n   * get/set fill linear gradient end point y\n   * @name fillLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point y\n   * var endPointY = shape.fillLinearGradientEndPointY();\n   *\n   * // set fill linear gradient end point y\n   * shape.fillLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient end point y\n   * @name strokeLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point y\n   * var endPointY = shape.strokeLinearGradientEndPointY();\n   *\n   * // set stroke linear gradient end point y\n   * shape.strokeLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient start point\n   * @name fillRadialGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient start point\n   * var startPoint = shape.fillRadialGradientStartPoint();\n   *\n   * // set fill radial gradient start point\n   * shape.fillRadialGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointX',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point x\n   * @name fillRadialGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point x\n   * var startPointX = shape.fillRadialGradientStartPointX();\n   *\n   * // set fill radial gradient start point x\n   * shape.fillRadialGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointY',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point y\n   * @name fillRadialGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point y\n   * var startPointY = shape.fillRadialGradientStartPointY();\n   *\n   * // set fill radial gradient start point y\n   * shape.fillRadialGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient end point\n   * @name fillRadialGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient end point\n   * var endPoint = shape.fillRadialGradientEndPoint();\n   *\n   * // set fill radial gradient end point\n   * shape.fillRadialGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n  /**\n   * get/set fill radial gradient end point x\n   * @name fillRadialGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point x\n   * var endPointX = shape.fillRadialGradientEndPointX();\n   *\n   * // set fill radial gradient end point x\n   * shape.fillRadialGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n  /**\n   * get/set fill radial gradient end point y\n   * @name fillRadialGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point y\n   * var endPointY = shape.fillRadialGradientEndPointY();\n   *\n   * // set fill radial gradient end point y\n   * shape.fillRadialGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\n  /**\n   * get/set fill pattern rotation in degrees\n   * @name fillPatternRotation\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} rotation\n   * @returns {Konva.Shape}\n   * @example\n   * // get fill pattern rotation\n   * var patternRotation = shape.fillPatternRotation();\n   *\n   * // set fill pattern rotation\n   * shape.fillPatternRotation(20);\n   */\n\n  Konva.Factory.backCompat(Konva.Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc'\n  });\n\n  Konva.Collection.mapMethods(Konva.Shape);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var STAGE = 'Stage',\n    STRING = 'string',\n    PX = 'px',\n    MOUSEOUT = 'mouseout',\n    MOUSELEAVE = 'mouseleave',\n    MOUSEOVER = 'mouseover',\n    MOUSEENTER = 'mouseenter',\n    MOUSEMOVE = 'mousemove',\n    MOUSEDOWN = 'mousedown',\n    MOUSEUP = 'mouseup',\n    CONTEXTMENU = 'contextmenu',\n    CLICK = 'click',\n    DBL_CLICK = 'dblclick',\n    TOUCHSTART = 'touchstart',\n    TOUCHEND = 'touchend',\n    TAP = 'tap',\n    DBL_TAP = 'dbltap',\n    TOUCHMOVE = 'touchmove',\n    WHEEL = 'wheel',\n    CONTENT_MOUSEOUT = 'contentMouseout',\n    CONTENT_MOUSEOVER = 'contentMouseover',\n    CONTENT_MOUSEMOVE = 'contentMousemove',\n    CONTENT_MOUSEDOWN = 'contentMousedown',\n    CONTENT_MOUSEUP = 'contentMouseup',\n    CONTENT_CONTEXTMENU = 'contentContextmenu',\n    CONTENT_CLICK = 'contentClick',\n    CONTENT_DBL_CLICK = 'contentDblclick',\n    CONTENT_TOUCHSTART = 'contentTouchstart',\n    CONTENT_TOUCHEND = 'contentTouchend',\n    CONTENT_DBL_TAP = 'contentDbltap',\n    CONTENT_TAP = 'contentTap',\n    CONTENT_TOUCHMOVE = 'contentTouchmove',\n    CONTENT_WHEEL = 'contentWheel',\n    DIV = 'div',\n    RELATIVE = 'relative',\n    KONVA_CONTENT = 'konvajs-content',\n    SPACE = ' ',\n    UNDERSCORE = '_',\n    CONTAINER = 'container',\n    EMPTY_STRING = '',\n    EVENTS = [\n      MOUSEDOWN,\n      MOUSEMOVE,\n      MOUSEUP,\n      MOUSEOUT,\n      TOUCHSTART,\n      TOUCHMOVE,\n      TOUCHEND,\n      MOUSEOVER,\n      WHEEL,\n      CONTEXTMENU\n    ],\n    // cached variables\n    eventsLength = EVENTS.length;\n\n  function addEvent(ctx, eventName) {\n    ctx.content.addEventListener(\n      eventName,\n      function(evt) {\n        ctx[UNDERSCORE + eventName](evt);\n      },\n      false\n    );\n  }\n\n  /**\n   * Stage constructor.  A stage is used to contain multiple layers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {String|Element} config.container Container selector or DOM element\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var stage = new Konva.Stage({\n   *   width: 500,\n   *   height: 800,\n   *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n   * });\n   */\n  Konva.Stage = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Stage, {\n    ___init: function(config) {\n      this.nodeType = STAGE;\n      // call super constructor\n      Konva.Container.call(this, config);\n      this._id = Konva.idCounter++;\n      this._buildDOM();\n      this._bindContentEvents();\n      this._enableNestedTransforms = false;\n      Konva.stages.push(this);\n    },\n    _validateAdd: function(child) {\n      if (child.getType() !== 'Layer') {\n        Konva.Util.throw('You may only add layers to the stage.');\n      }\n    },\n    /**\n     * set container dom element which contains the stage wrapper div element\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {DomElement} container can pass in a dom element or id string\n     */\n    setContainer: function(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = Konva.document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = Konva.document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr(CONTAINER, container);\n      return this;\n    },\n    shouldDrawHit: function() {\n      return true;\n    },\n    draw: function() {\n      Konva.Node.prototype.draw.call(this);\n      return this;\n    },\n    /**\n     * draw layer scene graphs\n     * @name draw\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * draw layer hit graphs\n     * @name drawHit\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * set height\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * set width\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * clear all layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    clear: function() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    },\n    clone: function(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = Konva.document.createElement(DIV);\n      return Konva.Container.prototype.clone.call(this, obj);\n    },\n    /**\n     * destroy stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    destroy: function() {\n      var content = this.content;\n      Konva.Container.prototype.destroy.call(this);\n\n      if (content && Konva.Util._isInDocument(content)) {\n        this.getContainer().removeChild(content);\n      }\n      var index = Konva.stages.indexOf(this);\n      if (index > -1) {\n        Konva.stages.splice(index, 1);\n      }\n      return this;\n    },\n    /**\n     * get pointer position which can be a touch position or mouse position\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @returns {Object}\n     */\n    getPointerPosition: function() {\n      return this.pointerPos;\n    },\n    getStage: function() {\n      return this;\n    },\n    /**\n     * get stage content div element which has the\n     *  the class name \"konvajs-content\"\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getContent: function() {\n      return this.content;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var x = config.x || 0,\n        y = config.y || 0,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || this.getWidth(),\n          height: config.height || this.getHeight(),\n          pixelRatio: config.pixelRatio || 1\n        }),\n        _context = canvas.getContext()._context,\n        layers = this.children;\n\n      if (x || y) {\n        _context.translate(-1 * x, -1 * y);\n      }\n\n      layers.each(function(layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n        var layerCanvas = layer._toKonvaCanvas(config);\n        _context.drawImage(\n          layerCanvas._canvas,\n          x,\n          y,\n          layerCanvas.getWidth() / layerCanvas.getPixelRatio(),\n          layerCanvas.getHeight() / layerCanvas.getPixelRatio()\n        );\n      });\n      return canvas;\n    },\n    /**\n     * converts stage into an image.\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     */\n    toImage: function(config) {\n      var cb = config.callback;\n\n      config.callback = function(dataUrl) {\n        Konva.Util._getImage(dataUrl, function(img) {\n          cb(img);\n        });\n      };\n      this.toDataURL(config);\n    },\n    /**\n     * get visible intersection shape. This is the preferred\n     *  method for determining if a point intersects a shape or not\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @param {String} [selector]\n     * @returns {Konva.Node}\n     * @example\n     * var shape = stage.getIntersection({x: 50, y: 50});\n     * // or if you interested in shape parent:\n     * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n     */\n    getIntersection: function(pos, selector) {\n      var layers = this.getChildren(),\n        len = layers.length,\n        end = len - 1,\n        n,\n        shape;\n\n      for (n = end; n >= 0; n--) {\n        shape = layers[n].getIntersection(pos, selector);\n        if (shape) {\n          return shape;\n        }\n      }\n\n      return null;\n    },\n    _resizeDOM: function() {\n      if (this.content) {\n        var width = this.getWidth(),\n          height = this.getHeight(),\n          layers = this.getChildren(),\n          len = layers.length,\n          n,\n          layer;\n\n        // set content dimensions\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n\n        // set layer dimensions\n        for (n = 0; n < len; n++) {\n          layer = layers[n];\n          layer.setSize(width, height);\n          layer.draw();\n        }\n      }\n    },\n    /**\n     * add layer or layers to stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {...Konva.Layer} layer\n     * @example\n     * stage.add(layer1, layer2, layer3);\n     */\n    add: function(layer) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      Konva.Container.prototype.add.call(this, layer);\n      layer._setCanvasSize(this.width(), this.height());\n\n      // draw layer and append canvas to container\n      layer.draw();\n\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n\n      // chainable\n      return this;\n    },\n    getParent: function() {\n      return null;\n    },\n    getLayer: function() {\n      return null;\n    },\n    /**\n     * returns a {@link Konva.Collection} of layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getLayers: function() {\n      return this.getChildren();\n    },\n    _bindContentEvents: function() {\n      if (!Konva.isBrowser) {\n        return;\n      }\n      for (var n = 0; n < eventsLength; n++) {\n        addEvent(this, EVENTS[n]);\n      }\n    },\n    _mouseover: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n      }\n    },\n    _mouseout: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var targetShape = this.targetShape;\n\n        if (targetShape && !Konva.isDragging()) {\n          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n          this.targetShape = null;\n        }\n        this.pointerPos = undefined;\n\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n      }\n    },\n    _mousemove: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchmove(evt);\n      }\n      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n      if (\n        (typeof evt.movementX !== 'undefined' ||\n          typeof evt.movementY !== 'undefined') &&\n        evt.movementY === 0 &&\n        evt.movementX === 0\n      ) {\n        return null;\n      }\n      if (Konva.UA.mobile) {\n        return null;\n      }\n      this._setPointerPosition(evt);\n      var shape;\n\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          if (\n            !Konva.isDragging() &&\n            (!this.targetShape || this.targetShape._id !== shape._id)\n          ) {\n            if (this.targetShape) {\n              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);\n              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);\n            }\n            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);\n            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);\n            this.targetShape = shape;\n          } else {\n            shape._fireAndBubble(MOUSEMOVE, { evt: evt });\n          }\n        } else {\n          /*\n                 * if no shape was detected, clear target shape and try\n                 * to run mouseout from previous target shape\n                 */\n          if (this.targetShape && !Konva.isDragging()) {\n            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n            this.targetShape = null;\n          }\n          this._fire(MOUSEMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _mousedown: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchstart(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n\n        Konva.listenClickTap = true;\n\n        if (shape && shape.isListening()) {\n          this.clickStartShape = shape;\n          shape._fireAndBubble(MOUSEDOWN, { evt: evt });\n        } else {\n          this._fire(MOUSEDOWN, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      // TODO: if we preventDefault() it will cancel event detection outside of window inside iframe\n      // but we need it for better drag&drop\n      // can we disable native drag&drop somehow differently?\n      // if (evt.cancelable) {\n      // evt.preventDefault();\n      // }\n    },\n    _mouseup: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchend(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition()),\n          clickStartShape = this.clickStartShape,\n          clickEndShape = this.clickEndShape,\n          fireDblClick = false,\n          dd = Konva.DD;\n\n        if (Konva.inDblClickWindow) {\n          fireDblClick = true;\n          clearTimeout(this.dblTimeout);\n          // Konva.inDblClickWindow = false;\n        } else if (!dd || !dd.justDragged) {\n          // don't set inDblClickWindow after dragging\n          Konva.inDblClickWindow = true;\n          clearTimeout(this.dblTimeout);\n        } else if (dd) {\n          dd.justDragged = false;\n        }\n\n        this.dblTimeout = setTimeout(function() {\n          Konva.inDblClickWindow = false;\n        }, Konva.dblClickWindow);\n\n        if (shape && shape.isListening()) {\n          this.clickEndShape = shape;\n          shape._fireAndBubble(MOUSEUP, { evt: evt });\n\n          // detect if click or double click occurred\n          if (\n            Konva.listenClickTap &&\n            clickStartShape &&\n            clickStartShape._id === shape._id\n          ) {\n            shape._fireAndBubble(CLICK, { evt: evt });\n\n            if (\n              fireDblClick &&\n              clickEndShape &&\n              clickEndShape._id === shape._id\n            ) {\n              shape._fireAndBubble(DBL_CLICK, { evt: evt });\n            }\n          }\n        } else {\n          this._fire(MOUSEUP, { evt: evt, target: this, currentTarget: this });\n          if (Konva.listenClickTap) {\n            this._fire(CLICK, { evt: evt, target: this, currentTarget: this });\n          }\n\n          if (fireDblClick) {\n            this._fire(DBL_CLICK, {\n              evt: evt,\n              target: this,\n              currentTarget: this\n            });\n          }\n        }\n        // content events\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\n        if (Konva.listenClickTap) {\n          this._fire(CONTENT_CLICK, { evt: evt });\n          if (fireDblClick) {\n            this._fire(CONTENT_DBL_CLICK, { evt: evt });\n          }\n        }\n\n        Konva.listenClickTap = false;\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _contextmenu: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n    },\n    _touchstart: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      Konva.listenClickTap = true;\n\n      if (shape && shape.isListening()) {\n        this.tapStartShape = shape;\n        shape._fireAndBubble(TOUCHSTART, { evt: evt });\n\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHSTART, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      // content event\n      this._fire(CONTENT_TOUCHSTART, { evt: evt });\n    },\n    _touchend: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition()),\n        fireDblClick = false;\n\n      if (Konva.inDblClickWindow) {\n        fireDblClick = true;\n        clearTimeout(this.dblTimeout);\n        // Konva.inDblClickWindow = false;\n      } else {\n        Konva.inDblClickWindow = true;\n        clearTimeout(this.dblTimeout);\n      }\n\n      this.dblTimeout = setTimeout(function() {\n        Konva.inDblClickWindow = false;\n      }, Konva.dblClickWindow);\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(TOUCHEND, { evt: evt });\n\n        // detect if tap or double tap occurred\n        if (\n          Konva.listenClickTap &&\n          this.tapStartShape &&\n          shape._id === this.tapStartShape._id\n        ) {\n          shape._fireAndBubble(TAP, { evt: evt });\n\n          if (fireDblClick) {\n            shape._fireAndBubble(DBL_TAP, { evt: evt });\n          }\n        }\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHEND, { evt: evt, target: this, currentTarget: this });\n        if (Konva.listenClickTap) {\n          this._fire(TAP, { evt: evt, target: this, currentTarget: this });\n        }\n        if (fireDblClick) {\n          this._fire(DBL_TAP, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n      }\n      // content events\n      this._fire(CONTENT_TOUCHEND, { evt: evt });\n      if (Konva.listenClickTap) {\n        this._fire(CONTENT_TAP, { evt: evt });\n        if (fireDblClick) {\n          this._fire(CONTENT_DBL_TAP, { evt: evt });\n        }\n      }\n\n      Konva.listenClickTap = false;\n    },\n    _touchmove: function(evt) {\n      this._setPointerPosition(evt);\n      var dd = Konva.DD,\n        shape;\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          shape._fireAndBubble(TOUCHMOVE, { evt: evt });\n          // only call preventDefault if the shape is listening for events\n          if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n          }\n        } else {\n          this._fire(TOUCHMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n        this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n      }\n      if (dd) {\n        if (\n          Konva.isDragging() &&\n          Konva.DD.node.preventDefault() &&\n          evt.cancelable\n        ) {\n          evt.preventDefault();\n        }\n      }\n    },\n    _wheel: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, { evt: evt });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_WHEEL, { evt: evt });\n    },\n    _setPointerPosition: function(evt) {\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n\n      // touch events\n      if (evt.touches !== undefined) {\n        // currently, only handle one finger\n        if (evt.touches.length > 0) {\n          var touch = evt.touches[0];\n          // get the information for finger #1\n          x = touch.clientX - contentPosition.left;\n          y = touch.clientY - contentPosition.top;\n        }\n      } else {\n        // mouse events\n        x = evt.clientX - contentPosition.left;\n        y = evt.clientY - contentPosition.top;\n      }\n      if (x !== null && y !== null) {\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n      }\n    },\n    _getContentPosition: function() {\n      var rect = this.content.getBoundingClientRect\n        ? this.content.getBoundingClientRect()\n        : { top: 0, left: 0 };\n      return {\n        top: rect.top,\n        left: rect.left\n      };\n    },\n    _buildDOM: function() {\n      // the buffer canvas pixel ratio must be 1 because it is used as an\n      // intermediate canvas before copying the result onto a scene canvas.\n      // not setting it to 1 will result in an over compensation\n      this.bufferCanvas = new Konva.SceneCanvas();\n      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.getContainer();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      // clear content inside container\n      container.innerHTML = EMPTY_STRING;\n\n      // content\n      this.content = Konva.document.createElement(DIV);\n      this.content.style.position = RELATIVE;\n      this.content.style.userSelect = 'none';\n      this.content.className = KONVA_CONTENT;\n\n      this.content.setAttribute('role', 'presentation');\n\n      container.appendChild(this.content);\n\n      this._resizeDOM();\n    },\n    _onContent: function(typesStr, handler) {\n      var types = typesStr.split(SPACE),\n        len = types.length,\n        n,\n        baseEvent;\n\n      for (n = 0; n < len; n++) {\n        baseEvent = types[n];\n        this.content.addEventListener(baseEvent, handler, false);\n      }\n    },\n    // currently cache function is now working for stage, because stage has no its own canvas element\n    // TODO: may be it is better to cache all children layers?\n    cache: function() {\n      Konva.Util.warn(\n        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'\n      );\n    },\n    clearCache: function() {}\n  });\n  Konva.Util.extend(Konva.Stage, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetter(Konva.Stage, 'container');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\n  /**\n   * get container DOM element\n   * @name container\n   * @method\n   * @memberof Konva.Stage.prototype\n   * @returns {DomElement} container\n   * @example\n   * // get container\n   * var container = stage.container();\n   * // set container\n   * var container = document.createElement('div');\n   * body.appendChild(container);\n   * stage.container(container);\n   */\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * BaseLayer constructor.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   */\n  Konva.BaseLayer = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.BaseLayer, {\n    ___init: function(config) {\n      this.nodeType = 'Layer';\n      Konva.Container.call(this, config);\n    },\n    createPNGStream: function() {\n      return this.canvas._canvas.createPNGStream();\n    },\n    /**\n     * get layer canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * get layer hit canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getHitCanvas: function() {\n      return this.hitCanvas;\n    },\n    /**\n     * get layer canvas context\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getContext: function() {\n      return this.getCanvas().getContext();\n    },\n    /**\n     * clear scene and hit canvas contexts tied to the layer\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     * @example\n     * layer.clear();\n     * layer.clear({\n     *   x : 0,\n     *   y : 0,\n     *   width : 100,\n     *   height : 100\n     * });\n     */\n    clear: function(bounds) {\n      this.getContext().clear(bounds);\n      return this;\n    },\n    clearHitCache: function() {\n      this._hitImageData = undefined;\n    },\n    // extend Node.prototype.setZIndex\n    setZIndex: function(index) {\n      Konva.Node.prototype.setZIndex.call(this, index);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n\n        if (index < stage.getChildren().length - 1) {\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            stage.getChildren()[index + 1].getCanvas()._canvas\n          );\n        } else {\n          stage.content.appendChild(this.getCanvas()._canvas);\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToTop\n    moveToTop: function() {\n      Konva.Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveUp\n    moveUp: function() {\n      var moved = Konva.Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return this;\n      }\n      var stage = this.getStage();\n      if (!stage) {\n        return this;\n      }\n      stage.content.removeChild(this.getCanvas()._canvas);\n\n      if (this.index < stage.getChildren().length - 1) {\n        stage.content.insertBefore(\n          this.getCanvas()._canvas,\n          stage.getChildren()[this.index + 1].getCanvas()._canvas\n        );\n      } else {\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveDown\n    moveDown: function() {\n      if (Konva.Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[this.index + 1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToBottom\n    moveToBottom: function() {\n      if (Konva.Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    getLayer: function() {\n      return this;\n    },\n    remove: function() {\n      var _canvas = this.getCanvas()._canvas;\n\n      Konva.Node.prototype.remove.call(this);\n\n      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    },\n    getStage: function() {\n      return this.parent;\n    },\n    setSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      return this;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n      config.width = config.width || this.getWidth();\n      config.height = config.height || this.getHeight();\n      config.x = config.x !== undefined ? config.x : this.getX();\n      config.y = config.y !== undefined ? config.y : this.getY();\n\n      return Konva.Node.prototype._toKonvaCanvas.call(this, config);\n    },\n    /**\n     * get/set width of layer.getter return width of stage. setter doing nothing.\n     * if you want change width use `stage.width(value);`\n     * @name width\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var width = layer.width();\n     */\n    getWidth: function() {\n      if (this.parent) {\n        return this.parent.getWidth();\n      }\n    },\n    setWidth: function() {\n      Konva.Util.warn(\n        'Can not change width of layer. Use \"stage.width(value)\" function instead.'\n      );\n    },\n    /**\n     * get/set height of layer.getter return height of stage. setter doing nothing.\n     * if you want change height use `stage.height(value);`\n     * @name height\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var height = layer.height();\n     */\n    getHeight: function() {\n      if (this.parent) {\n        return this.parent.getHeight();\n      }\n    },\n    setHeight: function() {\n      Konva.Util.warn(\n        'Can not change height of layer. Use \"stage.height(value)\" function instead.'\n      );\n    },\n    // the apply transform method is handled by the Layer and FastLayer class\n    // because it is up to the layer to decide if an absolute or relative transform\n    // should be used\n    _applyTransform: function(shape, context, top) {\n      var m = shape.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n  });\n  Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n  /**\n   * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n   *  before drawing\n   * @name clearBeforeDraw\n   * @method\n   * @memberof Konva.BaseLayer.prototype\n   * @param {Boolean} clearBeforeDraw\n   * @returns {Boolean}\n   * @example\n   * // get clearBeforeDraw flag\n   * var clearBeforeDraw = layer.clearBeforeDraw();\n   *\n   * // disable clear before draw\n   * layer.clearBeforeDraw(false);\n   *\n   * // enable clear before draw\n   * layer.clearBeforeDraw(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.BaseLayer);\n})(Konva);\n\n(function() {\n  'use strict';\n  // constants\n  var HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    /*\n         * 2 - 3 - 4\n         * |       |\n         * 1 - 0   5\n         *         |\n         * 8 - 7 - 6\n         */\n    INTERSECTION_OFFSETS = [\n      { x: 0, y: 0 }, // 0\n      { x: -1, y: -1 }, // 2\n      { x: 1, y: -1 }, // 4\n      { x: 1, y: 1 }, // 6\n      { x: -1, y: 1 } // 8\n    ],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\n  /**\n   * Layer constructor.  Layers are tied to their own canvas element and are used\n   * to contain groups or shapes.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.BaseLayer\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var layer = new Konva.Layer();\n   */\n  Konva.Layer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Layer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      this.hitCanvas = new Konva.HitCanvas({\n        pixelRatio: 1\n      });\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to a layer.');\n      }\n    },\n    /**\n     * get visible intersection shape. This is the preferred\n     * method for determining if a point intersects a shape or not\n     * also you may pass optional selector parametr to return ancestor of intersected shape\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @param {String} [selector]\n     * @returns {Konva.Node}\n     * @example\n     * var shape = layer.getIntersection({x: 50, y: 50});\n     * // or if you interested in shape parent:\n     * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n     */\n    getIntersection: function(pos, selector) {\n      var obj, i, intersectionOffset, shape;\n\n      if (!this.hitGraphEnabled() || !this.isVisible()) {\n        return null;\n      }\n      // in some cases antialiased area may be bigger than 1px\n      // it is possible if we will cache node, then scale it a lot\n      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          intersectionOffset = INTERSECTION_OFFSETS[i];\n          obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          shape = obj.shape;\n          if (shape && selector) {\n            return shape.findAncestor(selector, true);\n          } else if (shape) {\n            return shape;\n          }\n          // we should continue search if we found antialiased pixel\n          // that means our node somewhere very close\n          continueSearch = !!obj.antialiased;\n          // stop search if found empty pixel\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        // if no shape, and no antialiased pixel, we should end searching\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    },\n    _getImageData: function(x, y) {\n      var width = this.hitCanvas.width || 1,\n        height = this.hitCanvas.height || 1,\n        index = Math.round(y) * width + Math.round(x);\n\n      if (!this._hitImageData) {\n        this._hitImageData = this.hitCanvas.context.getImageData(\n          0,\n          0,\n          width,\n          height\n        );\n      }\n\n      return [\n        this._hitImageData.data[4 * index + 0], // Red\n        this._hitImageData.data[4 * index + 1], // Green\n        this._hitImageData.data[4 * index + 2], // Blue\n        this._hitImageData.data[4 * index + 3] // Alpha\n      ];\n    },\n    _getIntersection: function(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(\n          Math.round(pos.x * ratio),\n          Math.round(pos.y * ratio),\n          1,\n          1\n        ).data,\n        p3 = p[3],\n        colorKey,\n        shape;\n      // fully opaque pixel\n      if (p3 === 255) {\n        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n        shape = Konva.shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        // antialiased pixel\n        return {\n          antialiased: true\n        };\n      }\n      // empty pixel\n      return {};\n    },\n    drawScene: function(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas());\n\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas, top);\n\n      this._fire(DRAW, {\n        node: this\n      });\n\n      return this;\n    },\n    drawHit: function(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas);\n\n      if (layer && layer.getClearBeforeDraw()) {\n        layer\n          .getHitCanvas()\n          .getContext()\n          .clear();\n      }\n\n      Konva.Container.prototype.drawHit.call(this, canvas, top);\n      this.imageData = null; // Clear imageData cache\n      return this;\n    },\n    clear: function(bounds) {\n      Konva.BaseLayer.prototype.clear.call(this, bounds);\n      this.getHitCanvas()\n        .getContext()\n        .clear(bounds);\n      this.imageData = null; // Clear getImageData cache\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n        this.hitCanvas._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n        this.hitCanvas._canvas.style.display = 'none';\n      }\n      return this;\n    },\n    /**\n     * enable hit graph\n     * @name enableHitGraph\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @returns {Layer}\n     */\n    enableHitGraph: function() {\n      this.setHitGraphEnabled(true);\n      return this;\n    },\n    /**\n     * disable hit graph\n     * @name disableHitGraph\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @returns {Layer}\n     */\n    disableHitGraph: function() {\n      this.setHitGraphEnabled(false);\n      return this;\n    },\n    setSize: function(width, height) {\n      Konva.BaseLayer.prototype.setSize.call(this, width, height);\n      this.hitCanvas.setSize(width, height);\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\n  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n  /**\n   * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n   *  draw performance because the hit graph will not be redrawn each time the layer is\n   *  drawn.  This, however, also disables mouse/touch event detection\n   * @name hitGraphEnabled\n   * @method\n   * @memberof Konva.Layer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get hitGraphEnabled flag\n   * var hitGraphEnabled = layer.hitGraphEnabled();\n   *\n   * // disable hit graph\n   * layer.hitGraphEnabled(false);\n   *\n   * // enable hit graph\n   * layer.hitGraphEnabled(true);\n   */\n  Konva.Collection.mapMethods(Konva.Layer);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * FastLayer constructor. Layers are tied to their own canvas element and are used\n   * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n   * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n   * It renders about 2x faster than normal layers.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.BaseLayer\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Boolean} [config.visible]\n   * @param {String} [config.id] unique id\n   * @param {String} [config.name] non-unique name\n   * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var layer = new Konva.FastLayer();\n   */\n  Konva.FastLayer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.FastLayer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Shape') {\n        Konva.Util.throw('You may only add shapes to a fast layer.');\n      }\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n    },\n    hitGraphEnabled: function() {\n      return false;\n    },\n    getIntersection: function() {\n      return null;\n    },\n    drawScene: function(can) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas());\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas);\n\n      return this;\n    },\n    draw: function() {\n      this.drawScene();\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n      }\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\n  Konva.Collection.mapMethods(Konva.FastLayer);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Group constructor.  Groups are used to contain shapes or other groups.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var group = new Konva.Group();\n   */\n  Konva.Group = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Group, {\n    ___init: function(config) {\n      this.nodeType = 'Group';\n      // call super constructor\n      Konva.Container.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  });\n  Konva.Util.extend(Konva.Group, Konva.Container);\n\n  Konva.Collection.mapMethods(Konva.Group);\n})();\n\n(function(Konva) {\n  'use strict';\n  var now = (function() {\n    if (Konva.global.performance && Konva.global.performance.now) {\n      return function() {\n        return Konva.global.performance.now();\n      };\n    }\n\n    return function() {\n      return new Date().getTime();\n    };\n  })();\n\n  function FRAF(callback) {\n    setTimeout(callback, 1000 / 60);\n  }\n\n  var RAF = (function() {\n    return (\n      Konva.global.requestAnimationFrame ||\n      Konva.global.webkitRequestAnimationFrame ||\n      Konva.global.mozRequestAnimationFrame ||\n      Konva.global.oRequestAnimationFrame ||\n      Konva.global.msRequestAnimationFrame ||\n      FRAF\n    );\n  })();\n\n  function requestAnimFrame() {\n    return RAF.apply(Konva.global, arguments);\n  }\n\n  /**\n   * Animation constructor.  A stage is used to contain multiple layers and handle\n   * @constructor\n   * @memberof Konva\n   * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n   *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n   *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n   *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n   *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n   *  if you don't need to redraw layer/layers on some frames.\n   * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n   *  Not specifying a node will result in no redraw.\n   * @example\n   * // move a node to the right at 50 pixels / second\n   * var velocity = 50;\n   *\n   * var anim = new Konva.Animation(function(frame) {\n   *   var dist = velocity * (frame.timeDiff / 1000);\n   *   node.move(dist, 0);\n   * }, layer);\n   *\n   * anim.start();\n   */\n  Konva.Animation = function(func, layers) {\n    var Anim = Konva.Animation;\n    this.func = func;\n    this.setLayers(layers);\n    this.id = Anim.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now()\n    };\n  };\n  /*\n   * Animation methods\n   */\n  Konva.Animation.prototype = {\n    /**\n     * set layers to be redrawn on each animation frame\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n     * @return {Konva.Animation} this\n     */\n    setLayers: function(layers) {\n      var lays = [];\n      // if passing in no layers\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        // if passing in an array of Layers\n        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n        // the length property to check for both cases\n        lays = layers;\n      } else {\n        // if passing in a Layer\n        lays = [layers];\n      }\n\n      this.layers = lays;\n      return this;\n    },\n    /**\n     * get layers\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Array} Array of Konva.Layer\n     */\n    getLayers: function() {\n      return this.layers;\n    },\n    /**\n     * add layer.  Returns true if the layer was added, and false if it was not\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @param {Konva.Layer} layer to add\n     * @return {Bool} true if layer is added to animation, otherwise false\n     */\n    addLayer: function(layer) {\n      var layers = this.layers,\n        len = layers.length,\n        n;\n\n      // don't add the layer if it already exists\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n\n      this.layers.push(layer);\n      return true;\n    },\n    /**\n     * determine if animation is running or not.  returns true or false\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Bool} is animation running?\n     */\n    isRunning: function() {\n      var a = Konva.Animation,\n        animations = a.animations,\n        len = animations.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * start animation\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Konva.Animation} this\n     */\n    start: function() {\n      var Anim = Konva.Animation;\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n      Anim._addAnimation(this);\n      return this;\n    },\n    /**\n     * stop animation\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Konva.Animation} this\n     */\n    stop: function() {\n      Konva.Animation._removeAnimation(this);\n      return this;\n    },\n    _updateFrameObject: function(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  };\n  Konva.Animation.animations = [];\n  Konva.Animation.animIdCounter = 0;\n  Konva.Animation.animRunning = false;\n\n  Konva.Animation._addAnimation = function(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  };\n  Konva.Animation._removeAnimation = function(anim) {\n    var id = anim.id,\n      animations = this.animations,\n      len = animations.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  };\n\n  Konva.Animation._runFrames = function() {\n    var layerHash = {},\n      animations = this.animations,\n      anim,\n      layers,\n      func,\n      n,\n      i,\n      layersLen,\n      layer,\n      key,\n      needRedraw;\n    /*\n     * loop through all animations and execute animation\n     *  function.  if the animation object has specified node,\n     *  we can add the node to the nodes hash to eliminate\n     *  drawing the same node multiple times.  The node property\n     *  can be the stage itself or a layer\n     */\n    /*\n     * WARNING: don't cache animations.length because it could change while\n     * the for loop is running, causing a JS error\n     */\n\n    for (n = 0; n < animations.length; n++) {\n      anim = animations[n];\n      layers = anim.layers;\n      func = anim.func;\n\n      anim._updateFrameObject(now());\n      layersLen = layers.length;\n\n      // if animation object has a function, execute it\n      if (func) {\n        // allow anim bypassing drawing\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (i = 0; i < layersLen; i++) {\n        layer = layers[i];\n\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n\n    for (key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].draw();\n    }\n  };\n  Konva.Animation._animationLoop = function() {\n    var Anim = Konva.Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  };\n  Konva.Animation._handleAnimation = function() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      requestAnimFrame(this._animationLoop);\n    }\n  };\n\n  /**\n   * batch draw. this function will not do immediate draw\n   * but it will schedule drawing to next tick (requestAnimFrame)\n   * @method\n   * @name batchDraw\n   * @return {Konva.Layer} this\n   * @memberof Konva.BaseLayer.prototype\n   */\n  Konva.BaseLayer.prototype.batchDraw = function() {\n    var that = this,\n      Anim = Konva.Animation;\n\n    if (!this.batchAnim) {\n      this.batchAnim = new Anim(function() {\n        // stop animation after first tick\n        that.batchAnim.stop();\n      }, this);\n    }\n\n    if (!this.batchAnim.isRunning()) {\n      this.batchAnim.start();\n    }\n    return this;\n  };\n\n  /**\n   * batch draw\n   * @method\n   * @name batchDraw\n   * @return {Konva.Stage} this\n   * @memberof Konva.Stage.prototype\n   */\n  Konva.Stage.prototype.batchDraw = function() {\n    this.getChildren().each(function(layer) {\n      layer.batchDraw();\n    });\n    return this;\n  };\n})(Konva);\n\n(function() {\n  'use strict';\n  var blacklist = {\n      node: 1,\n      duration: 1,\n      easing: 1,\n      onFinish: 1,\n      yoyo: 1\n    },\n    PAUSED = 1,\n    PLAYING = 2,\n    REVERSING = 3,\n    idCounter = 0,\n    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\n  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n    this.prop = prop;\n    this.propFunc = propFunc;\n    this.begin = begin;\n    this._pos = begin;\n    this.duration = duration;\n    this._change = 0;\n    this.prevPos = 0;\n    this.yoyo = yoyo;\n    this._time = 0;\n    this._position = 0;\n    this._startTime = 0;\n    this._finish = 0;\n    this.func = func;\n    this._change = finish - this.begin;\n    this.pause();\n  };\n  /*\n     * Tween methods\n     */\n  Tween.prototype = {\n    fire: function(str) {\n      var handler = this[str];\n      if (handler) {\n        handler();\n      }\n    },\n    setTime: function(t) {\n      if (t > this.duration) {\n        if (this.yoyo) {\n          this._time = this.duration;\n          this.reverse();\n        } else {\n          this.finish();\n        }\n      } else if (t < 0) {\n        if (this.yoyo) {\n          this._time = 0;\n          this.play();\n        } else {\n          this.reset();\n        }\n      } else {\n        this._time = t;\n        this.update();\n      }\n    },\n    getTime: function() {\n      return this._time;\n    },\n    setPosition: function(p) {\n      this.prevPos = this._pos;\n      this.propFunc(p);\n      this._pos = p;\n    },\n    getPosition: function(t) {\n      if (t === undefined) {\n        t = this._time;\n      }\n      return this.func(t, this.begin, this._change, this.duration);\n    },\n    play: function() {\n      this.state = PLAYING;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onPlay');\n    },\n    reverse: function() {\n      this.state = REVERSING;\n      this._time = this.duration - this._time;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onReverse');\n    },\n    seek: function(t) {\n      this.pause();\n      this._time = t;\n      this.update();\n      this.fire('onSeek');\n    },\n    reset: function() {\n      this.pause();\n      this._time = 0;\n      this.update();\n      this.fire('onReset');\n    },\n    finish: function() {\n      this.pause();\n      this._time = this.duration;\n      this.update();\n      this.fire('onFinish');\n    },\n    update: function() {\n      this.setPosition(this.getPosition(this._time));\n    },\n    onEnterFrame: function() {\n      var t = this.getTimer() - this._startTime;\n      if (this.state === PLAYING) {\n        this.setTime(t);\n      } else if (this.state === REVERSING) {\n        this.setTime(this.duration - t);\n      }\n    },\n    pause: function() {\n      this.state = PAUSED;\n      this.fire('onPause');\n    },\n    getTimer: function() {\n      return new Date().getTime();\n    }\n  };\n\n  /**\n   * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n   *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n   *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n   * @constructor\n   * @memberof Konva\n   * @example\n   * // instantiate new tween which fully rotates a node in 1 second\n   * var tween = new Konva.Tween({\n   *   node: node,\n   *   rotationDeg: 360,\n   *   duration: 1,\n   *   easing: Konva.Easings.EaseInOut\n   * });\n   *\n   * // play tween\n   * tween.play();\n   *\n   * // pause tween\n   * tween.pause();\n   */\n  Konva.Tween = function(config) {\n    var that = this,\n      node = config.node,\n      nodeId = node._id,\n      duration,\n      easing = config.easing || Konva.Easings.Linear,\n      yoyo = !!config.yoyo,\n      key;\n\n    if (typeof config.duration === 'undefined') {\n      duration = 0.3;\n    } else if (config.duration === 0) {\n      // zero is bad value for duration\n      duration = 0.001;\n    } else {\n      duration = config.duration;\n    }\n    this.node = node;\n    this._id = idCounter++;\n\n    var layers =\n      node.getLayer() ||\n      (node instanceof Konva.Stage ? node.getLayers() : null);\n    if (!layers) {\n      Konva.Util.error(\n        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n      );\n    }\n    this.anim = new Konva.Animation(function() {\n      that.tween.onEnterFrame();\n    }, layers);\n\n    this.tween = new Tween(\n      key,\n      function(i) {\n        that._tweenFunc(i);\n      },\n      easing,\n      0,\n      1,\n      duration * 1000,\n      yoyo\n    );\n\n    this._addListeners();\n\n    // init attrs map\n    if (!Konva.Tween.attrs[nodeId]) {\n      Konva.Tween.attrs[nodeId] = {};\n    }\n    if (!Konva.Tween.attrs[nodeId][this._id]) {\n      Konva.Tween.attrs[nodeId][this._id] = {};\n    }\n    // init tweens map\n    if (!Konva.Tween.tweens[nodeId]) {\n      Konva.Tween.tweens[nodeId] = {};\n    }\n\n    for (key in config) {\n      if (blacklist[key] === undefined) {\n        this._addAttr(key, config[key]);\n      }\n    }\n\n    this.reset();\n\n    // callbacks\n    this.onFinish = config.onFinish;\n    this.onReset = config.onReset;\n  };\n\n  // start/diff object = attrs.nodeId.tweenId.attr\n  Konva.Tween.attrs = {};\n  // tweenId = tweens.nodeId.attr\n  Konva.Tween.tweens = {};\n\n  Konva.Tween.prototype = {\n    _addAttr: function(key, end) {\n      var node = this.node,\n        nodeId = node._id,\n        start,\n        diff,\n        tweenId,\n        n,\n        len,\n        trueEnd,\n        trueStart,\n        endRGBA;\n\n      // remove conflict from tween map if it exists\n      tweenId = Konva.Tween.tweens[nodeId][key];\n\n      if (tweenId) {\n        delete Konva.Tween.attrs[nodeId][tweenId][key];\n      }\n\n      // add to tween map\n      start = node.getAttr(key);\n\n      if (Konva.Util._isArray(end)) {\n        diff = [];\n        len = Math.max(end.length, start.length);\n\n        if (key === 'points' && end.length !== start.length) {\n          // before tweening points we need to make sure that start.length === end.length\n          // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\n          if (end.length > start.length) {\n            // so in this case we will increase number of starting points\n            trueStart = start;\n            start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n          } else {\n            // in this case we will increase number of eding points\n            trueEnd = end;\n            end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n          }\n        }\n\n        if (key.indexOf('fill') === 0) {\n          for (n = 0; n < len; n++) {\n            if (n % 2 === 0) {\n              diff.push(end[n] - start[n]);\n            } else {\n              var startRGBA = Konva.Util.colorToRGBA(start[n]);\n              endRGBA = Konva.Util.colorToRGBA(end[n]);\n              start[n] = startRGBA;\n              diff.push({\n                r: endRGBA.r - startRGBA.r,\n                g: endRGBA.g - startRGBA.g,\n                b: endRGBA.b - startRGBA.b,\n                a: endRGBA.a - startRGBA.a\n              });\n            }\n          }\n        } else {\n          for (n = 0; n < len; n++) {\n            diff.push(end[n] - start[n]);\n          }\n        }\n      } else if (colorAttrs.indexOf(key) !== -1) {\n        start = Konva.Util.colorToRGBA(start);\n        endRGBA = Konva.Util.colorToRGBA(end);\n        diff = {\n          r: endRGBA.r - start.r,\n          g: endRGBA.g - start.g,\n          b: endRGBA.b - start.b,\n          a: endRGBA.a - start.a\n        };\n      } else {\n        diff = end - start;\n      }\n\n      Konva.Tween.attrs[nodeId][this._id][key] = {\n        start: start,\n        diff: diff,\n        end: end,\n        trueEnd: trueEnd,\n        trueStart: trueStart\n      };\n      Konva.Tween.tweens[nodeId][key] = this._id;\n    },\n    _tweenFunc: function(i) {\n      var node = this.node,\n        attrs = Konva.Tween.attrs[node._id][this._id],\n        key,\n        attr,\n        start,\n        diff,\n        newVal,\n        n,\n        len,\n        end;\n\n      for (key in attrs) {\n        attr = attrs[key];\n        start = attr.start;\n        diff = attr.diff;\n        end = attr.end;\n\n        if (Konva.Util._isArray(start)) {\n          newVal = [];\n          len = Math.max(start.length, end.length);\n          if (key.indexOf('fill') === 0) {\n            for (n = 0; n < len; n++) {\n              if (n % 2 === 0) {\n                newVal.push((start[n] || 0) + diff[n] * i);\n              } else {\n                newVal.push(\n                  'rgba(' +\n                    Math.round(start[n].r + diff[n].r * i) +\n                    ',' +\n                    Math.round(start[n].g + diff[n].g * i) +\n                    ',' +\n                    Math.round(start[n].b + diff[n].b * i) +\n                    ',' +\n                    (start[n].a + diff[n].a * i) +\n                    ')'\n                );\n              }\n            }\n          } else {\n            for (n = 0; n < len; n++) {\n              newVal.push((start[n] || 0) + diff[n] * i);\n            }\n          }\n        } else if (colorAttrs.indexOf(key) !== -1) {\n          newVal =\n            'rgba(' +\n            Math.round(start.r + diff.r * i) +\n            ',' +\n            Math.round(start.g + diff.g * i) +\n            ',' +\n            Math.round(start.b + diff.b * i) +\n            ',' +\n            (start.a + diff.a * i) +\n            ')';\n        } else {\n          newVal = start + diff * i;\n        }\n\n        node.setAttr(key, newVal);\n      }\n    },\n    _addListeners: function() {\n      var that = this;\n\n      // start listeners\n      this.tween.onPlay = function() {\n        that.anim.start();\n      };\n      this.tween.onReverse = function() {\n        that.anim.start();\n      };\n\n      // stop listeners\n      this.tween.onPause = function() {\n        that.anim.stop();\n      };\n      this.tween.onFinish = function() {\n        var node = that.node;\n\n        // after tweening  points of line we need to set original end\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueEnd) {\n          node.points(attrs.points.trueEnd);\n        }\n\n        if (that.onFinish) {\n          that.onFinish.call(that);\n        }\n      };\n      this.tween.onReset = function() {\n        var node = that.node;\n        // after tweening  points of line we need to set original start\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueStart) {\n          node.points(attrs.points.trueStart);\n        }\n\n        if (that.onReset) {\n          that.onReset();\n        }\n      };\n    },\n    /**\n     * play\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    play: function() {\n      this.tween.play();\n      return this;\n    },\n    /**\n     * reverse\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    reverse: function() {\n      this.tween.reverse();\n      return this;\n    },\n    /**\n     * reset\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    reset: function() {\n      this.tween.reset();\n      return this;\n    },\n    /**\n     * seek\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @param {Integer} t time in seconds between 0 and the duration\n     * @returns {Tween}\n     */\n    seek: function(t) {\n      this.tween.seek(t * 1000);\n      return this;\n    },\n    /**\n     * pause\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    pause: function() {\n      this.tween.pause();\n      return this;\n    },\n    /**\n     * finish\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    finish: function() {\n      this.tween.finish();\n      return this;\n    },\n    /**\n     * destroy\n     * @method\n     * @memberof Konva.Tween.prototype\n     */\n    destroy: function() {\n      var nodeId = this.node._id,\n        thisId = this._id,\n        attrs = Konva.Tween.tweens[nodeId],\n        key;\n\n      this.pause();\n\n      for (key in attrs) {\n        delete Konva.Tween.tweens[nodeId][key];\n      }\n\n      delete Konva.Tween.attrs[nodeId][thisId];\n    }\n  };\n\n  /**\n   * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n   *\n   * @method Konva.Node#to\n   * @memberof Konva.Node\n   * @param {Object} [params] tween params\n   * @example\n   *\n   * circle.to({\n   *  x : 50,\n   *  duration : 0.5\n   * });\n   */\n  Konva.Node.prototype.to = function(params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function() {\n      this.destroy();\n      if (onFinish) {\n        onFinish();\n      }\n    };\n    var tween = new Konva.Tween(params);\n    tween.play();\n  };\n\n  /*\n    * These eases were ported from an Adobe Flash tweening library to JavaScript\n    * by Xaric\n    */\n\n  /**\n   * @namespace Easings\n   * @memberof Konva\n   */\n  Konva.Easings = {\n    /**\n     * back ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseIn: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    /**\n     * back ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseOut: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    /**\n     * back ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseInOut: function(t, b, c, d) {\n      var s = 1.70158;\n      if ((t /= d / 2) < 1) {\n        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      }\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    /**\n     * elastic ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseIn: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        -(\n          a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p)\n        ) + b\n      );\n    },\n    /**\n     * elastic ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +\n        c +\n        b\n      );\n    },\n    /**\n     * elastic ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseInOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d / 2) === 2) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * (0.3 * 1.5);\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      if (t < 1) {\n        return (\n          -0.5 *\n            (a *\n              Math.pow(2, 10 * (t -= 1)) *\n              Math.sin((t * d - s) * (2 * Math.PI) / p)) +\n          b\n        );\n      }\n      return (\n        a *\n          Math.pow(2, -10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p) *\n          0.5 +\n        c +\n        b\n      );\n    },\n    /**\n     * bounce ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseOut: function(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n      }\n    },\n    /**\n     * bounce ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseIn: function(t, b, c, d) {\n      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    /**\n     * bounce ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseInOut: function(t, b, c, d) {\n      if (t < d / 2) {\n        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n      } else {\n        return (\n          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n        );\n      }\n    },\n    /**\n     * ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    /**\n     * ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseOut: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    /**\n     * ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n    /**\n     * strong ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    /**\n     * strong ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseOut: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    /**\n     * strong ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t * t + b;\n      }\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    /**\n     * linear\n     * @function\n     * @memberof Konva.Easings\n     */\n    Linear: function(t, b, c, d) {\n      return c * t / d + b;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  Konva.DD = {\n    // properties\n    anim: new Konva.Animation(function() {\n      var b = this.dirty;\n      this.dirty = false;\n      return b;\n    }),\n    isDragging: false,\n    justDragged: false,\n    offset: {\n      x: 0,\n      y: 0\n    },\n    node: null,\n\n    // methods\n    _drag: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node;\n      if (node) {\n        if (!dd.isDragging) {\n          var pos = node.getStage().getPointerPosition();\n          // it is possible that pos is undefined\n          // reattach it\n          if (!pos) {\n            node.getStage()._setPointerPosition(evt);\n            pos = node.getStage().getPointerPosition();\n          }\n          var dragDistance = node.dragDistance();\n          var distance = Math.max(\n            Math.abs(pos.x - dd.startPointerPos.x),\n            Math.abs(pos.y - dd.startPointerPos.y)\n          );\n          if (distance < dragDistance) {\n            return;\n          }\n        }\n\n        node.getStage()._setPointerPosition(evt);\n        if (!dd.isDragging) {\n          dd.isDragging = true;\n          node.fire(\n            'dragstart',\n            {\n              type: 'dragstart',\n              target: node,\n              evt: evt\n            },\n            true\n          );\n          // a user can stop dragging inside `dragstart`\n          if (!node.isDragging()) {\n            return;\n          }\n        }\n        node._setDragPosition(evt);\n\n        // execute ondragmove if defined\n        node.fire(\n          'dragmove',\n          {\n            type: 'dragmove',\n            target: node,\n            evt: evt\n          },\n          true\n        );\n      }\n    },\n    _endDragBefore: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node,\n        layer;\n\n      if (node) {\n        layer = node.getLayer();\n        dd.anim.stop();\n\n        // only fire dragend event if the drag and drop\n        // operation actually started.\n        if (dd.isDragging) {\n          dd.isDragging = false;\n          dd.justDragged = true;\n          Konva.listenClickTap = false;\n\n          if (evt) {\n            evt.dragEndNode = node;\n          }\n        }\n\n        delete dd.node;\n\n        if (node.getLayer() || layer || node instanceof Konva.Stage) {\n          (layer || node).draw();\n        }\n      }\n    },\n    _endDragAfter: function(evt) {\n      evt = evt || {};\n      var dragEndNode = evt.dragEndNode;\n\n      if (evt && dragEndNode) {\n        dragEndNode.fire(\n          'dragend',\n          {\n            type: 'dragend',\n            target: dragEndNode,\n            evt: evt\n          },\n          true\n        );\n      }\n    }\n  };\n\n  // Node extenders\n\n  /**\n   * initiate drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.startDrag = function() {\n    var dd = Konva.DD,\n      stage = this.getStage(),\n      layer = this.getLayer(),\n      pos = stage.getPointerPosition(),\n      ap = this.getAbsolutePosition();\n\n    if (pos) {\n      if (dd.node) {\n        dd.node.stopDrag();\n      }\n\n      dd.node = this;\n      dd.startPointerPos = pos;\n      dd.offset.x = pos.x - ap.x;\n      dd.offset.y = pos.y - ap.y;\n      dd.anim.setLayers(layer || this.getLayers());\n      dd.anim.start();\n\n      this._setDragPosition();\n    }\n  };\n\n  Konva.Node.prototype._setDragPosition = function(evt) {\n    var dd = Konva.DD,\n      pos = this.getStage().getPointerPosition(),\n      dbf = this.getDragBoundFunc();\n    if (!pos) {\n      return;\n    }\n    var newNodePos = {\n      x: pos.x - dd.offset.x,\n      y: pos.y - dd.offset.y\n    };\n\n    if (dbf !== undefined) {\n      newNodePos = dbf.call(this, newNodePos, evt);\n    }\n    this.setAbsolutePosition(newNodePos);\n\n    if (\n      !this._lastPos ||\n      this._lastPos.x !== newNodePos.x ||\n      this._lastPos.y !== newNodePos.y\n    ) {\n      dd.anim.dirty = true;\n    }\n\n    this._lastPos = newNodePos;\n  };\n\n  /**\n   * stop drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.stopDrag = function() {\n    var dd = Konva.DD,\n      evt = {};\n    dd._endDragBefore(evt);\n    dd._endDragAfter(evt);\n  };\n\n  Konva.Node.prototype.setDraggable = function(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  };\n\n  var origRemove = Konva.Node.prototype.remove;\n\n  Konva.Node.prototype.__originalRemove = origRemove;\n  Konva.Node.prototype.remove = function() {\n    var dd = Konva.DD;\n\n    // stop DD\n    if (dd.node && dd.node._id === this._id) {\n      this.stopDrag();\n    }\n\n    origRemove.call(this);\n  };\n\n  /**\n   * determine if node is currently in drag and drop mode\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.isDragging = function() {\n    var dd = Konva.DD;\n    return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n  };\n\n  Konva.Node.prototype._listenDrag = function() {\n    var that = this;\n\n    this._dragCleanup();\n\n    if (this.getClassName() === 'Stage') {\n      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    } else {\n      this.on('mousedown.konva touchstart.konva', function(evt) {\n        // ignore right and middle buttons\n        if (evt.evt.button === 1 || evt.evt.button === 2) {\n          return;\n        }\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    }\n\n    // listening is required for drag and drop\n    /*\n        this._listeningEnabled = true;\n        this._clearSelfAndAncestorCache('listeningEnabled');\n        */\n  };\n\n  Konva.Node.prototype._dragChange = function() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      // remove event listeners\n      this._dragCleanup();\n\n      /*\n             * force drag and drop to end\n             * if this node is currently in\n             * drag and drop mode\n             */\n      var stage = this.getStage();\n      var dd = Konva.DD;\n      if (stage && dd.node && dd.node._id === this._id) {\n        dd.node.stopDrag();\n      }\n    }\n  };\n\n  Konva.Node.prototype._dragCleanup = function() {\n    if (this.getClassName() === 'Stage') {\n      this.off('contentMousedown.konva');\n      this.off('contentTouchstart.konva');\n    } else {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\n  /**\n   * get/set drag bound function.  This is used to override the default\n   *  drag and drop position.\n   * @name dragBoundFunc\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Function} dragBoundFunc\n   * @returns {Function}\n   * @example\n   * // get drag bound function\n   * var dragBoundFunc = node.dragBoundFunc();\n   *\n   * // create vertical drag and drop\n   * node.dragBoundFunc(function(pos){\n   *   // important pos - is absolute position of the node\n   *   // you should return absolute position too\n   *   return {\n   *     x: this.getAbsolutePosition().x,\n   *     y: pos.y\n   *   };\n   * });\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\n  /**\n   * get/set draggable flag\n   * @name draggable\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean} draggable\n   * @returns {Boolean}\n   * @example\n   * // get draggable flag\n   * var draggable = node.draggable();\n   *\n   * // enable drag and drop\n   * node.draggable(true);\n   *\n   * // disable drag and drop\n   * node.draggable(false);\n   */\n\n  if (Konva.isBrowser) {\n    window.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n    window.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\n    window.addEventListener('mousemove', Konva.DD._drag);\n    window.addEventListener('touchmove', Konva.DD._drag);\n\n    window.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n    window.addEventListener('touchend', Konva.DD._endDragAfter, false);\n  }\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Rect constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} [config.cornerRadius]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var rect = new Konva.Rect({\n   *   width: 100,\n   *   height: 50,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Rect = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Rect.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Rect';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var cornerRadius = this.getCornerRadius(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n\n      if (!cornerRadius) {\n        // simple rect - don't bother doing all that complicated maths stuff.\n        context.rect(0, 0, width, height);\n      } else {\n        // arcTo would be nicer, but browser support is patchy (Opera)\n        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n        context.moveTo(cornerRadius, 0);\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  };\n\n  Konva.Util.extend(Konva.Rect, Konva.Shape);\n\n  Konva.Factory.addGetterSetter(\n    Konva.Rect,\n    'cornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set corner radius\n   * @name cornerRadius\n   * @method\n   * @memberof Konva.Rect.prototype\n   * @param {Number} cornerRadius\n   * @returns {Number}\n   * @example\n   * // get corner radius\n   * var cornerRadius = rect.cornerRadius();\n   *\n   * // set corner radius\n   * rect.cornerRadius(10);\n   */\n\n  Konva.Collection.mapMethods(Konva.Rect);\n})();\n\n(function(Konva) {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001,\n    CIRCLE = 'Circle';\n\n  /**\n   * Circle constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // create circle\n   * var circle = new Konva.Circle({\n   *   radius: 40,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Circle = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Circle.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = CIRCLE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Circle, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Circle,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Circle.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radius\n   * var radius = circle.radius();\n   *\n   * // set radius\n   * circle.radius(10);\n   */\n\n  Konva.Collection.mapMethods(Konva.Circle);\n})(Konva);\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001,\n    ELLIPSE = 'Ellipse';\n\n  /**\n   * Ellipse constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Object} config.radius defines x and y radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var ellipse = new Konva.Ellipse({\n   *   radius : {\n   *     x : 50,\n   *     y : 50\n   *   },\n   *   fill: 'red'\n   * });\n   */\n  Konva.Ellipse = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ellipse.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = ELLIPSE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var rx = this.getRadiusX(),\n        ry = this.getRadiusY();\n\n      context.beginPath();\n      context.save();\n      if (rx !== ry) {\n        context.scale(1, ry / rx);\n      }\n      context.arc(0, 0, rx, 0, PIx2, false);\n      context.restore();\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadiusX() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadiusY() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this.setRadius({\n        x: width / 2\n      });\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this.setRadius({\n        y: height / 2\n      });\n    }\n  };\n  Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Object} radius\n   * @param {Number} radius.x\n   * @param {Number} radius.y\n   * @returns {Object}\n   * @example\n   * // get radius\n   * var radius = ellipse.radius();\n   *\n   * // set radius\n   * ellipse.radius({\n   *   x: 200,\n   *   y: 100\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Ellipse,\n    'radiusX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set radius x\n   * @name radiusX\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get radius x\n   * var radiusX = ellipse.radiusX();\n   *\n   * // set radius x\n   * ellipse.radiusX(200);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Ellipse,\n    'radiusY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set radius y\n   * @name radiusY\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get radius y\n   * var radiusY = ellipse.radiusY();\n   *\n   * // set radius y\n   * ellipse.radiusY(200);\n   */\n\n  Konva.Collection.mapMethods(Konva.Ellipse);\n})();\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001;\n  /**\n   * Ring constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var ring = new Konva.Ring({\n   *   innerRadius: 40,\n   *   outerRadius: 80,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Ring = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ring.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Ring';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n      context.moveTo(this.getOuterRadius(), 0);\n      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    },\n    setOuterRadius: function(val) {\n      this._setAttr('outerRadius', val);\n      this.setWidth(val * 2);\n      this.setHeight(val * 2);\n    }\n  };\n  Konva.Util.extend(Konva.Ring, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Ring,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set innerRadius\n   * @name innerRadius\n   * @method\n   * @memberof Konva.Ring.prototype\n   * @param {Number} innerRadius\n   * @returns {Number}\n   * @example\n   * // get inner radius\n   * var innerRadius = ring.innerRadius();\n   *\n   * // set inner radius\n   * ring.innerRadius(20);\n   */\n  Konva.Factory.addGetter(\n    Konva.Ring,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\n  /**\n   * get/set outerRadius\n   * @name outerRadius\n   * @method\n   * @memberof Konva.Ring.prototype\n   * @param {Number} outerRadius\n   * @returns {Number}\n   * @example\n   * // get outer radius\n   * var outerRadius = ring.outerRadius();\n   *\n   * // set outer radius\n   * ring.outerRadius(20);\n   */\n\n  Konva.Collection.mapMethods(Konva.Ring);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Wedge constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.angle in degrees\n   * @param {Number} config.radius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // draw a wedge that's pointing downwards\n   * var wedge = new Konva.Wedge({\n   *   radius: 40,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5,\n   *   angleDeg: 60,\n   *   rotationDeg: -120\n   * });\n   */\n  Konva.Wedge = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Wedge.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Wedge';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        this.getRadius(),\n        0,\n        Konva.getAngle(this.getAngle()),\n        this.getClockwise()\n      );\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Wedge,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radius\n   * var radius = wedge.radius();\n   *\n   * // set radius\n   * wedge.radius(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Wedge,\n    'angle',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set angle in degrees\n   * @name angle\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} angle\n   * @returns {Number}\n   * @example\n   * // get angle\n   * var angle = wedge.angle();\n   *\n   * // set angle\n   * wedge.angle(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\n  /**\n   * get/set clockwise flag\n   * @name clockwise\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} clockwise\n   * @returns {Number}\n   * @example\n   * // get clockwise flag\n   * var clockwise = wedge.clockwise();\n   *\n   * // draw wedge counter-clockwise\n   * wedge.clockwise(false);\n   *\n   * // draw wedge clockwise\n   * wedge.clockwise(true);\n   */\n\n  Konva.Factory.backCompat(Konva.Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle'\n  });\n\n  Konva.Collection.mapMethods(Konva.Wedge);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Arc constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.angle in degrees\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // draw a Arc that's pointing downwards\n   * var arc = new Konva.Arc({\n   *   innerRadius: 40,\n   *   outerRadius: 80,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5,\n   *   angle: 60,\n   *   rotationDeg: -120\n   * });\n   */\n  Konva.Arc = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Arc.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Arc';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var angle = Konva.getAngle(this.angle()),\n        clockwise = this.clockwise();\n\n      context.beginPath();\n      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.getOuterRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.getOuterRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Arc, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set innerRadius\n   * @name innerRadius\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} innerRadius\n   * @returns {Number}\n   * @example\n   * // get inner radius\n   * var innerRadius = arc.innerRadius();\n   *\n   * // set inner radius\n   * arc.innerRadius(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set outerRadius\n   * @name outerRadius\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} outerRadius\n   * @returns {Number}\n   * @example\n   * // get outer radius\n   * var outerRadius = arc.outerRadius();\n   *\n   * // set outer radius\n   * arc.outerRadius(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'angle',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set angle in degrees\n   * @name angle\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} angle\n   * @returns {Number}\n   * @example\n   * // get angle\n   * var angle = arc.angle();\n   *\n   * // set angle\n   * arc.angle(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\n  /**\n   * get/set clockwise flag\n   * @name clockwise\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Boolean} clockwise\n   * @returns {Boolean}\n   * @example\n   * // get clockwise flag\n   * var clockwise = arc.clockwise();\n   *\n   * // draw arc counter-clockwise\n   * arc.clockwise(false);\n   *\n   * // draw arc clockwise\n   * arc.clockwise(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.Arc);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var IMAGE = 'Image';\n\n  /**\n   * Image constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Image} config.image\n   * @param {Object} [config.crop]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   var image = new Konva.Image({\n   *     x: 200,\n   *     y: 50,\n   *     image: imageObj,\n   *     width: 100,\n   *     height: 100\n   *   });\n   * };\n   * imageObj.src = '/path/to/image.jpg'\n   */\n  Konva.Image = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Image.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = IMAGE;\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke() &&\n        this.getStage()\n      );\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        image = this.getImage(),\n        cropWidth,\n        cropHeight,\n        params;\n\n      if (image) {\n        cropWidth = this.getCropWidth();\n        cropHeight = this.getCropHeight();\n        if (cropWidth && cropHeight) {\n          params = [\n            image,\n            this.getCropX(),\n            this.getCropY(),\n            cropWidth,\n            cropHeight,\n            0,\n            0,\n            width,\n            height\n          ];\n        } else {\n          params = [image, 0, 0, width, height];\n        }\n      }\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        context.drawImage.apply(context, params);\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      var image = this.getImage();\n      return this.attrs.width || (image ? image.width : 0);\n    },\n    getHeight: function() {\n      var image = this.getImage();\n      return this.attrs.height || (image ? image.height : 0);\n    }\n  };\n  Konva.Util.extend(Konva.Image, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\n  /**\n   * set image\n   * @name setImage\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Image} image\n   */\n\n  /**\n   * get image\n   * @name getImage\n   * @method\n   * @memberof Konva.Image.prototype\n   * @returns {Image}\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n   * get/set crop\n   * @method\n   * @name crop\n   * @memberof Konva.Image.prototype\n   * @param {Object} crop\n   * @param {Number} crop.x\n   * @param {Number} crop.y\n   * @param {Number} crop.width\n   * @param {Number} crop.height\n   * @returns {Object}\n   * @example\n   * // get crop\n   * var crop = image.crop();\n   *\n   * // set crop\n   * image.crop({\n   *   x: 20,\n   *   y: 20,\n   *   width: 20,\n   *   height: 20\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop x\n   * @method\n   * @name cropX\n   * @memberof Konva.Image.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get crop x\n   * var cropX = image.cropX();\n   *\n   * // set crop x\n   * image.cropX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop y\n   * @name cropY\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get crop y\n   * var cropY = image.cropY();\n   *\n   * // set crop y\n   * image.cropY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropWidth',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop width\n   * @name cropWidth\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get crop width\n   * var cropWidth = image.cropWidth();\n   *\n   * // set crop width\n   * image.cropWidth(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropHeight',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop height\n   * @name cropHeight\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get crop height\n   * var cropHeight = image.cropHeight();\n   *\n   * // set crop height\n   * image.cropHeight(20);\n   */\n\n  Konva.Collection.mapMethods(Konva.Image);\n\n  /**\n   * load image from given url and create `Konva.Image` instance\n   * @method\n   * @memberof Konva.Image\n   * @param {String} url image source\n   * @param {Function} callback with Konva.Image instance as first argument\n   * @example\n   *  Konva.Image.fromURL(imageURL, function(image){\n   *    // image is Konva.Image instance\n   *    layer.add(image);\n   *    layer.draw();\n   *  });\n   */\n  Konva.Image.fromURL = function(url, callback) {\n    var img = new Image();\n    img.onload = function() {\n      var image = new Konva.Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  };\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  // constants\n  var AUTO = 'auto',\n    //CANVAS = 'canvas',\n    CENTER = 'center',\n    JUSTIFY = 'justify',\n    CHANGE_KONVA = 'Change.konva',\n    CONTEXT_2D = '2d',\n    DASH = '-',\n    EMPTY_STRING = '',\n    LEFT = 'left',\n    TEXT = 'text',\n    TEXT_UPPER = 'Text',\n    TOP = 'top',\n    BOTTOM = 'bottom',\n    MIDDLE = 'middle',\n    NORMAL = 'normal',\n    PX_SPACE = 'px ',\n    SPACE = ' ',\n    RIGHT = 'right',\n    WORD = 'word',\n    CHAR = 'char',\n    NONE = 'none',\n    ELLIPSIS = '…',\n    ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'fontVariant',\n      'padding',\n      'align',\n      'verticalAlign',\n      'lineHeight',\n      'text',\n      'width',\n      'height',\n      'wrap',\n      'ellipsis',\n      'letterSpacing'\n    ],\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n  var dummyContext;\n  function getDummyContext() {\n    if (dummyContext) {\n      return dummyContext;\n    }\n    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n  }\n\n  /**\n   * Text constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Arial\n   * @param {Number} [config.fontSize] in pixels.  Default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} [config.align] can be left, center, or right\n   * @param {String} [config.verticalAlign] can be top, middle or bottom\n   * @param {Number} [config.padding]\n   * @param {Number} [config.lineHeight] default is 1\n   * @param {String} [config.wrap] can be word, char, or none. Default is word\n   * @param {Boolean} [config.ellipsis] can be true or false. Default is false. if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var text = new Konva.Text({\n   *   x: 10,\n   *   y: 15,\n   *   text: 'Simple Text',\n   *   fontSize: 30,\n   *   fontFamily: 'Calibri',\n   *   fill: 'green'\n   * });\n   */\n  Konva.Text = function(config) {\n    this.___init(config);\n  };\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.Text.prototype = {\n    ___init: function(config) {\n      config = config || {};\n\n      // set default color to black\n      if (\n        !config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops\n      ) {\n        config.fill = config.fill || 'black';\n      }\n      //\n      // if (config.width === undefined) {\n      //     config.width = AUTO;\n      // }\n      // if (config.height === undefined) {\n      //     config.height = AUTO;\n      // }\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this.className = TEXT_UPPER;\n\n      // update text data for certain attr changes\n      for (var n = 0; n < attrChangeListLen; n++) {\n        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n      }\n\n      this._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var padding = this.getPadding(),\n        textHeight = this.getTextHeight(),\n        lineHeightPx = this.getLineHeight() * textHeight,\n        textArr = this.textArr,\n        textArrLen = textArr.length,\n        verticalAlign = this.getVerticalAlign(),\n        alignY = 0,\n        align = this.getAlign(),\n        totalWidth = this.getWidth(),\n        letterSpacing = this.getLetterSpacing(),\n        textDecoration = this.textDecoration(),\n        fill = this.fill(),\n        fontSize = this.fontSize(),\n        n;\n\n      context.setAttr('font', this._getContextFont());\n\n      context.setAttr('textBaseline', MIDDLE);\n      context.setAttr('textAlign', LEFT);\n\n      // handle vertical alignment\n      if (verticalAlign === MIDDLE) {\n        alignY =\n          (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n      } else if (verticalAlign === BOTTOM) {\n        alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n      }\n\n      if (padding) {\n        context.translate(padding, 0);\n        context.translate(0, alignY + padding + lineHeightPx / 2);\n      } else {\n        context.translate(0, alignY + lineHeightPx / 2);\n      }\n\n      // draw text lines\n      for (n = 0; n < textArrLen; n++) {\n        var obj = textArr[n],\n          text = obj.text,\n          width = obj.width,\n          lastLine = n !== textArrLen - 1,\n          spacesNumber,\n          oneWord,\n          lineWidth;\n\n        // horizontal alignment\n        context.save();\n        if (align === RIGHT) {\n          context.translate(totalWidth - width - padding * 2, 0);\n        } else if (align === CENTER) {\n          context.translate((totalWidth - width - padding * 2) / 2, 0);\n        }\n\n        if (textDecoration.indexOf('underline') !== -1) {\n          context.save();\n          context.beginPath();\n\n          context.moveTo(0, Math.round(lineHeightPx / 2));\n          spacesNumber = text.split(' ').length - 1;\n          oneWord = spacesNumber === 0;\n          lineWidth =\n            align === JUSTIFY && lastLine && !oneWord\n              ? totalWidth - padding * 2\n              : width;\n          context.lineTo(Math.round(lineWidth), Math.round(lineHeightPx / 2));\n          // TODO: I have no idea what is real ratio\n          // just /15 looks good enough\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (textDecoration.indexOf('line-through') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, 0);\n          spacesNumber = text.split(' ').length - 1;\n          oneWord = spacesNumber === 0;\n          lineWidth =\n            align === JUSTIFY && lastLine && !oneWord\n              ? totalWidth - padding * 2\n              : width;\n          context.lineTo(Math.round(lineWidth), 0);\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (letterSpacing !== 0 || align === JUSTIFY) {\n          //   var words = text.split(' ');\n          spacesNumber = text.split(' ').length - 1;\n          for (var li = 0; li < text.length; li++) {\n            var letter = text[li];\n            // skip justify for the last line\n            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n              context.translate(\n                Math.floor((totalWidth - padding * 2 - width) / spacesNumber),\n                0\n              );\n            }\n            this.partialText = letter;\n            context.fillStrokeShape(this);\n            context.translate(\n              Math.round(this._getTextSize(letter).width) + letterSpacing,\n              0\n            );\n          }\n        } else {\n          this.partialText = text;\n\n          context.fillStrokeShape(this);\n        }\n        context.restore();\n        if (textArrLen > 1) {\n          context.translate(0, lineHeightPx);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    setText: function(text) {\n      var str = Konva.Util._isString(text) ? text : (text || '').toString();\n      this._setAttr(TEXT, str);\n      return this;\n    },\n    /**\n     * get width of text area, which includes padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getWidth: function() {\n      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n      return isAuto\n        ? this.getTextWidth() + this.getPadding() * 2\n        : this.attrs.width;\n    },\n    /**\n     * get the height of the text area, which takes into account multi-line text, line heights, and padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getHeight: function() {\n      var isAuto =\n        this.attrs.height === AUTO || this.attrs.height === undefined;\n      return isAuto\n        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +\n            this.getPadding() * 2\n        : this.attrs.height;\n    },\n    /**\n     * get text width\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get height of one line text\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    _getTextSize: function(text) {\n      var _context = getDummyContext(),\n        fontSize = this.getFontSize(),\n        metrics;\n\n      _context.save();\n      _context.font = this._getContextFont();\n\n      metrics = _context.measureText(text);\n      _context.restore();\n      return {\n        width: metrics.width,\n        height: parseInt(fontSize, 10)\n      };\n    },\n    _getContextFont: function() {\n      // IE don't want to work with usual font style\n      // bold was not working\n      // removing font variant will solve\n      // fix for: https://github.com/konvajs/konva/issues/94\n      if (Konva.UA.isIE) {\n        return (\n          this.getFontStyle() +\n          SPACE +\n          this.getFontSize() +\n          PX_SPACE +\n          this.getFontFamily()\n        );\n      }\n      return (\n        this.getFontStyle() +\n        SPACE +\n        this.getFontVariant() +\n        SPACE +\n        this.getFontSize() +\n        PX_SPACE +\n        this.getFontFamily()\n      );\n    },\n    _addTextLine: function(line) {\n      if (this.align() === JUSTIFY) {\n        line = line.trim();\n      }\n      var width = this._getTextWidth(line);\n      return this.textArr.push({ text: line, width: width });\n    },\n    _getTextWidth: function(text) {\n      var latterSpacing = this.getLetterSpacing();\n      var length = text.length;\n      return (\n        getDummyContext().measureText(text).width +\n        (length ? latterSpacing * (length - 1) : 0)\n      );\n    },\n    _setTextData: function() {\n      var lines = this.getText().split('\\n'),\n        fontSize = +this.getFontSize(),\n        textWidth = 0,\n        lineHeightPx = this.getLineHeight() * fontSize,\n        width = this.attrs.width,\n        height = this.attrs.height,\n        fixedWidth = width !== AUTO,\n        fixedHeight = height !== AUTO,\n        padding = this.getPadding(),\n        maxWidth = width - padding * 2,\n        maxHeightPx = height - padding * 2,\n        currentHeightPx = 0,\n        wrap = this.getWrap(),\n        // align = this.getAlign(),\n        shouldWrap = wrap !== NONE,\n        wrapAtWord = wrap !== CHAR && shouldWrap,\n        shouldAddEllipsis = this.getEllipsis() && !shouldWrap;\n\n      this.textArr = [];\n      getDummyContext().font = this._getContextFont();\n      for (var i = 0, max = lines.length; i < max; ++i) {\n        var line = lines[i];\n        var additionalWidth = shouldAddEllipsis\n          ? this._getTextWidth(ELLIPSIS)\n          : 0;\n\n        var lineWidth = this._getTextWidth(line);\n        if (fixedWidth && lineWidth > maxWidth) {\n          /*\n          * if width is fixed and line does not fit entirely\n          * break the line into multiple fitting lines\n          */\n          while (line.length > 0) {\n            /*\n            * use binary search to find the longest substring that\n            * that would fit in the specified width\n            */\n            var low = 0,\n              high = line.length,\n              match = '',\n              matchWidth = 0;\n            while (low < high) {\n              var mid = (low + high) >>> 1,\n                substr = line.slice(0, mid + 1),\n                substrWidth = this._getTextWidth(substr) + additionalWidth;\n              if (substrWidth <= maxWidth) {\n                low = mid + 1;\n                match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n                matchWidth = substrWidth;\n              } else {\n                high = mid;\n              }\n            }\n            /*\n            * 'low' is now the index of the substring end\n            * 'match' is the substring\n            * 'matchWidth' is the substring width in px\n            */\n            if (match) {\n              // a fitting substring was found\n              if (wrapAtWord) {\n                // try to find a space or dash where wrapping could be done\n                var wrapIndex;\n                var nextChar = line[match.length];\n                var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                  wrapIndex = match.length;\n                } else {\n                  wrapIndex =\n                    Math.max(\n                      match.lastIndexOf(SPACE),\n                      match.lastIndexOf(DASH)\n                    ) + 1;\n                }\n                if (wrapIndex > 0) {\n                  // re-cut the substring found at the space/dash position\n                  low = wrapIndex;\n                  match = match.slice(0, low);\n                  matchWidth = this._getTextWidth(match);\n                }\n              }\n              // if (align === 'right') {\n              match = Konva.Util.trimRight(match);\n              // }\n              this._addTextLine(match);\n              textWidth = Math.max(textWidth, matchWidth);\n              currentHeightPx += lineHeightPx;\n              if (\n                !shouldWrap ||\n                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)\n              ) {\n                /*\n                * stop wrapping if wrapping is disabled or if adding\n                * one more line would overflow the fixed height\n                */\n                break;\n              }\n              line = line.slice(low);\n              line = Konva.Util.trimLeft(line);\n              if (line.length > 0) {\n                // Check if the remaining text would fit on one line\n                lineWidth = this._getTextWidth(line);\n                if (lineWidth <= maxWidth) {\n                  // if it does, add the line and break out of the loop\n                  this._addTextLine(line);\n                  currentHeightPx += lineHeightPx;\n                  textWidth = Math.max(textWidth, lineWidth);\n                  break;\n                }\n              }\n            } else {\n              // not even one character could fit in the element, abort\n              break;\n            }\n          }\n        } else {\n          // element width is automatically adjusted to max line width\n          this._addTextLine(line);\n          currentHeightPx += lineHeightPx;\n          textWidth = Math.max(textWidth, lineWidth);\n        }\n        // if element height is fixed, abort if adding one more line would overflow\n        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n          break;\n        }\n      }\n      this.textHeight = fontSize;\n      // var maxTextWidth = 0;\n      // for(var j = 0; j < this.textArr.length; j++) {\n      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);\n      // }\n      this.textWidth = textWidth;\n    }\n  };\n  Konva.Util.extend(Konva.Text, Konva.Shape);\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'width',\n    Konva.Validators.getNumberOrAutoValidator()\n  );\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'height',\n    Konva.Validators.getNumberOrAutoValidator()\n  );\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\n  /**\n   * get/set font family\n   * @name fontFamily\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontFamily\n   * @returns {String}\n   * @example\n   * // get font family\n   * var fontFamily = text.fontFamily();\n   *\n   * // set font family\n   * text.fontFamily('Arial');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'fontSize',\n    12,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set font size in pixels\n   * @name fontSize\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} fontSize\n   * @returns {Number}\n   * @example\n   * // get font size\n   * var fontSize = text.fontSize();\n   *\n   * // set font size to 22px\n   * text.fontSize(22);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name fontStyle\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontStyle\n   * @returns {String}\n   * @example\n   * // get font style\n   * var fontStyle = text.fontStyle();\n   *\n   * // set font style\n   * text.fontStyle('bold');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name fontVariant\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontVariant\n   * @returns {String}\n   * @example\n   * // get font variant\n   * var fontVariant = text.fontVariant();\n   *\n   * // set font variant\n   * text.fontVariant('small-caps');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'padding',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} padding\n   * @returns {Number}\n   * @example\n   * // get padding\n   * var padding = text.padding();\n   *\n   * // set padding to 10 pixels\n   * text.padding(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'verticalAlign', TOP);\n\n  /**\n   * get/set vertical align of text.  Can be 'top', 'middle', 'bottom'.\n   * @name verticalAlign\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} verticalAlign\n   * @returns {String}\n   * @example\n   * // get text vertical align\n   * var verticalAlign = text.verticalAlign();\n   *\n   * // center text\n   * text.verticalAlign('middle');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'lineHeight',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set line height.  The default is 1.\n   * @name lineHeight\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} lineHeight\n   * @returns {Number}\n   * @example\n   * // get line height\n   * var lineHeight = text.lineHeight();\n   *\n   * // set the line height\n   * text.lineHeight(2);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\n  /**\n   * get/set wrap.  Can be word, char, or none. Default is word.\n   * @name wrap\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} wrap\n   * @returns {String}\n   * @example\n   * // get wrap\n   * var wrap = text.wrap();\n   *\n   * // set wrap\n   * text.wrap('word');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'ellipsis', false);\n\n  /**\n   * get/set ellipsis.  Can be true or false. Default is false.\n   * if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @name ellipsis\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Boolean} ellipsis\n   * @returns {Boolean}\n   * @example\n   * // get ellipsis\n   * var ellipsis = text.ellipsis();\n   *\n   * // set ellipsis\n   * text.ellipsis(true);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'letterSpacing',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\n  /**\n   * get/set text\n   * @name getText\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} text\n   * @returns {String}\n   * @example\n   * // get text\n   * var text = text.text();\n   *\n   * // set text\n   * text.text('Hello world!');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);\n\n  /**\n   * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // underline text\n   * text.textDecoration('underline');\n   *\n   * // strike text\n   * text.textDecoration('line-through');\n   *\n   * // underline and strike text\n   * text.textDecoration('underline line-through');\n   */\n\n  Konva.Collection.mapMethods(Konva.Text);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Line constructor.&nbsp; Lines are defined by an array of points and\n   *  a tension\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n   * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   x: 100,\n   *   y: 50,\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1\n   * });\n   */\n  Konva.Line = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Line.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Line';\n\n      this.on(\n        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',\n        function() {\n          this._clearCache('tensionPoints');\n        }\n      );\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var points = this.getPoints(),\n        length = points.length,\n        tension = this.getTension(),\n        closed = this.getClosed(),\n        bezier = this.getBezier(),\n        tp,\n        len,\n        n;\n\n      if (!length) {\n        return;\n      }\n\n      context.beginPath();\n      context.moveTo(points[0], points[1]);\n\n      // tension\n      if (tension !== 0 && length > 4) {\n        tp = this.getTensionPoints();\n        len = tp.length;\n        n = closed ? 0 : 4;\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n        }\n\n        while (n < len - 2) {\n          context.bezierCurveTo(\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++]\n          );\n        }\n\n        if (!closed) {\n          context.quadraticCurveTo(\n            tp[len - 2],\n            tp[len - 1],\n            points[length - 2],\n            points[length - 1]\n          );\n        }\n      } else if (bezier) {\n        // no tension but bezier\n        n = 2;\n\n        while (n < length) {\n          context.bezierCurveTo(\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++]\n          );\n        }\n      } else {\n        // no tension\n        for (n = 2; n < length; n += 2) {\n          context.lineTo(points[n], points[n + 1]);\n        }\n      }\n\n      // closed e.g. polygons and blobs\n      if (closed) {\n        context.closePath();\n        context.fillStrokeShape(this);\n      } else {\n        // open e.g. lines and splines\n        context.strokeShape(this);\n      }\n    },\n    getTensionPoints: function() {\n      return this._getCache('tensionPoints', this._getTensionPoints);\n    },\n    _getTensionPoints: function() {\n      if (this.getClosed()) {\n        return this._getTensionPointsClosed();\n      } else {\n        return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n      }\n    },\n    _getTensionPointsClosed: function() {\n      var p = this.getPoints(),\n        len = p.length,\n        tension = this.getTension(),\n        util = Konva.Util,\n        firstControlPoints = util._getControlPoints(\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          p[2],\n          p[3],\n          tension\n        ),\n        lastControlPoints = util._getControlPoints(\n          p[len - 4],\n          p[len - 3],\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          tension\n        ),\n        middle = Konva.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]]\n          .concat(middle)\n          .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n          ]);\n\n      return tp;\n    },\n    getWidth: function() {\n      return this.getSelfRect().width;\n    },\n    getHeight: function() {\n      return this.getSelfRect().height;\n    },\n    // overload size detection\n    getSelfRect: function() {\n      var points;\n      if (this.getTension() !== 0) {\n        points = this._getTensionPoints();\n      } else {\n        points = this.getPoints();\n      }\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Line, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\n  /**\n   * get/set closed flag.  The default is false\n   * @name closed\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} closed\n   * @returns {Boolean}\n   * @example\n   * // get closed flag\n   * var closed = line.closed();\n   *\n   * // close the shape\n   * line.closed(true);\n   *\n   * // open the shape\n   * line.closed(false);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);\n\n  /**\n   * get/set bezier flag.  The default is false\n   * @name bezier\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} bezier\n   * @returns {Boolean}\n   * @example\n   * // get whether the line is a bezier\n   * var isBezier = line.bezier();\n   *\n   * // set whether the line is a bezier\n   * line.bezier(true);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Line,\n    'tension',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set tension\n   * @name tension\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var tension = line.tension();\n   *\n   * // set tension\n   * line.tension(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Line,\n    'points',\n    [],\n    Konva.Validators.getNumberArrayValidator()\n  );\n  /**\n   * get/set points array\n   * @name points\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Array} points\n   * @returns {Array}\n   * @example\n   * // get points\n   * var points = line.points();\n   *\n   * // set points\n   * line.points([10, 20, 30, 40, 50, 60]);\n   *\n   * // push a new point\n   * line.points(line.points().concat([70, 80]));\n   */\n\n  Konva.Collection.mapMethods(Konva.Line);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Sprite constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} config.animation animation key\n   * @param {Object} config.animations animation map\n   * @param {Integer} [config.frameIndex] animation frame index\n   * @param {Image} config.image image object\n   * @param {Integer} [config.frameRate] animation frame rate\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   var sprite = new Konva.Sprite({\n   *     x: 200,\n   *     y: 100,\n   *     image: imageObj,\n   *     animation: 'standing',\n   *     animations: {\n   *       standing: [\n   *         // x, y, width, height (6 frames)\n   *         0, 0, 49, 109,\n   *         52, 0, 49, 109,\n   *         105, 0, 49, 109,\n   *         158, 0, 49, 109,\n   *         210, 0, 49, 109,\n   *         262, 0, 49, 109\n   *       ],\n   *       kicking: [\n   *         // x, y, width, height (6 frames)\n   *         0, 109, 45, 98,\n   *         45, 109, 45, 98,\n   *         95, 109, 63, 98,\n   *         156, 109, 70, 98,\n   *         229, 109, 60, 98,\n   *         287, 109, 41, 98\n   *       ]\n   *     },\n   *     frameRate: 7,\n   *     frameIndex: 0\n   *   });\n   * };\n   * imageObj.src = '/path/to/image.jpg'\n   */\n  Konva.Sprite = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Sprite.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Sprite';\n\n      this._updated = true;\n      var that = this;\n      this.anim = new Konva.Animation(function() {\n        // if we don't need to redraw layer we should return false\n        var updated = that._updated;\n        that._updated = false;\n        return updated;\n      });\n      this.on('animationChange.konva', function() {\n        // reset index when animation changes\n        this.frameIndex(0);\n      });\n      this.on('frameIndexChange.konva', function() {\n        this._updated = true;\n      });\n      // smooth change for frameRate\n      this.on('frameRateChange.konva', function() {\n        if (!this.anim.isRunning()) {\n          return;\n        }\n        clearInterval(this.interval);\n        this._setInterval();\n      });\n\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        x = set[ix4 + 0],\n        y = set[ix4 + 1],\n        width = set[ix4 + 2],\n        height = set[ix4 + 3],\n        image = this.getImage();\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim],\n            ix2 = index * 2;\n          context.drawImage(\n            image,\n            x,\n            y,\n            width,\n            height,\n            offset[ix2 + 0],\n            offset[ix2 + 1],\n            width,\n            height\n          );\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        width = set[ix4 + 2],\n        height = set[ix4 + 3];\n\n      context.beginPath();\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n      context.closePath();\n      context.fillShape(this);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke()\n      );\n    },\n    _setInterval: function() {\n      var that = this;\n      this.interval = setInterval(function() {\n        that._updateIndex();\n      }, 1000 / this.getFrameRate());\n    },\n    /**\n     * start sprite animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     */\n    start: function() {\n      if (this.isRunning()) {\n        return;\n      }\n      var layer = this.getLayer();\n\n      /*\n       * animation object has no executable function because\n       *  the updates are done with a fixed FPS with the setInterval\n       *  below.  The anim object only needs the layer reference for\n       *  redraw\n       */\n      this.anim.setLayers(layer);\n      this._setInterval();\n      this.anim.start();\n    },\n    /**\n     * stop sprite animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     */\n    stop: function() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    },\n    /**\n     * determine if animation of sprite is running or not.  returns true or false\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @returns {Boolean}\n     */\n    isRunning: function() {\n      return this.anim.isRunning();\n    },\n    _updateIndex: function() {\n      var index = this.frameIndex(),\n        animation = this.getAnimation(),\n        animations = this.getAnimations(),\n        anim = animations[animation],\n        len = anim.length / 4;\n\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\n  /**\n   * get/set animation key\n   * @name animation\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {String} anim animation key\n   * @returns {String}\n   * @example\n   * // get animation key\n   * var animation = sprite.animation();\n   *\n   * // set animation key\n   * sprite.animation('kicking');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\n  /**\n   * get/set animations map\n   * @name animations\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Object} animations\n   * @returns {Object}\n   * @example\n   * // get animations map\n   * var animations = sprite.animations();\n   *\n   * // set animations map\n   * sprite.animations({\n   *   standing: [\n   *     // x, y, width, height (6 frames)\n   *     0, 0, 49, 109,\n   *     52, 0, 49, 109,\n   *     105, 0, 49, 109,\n   *     158, 0, 49, 109,\n   *     210, 0, 49, 109,\n   *     262, 0, 49, 109\n   *   ],\n   *   kicking: [\n   *     // x, y, width, height (6 frames)\n   *     0, 109, 45, 98,\n   *     45, 109, 45, 98,\n   *     95, 109, 63, 98,\n   *     156, 109, 70, 98,\n   *     229, 109, 60, 98,\n   *     287, 109, 41, 98\n   *   ]\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\n  /**\n   * get/set offsets map\n   * @name offsets\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Object} offsets\n   * @returns {Object}\n   * @example\n   * // get offsets map\n   * var offsets = sprite.offsets();\n   *\n   * // set offsets map\n   * sprite.offsets({\n   *   standing: [\n   *     // x, y (6 frames)\n   *     0, 0,\n   *     0, 0,\n   *     5, 0,\n   *     0, 0,\n   *     0, 3,\n   *     2, 0\n   *   ],\n   *   kicking: [\n   *     // x, y (6 frames)\n   *     0, 5,\n   *     5, 0,\n   *     10, 0,\n   *     0, 0,\n   *     2, 1,\n   *     0, 0\n   *   ]\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\n  /**\n   * get/set image\n   * @name image\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Image} image\n   * @returns {Image}\n   * @example\n   * // get image\n   * var image = sprite.image();\n   *\n   * // set image\n   * sprite.image(imageObj);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Sprite,\n    'frameIndex',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set/set animation frame index\n   * @name frameIndex\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Integer} frameIndex\n   * @returns {Integer}\n   * @example\n   * // get animation frame index\n   * var frameIndex = sprite.frameIndex();\n   *\n   * // set animation frame index\n   * sprite.frameIndex(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Sprite,\n    'frameRate',\n    17,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set frame rate in frames per second.  Increase this number to make the sprite\n   *  animation run faster, and decrease the number to make the sprite animation run slower\n   *  The default is 17 frames per second\n   * @name frameRate\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Integer} frameRate\n   * @returns {Integer}\n   * @example\n   * // get frame rate\n   * var frameRate = sprite.frameRate();\n   *\n   * // set frame rate to 2 frames per second\n   * sprite.frameRate(2);\n   */\n\n  Konva.Factory.backCompat(Konva.Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex'\n  });\n\n  Konva.Collection.mapMethods(Konva.Sprite);\n})();\n\n/*eslint-disable  no-shadow, max-len, max-depth */\n(function() {\n  'use strict';\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} config.data SVG data string\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var path = new Konva.Path({\n   *   x: 240,\n   *   y: 40,\n   *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n   *   fill: 'green',\n   *   scale: 2\n   * });\n   */\n  Konva.Path = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Path.prototype = {\n    ___init: function(config) {\n      this.dataArray = [];\n      var that = this;\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Path';\n\n      this.dataArray = Konva.Path.parsePathData(this.getData());\n      this.pathLength = 0;\n      for (var i = 0; i < this.dataArray.length; ++i) {\n        this.pathLength += this.dataArray[i].pathLength;\n      }\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.getData());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n          this.pathLength += this.dataArray[i].pathLength;\n        }\n      });\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var ca = this.dataArray;\n\n      // context position\n      context.beginPath();\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n          case 'A':\n            var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n\n            break;\n          case 'z':\n            context.closePath();\n            break;\n        }\n      }\n\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var points = [];\n      this.dataArray.forEach(function(data) {\n        points = points.concat(data.points);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n\n        // skip bad values\n        // TODO: prevent them from parsing function\n        if (!isNaN(x)) {\n          minX = Math.min(minX, x);\n          maxX = Math.max(maxX, x);\n        }\n        if (!isNaN(y)) {\n          minY = Math.min(minY, y);\n          maxY = Math.max(maxY, y);\n        }\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    },\n    /**\n     * Return length of the path.\n     * @method\n     * @memberof Konva.Path.prototype\n     * @returns {Number} length\n     * @example\n     * var length = path.getLength();\n     */\n    getLength: function() {\n      return this.pathLength;\n    },\n    /**\n     * Get point on path at specific length of the path\n     * @method\n     * @memberof Konva.Path.prototype\n     * @param {Number} length length\n     * @returns {Object} point {x,y} point\n     * @example\n     * var point = path.getPointAtLength(10);\n     */\n    getPointAtLength: function(length) {\n      var point,\n        i = 0,\n        ii = this.dataArray.length;\n\n      if (!ii) {\n        return null;\n      }\n\n      while (i < ii && length > this.dataArray[i].pathLength) {\n        length -= this.dataArray[i].pathLength;\n        ++i;\n      }\n\n      if (i === ii) {\n        point = this.dataArray[i - 1].points.slice(-2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      if (length < 0.01) {\n        point = this.dataArray[i].points.slice(0, 2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      var cp = this.dataArray[i];\n      var p = cp.points;\n      switch (cp.command) {\n        case 'L':\n          return Konva.Path.getPointOnLine(\n            length,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1]\n          );\n        case 'C':\n          return Konva.Path.getPointOnCubicBezier(\n            length / cp.pathLength,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1],\n            p[2],\n            p[3],\n            p[4],\n            p[5]\n          );\n        case 'Q':\n          return Konva.Path.getPointOnQuadraticBezier(\n            length / cp.pathLength,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1],\n            p[2],\n            p[3]\n          );\n        case 'A':\n          var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6];\n          theta += dTheta * length / cp.pathLength;\n          return Konva.Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n      }\n\n      return null;\n    }\n  };\n  Konva.Util.extend(Konva.Path, Konva.Shape);\n\n  Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  };\n  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    if (fromX === undefined) {\n      fromX = P1x;\n    }\n    if (fromY === undefined) {\n      fromY = P1y;\n    }\n\n    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (P2x < P1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt;\n\n    if (P2x === P1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix, iy;\n\n      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n      if (len < 0.00000001) {\n        return undefined;\n      }\n      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n      u = u / (len * len);\n      ix = P1x + u * (P2x - P1x);\n      iy = P1y + u * (P2y - P1y);\n\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (P2x < P1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n\n    return pt;\n  };\n\n  Konva.Path.getPointOnCubicBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y,\n    P4x,\n    P4y\n  ) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnQuadraticBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y\n  ) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n      sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  };\n  /*\n     * get parsed data array from the data\n     *  string.  V, v, H, h, and l data are converted to\n     *  L data for the purpose of high performance Path\n     *  rendering\n     */\n  Konva.Path.parsePathData = function(data) {\n    // Path Data Segment must begin with a moveTo\n    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n    //l (x y)+  Relative lineTo\n    //L (x y)+  Absolute LineTo\n    //h (x)+    Relative horizontal lineTo\n    //H (x)+    Absolute horizontal lineTo\n    //v (y)+    Relative vertical lineTo\n    //V (y)+    Absolute vertical lineTo\n    //z (closepath)\n    //Z (closepath)\n    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n    //q (x1 y1 x y)+       Relative Quadratic Bezier\n    //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\n    // return early if data is not defined\n    if (!data) {\n      return [];\n    }\n\n    // command string\n    var cs = data;\n\n    // command chars\n    var cc = [\n      'm',\n      'M',\n      'l',\n      'L',\n      'v',\n      'V',\n      'h',\n      'H',\n      'z',\n      'Z',\n      'c',\n      'C',\n      'q',\n      'Q',\n      't',\n      'T',\n      's',\n      'S',\n      'a',\n      'A'\n    ];\n    // convert white spaces to commas\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    // create pipes so that we can split the data\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    // create array\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    // init context point\n    var cpx = 0;\n    var cpy = 0;\n\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n\n      coords.length = 0;\n      while ((match = re.exec(str))) {\n        coords.push(match[0]);\n      }\n\n      // while ((match = re.exec(str))) {\n      //   coords.push(match[0]);\n      // }\n      var p = [];\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        var parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          // case for a trailing comma before next command\n          break;\n        }\n\n        var cmd = null;\n        var points = [];\n        var startX = cpx,\n          startY = cpy;\n        // Move var from within the switch to up here (jshint)\n        var prevCmd, ctlPtx, ctlPty; // Ss, Tt\n        var rx, ry, psi, fa, fs, x1, y1; // Aa\n\n        // convert l, H, h, V, and v to L\n        switch (c) {\n          // Note: Keep the lineTo's above the moveTo's in this switch\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          // Note: lineTo handlers need to be above this point\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            // After closing the path move the current position\n            // to the the first point of the path (if any).\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            // subsequent points are treated as relative lineTo\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            // subsequent points are treated as absolute lineTo\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(\n              cpx + p.shift(),\n              cpy + p.shift(),\n              cpx + p.shift(),\n              cpy + p.shift()\n            );\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  };\n  Konva.Path.calcLength = function(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Konva.Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'Q':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'A':\n        // Approximates by breaking curve into line segments\n        len = 0.0;\n        var start = points[4];\n        // 4 = theta\n        var dTheta = points[5];\n        // 5 = dTheta\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        );\n        if (dTheta < 0) {\n          // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        );\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\n        return len;\n    }\n\n    return 0;\n  };\n  Konva.Path.convertEndpointToCenterParameterization = function(\n    x1,\n    y1,\n    x2,\n    y2,\n    fa,\n    fs,\n    rx,\n    ry,\n    psiDeg\n  ) {\n    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp =\n      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt(\n      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n        (rx * rx * (yp * yp) + ry * ry * (xp * xp))\n    );\n\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function(v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  };\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\n  /**\n   * set SVG path data string.  This method\n   *  also automatically parses the data string\n   *  into a data array.  Currently supported SVG data:\n   *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n   * @name setData\n   * @method\n   * @memberof Konva.Path.prototype\n   * @param {String} SVG path command string\n   */\n\n  /**\n   * get SVG path data string\n   * @name getData\n   * @method\n   * @memberof Konva.Path.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Path);\n})();\n\n(function() {\n  'use strict';\n  var EMPTY_STRING = '',\n    //CALIBRI = 'Calibri',\n    NORMAL = 'normal';\n\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Calibri\n   * @param {Number} [config.fontSize] default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} config.data SVG data string\n   * @param {Function} config.getKerning a getter for kerning values for the specified characters\n   * @param {Function} config.kerningFunc a getter for kerning values for the specified characters\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var kerningPairs = {\n   *   'A': {\n   *     ' ': -0.05517578125,\n   *     'T': -0.07421875,\n   *     'V': -0.07421875,\n   *   },\n   *   'V': {\n   *     ',': -0.091796875,\n   *     \":\": -0.037109375,\n   *     \";\": -0.037109375,\n   *     \"A\": -0.07421875,\n   *   }\n   * }\n   * var textpath = new Konva.TextPath({\n   *   x: 100,\n   *   y: 50,\n   *   fill: '#333',\n   *   fontSize: '24',\n   *   fontFamily: 'Arial',\n   *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n   *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50',\n   *   kerningFunc: function(leftChar, rightChar) {\n   *     return kerningPairs.hasOwnProperty(leftChar) ? pairs[leftChar][rightChar] || 0 : 0\n   *   }\n   * });\n   */\n  Konva.TextPath = function(config) {\n    this.___init(config);\n  };\n\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.TextPath.prototype = {\n    ___init: function(config) {\n      var that = this;\n      this.dummyCanvas = Konva.Util.createCanvasElement();\n      this.dataArray = [];\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      // overrides\n      // TODO: shouldn't this be on the prototype?\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFunc;\n      this._strokeFuncHit = _strokeFunc;\n\n      this.className = 'TextPath';\n\n      this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n        that._setTextData();\n      });\n\n      // update text data for certain attr changes\n      this.on(\n        'textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva',\n        that._setTextData\n      );\n\n      if (config && config.getKerning) {\n        Konva.Util.warn(\n          'getKerning TextPath API is deprecated. Please use \"kerningFunc\" instead.'\n        );\n        this.setKerningFunc(config.getKerning);\n      }\n\n      that._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      context.setAttr('font', this._getContextFont());\n      context.setAttr('textBaseline', this.getTextBaseline());\n      context.setAttr('textAlign', 'left');\n      context.save();\n\n      var textDecoration = this.textDecoration();\n      var fill = this.fill();\n      var fontSize = this.fontSize();\n\n      var glyphInfo = this.glyphInfo;\n      if (textDecoration === 'underline') {\n        context.beginPath();\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        context.save();\n\n        var p0 = glyphInfo[i].p0;\n\n        context.translate(p0.x, p0.y);\n        context.rotate(glyphInfo[i].rotation);\n        this.partialText = glyphInfo[i].text;\n\n        context.fillStrokeShape(this);\n        if (textDecoration === 'underline') {\n          if (i === 0) {\n            context.moveTo(0, fontSize / 2 + 1);\n          }\n\n          context.lineTo(fontSize, fontSize / 2 + 1);\n        }\n        context.restore();\n\n        //// To assist with debugging visually, uncomment following\n        //\n        // if (i % 2)\n        // context.strokeStyle = 'cyan';\n        // else\n        // context.strokeStyle = 'green';\n        // var p1 = glyphInfo[i].p1;\n        // context.moveTo(p0.x, p0.y);\n        // context.lineTo(p1.x, p1.y);\n        // context.stroke();\n      }\n      if (textDecoration === 'underline') {\n        context.strokeStyle = fill;\n        context.lineWidth = fontSize / 20;\n        context.stroke();\n      }\n\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      context.beginPath();\n\n      var glyphInfo = this.glyphInfo;\n      if (glyphInfo.length >= 1) {\n        var p0 = glyphInfo[0].p0;\n        context.moveTo(p0.x, p0.y);\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        var p1 = glyphInfo[i].p1;\n        context.lineTo(p1.x, p1.y);\n      }\n      context.setAttr('lineWidth', this.getFontSize());\n      context.setAttr('strokeStyle', this.colorKey);\n      context.stroke();\n    },\n    /**\n     * get text width in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get text height in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    /**\n     * set text\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} text\n     */\n    setText: function(text) {\n      Konva.Text.prototype.setText.call(this, text);\n    },\n    _getTextSize: function(text) {\n      var dummyCanvas = this.dummyCanvas;\n      var _context = dummyCanvas.getContext('2d');\n\n      _context.save();\n\n      _context.font = this._getContextFont();\n      var metrics = _context.measureText(text);\n\n      _context.restore();\n\n      return {\n        width: metrics.width,\n        height: parseInt(this.attrs.fontSize, 10)\n      };\n    },\n    _setTextData: function() {\n      var that = this;\n      var size = this._getTextSize(this.attrs.text);\n      var letterSpacing = this.getLetterSpacing();\n      var align = this.align();\n      var kerningFunc = this.getKerningFunc();\n\n      this.textWidth = size.width;\n      this.textHeight = size.height;\n\n      var textFullWidth = Math.max(\n        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,\n        0\n      );\n\n      this.glyphInfo = [];\n\n      var fullPathWidth = 0;\n      for (var l = 0; l < that.dataArray.length; l++) {\n        if (that.dataArray[l].pathLength > 0) {\n          fullPathWidth += that.dataArray[l].pathLength;\n        }\n      }\n\n      var offset = 0;\n      if (align === 'center') {\n        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n      }\n      if (align === 'right') {\n        offset = Math.max(0, fullPathWidth - textFullWidth);\n      }\n\n      var charArr = this.getText().split('');\n      var spacesNumber = this.getText().split(' ').length - 1;\n\n      var p0, p1, pathCmd;\n\n      var pIndex = -1;\n      var currentT = 0;\n      // var sumLength = 0;\n      // for(var j = 0; j < that.dataArray.length; j++) {\n      //   if(that.dataArray[j].pathLength > 0) {\n      //\n      //     if (sumLength + that.dataArray[j].pathLength > offset) {}\n      //       fullPathWidth += that.dataArray[j].pathLength;\n      //   }\n      // }\n\n      var getNextPathSegment = function() {\n        currentT = 0;\n        var pathData = that.dataArray;\n\n        for (var j = pIndex + 1; j < pathData.length; j++) {\n          if (pathData[j].pathLength > 0) {\n            pIndex = j;\n\n            return pathData[j];\n          } else if (pathData[j].command === 'M') {\n            p0 = {\n              x: pathData[j].points[0],\n              y: pathData[j].points[1]\n            };\n          }\n        }\n\n        return {};\n      };\n\n      var findSegmentToFitCharacter = function(c) {\n        var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\n        if (c === ' ' && align === 'justify') {\n          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n        }\n\n        var currLen = 0;\n        var attempts = 0;\n\n        p1 = undefined;\n        while (\n          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n          attempts < 25\n        ) {\n          attempts++;\n          var cumulativePathLength = currLen;\n          while (pathCmd === undefined) {\n            pathCmd = getNextPathSegment();\n\n            if (\n              pathCmd &&\n              cumulativePathLength + pathCmd.pathLength < glyphWidth\n            ) {\n              cumulativePathLength += pathCmd.pathLength;\n              pathCmd = undefined;\n            }\n          }\n\n          if (pathCmd === {} || p0 === undefined) {\n            return undefined;\n          }\n\n          var needNewSegment = false;\n\n          switch (pathCmd.command) {\n            case 'L':\n              if (\n                Konva.Path.getLineLength(\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1]\n                ) > glyphWidth\n              ) {\n                p1 = Konva.Path.getPointOnLine(\n                  glyphWidth,\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1],\n                  p0.x,\n                  p0.y\n                );\n              } else {\n                pathCmd = undefined;\n              }\n              break;\n            case 'A':\n              var start = pathCmd.points[4];\n              // 4 = theta\n              var dTheta = pathCmd.points[5];\n              // 5 = dTheta\n              var end = pathCmd.points[4] + dTheta;\n\n              if (currentT === 0) {\n                currentT = start + 0.00000001;\n              } else if (glyphWidth > currLen) {\n                // Just in case start is 0\n                currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\n              } else {\n                currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\n              }\n\n              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n              // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n              if (\n                (dTheta < 0 && currentT < end) ||\n                (dTheta >= 0 && currentT > end)\n              ) {\n                currentT = end;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnEllipticalArc(\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                currentT,\n                pathCmd.points[6]\n              );\n              break;\n            case 'C':\n              if (currentT === 0) {\n                if (glyphWidth > pathCmd.pathLength) {\n                  currentT = 0.00000001;\n                } else {\n                  currentT = glyphWidth / pathCmd.pathLength;\n                }\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnCubicBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                pathCmd.points[4],\n                pathCmd.points[5]\n              );\n              break;\n            case 'Q':\n              if (currentT === 0) {\n                currentT = glyphWidth / pathCmd.pathLength;\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnQuadraticBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3]\n              );\n              break;\n          }\n\n          if (p1 !== undefined) {\n            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n          }\n\n          if (needNewSegment) {\n            needNewSegment = false;\n            pathCmd = undefined;\n          }\n        }\n      };\n\n      // fake search for offset, this is very bad approach\n      // TODO: find other way to add offset from start (for align)\n      var testChar = 'C';\n      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n      for (var k = 0; k < offset / glyphWidth; k++) {\n        findSegmentToFitCharacter(testChar);\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n        p0 = p1;\n      }\n\n      for (var i = 0; i < charArr.length; i++) {\n        // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n        findSegmentToFitCharacter(charArr[i]);\n\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n\n        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\n        var kern = 0;\n        if (kerningFunc) {\n          try {\n            // getKerning is a user provided getter. Make sure it never breaks our logic\n            kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n          } catch (e) {\n            kern = 0;\n          }\n        }\n\n        p0.x += kern;\n        p1.x += kern;\n        this.textWidth += kern;\n\n        var midpoint = Konva.Path.getPointOnLine(\n          kern + width / 2.0,\n          p0.x,\n          p0.y,\n          p1.x,\n          p1.y\n        );\n\n        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n        this.glyphInfo.push({\n          transposeX: midpoint.x,\n          transposeY: midpoint.y,\n          text: charArr[i],\n          rotation: rotation,\n          p0: p0,\n          p1: p1\n        });\n        p0 = p1;\n      }\n    },\n    getSelfRect: function() {\n      var points = [];\n\n      this.glyphInfo.forEach(function(info) {\n        points.push(info.p0.x);\n        points.push(info.p0.y);\n        points.push(info.p1.x);\n        points.push(info.p1.y);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[0];\n      var maxY = points[0];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      var fontSize = this.fontSize();\n      return {\n        x: Math.round(minX) - fontSize / 2,\n        y: Math.round(minY) - fontSize / 2,\n        width: Math.round(maxX - minX) + fontSize,\n        height: Math.round(maxY - minY) + fontSize\n      };\n    }\n  };\n\n  // map TextPath methods to Text\n  Konva.TextPath.prototype._getContextFont =\n    Konva.Text.prototype._getContextFont;\n\n  Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\n  // add setters and getters\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'data');\n\n  /**\n   * set SVG path data string.  This method\n   *  also automatically parses the data string\n   *  into a data array.  Currently supported SVG data:\n   *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n   * @name setData\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} SVG path command string\n   */\n\n  /**\n   * get SVG path data string\n   * @name getData\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\n  /**\n   * set font family\n   * @name setFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontFamily\n   */\n\n  /**\n   * get font family\n   * @name getFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.TextPath,\n    'fontSize',\n    12,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set font size\n   * @name setFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {int} fontSize\n   */\n\n  /**\n   * get font size\n   * @name getFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name setFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontStyle\n   */\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.TextPath,\n    'letterSpacing',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\n  /**\n   * set textBaseline property. Default value is 'middle'.\n   * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n   * @name textBaseline\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} textBaseline\n   */\n\n  /**\n   * get font style\n   * @name getFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name setFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontVariant\n   */\n\n  /**\n   * @get font variant\n   * @name getFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\n  /**\n   * get text\n   * @name getText\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);\n\n  /**\n   * get/set text decoration of a text.  Can be '' or 'underline'\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // center text\n   * text.textDecoration('underline');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'kerningFunc', null);\n\n  /**\n   * get/set kerning function.\n   * @name kerningFunc\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} kerningFunc\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var kerningFunc = text.kerningFunc();\n   *\n   * // center text\n   * text.kerningFunc(function(leftChar, rightChar) {\n   *   return 1;\n   * });\n   */\n\n  Konva.Collection.mapMethods(Konva.TextPath);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.sides\n   * @param {Number} config.radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var hexagon = new Konva.RegularPolygon({\n   *   x: 100,\n   *   y: 200,\n   *   sides: 6,\n   *   radius: 70,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 4\n   * });\n   */\n  Konva.RegularPolygon = function(config) {\n    this.___init(config);\n  };\n\n  Konva.RegularPolygon.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'RegularPolygon';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var sides = this.attrs.sides,\n        radius = this.attrs.radius,\n        n,\n        x,\n        y;\n\n      context.beginPath();\n      context.moveTo(0, 0 - radius);\n\n      for (n = 1; n < sides; n++) {\n        x = radius * Math.sin(n * 2 * Math.PI / sides);\n        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.RegularPolygon,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set radius\n   * @name setRadius\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get radius\n   * @name getRadius\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.RegularPolygon,\n    'sides',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set number of sides\n   * @name setSides\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   * @param {int} sides\n   */\n\n  /**\n   * get number of sides\n   * @name getSides\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.RegularPolygon);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Star constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Integer} config.numPoints\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var star = new Konva.Star({\n   *   x: 100,\n   *   y: 200,\n   *   numPoints: 5,\n   *   innerRadius: 70,\n   *   outerRadius: 70,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 4\n   * });\n   */\n  Konva.Star = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Star.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Star';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var innerRadius = this.innerRadius(),\n        outerRadius = this.outerRadius(),\n        numPoints = this.numPoints();\n\n      context.beginPath();\n      context.moveTo(0, 0 - outerRadius);\n\n      for (var n = 1; n < numPoints * 2; n++) {\n        var radius = n % 2 === 0 ? outerRadius : innerRadius;\n        var x = radius * Math.sin(n * Math.PI / numPoints);\n        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Star, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'numPoints',\n    5,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set number of points\n   * @name setNumPoints\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Integer} points\n   */\n\n  /**\n   * get number of points\n   * @name getNumPoints\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set inner radius\n   * @name setInnerRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get inner radius\n   * @name getInnerRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set outer radius\n   * @name setOuterRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get outer radius\n   * @name getOuterRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Star);\n})();\n\n(function() {\n  'use strict';\n  // constants\n  var ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'padding',\n      'lineHeight',\n      'text',\n      'width'\n    ],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    LABEL = 'Label',\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\n  /**\n   * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // create label\n   * var label = new Konva.Label({\n   *   x: 100,\n   *   y: 100,\n   *   draggable: true\n   * });\n   *\n   * // add a tag to the label\n   * label.add(new Konva.Tag({\n   *   fill: '#bbb',\n   *   stroke: '#333',\n   *   shadowColor: 'black',\n   *   shadowBlur: 10,\n   *   shadowOffset: [10, 10],\n   *   shadowOpacity: 0.2,\n   *   lineJoin: 'round',\n   *   pointerDirection: 'up',\n   *   pointerWidth: 20,\n   *   pointerHeight: 20,\n   *   cornerRadius: 5\n   * }));\n   *\n   * // add text to the label\n   * label.add(new Konva.Text({\n   *   text: 'Hello World!',\n   *   fontSize: 50,\n   *   lineHeight: 1.2,\n   *   padding: 10,\n   *   fill: 'green'\n   *  }));\n   */\n  Konva.Label = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Label.prototype = {\n    ____init: function(config) {\n      var that = this;\n\n      Konva.Group.call(this, config);\n      this.className = LABEL;\n\n      this.on('add.konva', function(evt) {\n        that._addListeners(evt.child);\n        that._sync();\n      });\n    },\n    /**\n     * get Text shape for the label.  You need to access the Text shape in order to update\n     * the text properties\n     * @name getText\n     * @method\n     * @memberof Konva.Label.prototype\n     */\n    getText: function() {\n      return this.find('Text')[0];\n    },\n    /**\n     * get Tag shape for the label.  You need to access the Tag shape in order to update\n     * the pointer properties and the corner radius\n     * @name getTag\n     * @method\n     * @memberof Konva.Label.prototype\n     */\n    getTag: function() {\n      return this.find('Tag')[0];\n    },\n    _addListeners: function(text) {\n      var that = this,\n        n;\n      var func = function() {\n        that._sync();\n      };\n\n      // update text data for certain attr changes\n      for (n = 0; n < attrChangeListLen; n++) {\n        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n      }\n    },\n    getWidth: function() {\n      return this.getText().getWidth();\n    },\n    getHeight: function() {\n      return this.getText().getHeight();\n    },\n    _sync: function() {\n      var text = this.getText(),\n        tag = this.getTag(),\n        width,\n        height,\n        pointerDirection,\n        pointerWidth,\n        x,\n        y,\n        pointerHeight;\n\n      if (text && tag) {\n        width = text.getWidth();\n        height = text.getHeight();\n        pointerDirection = tag.getPointerDirection();\n        pointerWidth = tag.getPointerWidth();\n        pointerHeight = tag.getPointerHeight();\n        x = 0;\n        y = 0;\n\n        switch (pointerDirection) {\n          case UP:\n            x = width / 2;\n            y = -1 * pointerHeight;\n            break;\n          case RIGHT:\n            x = width + pointerWidth;\n            y = height / 2;\n            break;\n          case DOWN:\n            x = width / 2;\n            y = height + pointerHeight;\n            break;\n          case LEFT:\n            x = -1 * pointerWidth;\n            y = height / 2;\n            break;\n        }\n\n        tag.setAttrs({\n          x: -1 * x,\n          y: -1 * y,\n          width: width,\n          height: height\n        });\n\n        text.setAttrs({\n          x: -1 * x,\n          y: -1 * y\n        });\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Label, Konva.Group);\n\n  Konva.Collection.mapMethods(Konva.Label);\n\n  /**\n   * Tag constructor.&nbsp; A Tag can be configured\n   *  to have a pointer element that points up, right, down, or left\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n   *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n   * @param {Number} [config.pointerWidth]\n   * @param {Number} [config.pointerHeight]\n   * @param {Number} [config.cornerRadius]\n   */\n  Konva.Tag = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Tag.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Tag';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        pointerDirection = this.getPointerDirection(),\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\n      context.beginPath();\n      if (!cornerRadius) {\n        context.moveTo(0, 0);\n      } else {\n        context.moveTo(cornerRadius, 0);\n      }\n\n      if (pointerDirection === UP) {\n        context.lineTo((width - pointerWidth) / 2, 0);\n        context.lineTo(width / 2, -1 * pointerHeight);\n        context.lineTo((width + pointerWidth) / 2, 0);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, 0);\n      } else {\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n      }\n\n      if (pointerDirection === RIGHT) {\n        context.lineTo(width, (height - pointerHeight) / 2);\n        context.lineTo(width + pointerWidth, height / 2);\n        context.lineTo(width, (height + pointerHeight) / 2);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, height);\n      } else {\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n      }\n\n      if (pointerDirection === DOWN) {\n        context.lineTo((width + pointerWidth) / 2, height);\n        context.lineTo(width / 2, height + pointerHeight);\n        context.lineTo((width - pointerWidth) / 2, height);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(0, height);\n      } else {\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n      }\n\n      if (pointerDirection === LEFT) {\n        context.lineTo(0, (height + pointerHeight) / 2);\n        context.lineTo(-1 * pointerWidth, height / 2);\n        context.lineTo(0, (height - pointerHeight) / 2);\n      }\n\n      if (cornerRadius) {\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var x = 0,\n        y = 0,\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        direction = this.pointerDirection(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      if (direction === UP) {\n        y -= pointerHeight;\n        height += pointerHeight;\n      } else if (direction === DOWN) {\n        height += pointerHeight;\n      } else if (direction === LEFT) {\n        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n        x -= pointerWidth * 1.5;\n        width += pointerWidth;\n      } else if (direction === RIGHT) {\n        width += pointerWidth * 1.5;\n      }\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  };\n\n  Konva.Util.extend(Konva.Tag, Konva.Shape);\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\n  /**\n   * set pointer Direction\n   * @name setPointerDirection\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {String} pointerDirection can be up, right, down, left, or none.  The\n   *  default is none\n   */\n\n  /**\n   * get pointer Direction\n   * @name getPointerDirection\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'pointerWidth',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set pointer width\n   * @name setPointerWidth\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} pointerWidth\n   */\n\n  /**\n   * get pointer width\n   * @name getPointerWidth\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'pointerHeight',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set pointer height\n   * @name setPointerHeight\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} pointerHeight\n   */\n\n  /**\n   * get pointer height\n   * @name getPointerHeight\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'cornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set corner radius\n   * @name setCornerRadius\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} corner radius\n   */\n\n  /**\n   * get corner radius\n   * @name getCornerRadius\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Tag);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Arrow constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Number} config.pointerLength Arrow pointer length. Default value is 10.\n   * @param {Number} config.pointerWidth Arrow pointer width. Default value is 10.\n   * @param {Boolean} config.pointerAtBeginning Do we need to draw pointer on both sides?. Default false.\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1,\n   *   pointerLength : 10,\n   *   pointerWidth : 12\n   * });\n   */\n  Konva.Arrow = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Arrow.prototype = {\n    ____init: function(config) {\n      // call super constructor\n      Konva.Line.call(this, config);\n      this.className = 'Arrow';\n    },\n    _sceneFunc: function(ctx) {\n      Konva.Line.prototype._sceneFunc.apply(this, arguments);\n      var PI2 = Math.PI * 2;\n      var points = this.points();\n\n      var tp = points;\n      var fromTension = this.getTension() !== 0 && points.length > 4;\n      if (fromTension) {\n        tp = this.getTensionPoints();\n      }\n\n      var n = points.length;\n\n      var dx, dy;\n      if (fromTension) {\n        dx = points[n - 2] - tp[n - 2];\n        dy = points[n - 1] - tp[n - 1];\n      } else {\n        dx = points[n - 2] - points[n - 4];\n        dy = points[n - 1] - points[n - 3];\n      }\n\n      var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n      var length = this.pointerLength();\n      var width = this.pointerWidth();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      if (this.pointerAtBeginning()) {\n        ctx.save();\n        ctx.translate(points[0], points[1]);\n        if (fromTension) {\n          dx = tp[0] - points[0];\n          dy = tp[1] - points[1];\n        } else {\n          dx = points[2] - points[0];\n          dy = points[3] - points[1];\n        }\n\n        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(-length, width / 2);\n        ctx.lineTo(-length, -width / 2);\n        ctx.closePath();\n        ctx.restore();\n      }\n\n      // here is a tricky part\n      // we need to disable dash for arrow pointers\n      var isDashEnabled = this.dashEnabled();\n      if (isDashEnabled) {\n        // manually disable dash for head\n        // it is better not to use setter here,\n        // because it will trigger attr change event\n        this.attrs.dashEnabled = false;\n        ctx.setLineDash([]);\n      }\n\n      ctx.fillStrokeShape(this);\n\n      // restore old value\n      if (isDashEnabled) {\n        this.attrs.dashEnabled = true;\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Arrow, Konva.Line);\n  /**\n   * get/set pointerLength\n   * @name pointerLength\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Length of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerLength = line.pointerLength();\n   *\n   * // set tension\n   * line.pointerLength(15);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arrow,\n    'pointerLength',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set pointerWidth\n   * @name pointerWidth\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Width of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerWidth = line.pointerWidth();\n   *\n   * // set tension\n   * line.pointerWidth(15);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arrow,\n    'pointerWidth',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set pointerAtBeginning\n   * @name pointerAtBeginning\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Should pointer displayed at beginning of arrow.\n   *   The default is false.\n   * @returns {Boolean}\n   * @example\n   * // get tension\n   * var pointerAtBeginning = line.pointerAtBeginning();\n   *\n   * // set tension\n   * line.pointerAtBeginning(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n  Konva.Collection.mapMethods(Konva.Arrow);\n})(Konva);\n\n(function(Konva) {\n  'use strict';\n\n  var ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange'\n  ].join(' ');\n\n  var NODE_RECT = 'nodeRect';\n\n  var TRANSFORM_CHANGE_STR = [\n    'xChange.resizer',\n    'yChange.resizer',\n    'widthChange.resizer',\n    'heightChange.resizer',\n    'scaleXChange.resizer',\n    'scaleYChange.resizer',\n    'skewXChange.resizer',\n    'skewYChange.resizer',\n    'rotationChange.resizer',\n    'offsetXChange.resizer',\n    'offsetYChange.resizer',\n    'transformsEnabledChange.resizer'\n  ].join(' ');\n\n  var REDRAW_CHANGE_STR = [\n    'widthChange.resizer',\n    'heightChange.resizer',\n    'scaleXChange.resizer',\n    'scaleYChange.resizer',\n    'skewXChange.resizer',\n    'skewYChange.resizer',\n    'rotationChange.resizer',\n    'offsetXChange.resizer',\n    'offsetYChange.resizer'\n  ].join(' ');\n\n  var ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135\n  };\n\n  function getCursor(anchorName, rad, isMirrored) {\n    if (anchorName === 'rotater') {\n      return 'crosshair';\n    }\n\n    rad += Konva.Util._degToRad(ANGLES[anchorName] || 0);\n    // If we are mirrored, we need to mirror the angle (this is not the same as\n    // rotate).\n    if (isMirrored) {\n      rad *= -1;\n    }\n    var angle = ((Konva.Util._radToDeg(rad) % 360) + 360) % 360;\n\n    if (\n      Konva.Util._inRange(angle, 315 + 22.5, 360) ||\n      Konva.Util._inRange(angle, 0, 22.5)\n    ) {\n      // TOP\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n      // TOP - RIGHT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else if (Konva.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n      // BOTTOM\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n      // BOTTOM - LEFT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else {\n      // how can we can there?\n      // TODO: throw error\n      Konva.Util.error(\n        'Transformer has unknown angle for cursor detection: ' + angle\n      );\n      return 'pointer';\n    }\n  }\n\n  /**\n   * Transformer constructor.  Transformer is a special type of group that allow you transform Konva\n   * primitives and shapes. Transforming tool is not changing `width` and `height` properties of nodes\n   * when you resize them. Instead it changes `scaleX` and `scaleY` properties.\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Boolean} [config.resizeEnabled] Default is true\n   * @param {Boolean} [config.rotateEnabled] Default is true\n   * @param {Array} [config.rotationSnaps] Array of angles for rotation snaps. Default is []\n   * @param {Number} [config.rotateAnchorOffset] Default is 50\n   * @param {Number} [config.padding] Default is 0\n   * @param {Boolean} [config.borderEnabled] Should we draw border? Default is true\n   * @param {String} [config.borderStroke] Border stroke color\n   * @param {Number} [config.borderStrokeWidth] Border stroke size\n   * @param {Array} [config.borderDash] Array for border dash.\n   * @param {String} [config.anchorFill] Anchor fill color\n   * @param {String} [config.anchorStroke] Anchor stroke color\n   * @param {String} [config.anchorCornerRadius] Anchor corner radius\n   * @param {Number} [config.anchorStrokeWidth] Anchor stroke size\n   * @param {Number} [config.anchorSize] Default is 10\n   * @param {Boolean} [config.keepRatio] Should we keep ratio when we are moving edges? Default is true\n   * @param {Boolean} [config.centeredScaling] Should we resize relative to node's center? Default is false\n   * @param {Array} [config.enabledAnchors] Array of names of enabled handles\n   * @param {Function} [config.boundBoxFunc] Bounding box function\n   * @example\n   * var transformer = new Konva.Transformer({\n   *   node: rectangle,\n   *   rotateAnchorOffset: 60,\n   *   enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n   * });\n   * layer.add(transformer);\n   */\n\n  Konva.Transformer = function(config) {\n    this.____init(config);\n  };\n\n  var ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right'\n  ];\n\n  Konva.Transformer.prototype = {\n    _centroid: false,\n    ____init: function(config) {\n      // call super constructor\n      Konva.Group.call(this, config);\n      this.className = 'Transformer';\n      this._createElements();\n\n      // bindings\n      this._handleMouseMove = this._handleMouseMove.bind(this);\n      this._handleMouseUp = this._handleMouseUp.bind(this);\n      this.update = this.update.bind(this);\n\n      // update transformer data for certain attr changes\n      this.on(ATTR_CHANGE_LIST, this.update);\n\n      if (this.getNode()) {\n        this.update();\n      }\n    },\n\n    /**\n     * alias to `setNode`\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.attachTo(shape);\n     */\n    attachTo: function(node) {\n      this.setNode(node);\n    },\n\n    /**\n     * attach transformer to a Konva.Node. Transformer will adapt to its size and listen its events\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.setNode(shape);\n     */\n    setNode: function(node) {\n      if (this._node) {\n        this.detach();\n      }\n      this._node = node;\n      this._resetTransformCache();\n\n      node.on(TRANSFORM_CHANGE_STR, this._resetTransformCache.bind(this));\n      node.on(\n        REDRAW_CHANGE_STR,\n        function() {\n          if (!this._transforming) {\n            this.update();\n          }\n        }.bind(this)\n      );\n\n      // TODO: why do we need this?\n      var elementsCreated = !!this.findOne('.top-left');\n      if (elementsCreated) {\n        this.update();\n      }\n      return this;\n    },\n\n    getNode: function() {\n      return this._node;\n    },\n\n    /**\n     * detach transformer from a attached node\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.detach();\n     */\n    detach: function() {\n      if (this.getNode()) {\n        this.getNode().off('.resizer');\n        this._node = undefined;\n      }\n      this._resetTransformCache();\n    },\n\n    _resetTransformCache: function() {\n      this._clearCache(NODE_RECT);\n      this._clearCache('transform');\n      this._clearSelfAndDescendantCache('absoluteTransform');\n    },\n\n    _getNodeRect: function() {\n      return this._getCache(NODE_RECT, this.__getNodeRect);\n    },\n\n    __getNodeRect: function() {\n      var node = this.getNode();\n      if (!node) {\n        return {\n          x: -Number.MAX_SAFE_INTEGER,\n          y: -Number.MAX_SAFE_INTEGER,\n          width: 0,\n          height: 0,\n          rotation: 0\n        };\n      }\n      var rect = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      var rotation = Konva.getAngle(node.rotation());\n\n      var dx = rect.x * node.scaleX() - node.offsetX() * node.scaleX();\n      var dy = rect.y * node.scaleY() - node.offsetY() * node.scaleY();\n\n      return {\n        x: node.x() + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n        y: node.y() + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n        width: rect.width * node.scaleX(),\n        height: rect.height * node.scaleY(),\n        rotation: node.rotation()\n      };\n    },\n\n    getX: function() {\n      return this._getNodeRect().x;\n    },\n\n    getY: function() {\n      return this._getNodeRect().y;\n    },\n\n    getRotation: function() {\n      return this._getNodeRect().rotation;\n    },\n\n    getWidth: function() {\n      return this._getNodeRect().width;\n    },\n\n    getHeight: function() {\n      return this._getNodeRect().height;\n    },\n\n    _createElements: function() {\n      this._createBack();\n\n      ANCHORS_NAMES.forEach(\n        function(name) {\n          this._createAnchor(name);\n        }.bind(this)\n      );\n\n      this._createAnchor('rotater');\n    },\n\n    _createAnchor: function(name) {\n      var anchor = new Konva.Rect({\n        stroke: 'rgb(0, 161, 255)',\n        fill: 'white',\n        strokeWidth: 1,\n        name: name + ' _anchor',\n        dragDistance: 0,\n        draggable: true\n      });\n      var self = this;\n      anchor.on('mousedown touchstart', function(e) {\n        self._handleMouseDown(e);\n      });\n      anchor.on('dragstart', function(e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('dragmove', function(e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('dragend', function(e) {\n        e.cancelBubble = true;\n      });\n\n      // add hover styling\n      anchor.on('mouseenter', function() {\n        var tr = this.getParent();\n\n        var rad = Konva.getAngle(tr.rotation());\n\n        var scale = tr.getNode().getAbsoluteScale();\n        // If scale.y < 0 xor scale.x < 0 we need to flip (not rotate).\n        var isMirrored = scale.y * scale.x < 0;\n        var cursor = getCursor(name, rad, isMirrored);\n        anchor.getStage().content.style.cursor = cursor;\n        tr._cursorChange = true;\n      });\n      anchor.on('mouseout', function() {\n        if (!anchor.getStage() || !this.getParent()) {\n          return;\n        }\n        anchor.getStage().content.style.cursor = '';\n        this.getParent()._cursorChange = false;\n      });\n      this.add(anchor);\n    },\n\n    _createBack: function() {\n      var back = new Konva.Shape({\n        name: 'back',\n        width: 0,\n        height: 0,\n        listening: false,\n        sceneFunc: function(ctx) {\n          var tr = this.getParent();\n          var padding = tr.getPadding();\n          ctx.beginPath();\n          ctx.rect(\n            -padding,\n            -padding,\n            this.width() + padding * 2,\n            this.height() + padding * 2\n          );\n          ctx.moveTo(this.width() / 2, -padding);\n          if (tr.rotateEnabled()) {\n            ctx.lineTo(\n              this.width() / 2,\n              -tr.rotateAnchorOffset() * Konva.Util._sign(this.height())\n            );\n          }\n\n          ctx.fillStrokeShape(this);\n        }\n      });\n      this.add(back);\n    },\n\n    _handleMouseDown: function(e) {\n      this.movingResizer = e.target.name().split(' ')[0];\n\n      // var node = this.getNode();\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n      var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n      this.sin = height / hypotenuse;\n      this.cos = width / hypotenuse;\n\n      window.addEventListener('mousemove', this._handleMouseMove);\n      window.addEventListener('touchmove', this._handleMouseMove);\n      window.addEventListener('mouseup', this._handleMouseUp, true);\n      window.addEventListener('touchend', this._handleMouseUp, true);\n\n      this._transforming = true;\n\n      this._fire('transformstart', { evt: e });\n      this.getNode()._fire('transformstart', { evt: e });\n    },\n\n    _handleMouseMove: function(e) {\n      var x, y, newHypotenuse;\n      var resizerNode = this.findOne('.' + this.movingResizer);\n      var stage = resizerNode.getStage();\n\n      var box = stage.getContent().getBoundingClientRect();\n      var zeroPoint = {\n        x: box.left,\n        y: box.top\n      };\n      var pointerPos = {\n        left: e.clientX !== undefined ? e.clientX : e.touches[0].clientX,\n        top: e.clientX !== undefined ? e.clientY : e.touches[0].clientY\n      };\n      var newAbsPos = {\n        x: pointerPos.left - zeroPoint.x,\n        y: pointerPos.top - zeroPoint.y\n      };\n\n      resizerNode.setAbsolutePosition(newAbsPos);\n\n      var keepProportion = this.keepRatio() || e.shiftKey;\n\n      // console.log(keepProportion);\n\n      if (this.movingResizer === 'top-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-left').x(this.findOne('.bottom-right').x() - x);\n          this.findOne('.top-left').y(this.findOne('.bottom-right').y() - y);\n        }\n      } else if (this.movingResizer === 'top-center') {\n        this.findOne('.top-left').y(resizerNode.y());\n      } else if (this.movingResizer === 'top-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-left').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-left').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-right').x(x);\n          this.findOne('.top-right').y(this.findOne('.bottom-left').y() - y);\n        }\n        var pos = resizerNode.position();\n\n        this.findOne('.top-left').y(pos.y);\n        this.findOne('.bottom-right').x(pos.x);\n      } else if (this.movingResizer === 'middle-left') {\n        this.findOne('.top-left').x(resizerNode.x());\n      } else if (this.movingResizer === 'middle-right') {\n        this.findOne('.bottom-right').x(resizerNode.x());\n      } else if (this.movingResizer === 'bottom-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.top-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.top-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-left').x(this.findOne('.top-right').x() - x);\n          this.findOne('.bottom-left').y(y);\n        }\n\n        pos = resizerNode.position();\n\n        this.findOne('.top-left').x(pos.x);\n        this.findOne('.bottom-right').y(pos.y);\n      } else if (this.movingResizer === 'bottom-center') {\n        this.findOne('.bottom-right').y(resizerNode.y());\n      } else if (this.movingResizer === 'bottom-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-right').x(x);\n          this.findOne('.bottom-right').y(y);\n        }\n      } else if (this.movingResizer === 'rotater') {\n        var padding = this.getPadding();\n        var attrs = this._getNodeRect();\n        x = resizerNode.x() - attrs.width / 2;\n        y = -resizerNode.y() + attrs.height / 2;\n\n        var dAlpha = Math.atan2(-y, x) + Math.PI / 2;\n\n        if (attrs.height < 0) {\n          dAlpha -= Math.PI;\n        }\n\n        var rot = Konva.getAngle(this.rotation());\n\n        var newRotation =\n          Konva.Util._radToDeg(rot) + Konva.Util._radToDeg(dAlpha);\n\n        var alpha = Konva.getAngle(this.getNode().rotation());\n        var newAlpha = Konva.Util._degToRad(newRotation);\n\n        var snaps = this.rotationSnaps();\n        var offset = 0.1;\n        for (var i = 0; i < snaps.length; i++) {\n          var angle = Konva.getAngle(snaps[i]);\n\n          var dif =\n            Math.abs(angle - Konva.Util._degToRad(newRotation)) % (Math.PI * 2);\n\n          if (dif < offset) {\n            newRotation = Konva.Util._radToDeg(angle);\n            newAlpha = Konva.Util._degToRad(newRotation);\n          }\n        }\n\n        var dx = padding;\n        var dy = padding;\n\n        this._fitNodeInto(\n          {\n            rotation: Konva.angleDeg\n              ? newRotation\n              : Konva.Util._degToRad(newRotation),\n            x:\n              attrs.x +\n              (attrs.width / 2 + padding) *\n                (Math.cos(alpha) - Math.cos(newAlpha)) +\n              (attrs.height / 2 + padding) *\n                (Math.sin(-alpha) - Math.sin(-newAlpha)) -\n              (dx * Math.cos(rot) + dy * Math.sin(-rot)),\n            y:\n              attrs.y +\n              (attrs.height / 2 + padding) *\n                (Math.cos(alpha) - Math.cos(newAlpha)) +\n              (attrs.width / 2 + padding) *\n                (Math.sin(alpha) - Math.sin(newAlpha)) -\n              (dy * Math.cos(rot) + dx * Math.sin(rot)),\n            width: attrs.width + padding * 2,\n            height: attrs.height + padding * 2\n          },\n          e\n        );\n      } else {\n        console.error(\n          new Error(\n            'Wrong position argument of selection resizer: ',\n            this.movingResizer\n          )\n        );\n      }\n\n      if (this.movingResizer === 'rotater') {\n        return;\n      }\n\n      var absPos = this.findOne('.top-left').getAbsolutePosition(\n        this.getParent()\n      );\n\n      var centeredScaling = this.getCenteredScaling() || e.altKey;\n      if (centeredScaling) {\n        var topLeft = this.findOne('.top-left');\n        var bottomRight = this.findOne('.bottom-right');\n        var topOffsetX = topLeft.x();\n        var topOffsetY = topLeft.y();\n\n        var bottomOffsetX = this.getWidth() - bottomRight.x();\n        var bottomOffsetY = this.getHeight() - bottomRight.y();\n\n        // console.log(topOffsetX, topOffsetY, bottomOffsetX, bottomOffsetY);\n\n        bottomRight.move({\n          x: -topOffsetX,\n          y: -topOffsetY\n        });\n\n        topLeft.move({\n          x: bottomOffsetX,\n          y: bottomOffsetY\n        });\n\n        absPos = topLeft.getAbsolutePosition(this.getParent());\n      }\n\n      x = absPos.x;\n      y = absPos.y;\n      var width =\n        this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n\n      var height =\n        this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n\n      // console.log(x, y, width, height);\n\n      this._fitNodeInto(\n        {\n          x: x + this.offsetX(),\n          y: y + this.offsetY(),\n          width: width,\n          height: height\n        },\n        e\n      );\n    },\n\n    _handleMouseUp: function(e) {\n      this._removeEvents(e);\n    },\n\n    _removeEvents: function(e) {\n      if (this._transforming) {\n        this._transforming = false;\n        window.removeEventListener('mousemove', this._handleMouseMove);\n        window.removeEventListener('touchmove', this._handleMouseMove);\n        window.removeEventListener('mouseup', this._handleMouseUp, true);\n        window.removeEventListener('touchend', this._handleMouseUp, true);\n        this._fire('transformend', { evt: e });\n        var node = this.getNode();\n        if (node) {\n          node.fire('transformend', { evt: e });\n        }\n      }\n    },\n\n    _fitNodeInto: function(newAttrs, evt) {\n      // waring! in this attrs padding may be included\n      var boundBoxFunc = this.getBoundBoxFunc();\n      if (boundBoxFunc) {\n        var oldAttrs = this._getNodeRect();\n        newAttrs = boundBoxFunc.call(this, oldAttrs, newAttrs);\n      }\n      this._settings = true;\n      var node = this.getNode();\n      if (newAttrs.rotation !== undefined) {\n        this.getNode().rotation(newAttrs.rotation);\n      }\n      var pure = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n\n      var padding = this.getPadding();\n      var scaleX = (newAttrs.width - padding * 2) / pure.width;\n      var scaleY = (newAttrs.height - padding * 2) / pure.height;\n\n      var rotation = Konva.getAngle(node.getRotation());\n      var dx = pure.x * scaleX - padding - node.offsetX() * scaleX;\n      var dy = pure.y * scaleY - padding - node.offsetY() * scaleY;\n\n      this.getNode().setAttrs({\n        scaleX: scaleX,\n        scaleY: scaleY,\n        x: newAttrs.x - (dx * Math.cos(rotation) + dy * Math.sin(-rotation)),\n        y: newAttrs.y - (dy * Math.cos(rotation) + dx * Math.sin(rotation))\n      });\n      this._settings = false;\n\n      this._fire('transform', { evt: evt });\n      this.getNode()._fire('transform', { evt: evt });\n      this.update();\n      this.getLayer().batchDraw();\n    },\n    /**\n     * force update of Konva.Transformer.\n     * Use it when you updated attached Konva.Group and now you need to reset transformer size\n     * @method\n     * @memberof Konva.Transformer.prototype\n     */\n    forceUpdate: function() {\n      this._resetTransformCache();\n      this.update();\n    },\n    update: function() {\n      var attrs = this._getNodeRect();\n      var node = this.getNode();\n      var scale = { x: 1, y: 1 };\n      if (node && node.getParent()) {\n        scale = node.getParent().getAbsoluteScale();\n      }\n      var invertedScale = {\n        x: 1 / scale.x,\n        y: 1 / scale.y\n      };\n      var width = attrs.width;\n      var height = attrs.height;\n\n      var enabledAnchors = this.enabledAnchors();\n      var resizeEnabled = this.resizeEnabled();\n      var padding = this.getPadding();\n\n      var anchorSize = this.getAnchorSize();\n      this.find('._anchor').setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: this.getAnchorStroke(),\n        strokeWidth: this.getAnchorStrokeWidth(),\n        fill: this.getAnchorFill(),\n        cornerRadius: this.getAnchorCornerRadius()\n      });\n\n      this.findOne('.top-left').setAttrs({\n        x: -padding,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n      });\n      this.findOne('.top-center').setAttrs({\n        x: width / 2,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n      });\n      this.findOne('.top-right').setAttrs({\n        x: width + padding,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n      });\n      this.findOne('.middle-left').setAttrs({\n        x: -padding,\n        y: height / 2,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n      });\n      this.findOne('.middle-right').setAttrs({\n        x: width + padding,\n        y: height / 2,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n      });\n      this.findOne('.bottom-left').setAttrs({\n        x: -padding,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n      });\n      this.findOne('.bottom-center').setAttrs({\n        x: width / 2,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n      });\n      this.findOne('.bottom-right').setAttrs({\n        x: width + padding,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n      });\n\n      var scaledRotateAnchorOffset =\n        -this.rotateAnchorOffset() * Math.abs(invertedScale.y);\n      this.findOne('.rotater').setAttrs({\n        x: width / 2,\n        y: scaledRotateAnchorOffset * Konva.Util._sign(height),\n        scale: invertedScale,\n        visible: this.rotateEnabled()\n      });\n\n      this.findOne('.back').setAttrs({\n        width: width * scale.x,\n        height: height * scale.y,\n        scale: invertedScale,\n        visible: this.borderEnabled(),\n        stroke: this.getBorderStroke(),\n        strokeWidth: this.getBorderStrokeWidth(),\n        dash: this.getBorderDash()\n      });\n    },\n    /**\n     * determine if transformer is in active transform\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Boolean}\n     */\n    isTransforming: function() {\n      return this._transforming;\n    },\n    /**\n     * Stop active transform action\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Boolean}\n     */\n    stopTransform: function() {\n      if (this._transforming) {\n        this._removeEvents();\n        var resizerNode = this.findOne('.' + this.movingResizer);\n        if (resizerNode) {\n          resizerNode.stopDrag();\n        }\n      }\n    },\n    destroy: function() {\n      // console.log(this.isTransforming() && this.getStage());\n      if (this.getStage() && this._cursorChange) {\n        this.getStage().content.style.cursor = '';\n      }\n      Konva.Group.prototype.destroy.call(this);\n      this.detach();\n      this._removeEvents();\n    },\n    // do not work as a container\n    // we will recreate inner nodes manually\n    toObject: function() {\n      return Konva.Node.prototype.toObject.call(this);\n    }\n  };\n  Konva.Util.extend(Konva.Transformer, Konva.Group);\n\n  function validateResizers(val) {\n    if (!(val instanceof Array)) {\n      Konva.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n      val.forEach(function(name) {\n        if (ANCHORS_NAMES.indexOf(name) === -1) {\n          Konva.Util.warn(\n            'Unknown anchor name: ' +\n              name +\n              '. Available names are: ' +\n              ANCHORS_NAMES.join(', ')\n          );\n        }\n      });\n    }\n    return val || [];\n  }\n\n  /**\n   * get/set enabled handlers\n   * @name enabledAnchors\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get list of handlers\n   * var enabledAnchors = transformer.enabledAnchors();\n   *\n   * // set handlers\n   * transformer.enabledAnchors(['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right']);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'enabledAnchors',\n    ANCHORS_NAMES,\n    validateResizers\n  );\n\n  /**\n   * get/set resize ability. If false it will automatically hide resizing handlers\n   * @name resizeEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var resizeEnabled = transformer.resizeEnabled();\n   *\n   * // set\n   * transformer.resizeEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'resizeEnabled', true);\n  /**\n   * get/set anchor size. Default is 10\n   * @name validateAnchors\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} 10\n   * @returns {Number}\n   * @example\n   * // get\n   * var anchorSize = transformer.anchorSize();\n   *\n   * // set\n   * transformer.anchorSize(20)\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorSize',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set ability to rotate.\n   * @name rotateEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var rotateEnabled = transformer.rotateEnabled();\n   *\n   * // set\n   * transformer.rotateEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotateEnabled', true);\n\n  /**\n   * get/set rotation snaps angles.\n   * @name rotationSnaps\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var rotationSnaps = transformer.rotationSnaps();\n   *\n   * // set\n   * transformer.rotationSnaps([0, 90, 180, 270]);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotationSnaps', []);\n\n  /**\n   * get/set distance for rotation handler\n   * @name rotateAnchorOffset\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} offset\n   * @returns {Number}\n   * @example\n   * // get\n   * var rotateAnchorOffset = transformer.rotateAnchorOffset();\n   *\n   * // set\n   * transformer.rotateAnchorOffset(100);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'rotateAnchorOffset',\n    50,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set visibility of border\n   * @name borderEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderEnabled = transformer.borderEnabled();\n   *\n   * // set\n   * transformer.borderEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'borderEnabled', true);\n\n  /**\n   * get/set anchor stroke color\n   * @name anchorStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorStroke = transformer.anchorStroke();\n   *\n   * // set\n   * transformer.anchorStroke('red');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorStroke',\n    'rgb(0, 161, 255)'\n  );\n\n  /**\n   * get/set anchor stroke width\n   * @name anchorStrokeWidth\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorStrokeWidth = transformer.anchorStrokeWidth();\n   *\n   * // set\n   * transformer.anchorStrokeWidth(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorStrokeWidth',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set anchor fill color\n   * @name anchorFill\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorFill = transformer.anchorFill();\n   *\n   * // set\n   * transformer.anchorFill('red');\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'anchorFill', 'white');\n\n  /**\n   * get/set anchor corner radius\n   * @name anchorCornerRadius\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} enabled\n   * @returns {Number}\n   * @example\n   * // get\n   * var anchorCornerRadius = transformer.anchorCornerRadius();\n   *\n   * // set\n   * transformer.anchorCornerRadius(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorCornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set border stroke color\n   * @name borderStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderStroke = transformer.borderStroke();\n   *\n   * // set\n   * transformer.borderStroke('red');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'borderStroke',\n    'rgb(0, 161, 255)'\n  );\n\n  /**\n   * get/set border stroke width\n   * @name borderStrokeWidth\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderStrokeWidth = transformer.borderStrokeWidth();\n   *\n   * // set\n   * transformer.borderStrokeWidth(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'borderStrokeWidth',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set border dash array\n   * @name borderDash\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderDash = transformer.borderDash();\n   *\n   * // set\n   * transformer.borderDash([2, 2]);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'borderDash');\n\n  /**\n   * get/set should we keep ratio while resize anchors at corners\n   * @name keepRatio\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} keepRatio\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var keepRatio = transformer.keepRatio();\n   *\n   * // set\n   * transformer.keepRatio(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'keepRatio', true);\n\n  /**\n   * get/set should we resize relative to node's center?\n   * @name centeredScaling\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} centeredScaling\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var centeredScaling = transformer.centeredScaling();\n   *\n   * // set\n   * transformer.centeredScaling(true);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'centeredScaling', false);\n\n  /**\n   * get/set should we think about stroke while resize? Good to use when a shape has strokeScaleEnabled = false\n   * default is false\n   * @name ignoreStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} ignoreStroke\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var ignoreStroke = transformer.ignoreStroke();\n   *\n   * // set\n   * transformer.ignoreStroke(true);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'ignoreStroke', false);\n\n  /**\n   * get/set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} padding\n   * @returns {Number}\n   * @example\n   * // get\n   * var padding = transformer.padding();\n   *\n   * // set\n   * transformer.padding(10);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'padding',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Transformer, 'node');\n\n  /**\n   * get/set bounding box function\n   * @name boundBoxFunc\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Function} func\n   * @returns {Function}\n   * @example\n   * // get\n   * var boundBoxFunc = transformer.boundBoxFunc();\n   *\n   * // set\n   * transformer.boundBoxFunc(function(oldBox, newBox) {\n   *   if (newBox.width > 200) {\n   *     return oldBox;\n   *   }\n   *   return newBox;\n   * });\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'boundBoxFunc');\n\n  Konva.Factory.backCompat(Konva.Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors'\n  });\n\n  Konva.Collection.mapMethods(Konva.Transformer);\n})(Konva);\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__ = __webpack_require__(5);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0696fa07_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__ = __webpack_require__(22);\nfunction injectStyle (ssrContext) {\n  __webpack_require__(16)\n}\nvar normalizeComponent = __webpack_require__(21)\n/* script */\n\n\n/* template */\n\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__babel_loader_node_modules_vue_loader_lib_selector_type_script_index_0_App_vue__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_0696fa07_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_App_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (Component.exports);\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(17);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(19)(\"4c8ec1c0\", content, true, {});\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(18)(false);\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports) {\n\n/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = __webpack_require__(20)\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\n/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row  \"},[_c('div',{staticClass:\"col-lg-5 \"},[_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.title),expression:\"title\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.title)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.title=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(1),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.subtitle),expression:\"subtitle\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.subtitle)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.subtitle=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(2),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.author),expression:\"author\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.author)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.author=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(3),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.background),expression:\"background\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.background=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(4),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.publisher),expression:\"publisher\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.publisher)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.publisher=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(5),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.year),expression:\"year\"}],staticClass:\"custom-select years\",attrs:{\"id\":\"years\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.year=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.years),function(year){return _c('option',{domProps:{\"value\":year}},[_vm._v(_vm._s(year))])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(6),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.font),expression:\"font\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.font)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.font=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-7 \",style:({ 'background-color' : _vm.background , 'border-radius': _vm.border+'px' })},[_c('div',{staticClass:\"container\"},[_c('div',[_c('v-stage',{ref:\"stage\",attrs:{\"config\":_vm.stageSize}},[_c('v-layer',[_c('v-text',{attrs:{\"config\":{text: this.title, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.subtitle, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.author, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.publisher, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.year, fontSize: this.font , draggable:true}}})],1),_vm._v(\" \"),_c('v-layer',{ref:\"dragLayer\"})],1)],1)])])])]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body\"},[_c('p',{style:({'font-size' : _vm.font+ 'px'})},[_vm._v(\"\\n  PLAY AND DESIGN YOUR BOOK COVER , YOU CAN DRAG AND DROP THE TEST WHEREVER YOU LIKE! ,\\n     AND YOU CAN ALSO CHANGE THE FONT SIZE DYNAMICALLY!. TRY CHANGING THE SIZE NOW  \\n         \")])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"TITLE\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"SUb Title\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Author Name\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Background Color\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Publisher\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('label',{staticClass:\"input-group-text\",attrs:{\"for\":\"inputGroupSelect01\"}},[_vm._v(\"Year\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Font Size\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// build.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9b69e54d08ef4409439","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.applyNodeProps = exports.updatePicture = exports.componentPrefix = undefined;\nexports.getName = getName;\nexports.copy = copy;\nexports.createListener = createListener;\nexports.findParentKonva = findParentKonva;\nexports.findKonvaNode = findKonvaNode;\n\nvar _updatePicture = require('./updatePicture');\n\nvar _updatePicture2 = _interopRequireDefault(_updatePicture);\n\nvar _applyNodeProps = require('./applyNodeProps');\n\nvar _applyNodeProps2 = _interopRequireDefault(_applyNodeProps);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar componentPrefix = exports.componentPrefix = 'v';\n\nfunction camelize(str) {\n  return str.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function (letter, index) {\n    return index == 0 ? letter.toLowerCase() : letter.toUpperCase();\n  }).replace(/(\\s|-)+/g, '');\n}\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction getName(componentTag) {\n  return capitalizeFirstLetter(camelize(componentTag.replace(componentPrefix + '-', '')));\n}\n\nfunction copy(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction createListener(obj) {\n  var output = {};\n  Object.keys(obj).forEach(function (eventName) {\n    output['on' + eventName] = obj[eventName];\n  });\n  return output;\n}\n\nfunction findParentKonva(instance) {\n  function re(instance) {\n    if (instance.StageEmitter) {\n      return instance;\n    }\n    if (instance.$parent) {\n      return re(instance.$parent);\n    }\n    return {};\n  }\n  return re(instance.$parent);\n}\n\nfunction findKonvaNode(instance) {\n  if (instance.getNode) {\n    return instance.getNode();\n  } else if (instance.$children.length === 0) {\n    return null;\n  } else {\n    return findKonvaNode(instance.$children[0]);\n  }\n}\n\nexports.updatePicture = _updatePicture2.default;\nexports.applyNodeProps = _applyNodeProps2.default;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/utils/index.js\n// module id = 1\n// module chunks = 0","/*!\n * Vue.js v2.5.21\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// These helpers produce better VM code in JS engines due to their\n// explicitness and function inlining.\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive.\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value, e.g., [object Object].\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert an input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if an attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array.\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether an object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it,\n * e.g., PhantomJS 1.x. Technically, we don't need this anymore\n * since native bind is now performant enough in most browsers.\n * But removing it would mean breaking code that was able to run in\n * PhantomJS 1.x, so this must be kept for backward compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/* eslint-disable no-unused-vars */\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/).\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/* eslint-enable no-unused-vars */\n\n/**\n * Return the same value.\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a string containing static keys from compiler modules.\n */\nfunction genStaticKeys (modules) {\n  return modules.reduce(function (keys, m) {\n    return keys.concat(m.staticKeys || [])\n  }, []).join(',')\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (a instanceof Date && b instanceof Date) {\n        return a.getTime() === b.getTime()\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\n/**\n * Return the first index at which a loosely equal value can be\n * found in the array (if value is a plain object, the array must\n * contain an object of the same shape), or -1 if it is not present.\n */\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\n\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Perform updates asynchronously. Intended to be used by Vue Test Utils\n   * This will significantly reduce performance if set to false.\n   */\n  async: true,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n});\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'] && global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = /*@__PURE__*/(function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  if (process.env.NODE_ENV !== 'production' && !config.async) {\n    // subs aren't sorted in scheduler if not running async\n    // we need to sort them now to make sure they fire in correct\n    // order\n    subs.sort(function (a, b) { return a.id - b.id; });\n  }\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (target) {\n  targetStack.push(target);\n  Dep.target = target;\n}\n\nfunction popTarget () {\n  targetStack.pop();\n  Dep.target = targetStack[targetStack.length - 1];\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    // #7975\n    // clone children array to avoid mutating original in case of cloning\n    // a child.\n    vnode.children && vnode.children.slice(),\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.asyncMeta = vnode.asyncMeta;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    if (hasProto) {\n      protoAugment(value, arrayMethods);\n    } else {\n      copyAugment(value, arrayMethods, arrayKeys);\n    }\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through all properties and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive$$1(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment a target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment a target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive$$1 (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n  if ((!getter || setter) && arguments.length === 2) {\n    val = obj[key];\n  }\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      // #7981: for accessor properties without setter\n      if (getter && !setter) { return }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive$$1(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (\n      toVal !== fromVal &&\n      isPlainObject(toVal) &&\n      isPlainObject(fromVal)\n    ) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  \n  // Apply extends and mixins on the child options,\n  // but only if it is a raw options object that isn't\n  // the result of another mergeOptions call.\n  // Only merged options has the _base property.\n  if (!child._base) {\n    if (child.extends) {\n      parent = mergeOptions(parent, child.extends, vm);\n    }\n    if (child.mixins) {\n      for (var i = 0, l = child.mixins.length; i < l; i++) {\n        parent = mergeOptions(parent, child.mixins[i], vm);\n      }\n    }\n  }\n\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\n\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false)\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n\n  if (!valid) {\n    warn(\n      getInvalidTypeMessage(name, value, expectedTypes),\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\nfunction getInvalidTypeMessage (name, value, expectedTypes) {\n  var message = \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n    \" Expected \" + (expectedTypes.map(capitalize).join(', '));\n  var expectedType = expectedTypes[0];\n  var receivedType = toRawType(value);\n  var expectedValue = styleValue(value, expectedType);\n  var receivedValue = styleValue(value, receivedType);\n  // check if we need to specify expected value\n  if (expectedTypes.length === 1 &&\n      isExplicable(expectedType) &&\n      !isBoolean(expectedType, receivedType)) {\n    message += \" with value \" + expectedValue;\n  }\n  message += \", got \" + receivedType + \" \";\n  // check if we need to specify received value\n  if (isExplicable(receivedType)) {\n    message += \"with value \" + receivedValue + \".\";\n  }\n  return message\n}\n\nfunction styleValue (value, type) {\n  if (type === 'String') {\n    return (\"\\\"\" + value + \"\\\"\")\n  } else if (type === 'Number') {\n    return (\"\" + (Number(value)))\n  } else {\n    return (\"\" + value)\n  }\n}\n\nfunction isExplicable (value) {\n  var explicitTypes = ['string', 'number', 'boolean'];\n  return explicitTypes.some(function (elem) { return value.toLowerCase() === elem; })\n}\n\nfunction isBoolean () {\n  var args = [], len = arguments.length;\n  while ( len-- ) args[ len ] = arguments[ len ];\n\n  return args.some(function (elem) { return elem.toLowerCase() === 'boolean'; })\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    try {\n      return fn.apply(null, arguments)\n    } finally {\n      useMacroTask = false;    \n    }\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var warnReservedPrefix = function (target, key) {\n    warn(\n      \"Property \\\"\" + key + \"\\\" must be accessed with \\\"$data.\" + key + \"\\\" because \" +\n      'properties starting with \"$\" or \"_\" are not proxied in the Vue instance to ' +\n      'prevent conflicts with Vue internals' +\n      'See: https://vuejs.org/v2/api/#data',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) ||\n        (typeof key === 'string' && key.charAt(0) === '_' && !(key in target.$data));\n      if (!has && !isAllowed) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        if (key in target.$data) { warnReservedPrefix(target, key); }\n        else { warnNonPresent(target, key); }\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  createOnceHandler,\n  vm\n) {\n  var name, def$$1, cur, old, event;\n  for (name in on) {\n    def$$1 = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      if (isTrue(event.once)) {\n        cur = on[name] = createOnceHandler(event.name, cur, event.capture);\n      }\n      add(event.name, cur, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function (renderCompleted) {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n\n      if (renderCompleted) {\n        contexts.length = 0;\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender(true);\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender(true);\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender(false);\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn) {\n  target.$on(event, fn);\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction createOnceHandler (event, fn) {\n  var _target = target;\n  return function onceHandler () {\n    var res = fn.apply(null, arguments);\n    if (res !== null) {\n      _target.$off(event, onceHandler);\n    }\n  }\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, createOnceHandler, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        vm.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction setActiveInstance(vm) {\n  var prevActiveInstance = activeInstance;\n  activeInstance = vm;\n  return function () {\n    activeInstance = prevActiveInstance;\n  }\n}\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var restoreActiveInstance = setActiveInstance(vm);\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(vm.$el, vnode, hydrating, false /* removeOnly */);\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    restoreActiveInstance();\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, {\n    before: function before () {\n      if (vm._isMounted && !vm._isDestroyed) {\n        callHook(vm, 'beforeUpdate');\n      }\n    }\n  }, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    if (watcher.before) {\n      watcher.before();\n    }\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted && !vm._isDestroyed) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n\n      if (process.env.NODE_ENV !== 'production' && !config.async) {\n        flushSchedulerQueue();\n        return\n      }\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\n\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n    this.before = options.before;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = noop;\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive$$1(props, key, value, function () {\n        if (!isRoot && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive$$1(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : createGetterInvoker(userDef);\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : createGetterInvoker(userDef.get)\n      : noop;\n    sharedPropertyDefinition.set = userDef.set || noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction createGetterInvoker(fn) {\n  return function computedGetter () {\n    return fn.call(this, this)\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof methods[key] !== 'function') {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has type \\\"\" + (typeof methods[key]) + \"\\\" in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = typeof methods[key] !== 'function' ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function () {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      try {\n        cb.call(vm, watcher.value);\n      } catch (error) {\n        handleError(error, vm, (\"callback for immediate watcher \\\"\" + (watcher.expression) + \"\\\"\"));\n      }\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive$$1(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive$$1(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (!isDef(ret)) {\n    ret = [];\n  }\n  (ret)._isVList = true;\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    nodes = this.$slots[name] || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        var camelizedKey = camelize(key);\n        if (!(key in hash) && !(camelizedKey in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + camelizedKey)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options, renderContext)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options, renderContext);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options, renderContext) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (process.env.NODE_ENV !== 'production') {\n    (clone.devtoolsMeta = clone.devtoolsMeta || {}).renderContext = renderContext;\n  }\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n/*  */\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (vnode, hydrating) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent // activeInstance in lifecycle state\n) {\n  var options = {\n    _isComponent: true,\n    _parentVnode: vnode,\n    parent: parent\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    var existing = hooks[key];\n    var toMerge = componentVNodeHooks[key];\n    if (existing !== toMerge && !(existing && existing._merged)) {\n      hooks[key] = existing ? mergeHook$1(toMerge, existing) : toMerge;\n    }\n  }\n}\n\nfunction mergeHook$1 (f1, f2) {\n  var merged = function (a, b) {\n    // flow complains about extra args which is why we use any\n    f1(a, b);\n    f2(a, b);\n  };\n  merged._merged = true;\n  return merged\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input'\n  ;(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  var existing = on[event];\n  var callback = data.model.callback;\n  if (isDef(existing)) {\n    if (\n      Array.isArray(existing)\n        ? existing.indexOf(callback) === -1\n        : existing !== callback\n    ) {\n      on[event] = [callback].concat(existing);\n    }\n  } else {\n    on[event] = callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if ((!data || !data.pre) && isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive$$1(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive$$1(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production' && vm.$options.renderError) {\n        try {\n          vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n        } catch (e) {\n          handleError(e, vm, \"renderError\");\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\n\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    for (var key in this.cache) {\n      pruneCacheEntry(this.cache, key, this.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n};\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n};\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive$$1\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.21';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\nvar isPreTag = function (tag) { return tag === 'pre'; };\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\nvar nodeOps = /*#__PURE__*/Object.freeze({\n  createElement: createElement$1,\n  createElementNS: createElementNS,\n  createTextNode: createTextNode,\n  createComment: createComment,\n  insertBefore: insertBefore,\n  removeChild: removeChild,\n  appendChild: appendChild,\n  parentNode: parentNode,\n  nextSibling: nextSibling,\n  tagName: tagName,\n  setTextContent: setTextContent,\n  setStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n};\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove$$1 () {\n      if (--remove$$1.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove$$1.listeners = listeners;\n    return remove$$1\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        insert(parentElm, vnode.elm, refElm);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (nodeOps.parentNode(ref$$1) === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue, newCh, newEndIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue, newCh, newStartIdx);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (\n    oldVnode,\n    vnode,\n    insertedVnodeQueue,\n    ownerArray,\n    index,\n    removeOnly\n  ) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // clone reused vnode\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (process.env.NODE_ENV !== 'production') {\n          checkDuplicateKeys(ch);\n        }\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, null, null, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm)) {\n          removeVnodes(parentElm, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n};\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n];\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      (el.tagName === 'TEXTAREA' || el.tagName === 'INPUT') &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n};\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n};\n\n/*  */\n\nvar validDivisionCharRE = /[\\w).+\\-_$\\]]/;\n\nfunction parseFilters (exp) {\n  var inSingle = false;\n  var inDouble = false;\n  var inTemplateString = false;\n  var inRegex = false;\n  var curly = 0;\n  var square = 0;\n  var paren = 0;\n  var lastFilterIndex = 0;\n  var c, prev, i, expression, filters;\n\n  for (i = 0; i < exp.length; i++) {\n    prev = c;\n    c = exp.charCodeAt(i);\n    if (inSingle) {\n      if (c === 0x27 && prev !== 0x5C) { inSingle = false; }\n    } else if (inDouble) {\n      if (c === 0x22 && prev !== 0x5C) { inDouble = false; }\n    } else if (inTemplateString) {\n      if (c === 0x60 && prev !== 0x5C) { inTemplateString = false; }\n    } else if (inRegex) {\n      if (c === 0x2f && prev !== 0x5C) { inRegex = false; }\n    } else if (\n      c === 0x7C && // pipe\n      exp.charCodeAt(i + 1) !== 0x7C &&\n      exp.charCodeAt(i - 1) !== 0x7C &&\n      !curly && !square && !paren\n    ) {\n      if (expression === undefined) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        expression = exp.slice(0, i).trim();\n      } else {\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22: inDouble = true; break         // \"\n        case 0x27: inSingle = true; break         // '\n        case 0x60: inTemplateString = true; break // `\n        case 0x28: paren++; break                 // (\n        case 0x29: paren--; break                 // )\n        case 0x5B: square++; break                // [\n        case 0x5D: square--; break                // ]\n        case 0x7B: curly++; break                 // {\n        case 0x7D: curly--; break                 // }\n      }\n      if (c === 0x2f) { // /\n        var j = i - 1;\n        var p = (void 0);\n        // find first non-whitespace prev char\n        for (; j >= 0; j--) {\n          p = exp.charAt(j);\n          if (p !== ' ') { break }\n        }\n        if (!p || !validDivisionCharRE.test(p)) {\n          inRegex = true;\n        }\n      }\n    }\n  }\n\n  if (expression === undefined) {\n    expression = exp.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  function pushFilter () {\n    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());\n    lastFilterIndex = i + 1;\n  }\n\n  if (filters) {\n    for (i = 0; i < filters.length; i++) {\n      expression = wrapFilter(expression, filters[i]);\n    }\n  }\n\n  return expression\n}\n\nfunction wrapFilter (exp, filter) {\n  var i = filter.indexOf('(');\n  if (i < 0) {\n    // _f: resolveFilter\n    return (\"_f(\\\"\" + filter + \"\\\")(\" + exp + \")\")\n  } else {\n    var name = filter.slice(0, i);\n    var args = filter.slice(i + 1);\n    return (\"_f(\\\"\" + name + \"\\\")(\" + exp + (args !== ')' ? ',' + args : args))\n  }\n}\n\n/*  */\n\nfunction baseWarn (msg) {\n  console.error((\"[Vue compiler]: \" + msg));\n}\n\nfunction pluckModuleFunction (\n  modules,\n  key\n) {\n  return modules\n    ? modules.map(function (m) { return m[key]; }).filter(function (_) { return _; })\n    : []\n}\n\nfunction addProp (el, name, value) {\n  (el.props || (el.props = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\nfunction addAttr (el, name, value) {\n  (el.attrs || (el.attrs = [])).push({ name: name, value: value });\n  el.plain = false;\n}\n\n// add a raw attr (use this in preTransforms)\nfunction addRawAttr (el, name, value) {\n  el.attrsMap[name] = value;\n  el.attrsList.push({ name: name, value: value });\n}\n\nfunction addDirective (\n  el,\n  name,\n  rawName,\n  value,\n  arg,\n  modifiers\n) {\n  (el.directives || (el.directives = [])).push({ name: name, rawName: rawName, value: value, arg: arg, modifiers: modifiers });\n  el.plain = false;\n}\n\nfunction addHandler (\n  el,\n  name,\n  value,\n  modifiers,\n  important,\n  warn\n) {\n  modifiers = modifiers || emptyObject;\n  // warn prevent and passive modifier\n  /* istanbul ignore if */\n  if (\n    process.env.NODE_ENV !== 'production' && warn &&\n    modifiers.prevent && modifiers.passive\n  ) {\n    warn(\n      'passive and prevent can\\'t be used together. ' +\n      'Passive handler can\\'t prevent default event.'\n    );\n  }\n\n  // normalize click.right and click.middle since they don't actually fire\n  // this is technically browser-specific, but at least for now browsers are\n  // the only target envs that have right/middle clicks.\n  if (name === 'click') {\n    if (modifiers.right) {\n      name = 'contextmenu';\n      delete modifiers.right;\n    } else if (modifiers.middle) {\n      name = 'mouseup';\n    }\n  }\n\n  // check capture modifier\n  if (modifiers.capture) {\n    delete modifiers.capture;\n    name = '!' + name; // mark the event as captured\n  }\n  if (modifiers.once) {\n    delete modifiers.once;\n    name = '~' + name; // mark the event as once\n  }\n  /* istanbul ignore if */\n  if (modifiers.passive) {\n    delete modifiers.passive;\n    name = '&' + name; // mark the event as passive\n  }\n\n  var events;\n  if (modifiers.native) {\n    delete modifiers.native;\n    events = el.nativeEvents || (el.nativeEvents = {});\n  } else {\n    events = el.events || (el.events = {});\n  }\n\n  var newHandler = {\n    value: value.trim()\n  };\n  if (modifiers !== emptyObject) {\n    newHandler.modifiers = modifiers;\n  }\n\n  var handlers = events[name];\n  /* istanbul ignore if */\n  if (Array.isArray(handlers)) {\n    important ? handlers.unshift(newHandler) : handlers.push(newHandler);\n  } else if (handlers) {\n    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];\n  } else {\n    events[name] = newHandler;\n  }\n\n  el.plain = false;\n}\n\nfunction getBindingAttr (\n  el,\n  name,\n  getStatic\n) {\n  var dynamicValue =\n    getAndRemoveAttr(el, ':' + name) ||\n    getAndRemoveAttr(el, 'v-bind:' + name);\n  if (dynamicValue != null) {\n    return parseFilters(dynamicValue)\n  } else if (getStatic !== false) {\n    var staticValue = getAndRemoveAttr(el, name);\n    if (staticValue != null) {\n      return JSON.stringify(staticValue)\n    }\n  }\n}\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\nfunction getAndRemoveAttr (\n  el,\n  name,\n  removeFromMap\n) {\n  var val;\n  if ((val = el.attrsMap[name]) != null) {\n    var list = el.attrsList;\n    for (var i = 0, l = list.length; i < l; i++) {\n      if (list[i].name === name) {\n        list.splice(i, 1);\n        break\n      }\n    }\n  }\n  if (removeFromMap) {\n    delete el.attrsMap[name];\n  }\n  return val\n}\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\nfunction genComponentModel (\n  el,\n  value,\n  modifiers\n) {\n  var ref = modifiers || {};\n  var number = ref.number;\n  var trim = ref.trim;\n\n  var baseValueExpression = '$$v';\n  var valueExpression = baseValueExpression;\n  if (trim) {\n    valueExpression =\n      \"(typeof \" + baseValueExpression + \" === 'string'\" +\n      \"? \" + baseValueExpression + \".trim()\" +\n      \": \" + baseValueExpression + \")\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n  var assignment = genAssignmentCode(value, valueExpression);\n\n  el.model = {\n    value: (\"(\" + value + \")\"),\n    expression: JSON.stringify(value),\n    callback: (\"function (\" + baseValueExpression + \") {\" + assignment + \"}\")\n  };\n}\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\nfunction genAssignmentCode (\n  value,\n  assignment\n) {\n  var res = parseModel(value);\n  if (res.key === null) {\n    return (value + \"=\" + assignment)\n  } else {\n    return (\"$set(\" + (res.exp) + \", \" + (res.key) + \", \" + assignment + \")\")\n  }\n}\n\n/**\n * Parse a v-model expression into a base path and a final key segment.\n * Handles both dot-path and possible square brackets.\n *\n * Possible cases:\n *\n * - test\n * - test[key]\n * - test[test1[key]]\n * - test[\"a\"][key]\n * - xxx.test[a[a].test1[key]]\n * - test.xxx.a[\"asa\"][test1[key]]\n *\n */\n\nvar len, str, chr, index$1, expressionPos, expressionEndPos;\n\n\n\nfunction parseModel (val) {\n  // Fix https://github.com/vuejs/vue/pull/7730\n  // allow v-model=\"obj.val \" (trailing whitespace)\n  val = val.trim();\n  len = val.length;\n\n  if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {\n    index$1 = val.lastIndexOf('.');\n    if (index$1 > -1) {\n      return {\n        exp: val.slice(0, index$1),\n        key: '\"' + val.slice(index$1 + 1) + '\"'\n      }\n    } else {\n      return {\n        exp: val,\n        key: null\n      }\n    }\n  }\n\n  str = val;\n  index$1 = expressionPos = expressionEndPos = 0;\n\n  while (!eof()) {\n    chr = next();\n    /* istanbul ignore if */\n    if (isStringStart(chr)) {\n      parseString(chr);\n    } else if (chr === 0x5B) {\n      parseBracket(chr);\n    }\n  }\n\n  return {\n    exp: val.slice(0, expressionPos),\n    key: val.slice(expressionPos + 1, expressionEndPos)\n  }\n}\n\nfunction next () {\n  return str.charCodeAt(++index$1)\n}\n\nfunction eof () {\n  return index$1 >= len\n}\n\nfunction isStringStart (chr) {\n  return chr === 0x22 || chr === 0x27\n}\n\nfunction parseBracket (chr) {\n  var inBracket = 1;\n  expressionPos = index$1;\n  while (!eof()) {\n    chr = next();\n    if (isStringStart(chr)) {\n      parseString(chr);\n      continue\n    }\n    if (chr === 0x5B) { inBracket++; }\n    if (chr === 0x5D) { inBracket--; }\n    if (inBracket === 0) {\n      expressionEndPos = index$1;\n      break\n    }\n  }\n}\n\nfunction parseString (chr) {\n  var stringQuote = chr;\n  while (!eof()) {\n    chr = next();\n    if (chr === stringQuote) {\n      break\n    }\n  }\n}\n\n/*  */\n\nvar warn$1;\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\nfunction model (\n  el,\n  dir,\n  _warn\n) {\n  warn$1 = _warn;\n  var value = dir.value;\n  var modifiers = dir.modifiers;\n  var tag = el.tag;\n  var type = el.attrsMap.type;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // inputs with type=\"file\" are read only and setting the input's\n    // value will throw an error.\n    if (tag === 'input' && type === 'file') {\n      warn$1(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\" type=\\\"file\\\">:\\n\" +\n        \"File inputs are read only. Use a v-on:change listener instead.\"\n      );\n    }\n  }\n\n  if (el.component) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (tag === 'select') {\n    genSelect(el, value, modifiers);\n  } else if (tag === 'input' && type === 'checkbox') {\n    genCheckboxModel(el, value, modifiers);\n  } else if (tag === 'input' && type === 'radio') {\n    genRadioModel(el, value, modifiers);\n  } else if (tag === 'input' || tag === 'textarea') {\n    genDefaultModel(el, value, modifiers);\n  } else if (!config.isReservedTag(tag)) {\n    genComponentModel(el, value, modifiers);\n    // component v-model doesn't need extra runtime\n    return false\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$1(\n      \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n      \"v-model is not supported on this element type. \" +\n      'If you are working with contenteditable, it\\'s recommended to ' +\n      'wrap a library dedicated for that purpose inside a custom component.'\n    );\n  }\n\n  // ensure runtime directive metadata\n  return true\n}\n\nfunction genCheckboxModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';\n  var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';\n  addProp(el, 'checked',\n    \"Array.isArray(\" + value + \")\" +\n    \"?_i(\" + value + \",\" + valueBinding + \")>-1\" + (\n      trueValueBinding === 'true'\n        ? (\":(\" + value + \")\")\n        : (\":_q(\" + value + \",\" + trueValueBinding + \")\")\n    )\n  );\n  addHandler(el, 'change',\n    \"var $$a=\" + value + \",\" +\n        '$$el=$event.target,' +\n        \"$$c=$$el.checked?(\" + trueValueBinding + \"):(\" + falseValueBinding + \");\" +\n    'if(Array.isArray($$a)){' +\n      \"var $$v=\" + (number ? '_n(' + valueBinding + ')' : valueBinding) + \",\" +\n          '$$i=_i($$a,$$v);' +\n      \"if($$el.checked){$$i<0&&(\" + (genAssignmentCode(value, '$$a.concat([$$v])')) + \")}\" +\n      \"else{$$i>-1&&(\" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + \")}\" +\n    \"}else{\" + (genAssignmentCode(value, '$$c')) + \"}\",\n    null, true\n  );\n}\n\nfunction genRadioModel (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var valueBinding = getBindingAttr(el, 'value') || 'null';\n  valueBinding = number ? (\"_n(\" + valueBinding + \")\") : valueBinding;\n  addProp(el, 'checked', (\"_q(\" + value + \",\" + valueBinding + \")\"));\n  addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);\n}\n\nfunction genSelect (\n  el,\n  value,\n  modifiers\n) {\n  var number = modifiers && modifiers.number;\n  var selectedVal = \"Array.prototype.filter\" +\n    \".call($event.target.options,function(o){return o.selected})\" +\n    \".map(function(o){var val = \\\"_value\\\" in o ? o._value : o.value;\" +\n    \"return \" + (number ? '_n(val)' : 'val') + \"})\";\n\n  var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';\n  var code = \"var $$selectedVal = \" + selectedVal + \";\";\n  code = code + \" \" + (genAssignmentCode(value, assignment));\n  addHandler(el, 'change', code, null, true);\n}\n\nfunction genDefaultModel (\n  el,\n  value,\n  modifiers\n) {\n  var type = el.attrsMap.type;\n\n  // warn if v-bind:value conflicts with v-model\n  // except for inputs with v-bind:type\n  if (process.env.NODE_ENV !== 'production') {\n    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];\n    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];\n    if (value$1 && !typeBinding) {\n      var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';\n      warn$1(\n        binding + \"=\\\"\" + value$1 + \"\\\" conflicts with v-model on the same element \" +\n        'because the latter already expands to a value binding internally'\n      );\n    }\n  }\n\n  var ref = modifiers || {};\n  var lazy = ref.lazy;\n  var number = ref.number;\n  var trim = ref.trim;\n  var needCompositionGuard = !lazy && type !== 'range';\n  var event = lazy\n    ? 'change'\n    : type === 'range'\n      ? RANGE_TOKEN\n      : 'input';\n\n  var valueExpression = '$event.target.value';\n  if (trim) {\n    valueExpression = \"$event.target.value.trim()\";\n  }\n  if (number) {\n    valueExpression = \"_n(\" + valueExpression + \")\";\n  }\n\n  var code = genAssignmentCode(value, valueExpression);\n  if (needCompositionGuard) {\n    code = \"if($event.target.composing)return;\" + code;\n  }\n\n  addProp(el, 'value', (\"(\" + value + \")\"));\n  addHandler(el, event, code, null, true);\n  if (trim || number) {\n    addHandler(el, 'blur', '$forceUpdate()');\n  }\n}\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler$1 (event, handler, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, createOnceHandler$1, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n};\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n};\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n};\n\n/*  */\n\nvar whitespaceRE = /\\s+/;\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(whitespaceRE).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def$$1) {\n  if (!def$$1) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def$$1 === 'object') {\n    var res = {};\n    if (def$$1.css !== false) {\n      extend(res, autoCssTransition(def$$1.name || 'v'));\n    }\n    extend(res, def$$1);\n    return res\n  } else if (typeof def$$1 === 'string') {\n    return autoCssTransition(def$$1)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  // JSDOM may return undefined for transition properties\n  var transitionDelays = (styles[transitionProp + 'Delay'] || '').split(', ');\n  var transitionDurations = (styles[transitionProp + 'Duration'] || '').split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = (styles[animationProp + 'Delay'] || '').split(', ');\n  var animationDurations = (styles[animationProp + 'Duration'] || '').split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer numbers\n// in a locale-dependent way, using a comma instead of a dot.\n// If comma is not replaced with a dot, the input will be rounded down (i.e. acting\n// as a floor function) causing unexpected behaviors\nfunction toMs (s) {\n  return Number(s.slice(0, -1).replace(',', '.')) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show && el.parentNode) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {};\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n];\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n};\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n};\n\n/*  */\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar isNotTextNode = function (c) { return c.tag || isAsyncPlaceholder(c); };\n\nvar isVShowDirective = function (d) { return d.name === 'show'; };\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(isNotTextNode);\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(isVShowDirective)) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n};\n\n/*  */\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  beforeMount: function beforeMount () {\n    var this$1 = this;\n\n    var update = this._update;\n    this._update = function (vnode, hydrating) {\n      var restoreActiveInstance = setActiveInstance(this$1);\n      // force removing pass\n      this$1.__patch__(\n        this$1._vnode,\n        this$1.kept,\n        false, // hydrating\n        true // removeOnly (!important, avoids unnecessary moves)\n      );\n      this$1._vnode = this$1.kept;\n      restoreActiveInstance();\n      update.call(this$1, vnode, hydrating);\n    };\n  },\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (e && e.target !== el) {\n            return\n          }\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n};\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n};\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nvar defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\nvar buildRegex = cached(function (delimiters) {\n  var open = delimiters[0].replace(regexEscapeRE, '\\\\$&');\n  var close = delimiters[1].replace(regexEscapeRE, '\\\\$&');\n  return new RegExp(open + '((?:.|\\\\n)+?)' + close, 'g')\n});\n\n\n\nfunction parseText (\n  text,\n  delimiters\n) {\n  var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;\n  if (!tagRE.test(text)) {\n    return\n  }\n  var tokens = [];\n  var rawTokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, tokenValue;\n  while ((match = tagRE.exec(text))) {\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      rawTokens.push(tokenValue = text.slice(lastIndex, index));\n      tokens.push(JSON.stringify(tokenValue));\n    }\n    // tag token\n    var exp = parseFilters(match[1].trim());\n    tokens.push((\"_s(\" + exp + \")\"));\n    rawTokens.push({ '@binding': exp });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    rawTokens.push(tokenValue = text.slice(lastIndex));\n    tokens.push(JSON.stringify(tokenValue));\n  }\n  return {\n    expression: tokens.join('+'),\n    tokens: rawTokens\n  }\n}\n\n/*  */\n\nfunction transformNode (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticClass = getAndRemoveAttr(el, 'class');\n  if (process.env.NODE_ENV !== 'production' && staticClass) {\n    var res = parseText(staticClass, options.delimiters);\n    if (res) {\n      warn(\n        \"class=\\\"\" + staticClass + \"\\\": \" +\n        'Interpolation inside attributes has been removed. ' +\n        'Use v-bind or the colon shorthand instead. For example, ' +\n        'instead of <div class=\"{{ val }}\">, use <div :class=\"val\">.'\n      );\n    }\n  }\n  if (staticClass) {\n    el.staticClass = JSON.stringify(staticClass);\n  }\n  var classBinding = getBindingAttr(el, 'class', false /* getStatic */);\n  if (classBinding) {\n    el.classBinding = classBinding;\n  }\n}\n\nfunction genData (el) {\n  var data = '';\n  if (el.staticClass) {\n    data += \"staticClass:\" + (el.staticClass) + \",\";\n  }\n  if (el.classBinding) {\n    data += \"class:\" + (el.classBinding) + \",\";\n  }\n  return data\n}\n\nvar klass$1 = {\n  staticKeys: ['staticClass'],\n  transformNode: transformNode,\n  genData: genData\n};\n\n/*  */\n\nfunction transformNode$1 (el, options) {\n  var warn = options.warn || baseWarn;\n  var staticStyle = getAndRemoveAttr(el, 'style');\n  if (staticStyle) {\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      var res = parseText(staticStyle, options.delimiters);\n      if (res) {\n        warn(\n          \"style=\\\"\" + staticStyle + \"\\\": \" +\n          'Interpolation inside attributes has been removed. ' +\n          'Use v-bind or the colon shorthand instead. For example, ' +\n          'instead of <div style=\"{{ val }}\">, use <div :style=\"val\">.'\n        );\n      }\n    }\n    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));\n  }\n\n  var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);\n  if (styleBinding) {\n    el.styleBinding = styleBinding;\n  }\n}\n\nfunction genData$1 (el) {\n  var data = '';\n  if (el.staticStyle) {\n    data += \"staticStyle:\" + (el.staticStyle) + \",\";\n  }\n  if (el.styleBinding) {\n    data += \"style:(\" + (el.styleBinding) + \"),\";\n  }\n  return data\n}\n\nvar style$1 = {\n  staticKeys: ['staticStyle'],\n  transformNode: transformNode$1,\n  genData: genData$1\n};\n\n/*  */\n\nvar decoder;\n\nvar he = {\n  decode: function decode (html) {\n    decoder = decoder || document.createElement('div');\n    decoder.innerHTML = html;\n    return decoder.textContent\n  }\n};\n\n/*  */\n\nvar isUnaryTag = makeMap(\n  'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +\n  'link,meta,param,source,track,wbr'\n);\n\n// Elements that you can, intentionally, leave open\n// (and which close themselves)\nvar canBeLeftOpenTag = makeMap(\n  'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'\n);\n\n// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3\n// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content\nvar isNonPhrasingTag = makeMap(\n  'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +\n  'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +\n  'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +\n  'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +\n  'title,tr,track'\n);\n\n/**\n * Not type-checking this file because it's mostly vendor code.\n */\n\n// Regular Expressions for parsing tags and attributes\nvar attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/;\n// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName\n// but for Vue templates we can enforce a simple charset\nvar ncname = '[a-zA-Z_][\\\\w\\\\-\\\\.]*';\nvar qnameCapture = \"((?:\" + ncname + \"\\\\:)?\" + ncname + \")\";\nvar startTagOpen = new RegExp((\"^<\" + qnameCapture));\nvar startTagClose = /^\\s*(\\/?)>/;\nvar endTag = new RegExp((\"^<\\\\/\" + qnameCapture + \"[^>]*>\"));\nvar doctype = /^<!DOCTYPE [^>]+>/i;\n// #7298: escape - to avoid being pased as HTML comment when inlined in page\nvar comment = /^<!\\--/;\nvar conditionalComment = /^<!\\[/;\n\n// Special Elements (can contain anything)\nvar isPlainTextElement = makeMap('script,style,textarea', true);\nvar reCache = {};\n\nvar decodingMap = {\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&amp;': '&',\n  '&#10;': '\\n',\n  '&#9;': '\\t'\n};\nvar encodedAttr = /&(?:lt|gt|quot|amp);/g;\nvar encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;\n\n// #5992\nvar isIgnoreNewlineTag = makeMap('pre,textarea', true);\nvar shouldIgnoreFirstNewline = function (tag, html) { return tag && isIgnoreNewlineTag(tag) && html[0] === '\\n'; };\n\nfunction decodeAttr (value, shouldDecodeNewlines) {\n  var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;\n  return value.replace(re, function (match) { return decodingMap[match]; })\n}\n\nfunction parseHTML (html, options) {\n  var stack = [];\n  var expectHTML = options.expectHTML;\n  var isUnaryTag$$1 = options.isUnaryTag || no;\n  var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;\n  var index = 0;\n  var last, lastTag;\n  while (html) {\n    last = html;\n    // Make sure we're not in a plaintext content element like script/style\n    if (!lastTag || !isPlainTextElement(lastTag)) {\n      var textEnd = html.indexOf('<');\n      if (textEnd === 0) {\n        // Comment:\n        if (comment.test(html)) {\n          var commentEnd = html.indexOf('-->');\n\n          if (commentEnd >= 0) {\n            if (options.shouldKeepComment) {\n              options.comment(html.substring(4, commentEnd));\n            }\n            advance(commentEnd + 3);\n            continue\n          }\n        }\n\n        // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment\n        if (conditionalComment.test(html)) {\n          var conditionalEnd = html.indexOf(']>');\n\n          if (conditionalEnd >= 0) {\n            advance(conditionalEnd + 2);\n            continue\n          }\n        }\n\n        // Doctype:\n        var doctypeMatch = html.match(doctype);\n        if (doctypeMatch) {\n          advance(doctypeMatch[0].length);\n          continue\n        }\n\n        // End tag:\n        var endTagMatch = html.match(endTag);\n        if (endTagMatch) {\n          var curIndex = index;\n          advance(endTagMatch[0].length);\n          parseEndTag(endTagMatch[1], curIndex, index);\n          continue\n        }\n\n        // Start tag:\n        var startTagMatch = parseStartTag();\n        if (startTagMatch) {\n          handleStartTag(startTagMatch);\n          if (shouldIgnoreFirstNewline(startTagMatch.tagName, html)) {\n            advance(1);\n          }\n          continue\n        }\n      }\n\n      var text = (void 0), rest = (void 0), next = (void 0);\n      if (textEnd >= 0) {\n        rest = html.slice(textEnd);\n        while (\n          !endTag.test(rest) &&\n          !startTagOpen.test(rest) &&\n          !comment.test(rest) &&\n          !conditionalComment.test(rest)\n        ) {\n          // < in plain text, be forgiving and treat it as text\n          next = rest.indexOf('<', 1);\n          if (next < 0) { break }\n          textEnd += next;\n          rest = html.slice(textEnd);\n        }\n        text = html.substring(0, textEnd);\n        advance(textEnd);\n      }\n\n      if (textEnd < 0) {\n        text = html;\n        html = '';\n      }\n\n      if (options.chars && text) {\n        options.chars(text);\n      }\n    } else {\n      var endTagLength = 0;\n      var stackedTag = lastTag.toLowerCase();\n      var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\\\s\\\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));\n      var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {\n        endTagLength = endTag.length;\n        if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {\n          text = text\n            .replace(/<!\\--([\\s\\S]*?)-->/g, '$1') // #7298\n            .replace(/<!\\[CDATA\\[([\\s\\S]*?)]]>/g, '$1');\n        }\n        if (shouldIgnoreFirstNewline(stackedTag, text)) {\n          text = text.slice(1);\n        }\n        if (options.chars) {\n          options.chars(text);\n        }\n        return ''\n      });\n      index += html.length - rest$1.length;\n      html = rest$1;\n      parseEndTag(stackedTag, index - endTagLength, index);\n    }\n\n    if (html === last) {\n      options.chars && options.chars(html);\n      if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {\n        options.warn((\"Mal-formatted tag at end of template: \\\"\" + html + \"\\\"\"));\n      }\n      break\n    }\n  }\n\n  // Clean up any remaining tags\n  parseEndTag();\n\n  function advance (n) {\n    index += n;\n    html = html.substring(n);\n  }\n\n  function parseStartTag () {\n    var start = html.match(startTagOpen);\n    if (start) {\n      var match = {\n        tagName: start[1],\n        attrs: [],\n        start: index\n      };\n      advance(start[0].length);\n      var end, attr;\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n        advance(attr[0].length);\n        match.attrs.push(attr);\n      }\n      if (end) {\n        match.unarySlash = end[1];\n        advance(end[0].length);\n        match.end = index;\n        return match\n      }\n    }\n  }\n\n  function handleStartTag (match) {\n    var tagName = match.tagName;\n    var unarySlash = match.unarySlash;\n\n    if (expectHTML) {\n      if (lastTag === 'p' && isNonPhrasingTag(tagName)) {\n        parseEndTag(lastTag);\n      }\n      if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {\n        parseEndTag(tagName);\n      }\n    }\n\n    var unary = isUnaryTag$$1(tagName) || !!unarySlash;\n\n    var l = match.attrs.length;\n    var attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      var args = match.attrs[i];\n      var value = args[3] || args[4] || args[5] || '';\n      var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'\n        ? options.shouldDecodeNewlinesForHref\n        : options.shouldDecodeNewlines;\n      attrs[i] = {\n        name: args[1],\n        value: decodeAttr(value, shouldDecodeNewlines)\n      };\n    }\n\n    if (!unary) {\n      stack.push({ tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs });\n      lastTag = tagName;\n    }\n\n    if (options.start) {\n      options.start(tagName, attrs, unary, match.start, match.end);\n    }\n  }\n\n  function parseEndTag (tagName, start, end) {\n    var pos, lowerCasedTagName;\n    if (start == null) { start = index; }\n    if (end == null) { end = index; }\n\n    // Find the closest opened tag of the same type\n    if (tagName) {\n      lowerCasedTagName = tagName.toLowerCase();\n      for (pos = stack.length - 1; pos >= 0; pos--) {\n        if (stack[pos].lowerCasedTag === lowerCasedTagName) {\n          break\n        }\n      }\n    } else {\n      // If no tag name is provided, clean shop\n      pos = 0;\n    }\n\n    if (pos >= 0) {\n      // Close all the open elements, up the stack\n      for (var i = stack.length - 1; i >= pos; i--) {\n        if (process.env.NODE_ENV !== 'production' &&\n          (i > pos || !tagName) &&\n          options.warn\n        ) {\n          options.warn(\n            (\"tag <\" + (stack[i].tag) + \"> has no matching end tag.\")\n          );\n        }\n        if (options.end) {\n          options.end(stack[i].tag, start, end);\n        }\n      }\n\n      // Remove the open elements from the stack\n      stack.length = pos;\n      lastTag = pos && stack[pos - 1].tag;\n    } else if (lowerCasedTagName === 'br') {\n      if (options.start) {\n        options.start(tagName, [], true, start, end);\n      }\n    } else if (lowerCasedTagName === 'p') {\n      if (options.start) {\n        options.start(tagName, [], false, start, end);\n      }\n      if (options.end) {\n        options.end(tagName, start, end);\n      }\n    }\n  }\n}\n\n/*  */\n\nvar onRE = /^@|^v-on:/;\nvar dirRE = /^v-|^@|^:/;\nvar forAliasRE = /([\\s\\S]*?)\\s+(?:in|of)\\s+([\\s\\S]*)/;\nvar forIteratorRE = /,([^,\\}\\]]*)(?:,([^,\\}\\]]*))?$/;\nvar stripParensRE = /^\\(|\\)$/g;\n\nvar argRE = /:(.*)$/;\nvar bindRE = /^:|^v-bind:/;\nvar modifierRE = /\\.[^.]+/g;\n\nvar decodeHTMLCached = cached(he.decode);\n\n// configurable state\nvar warn$2;\nvar delimiters;\nvar transforms;\nvar preTransforms;\nvar postTransforms;\nvar platformIsPreTag;\nvar platformMustUseProp;\nvar platformGetTagNamespace;\n\n\n\nfunction createASTElement (\n  tag,\n  attrs,\n  parent\n) {\n  return {\n    type: 1,\n    tag: tag,\n    attrsList: attrs,\n    attrsMap: makeAttrsMap(attrs),\n    parent: parent,\n    children: []\n  }\n}\n\n/**\n * Convert HTML string to AST.\n */\nfunction parse (\n  template,\n  options\n) {\n  warn$2 = options.warn || baseWarn;\n\n  platformIsPreTag = options.isPreTag || no;\n  platformMustUseProp = options.mustUseProp || no;\n  platformGetTagNamespace = options.getTagNamespace || no;\n\n  transforms = pluckModuleFunction(options.modules, 'transformNode');\n  preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');\n  postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');\n\n  delimiters = options.delimiters;\n\n  var stack = [];\n  var preserveWhitespace = options.preserveWhitespace !== false;\n  var root;\n  var currentParent;\n  var inVPre = false;\n  var inPre = false;\n  var warned = false;\n\n  function warnOnce (msg) {\n    if (!warned) {\n      warned = true;\n      warn$2(msg);\n    }\n  }\n\n  function closeElement (element) {\n    // check pre state\n    if (element.pre) {\n      inVPre = false;\n    }\n    if (platformIsPreTag(element.tag)) {\n      inPre = false;\n    }\n    // apply post-transforms\n    for (var i = 0; i < postTransforms.length; i++) {\n      postTransforms[i](element, options);\n    }\n  }\n\n  parseHTML(template, {\n    warn: warn$2,\n    expectHTML: options.expectHTML,\n    isUnaryTag: options.isUnaryTag,\n    canBeLeftOpenTag: options.canBeLeftOpenTag,\n    shouldDecodeNewlines: options.shouldDecodeNewlines,\n    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,\n    shouldKeepComment: options.comments,\n    start: function start (tag, attrs, unary) {\n      // check namespace.\n      // inherit parent ns if there is one\n      var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);\n\n      // handle IE svg bug\n      /* istanbul ignore if */\n      if (isIE && ns === 'svg') {\n        attrs = guardIESVGBug(attrs);\n      }\n\n      var element = createASTElement(tag, attrs, currentParent);\n      if (ns) {\n        element.ns = ns;\n      }\n\n      if (isForbiddenTag(element) && !isServerRendering()) {\n        element.forbidden = true;\n        process.env.NODE_ENV !== 'production' && warn$2(\n          'Templates should only be responsible for mapping the state to the ' +\n          'UI. Avoid placing tags with side-effects in your templates, such as ' +\n          \"<\" + tag + \">\" + ', as they will not be parsed.'\n        );\n      }\n\n      // apply pre-transforms\n      for (var i = 0; i < preTransforms.length; i++) {\n        element = preTransforms[i](element, options) || element;\n      }\n\n      if (!inVPre) {\n        processPre(element);\n        if (element.pre) {\n          inVPre = true;\n        }\n      }\n      if (platformIsPreTag(element.tag)) {\n        inPre = true;\n      }\n      if (inVPre) {\n        processRawAttrs(element);\n      } else if (!element.processed) {\n        // structural directives\n        processFor(element);\n        processIf(element);\n        processOnce(element);\n        // element-scope stuff\n        processElement(element, options);\n      }\n\n      function checkRootConstraints (el) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (el.tag === 'slot' || el.tag === 'template') {\n            warnOnce(\n              \"Cannot use <\" + (el.tag) + \"> as component root element because it may \" +\n              'contain multiple nodes.'\n            );\n          }\n          if (el.attrsMap.hasOwnProperty('v-for')) {\n            warnOnce(\n              'Cannot use v-for on stateful component root element because ' +\n              'it renders multiple elements.'\n            );\n          }\n        }\n      }\n\n      // tree management\n      if (!root) {\n        root = element;\n        checkRootConstraints(root);\n      } else if (!stack.length) {\n        // allow root elements with v-if, v-else-if and v-else\n        if (root.if && (element.elseif || element.else)) {\n          checkRootConstraints(element);\n          addIfCondition(root, {\n            exp: element.elseif,\n            block: element\n          });\n        } else if (process.env.NODE_ENV !== 'production') {\n          warnOnce(\n            \"Component template should contain exactly one root element. \" +\n            \"If you are using v-if on multiple elements, \" +\n            \"use v-else-if to chain them instead.\"\n          );\n        }\n      }\n      if (currentParent && !element.forbidden) {\n        if (element.elseif || element.else) {\n          processIfConditions(element, currentParent);\n        } else if (element.slotScope) { // scoped slot\n          currentParent.plain = false;\n          var name = element.slotTarget || '\"default\"'\n          ;(currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;\n        } else {\n          currentParent.children.push(element);\n          element.parent = currentParent;\n        }\n      }\n      if (!unary) {\n        currentParent = element;\n        stack.push(element);\n      } else {\n        closeElement(element);\n      }\n    },\n\n    end: function end () {\n      // remove trailing whitespace\n      var element = stack[stack.length - 1];\n      var lastNode = element.children[element.children.length - 1];\n      if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {\n        element.children.pop();\n      }\n      // pop stack\n      stack.length -= 1;\n      currentParent = stack[stack.length - 1];\n      closeElement(element);\n    },\n\n    chars: function chars (text) {\n      if (!currentParent) {\n        if (process.env.NODE_ENV !== 'production') {\n          if (text === template) {\n            warnOnce(\n              'Component template requires a root element, rather than just text.'\n            );\n          } else if ((text = text.trim())) {\n            warnOnce(\n              (\"text \\\"\" + text + \"\\\" outside root element will be ignored.\")\n            );\n          }\n        }\n        return\n      }\n      // IE textarea placeholder bug\n      /* istanbul ignore if */\n      if (isIE &&\n        currentParent.tag === 'textarea' &&\n        currentParent.attrsMap.placeholder === text\n      ) {\n        return\n      }\n      var children = currentParent.children;\n      text = inPre || text.trim()\n        ? isTextTag(currentParent) ? text : decodeHTMLCached(text)\n        // only preserve whitespace if its not right after a starting tag\n        : preserveWhitespace && children.length ? ' ' : '';\n      if (text) {\n        var res;\n        if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {\n          children.push({\n            type: 2,\n            expression: res.expression,\n            tokens: res.tokens,\n            text: text\n          });\n        } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {\n          children.push({\n            type: 3,\n            text: text\n          });\n        }\n      }\n    },\n    comment: function comment (text) {\n      currentParent.children.push({\n        type: 3,\n        text: text,\n        isComment: true\n      });\n    }\n  });\n  return root\n}\n\nfunction processPre (el) {\n  if (getAndRemoveAttr(el, 'v-pre') != null) {\n    el.pre = true;\n  }\n}\n\nfunction processRawAttrs (el) {\n  var l = el.attrsList.length;\n  if (l) {\n    var attrs = el.attrs = new Array(l);\n    for (var i = 0; i < l; i++) {\n      attrs[i] = {\n        name: el.attrsList[i].name,\n        value: JSON.stringify(el.attrsList[i].value)\n      };\n    }\n  } else if (!el.pre) {\n    // non root node in pre blocks with no attributes\n    el.plain = true;\n  }\n}\n\nfunction processElement (element, options) {\n  processKey(element);\n\n  // determine whether this is a plain element after\n  // removing structural attributes\n  element.plain = !element.key && !element.attrsList.length;\n\n  processRef(element);\n  processSlot(element);\n  processComponent(element);\n  for (var i = 0; i < transforms.length; i++) {\n    element = transforms[i](element, options) || element;\n  }\n  processAttrs(element);\n}\n\nfunction processKey (el) {\n  var exp = getBindingAttr(el, 'key');\n  if (exp) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (el.tag === 'template') {\n        warn$2(\"<template> cannot be keyed. Place the key on real elements instead.\");\n      }\n      if (el.for) {\n        var iterator = el.iterator2 || el.iterator1;\n        var parent = el.parent;\n        if (iterator && iterator === exp && parent && parent.tag === 'transition-group') {\n          warn$2(\n            \"Do not use v-for index as key on <transition-group> children, \" +\n            \"this is the same as not using keys.\"\n          );\n        }\n      }\n    }\n    el.key = exp;\n  }\n}\n\nfunction processRef (el) {\n  var ref = getBindingAttr(el, 'ref');\n  if (ref) {\n    el.ref = ref;\n    el.refInFor = checkInFor(el);\n  }\n}\n\nfunction processFor (el) {\n  var exp;\n  if ((exp = getAndRemoveAttr(el, 'v-for'))) {\n    var res = parseFor(exp);\n    if (res) {\n      extend(el, res);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn$2(\n        (\"Invalid v-for expression: \" + exp)\n      );\n    }\n  }\n}\n\n\n\nfunction parseFor (exp) {\n  var inMatch = exp.match(forAliasRE);\n  if (!inMatch) { return }\n  var res = {};\n  res.for = inMatch[2].trim();\n  var alias = inMatch[1].trim().replace(stripParensRE, '');\n  var iteratorMatch = alias.match(forIteratorRE);\n  if (iteratorMatch) {\n    res.alias = alias.replace(forIteratorRE, '').trim();\n    res.iterator1 = iteratorMatch[1].trim();\n    if (iteratorMatch[2]) {\n      res.iterator2 = iteratorMatch[2].trim();\n    }\n  } else {\n    res.alias = alias;\n  }\n  return res\n}\n\nfunction processIf (el) {\n  var exp = getAndRemoveAttr(el, 'v-if');\n  if (exp) {\n    el.if = exp;\n    addIfCondition(el, {\n      exp: exp,\n      block: el\n    });\n  } else {\n    if (getAndRemoveAttr(el, 'v-else') != null) {\n      el.else = true;\n    }\n    var elseif = getAndRemoveAttr(el, 'v-else-if');\n    if (elseif) {\n      el.elseif = elseif;\n    }\n  }\n}\n\nfunction processIfConditions (el, parent) {\n  var prev = findPrevElement(parent.children);\n  if (prev && prev.if) {\n    addIfCondition(prev, {\n      exp: el.elseif,\n      block: el\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn$2(\n      \"v-\" + (el.elseif ? ('else-if=\"' + el.elseif + '\"') : 'else') + \" \" +\n      \"used on element <\" + (el.tag) + \"> without corresponding v-if.\"\n    );\n  }\n}\n\nfunction findPrevElement (children) {\n  var i = children.length;\n  while (i--) {\n    if (children[i].type === 1) {\n      return children[i]\n    } else {\n      if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {\n        warn$2(\n          \"text \\\"\" + (children[i].text.trim()) + \"\\\" between v-if and v-else(-if) \" +\n          \"will be ignored.\"\n        );\n      }\n      children.pop();\n    }\n  }\n}\n\nfunction addIfCondition (el, condition) {\n  if (!el.ifConditions) {\n    el.ifConditions = [];\n  }\n  el.ifConditions.push(condition);\n}\n\nfunction processOnce (el) {\n  var once$$1 = getAndRemoveAttr(el, 'v-once');\n  if (once$$1 != null) {\n    el.once = true;\n  }\n}\n\nfunction processSlot (el) {\n  if (el.tag === 'slot') {\n    el.slotName = getBindingAttr(el, 'name');\n    if (process.env.NODE_ENV !== 'production' && el.key) {\n      warn$2(\n        \"`key` does not work on <slot> because slots are abstract outlets \" +\n        \"and can possibly expand into multiple elements. \" +\n        \"Use the key on a wrapping element instead.\"\n      );\n    }\n  } else {\n    var slotScope;\n    if (el.tag === 'template') {\n      slotScope = getAndRemoveAttr(el, 'scope');\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && slotScope) {\n        warn$2(\n          \"the \\\"scope\\\" attribute for scoped slots have been deprecated and \" +\n          \"replaced by \\\"slot-scope\\\" since 2.5. The new \\\"slot-scope\\\" attribute \" +\n          \"can also be used on plain elements in addition to <template> to \" +\n          \"denote scoped slots.\",\n          true\n        );\n      }\n      el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');\n    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {\n        warn$2(\n          \"Ambiguous combined usage of slot-scope and v-for on <\" + (el.tag) + \"> \" +\n          \"(v-for takes higher priority). Use a wrapper <template> for the \" +\n          \"scoped slot to make it clearer.\",\n          true\n        );\n      }\n      el.slotScope = slotScope;\n    }\n    var slotTarget = getBindingAttr(el, 'slot');\n    if (slotTarget) {\n      el.slotTarget = slotTarget === '\"\"' ? '\"default\"' : slotTarget;\n      // preserve slot as an attribute for native shadow DOM compat\n      // only for non-scoped slots.\n      if (el.tag !== 'template' && !el.slotScope) {\n        addAttr(el, 'slot', slotTarget);\n      }\n    }\n  }\n}\n\nfunction processComponent (el) {\n  var binding;\n  if ((binding = getBindingAttr(el, 'is'))) {\n    el.component = binding;\n  }\n  if (getAndRemoveAttr(el, 'inline-template') != null) {\n    el.inlineTemplate = true;\n  }\n}\n\nfunction processAttrs (el) {\n  var list = el.attrsList;\n  var i, l, name, rawName, value, modifiers, isProp;\n  for (i = 0, l = list.length; i < l; i++) {\n    name = rawName = list[i].name;\n    value = list[i].value;\n    if (dirRE.test(name)) {\n      // mark element as dynamic\n      el.hasBindings = true;\n      // modifiers\n      modifiers = parseModifiers(name);\n      if (modifiers) {\n        name = name.replace(modifierRE, '');\n      }\n      if (bindRE.test(name)) { // v-bind\n        name = name.replace(bindRE, '');\n        value = parseFilters(value);\n        isProp = false;\n        if (\n          process.env.NODE_ENV !== 'production' &&\n          value.trim().length === 0\n        ) {\n          warn$2(\n            (\"The value for a v-bind expression cannot be empty. Found in \\\"v-bind:\" + name + \"\\\"\")\n          );\n        }\n        if (modifiers) {\n          if (modifiers.prop) {\n            isProp = true;\n            name = camelize(name);\n            if (name === 'innerHtml') { name = 'innerHTML'; }\n          }\n          if (modifiers.camel) {\n            name = camelize(name);\n          }\n          if (modifiers.sync) {\n            addHandler(\n              el,\n              (\"update:\" + (camelize(name))),\n              genAssignmentCode(value, \"$event\")\n            );\n          }\n        }\n        if (isProp || (\n          !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)\n        )) {\n          addProp(el, name, value);\n        } else {\n          addAttr(el, name, value);\n        }\n      } else if (onRE.test(name)) { // v-on\n        name = name.replace(onRE, '');\n        addHandler(el, name, value, modifiers, false, warn$2);\n      } else { // normal directives\n        name = name.replace(dirRE, '');\n        // parse arg\n        var argMatch = name.match(argRE);\n        var arg = argMatch && argMatch[1];\n        if (arg) {\n          name = name.slice(0, -(arg.length + 1));\n        }\n        addDirective(el, name, rawName, value, arg, modifiers);\n        if (process.env.NODE_ENV !== 'production' && name === 'model') {\n          checkForAliasModel(el, value);\n        }\n      }\n    } else {\n      // literal attribute\n      if (process.env.NODE_ENV !== 'production') {\n        var res = parseText(value, delimiters);\n        if (res) {\n          warn$2(\n            name + \"=\\\"\" + value + \"\\\": \" +\n            'Interpolation inside attributes has been removed. ' +\n            'Use v-bind or the colon shorthand instead. For example, ' +\n            'instead of <div id=\"{{ val }}\">, use <div :id=\"val\">.'\n          );\n        }\n      }\n      addAttr(el, name, JSON.stringify(value));\n      // #6887 firefox doesn't update muted state if set via attribute\n      // even immediately after element creation\n      if (!el.component &&\n          name === 'muted' &&\n          platformMustUseProp(el.tag, el.attrsMap.type, name)) {\n        addProp(el, name, 'true');\n      }\n    }\n  }\n}\n\nfunction checkInFor (el) {\n  var parent = el;\n  while (parent) {\n    if (parent.for !== undefined) {\n      return true\n    }\n    parent = parent.parent;\n  }\n  return false\n}\n\nfunction parseModifiers (name) {\n  var match = name.match(modifierRE);\n  if (match) {\n    var ret = {};\n    match.forEach(function (m) { ret[m.slice(1)] = true; });\n    return ret\n  }\n}\n\nfunction makeAttrsMap (attrs) {\n  var map = {};\n  for (var i = 0, l = attrs.length; i < l; i++) {\n    if (\n      process.env.NODE_ENV !== 'production' &&\n      map[attrs[i].name] && !isIE && !isEdge\n    ) {\n      warn$2('duplicate attribute: ' + attrs[i].name);\n    }\n    map[attrs[i].name] = attrs[i].value;\n  }\n  return map\n}\n\n// for script (e.g. type=\"x/template\") or style, do not decode content\nfunction isTextTag (el) {\n  return el.tag === 'script' || el.tag === 'style'\n}\n\nfunction isForbiddenTag (el) {\n  return (\n    el.tag === 'style' ||\n    (el.tag === 'script' && (\n      !el.attrsMap.type ||\n      el.attrsMap.type === 'text/javascript'\n    ))\n  )\n}\n\nvar ieNSBug = /^xmlns:NS\\d+/;\nvar ieNSPrefix = /^NS\\d+:/;\n\n/* istanbul ignore next */\nfunction guardIESVGBug (attrs) {\n  var res = [];\n  for (var i = 0; i < attrs.length; i++) {\n    var attr = attrs[i];\n    if (!ieNSBug.test(attr.name)) {\n      attr.name = attr.name.replace(ieNSPrefix, '');\n      res.push(attr);\n    }\n  }\n  return res\n}\n\nfunction checkForAliasModel (el, value) {\n  var _el = el;\n  while (_el) {\n    if (_el.for && _el.alias === value) {\n      warn$2(\n        \"<\" + (el.tag) + \" v-model=\\\"\" + value + \"\\\">: \" +\n        \"You are binding v-model directly to a v-for iteration alias. \" +\n        \"This will not be able to modify the v-for source array because \" +\n        \"writing to the alias is like modifying a function local variable. \" +\n        \"Consider using an array of objects and use v-model on an object property instead.\"\n      );\n    }\n    _el = _el.parent;\n  }\n}\n\n/*  */\n\nfunction preTransformNode (el, options) {\n  if (el.tag === 'input') {\n    var map = el.attrsMap;\n    if (!map['v-model']) {\n      return\n    }\n\n    var typeBinding;\n    if (map[':type'] || map['v-bind:type']) {\n      typeBinding = getBindingAttr(el, 'type');\n    }\n    if (!map.type && !typeBinding && map['v-bind']) {\n      typeBinding = \"(\" + (map['v-bind']) + \").type\";\n    }\n\n    if (typeBinding) {\n      var ifCondition = getAndRemoveAttr(el, 'v-if', true);\n      var ifConditionExtra = ifCondition ? (\"&&(\" + ifCondition + \")\") : \"\";\n      var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;\n      var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);\n      // 1. checkbox\n      var branch0 = cloneASTElement(el);\n      // process for on the main node\n      processFor(branch0);\n      addRawAttr(branch0, 'type', 'checkbox');\n      processElement(branch0, options);\n      branch0.processed = true; // prevent it from double-processed\n      branch0.if = \"(\" + typeBinding + \")==='checkbox'\" + ifConditionExtra;\n      addIfCondition(branch0, {\n        exp: branch0.if,\n        block: branch0\n      });\n      // 2. add radio else-if condition\n      var branch1 = cloneASTElement(el);\n      getAndRemoveAttr(branch1, 'v-for', true);\n      addRawAttr(branch1, 'type', 'radio');\n      processElement(branch1, options);\n      addIfCondition(branch0, {\n        exp: \"(\" + typeBinding + \")==='radio'\" + ifConditionExtra,\n        block: branch1\n      });\n      // 3. other\n      var branch2 = cloneASTElement(el);\n      getAndRemoveAttr(branch2, 'v-for', true);\n      addRawAttr(branch2, ':type', typeBinding);\n      processElement(branch2, options);\n      addIfCondition(branch0, {\n        exp: ifCondition,\n        block: branch2\n      });\n\n      if (hasElse) {\n        branch0.else = true;\n      } else if (elseIfCondition) {\n        branch0.elseif = elseIfCondition;\n      }\n\n      return branch0\n    }\n  }\n}\n\nfunction cloneASTElement (el) {\n  return createASTElement(el.tag, el.attrsList.slice(), el.parent)\n}\n\nvar model$1 = {\n  preTransformNode: preTransformNode\n};\n\nvar modules$1 = [\n  klass$1,\n  style$1,\n  model$1\n];\n\n/*  */\n\nfunction text (el, dir) {\n  if (dir.value) {\n    addProp(el, 'textContent', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\n/*  */\n\nfunction html (el, dir) {\n  if (dir.value) {\n    addProp(el, 'innerHTML', (\"_s(\" + (dir.value) + \")\"));\n  }\n}\n\nvar directives$1 = {\n  model: model,\n  text: text,\n  html: html\n};\n\n/*  */\n\nvar baseOptions = {\n  expectHTML: true,\n  modules: modules$1,\n  directives: directives$1,\n  isPreTag: isPreTag,\n  isUnaryTag: isUnaryTag,\n  mustUseProp: mustUseProp,\n  canBeLeftOpenTag: canBeLeftOpenTag,\n  isReservedTag: isReservedTag,\n  getTagNamespace: getTagNamespace,\n  staticKeys: genStaticKeys(modules$1)\n};\n\n/*  */\n\nvar isStaticKey;\nvar isPlatformReservedTag;\n\nvar genStaticKeysCached = cached(genStaticKeys$1);\n\n/**\n * Goal of the optimizer: walk the generated template AST tree\n * and detect sub-trees that are purely static, i.e. parts of\n * the DOM that never needs to change.\n *\n * Once we detect these sub-trees, we can:\n *\n * 1. Hoist them into constants, so that we no longer need to\n *    create fresh nodes for them on each re-render;\n * 2. Completely skip them in the patching process.\n */\nfunction optimize (root, options) {\n  if (!root) { return }\n  isStaticKey = genStaticKeysCached(options.staticKeys || '');\n  isPlatformReservedTag = options.isReservedTag || no;\n  // first pass: mark all non-static nodes.\n  markStatic$1(root);\n  // second pass: mark static roots.\n  markStaticRoots(root, false);\n}\n\nfunction genStaticKeys$1 (keys) {\n  return makeMap(\n    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +\n    (keys ? ',' + keys : '')\n  )\n}\n\nfunction markStatic$1 (node) {\n  node.static = isStatic(node);\n  if (node.type === 1) {\n    // do not make component slot content static. this avoids\n    // 1. components not able to mutate slot nodes\n    // 2. static slot content fails for hot-reloading\n    if (\n      !isPlatformReservedTag(node.tag) &&\n      node.tag !== 'slot' &&\n      node.attrsMap['inline-template'] == null\n    ) {\n      return\n    }\n    for (var i = 0, l = node.children.length; i < l; i++) {\n      var child = node.children[i];\n      markStatic$1(child);\n      if (!child.static) {\n        node.static = false;\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        var block = node.ifConditions[i$1].block;\n        markStatic$1(block);\n        if (!block.static) {\n          node.static = false;\n        }\n      }\n    }\n  }\n}\n\nfunction markStaticRoots (node, isInFor) {\n  if (node.type === 1) {\n    if (node.static || node.once) {\n      node.staticInFor = isInFor;\n    }\n    // For a node to qualify as a static root, it should have children that\n    // are not just static text. Otherwise the cost of hoisting out will\n    // outweigh the benefits and it's better off to just always render it fresh.\n    if (node.static && node.children.length && !(\n      node.children.length === 1 &&\n      node.children[0].type === 3\n    )) {\n      node.staticRoot = true;\n      return\n    } else {\n      node.staticRoot = false;\n    }\n    if (node.children) {\n      for (var i = 0, l = node.children.length; i < l; i++) {\n        markStaticRoots(node.children[i], isInFor || !!node.for);\n      }\n    }\n    if (node.ifConditions) {\n      for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {\n        markStaticRoots(node.ifConditions[i$1].block, isInFor);\n      }\n    }\n  }\n}\n\nfunction isStatic (node) {\n  if (node.type === 2) { // expression\n    return false\n  }\n  if (node.type === 3) { // text\n    return true\n  }\n  return !!(node.pre || (\n    !node.hasBindings && // no dynamic bindings\n    !node.if && !node.for && // not v-if or v-for or v-else\n    !isBuiltInTag(node.tag) && // not a built-in\n    isPlatformReservedTag(node.tag) && // not a component\n    !isDirectChildOfTemplateFor(node) &&\n    Object.keys(node).every(isStaticKey)\n  ))\n}\n\nfunction isDirectChildOfTemplateFor (node) {\n  while (node.parent) {\n    node = node.parent;\n    if (node.tag !== 'template') {\n      return false\n    }\n    if (node.for) {\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\nvar fnExpRE = /^([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/;\nvar simplePathRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?']|\\[\"[^\"]*?\"]|\\[\\d+]|\\[[A-Za-z_$][\\w$]*])*$/;\n\n// KeyboardEvent.keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40,\n  'delete': [8, 46]\n};\n\n// KeyboardEvent.key aliases\nvar keyNames = {\n  // #7880: IE11 and Edge use `Esc` for Escape key name.\n  esc: ['Esc', 'Escape'],\n  tab: 'Tab',\n  enter: 'Enter',\n  // #9112: IE11 uses `Spacebar` for Space key name.\n  space: [' ', 'Spacebar'],\n  // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.\n  up: ['Up', 'ArrowUp'],\n  left: ['Left', 'ArrowLeft'],\n  right: ['Right', 'ArrowRight'],\n  down: ['Down', 'ArrowDown'],\n  // #9112: IE11 uses `Del` for Delete key name.\n  'delete': ['Backspace', 'Delete', 'Del']\n};\n\n// #4868: modifiers that prevent the execution of the listener\n// need to explicitly return null so that we can determine whether to remove\n// the listener for .once\nvar genGuard = function (condition) { return (\"if(\" + condition + \")return null;\"); };\n\nvar modifierCode = {\n  stop: '$event.stopPropagation();',\n  prevent: '$event.preventDefault();',\n  self: genGuard(\"$event.target !== $event.currentTarget\"),\n  ctrl: genGuard(\"!$event.ctrlKey\"),\n  shift: genGuard(\"!$event.shiftKey\"),\n  alt: genGuard(\"!$event.altKey\"),\n  meta: genGuard(\"!$event.metaKey\"),\n  left: genGuard(\"'button' in $event && $event.button !== 0\"),\n  middle: genGuard(\"'button' in $event && $event.button !== 1\"),\n  right: genGuard(\"'button' in $event && $event.button !== 2\")\n};\n\nfunction genHandlers (\n  events,\n  isNative\n) {\n  var res = isNative ? 'nativeOn:{' : 'on:{';\n  for (var name in events) {\n    res += \"\\\"\" + name + \"\\\":\" + (genHandler(name, events[name])) + \",\";\n  }\n  return res.slice(0, -1) + '}'\n}\n\nfunction genHandler (\n  name,\n  handler\n) {\n  if (!handler) {\n    return 'function(){}'\n  }\n\n  if (Array.isArray(handler)) {\n    return (\"[\" + (handler.map(function (handler) { return genHandler(name, handler); }).join(',')) + \"]\")\n  }\n\n  var isMethodPath = simplePathRE.test(handler.value);\n  var isFunctionExpression = fnExpRE.test(handler.value);\n\n  if (!handler.modifiers) {\n    if (isMethodPath || isFunctionExpression) {\n      return handler.value\n    }\n    return (\"function($event){\" + (handler.value) + \"}\") // inline statement\n  } else {\n    var code = '';\n    var genModifierCode = '';\n    var keys = [];\n    for (var key in handler.modifiers) {\n      if (modifierCode[key]) {\n        genModifierCode += modifierCode[key];\n        // left/right\n        if (keyCodes[key]) {\n          keys.push(key);\n        }\n      } else if (key === 'exact') {\n        var modifiers = (handler.modifiers);\n        genModifierCode += genGuard(\n          ['ctrl', 'shift', 'alt', 'meta']\n            .filter(function (keyModifier) { return !modifiers[keyModifier]; })\n            .map(function (keyModifier) { return (\"$event.\" + keyModifier + \"Key\"); })\n            .join('||')\n        );\n      } else {\n        keys.push(key);\n      }\n    }\n    if (keys.length) {\n      code += genKeyFilter(keys);\n    }\n    // Make sure modifiers like prevent and stop get executed after key filtering\n    if (genModifierCode) {\n      code += genModifierCode;\n    }\n    var handlerCode = isMethodPath\n      ? (\"return \" + (handler.value) + \"($event)\")\n      : isFunctionExpression\n        ? (\"return (\" + (handler.value) + \")($event)\")\n        : handler.value;\n    return (\"function($event){\" + code + handlerCode + \"}\")\n  }\n}\n\nfunction genKeyFilter (keys) {\n  return (\"if(!('button' in $event)&&\" + (keys.map(genFilterCode).join('&&')) + \")return null;\")\n}\n\nfunction genFilterCode (key) {\n  var keyVal = parseInt(key, 10);\n  if (keyVal) {\n    return (\"$event.keyCode!==\" + keyVal)\n  }\n  var keyCode = keyCodes[key];\n  var keyName = keyNames[key];\n  return (\n    \"_k($event.keyCode,\" +\n    (JSON.stringify(key)) + \",\" +\n    (JSON.stringify(keyCode)) + \",\" +\n    \"$event.key,\" +\n    \"\" + (JSON.stringify(keyName)) +\n    \")\"\n  )\n}\n\n/*  */\n\nfunction on (el, dir) {\n  if (process.env.NODE_ENV !== 'production' && dir.modifiers) {\n    warn(\"v-on without argument does not support modifiers.\");\n  }\n  el.wrapListeners = function (code) { return (\"_g(\" + code + \",\" + (dir.value) + \")\"); };\n}\n\n/*  */\n\nfunction bind$1 (el, dir) {\n  el.wrapData = function (code) {\n    return (\"_b(\" + code + \",'\" + (el.tag) + \"',\" + (dir.value) + \",\" + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + \")\")\n  };\n}\n\n/*  */\n\nvar baseDirectives = {\n  on: on,\n  bind: bind$1,\n  cloak: noop\n};\n\n/*  */\n\n\n\n\n\nvar CodegenState = function CodegenState (options) {\n  this.options = options;\n  this.warn = options.warn || baseWarn;\n  this.transforms = pluckModuleFunction(options.modules, 'transformCode');\n  this.dataGenFns = pluckModuleFunction(options.modules, 'genData');\n  this.directives = extend(extend({}, baseDirectives), options.directives);\n  var isReservedTag = options.isReservedTag || no;\n  this.maybeComponent = function (el) { return !(isReservedTag(el.tag) && !el.component); };\n  this.onceId = 0;\n  this.staticRenderFns = [];\n  this.pre = false;\n};\n\n\n\nfunction generate (\n  ast,\n  options\n) {\n  var state = new CodegenState(options);\n  var code = ast ? genElement(ast, state) : '_c(\"div\")';\n  return {\n    render: (\"with(this){return \" + code + \"}\"),\n    staticRenderFns: state.staticRenderFns\n  }\n}\n\nfunction genElement (el, state) {\n  if (el.parent) {\n    el.pre = el.pre || el.parent.pre;\n  }\n\n  if (el.staticRoot && !el.staticProcessed) {\n    return genStatic(el, state)\n  } else if (el.once && !el.onceProcessed) {\n    return genOnce(el, state)\n  } else if (el.for && !el.forProcessed) {\n    return genFor(el, state)\n  } else if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.tag === 'template' && !el.slotTarget && !state.pre) {\n    return genChildren(el, state) || 'void 0'\n  } else if (el.tag === 'slot') {\n    return genSlot(el, state)\n  } else {\n    // component or element\n    var code;\n    if (el.component) {\n      code = genComponent(el.component, el, state);\n    } else {\n      var data;\n      if (!el.plain || (el.pre && state.maybeComponent(el))) {\n        data = genData$2(el, state);\n      }\n\n      var children = el.inlineTemplate ? null : genChildren(el, state, true);\n      code = \"_c('\" + (el.tag) + \"'\" + (data ? (\",\" + data) : '') + (children ? (\",\" + children) : '') + \")\";\n    }\n    // module transforms\n    for (var i = 0; i < state.transforms.length; i++) {\n      code = state.transforms[i](el, code);\n    }\n    return code\n  }\n}\n\n// hoist static sub-trees out\nfunction genStatic (el, state) {\n  el.staticProcessed = true;\n  // Some elements (templates) need to behave differently inside of a v-pre\n  // node.  All pre nodes are static roots, so we can use this as a location to\n  // wrap a state change and reset it upon exiting the pre node.\n  var originalPreState = state.pre;\n  if (el.pre) {\n    state.pre = el.pre;\n  }\n  state.staticRenderFns.push((\"with(this){return \" + (genElement(el, state)) + \"}\"));\n  state.pre = originalPreState;\n  return (\"_m(\" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + \")\")\n}\n\n// v-once\nfunction genOnce (el, state) {\n  el.onceProcessed = true;\n  if (el.if && !el.ifProcessed) {\n    return genIf(el, state)\n  } else if (el.staticInFor) {\n    var key = '';\n    var parent = el.parent;\n    while (parent) {\n      if (parent.for) {\n        key = parent.key;\n        break\n      }\n      parent = parent.parent;\n    }\n    if (!key) {\n      process.env.NODE_ENV !== 'production' && state.warn(\n        \"v-once can only be used inside v-for that is keyed. \"\n      );\n      return genElement(el, state)\n    }\n    return (\"_o(\" + (genElement(el, state)) + \",\" + (state.onceId++) + \",\" + key + \")\")\n  } else {\n    return genStatic(el, state)\n  }\n}\n\nfunction genIf (\n  el,\n  state,\n  altGen,\n  altEmpty\n) {\n  el.ifProcessed = true; // avoid recursion\n  return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)\n}\n\nfunction genIfConditions (\n  conditions,\n  state,\n  altGen,\n  altEmpty\n) {\n  if (!conditions.length) {\n    return altEmpty || '_e()'\n  }\n\n  var condition = conditions.shift();\n  if (condition.exp) {\n    return (\"(\" + (condition.exp) + \")?\" + (genTernaryExp(condition.block)) + \":\" + (genIfConditions(conditions, state, altGen, altEmpty)))\n  } else {\n    return (\"\" + (genTernaryExp(condition.block)))\n  }\n\n  // v-if with v-once should generate code like (a)?_m(0):_m(1)\n  function genTernaryExp (el) {\n    return altGen\n      ? altGen(el, state)\n      : el.once\n        ? genOnce(el, state)\n        : genElement(el, state)\n  }\n}\n\nfunction genFor (\n  el,\n  state,\n  altGen,\n  altHelper\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n\n  if (process.env.NODE_ENV !== 'production' &&\n    state.maybeComponent(el) &&\n    el.tag !== 'slot' &&\n    el.tag !== 'template' &&\n    !el.key\n  ) {\n    state.warn(\n      \"<\" + (el.tag) + \" v-for=\\\"\" + alias + \" in \" + exp + \"\\\">: component lists rendered with \" +\n      \"v-for should have explicit keys. \" +\n      \"See https://vuejs.org/guide/list.html#key for more info.\",\n      true /* tip */\n    );\n  }\n\n  el.forProcessed = true; // avoid recursion\n  return (altHelper || '_l') + \"((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + ((altGen || genElement)(el, state)) +\n    '})'\n}\n\nfunction genData$2 (el, state) {\n  var data = '{';\n\n  // directives first.\n  // directives may mutate the el's other properties before they are generated.\n  var dirs = genDirectives(el, state);\n  if (dirs) { data += dirs + ','; }\n\n  // key\n  if (el.key) {\n    data += \"key:\" + (el.key) + \",\";\n  }\n  // ref\n  if (el.ref) {\n    data += \"ref:\" + (el.ref) + \",\";\n  }\n  if (el.refInFor) {\n    data += \"refInFor:true,\";\n  }\n  // pre\n  if (el.pre) {\n    data += \"pre:true,\";\n  }\n  // record original tag name for components using \"is\" attribute\n  if (el.component) {\n    data += \"tag:\\\"\" + (el.tag) + \"\\\",\";\n  }\n  // module data generation functions\n  for (var i = 0; i < state.dataGenFns.length; i++) {\n    data += state.dataGenFns[i](el);\n  }\n  // attributes\n  if (el.attrs) {\n    data += \"attrs:{\" + (genProps(el.attrs)) + \"},\";\n  }\n  // DOM props\n  if (el.props) {\n    data += \"domProps:{\" + (genProps(el.props)) + \"},\";\n  }\n  // event handlers\n  if (el.events) {\n    data += (genHandlers(el.events, false)) + \",\";\n  }\n  if (el.nativeEvents) {\n    data += (genHandlers(el.nativeEvents, true)) + \",\";\n  }\n  // slot target\n  // only for non-scoped slots\n  if (el.slotTarget && !el.slotScope) {\n    data += \"slot:\" + (el.slotTarget) + \",\";\n  }\n  // scoped slots\n  if (el.scopedSlots) {\n    data += (genScopedSlots(el.scopedSlots, state)) + \",\";\n  }\n  // component v-model\n  if (el.model) {\n    data += \"model:{value:\" + (el.model.value) + \",callback:\" + (el.model.callback) + \",expression:\" + (el.model.expression) + \"},\";\n  }\n  // inline-template\n  if (el.inlineTemplate) {\n    var inlineTemplate = genInlineTemplate(el, state);\n    if (inlineTemplate) {\n      data += inlineTemplate + \",\";\n    }\n  }\n  data = data.replace(/,$/, '') + '}';\n  // v-bind data wrap\n  if (el.wrapData) {\n    data = el.wrapData(data);\n  }\n  // v-on data wrap\n  if (el.wrapListeners) {\n    data = el.wrapListeners(data);\n  }\n  return data\n}\n\nfunction genDirectives (el, state) {\n  var dirs = el.directives;\n  if (!dirs) { return }\n  var res = 'directives:[';\n  var hasRuntime = false;\n  var i, l, dir, needRuntime;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    dir = dirs[i];\n    needRuntime = true;\n    var gen = state.directives[dir.name];\n    if (gen) {\n      // compile-time directive that manipulates AST.\n      // returns true if it also needs a runtime counterpart.\n      needRuntime = !!gen(el, dir, state.warn);\n    }\n    if (needRuntime) {\n      hasRuntime = true;\n      res += \"{name:\\\"\" + (dir.name) + \"\\\",rawName:\\\"\" + (dir.rawName) + \"\\\"\" + (dir.value ? (\",value:(\" + (dir.value) + \"),expression:\" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (\",arg:\\\"\" + (dir.arg) + \"\\\"\") : '') + (dir.modifiers ? (\",modifiers:\" + (JSON.stringify(dir.modifiers))) : '') + \"},\";\n    }\n  }\n  if (hasRuntime) {\n    return res.slice(0, -1) + ']'\n  }\n}\n\nfunction genInlineTemplate (el, state) {\n  var ast = el.children[0];\n  if (process.env.NODE_ENV !== 'production' && (\n    el.children.length !== 1 || ast.type !== 1\n  )) {\n    state.warn('Inline-template components must have exactly one child element.');\n  }\n  if (ast.type === 1) {\n    var inlineRenderFns = generate(ast, state.options);\n    return (\"inlineTemplate:{render:function(){\" + (inlineRenderFns.render) + \"},staticRenderFns:[\" + (inlineRenderFns.staticRenderFns.map(function (code) { return (\"function(){\" + code + \"}\"); }).join(',')) + \"]}\")\n  }\n}\n\nfunction genScopedSlots (\n  slots,\n  state\n) {\n  return (\"scopedSlots:_u([\" + (Object.keys(slots).map(function (key) {\n      return genScopedSlot(key, slots[key], state)\n    }).join(',')) + \"])\")\n}\n\nfunction genScopedSlot (\n  key,\n  el,\n  state\n) {\n  if (el.for && !el.forProcessed) {\n    return genForScopedSlot(key, el, state)\n  }\n  var fn = \"function(\" + (String(el.slotScope)) + \"){\" +\n    \"return \" + (el.tag === 'template'\n      ? el.if\n        ? (\"(\" + (el.if) + \")?\" + (genChildren(el, state) || 'undefined') + \":undefined\")\n        : genChildren(el, state) || 'undefined'\n      : genElement(el, state)) + \"}\";\n  return (\"{key:\" + key + \",fn:\" + fn + \"}\")\n}\n\nfunction genForScopedSlot (\n  key,\n  el,\n  state\n) {\n  var exp = el.for;\n  var alias = el.alias;\n  var iterator1 = el.iterator1 ? (\",\" + (el.iterator1)) : '';\n  var iterator2 = el.iterator2 ? (\",\" + (el.iterator2)) : '';\n  el.forProcessed = true; // avoid recursion\n  return \"_l((\" + exp + \"),\" +\n    \"function(\" + alias + iterator1 + iterator2 + \"){\" +\n      \"return \" + (genScopedSlot(key, el, state)) +\n    '})'\n}\n\nfunction genChildren (\n  el,\n  state,\n  checkSkip,\n  altGenElement,\n  altGenNode\n) {\n  var children = el.children;\n  if (children.length) {\n    var el$1 = children[0];\n    // optimize single v-for\n    if (children.length === 1 &&\n      el$1.for &&\n      el$1.tag !== 'template' &&\n      el$1.tag !== 'slot'\n    ) {\n      var normalizationType = checkSkip\n        ? state.maybeComponent(el$1) ? \",1\" : \",0\"\n        : \"\";\n      return (\"\" + ((altGenElement || genElement)(el$1, state)) + normalizationType)\n    }\n    var normalizationType$1 = checkSkip\n      ? getNormalizationType(children, state.maybeComponent)\n      : 0;\n    var gen = altGenNode || genNode;\n    return (\"[\" + (children.map(function (c) { return gen(c, state); }).join(',')) + \"]\" + (normalizationType$1 ? (\",\" + normalizationType$1) : ''))\n  }\n}\n\n// determine the normalization needed for the children array.\n// 0: no normalization needed\n// 1: simple normalization needed (possible 1-level deep nested array)\n// 2: full normalization needed\nfunction getNormalizationType (\n  children,\n  maybeComponent\n) {\n  var res = 0;\n  for (var i = 0; i < children.length; i++) {\n    var el = children[i];\n    if (el.type !== 1) {\n      continue\n    }\n    if (needsNormalization(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return needsNormalization(c.block); }))) {\n      res = 2;\n      break\n    }\n    if (maybeComponent(el) ||\n        (el.ifConditions && el.ifConditions.some(function (c) { return maybeComponent(c.block); }))) {\n      res = 1;\n    }\n  }\n  return res\n}\n\nfunction needsNormalization (el) {\n  return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'\n}\n\nfunction genNode (node, state) {\n  if (node.type === 1) {\n    return genElement(node, state)\n  } else if (node.type === 3 && node.isComment) {\n    return genComment(node)\n  } else {\n    return genText(node)\n  }\n}\n\nfunction genText (text) {\n  return (\"_v(\" + (text.type === 2\n    ? text.expression // no need for () because already wrapped in _s()\n    : transformSpecialNewlines(JSON.stringify(text.text))) + \")\")\n}\n\nfunction genComment (comment) {\n  return (\"_e(\" + (JSON.stringify(comment.text)) + \")\")\n}\n\nfunction genSlot (el, state) {\n  var slotName = el.slotName || '\"default\"';\n  var children = genChildren(el, state);\n  var res = \"_t(\" + slotName + (children ? (\",\" + children) : '');\n  var attrs = el.attrs && (\"{\" + (el.attrs.map(function (a) { return ((camelize(a.name)) + \":\" + (a.value)); }).join(',')) + \"}\");\n  var bind$$1 = el.attrsMap['v-bind'];\n  if ((attrs || bind$$1) && !children) {\n    res += \",null\";\n  }\n  if (attrs) {\n    res += \",\" + attrs;\n  }\n  if (bind$$1) {\n    res += (attrs ? '' : ',null') + \",\" + bind$$1;\n  }\n  return res + ')'\n}\n\n// componentName is el.component, take it as argument to shun flow's pessimistic refinement\nfunction genComponent (\n  componentName,\n  el,\n  state\n) {\n  var children = el.inlineTemplate ? null : genChildren(el, state, true);\n  return (\"_c(\" + componentName + \",\" + (genData$2(el, state)) + (children ? (\",\" + children) : '') + \")\")\n}\n\nfunction genProps (props) {\n  var res = '';\n  for (var i = 0; i < props.length; i++) {\n    var prop = props[i];\n    /* istanbul ignore if */\n    {\n      res += \"\\\"\" + (prop.name) + \"\\\":\" + (transformSpecialNewlines(prop.value)) + \",\";\n    }\n  }\n  return res.slice(0, -1)\n}\n\n// #3895, #4268\nfunction transformSpecialNewlines (text) {\n  return text\n    .replace(/\\u2028/g, '\\\\u2028')\n    .replace(/\\u2029/g, '\\\\u2029')\n}\n\n/*  */\n\n// these keywords should not appear inside expressions, but operators like\n// typeof, instanceof and in are allowed\nvar prohibitedKeywordRE = new RegExp('\\\\b' + (\n  'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +\n  'super,throw,while,yield,delete,export,import,return,switch,default,' +\n  'extends,finally,continue,debugger,function,arguments'\n).split(',').join('\\\\b|\\\\b') + '\\\\b');\n\n// these unary operators should not be used as property/method names\nvar unaryOperatorsRE = new RegExp('\\\\b' + (\n  'delete,typeof,void'\n).split(',').join('\\\\s*\\\\([^\\\\)]*\\\\)|\\\\b') + '\\\\s*\\\\([^\\\\)]*\\\\)');\n\n// strip strings in expressions\nvar stripStringRE = /'(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`/g;\n\n// detect problematic expressions in a template\nfunction detectErrors (ast) {\n  var errors = [];\n  if (ast) {\n    checkNode(ast, errors);\n  }\n  return errors\n}\n\nfunction checkNode (node, errors) {\n  if (node.type === 1) {\n    for (var name in node.attrsMap) {\n      if (dirRE.test(name)) {\n        var value = node.attrsMap[name];\n        if (value) {\n          if (name === 'v-for') {\n            checkFor(node, (\"v-for=\\\"\" + value + \"\\\"\"), errors);\n          } else if (onRE.test(name)) {\n            checkEvent(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          } else {\n            checkExpression(value, (name + \"=\\\"\" + value + \"\\\"\"), errors);\n          }\n        }\n      }\n    }\n    if (node.children) {\n      for (var i = 0; i < node.children.length; i++) {\n        checkNode(node.children[i], errors);\n      }\n    }\n  } else if (node.type === 2) {\n    checkExpression(node.expression, node.text, errors);\n  }\n}\n\nfunction checkEvent (exp, text, errors) {\n  var stipped = exp.replace(stripStringRE, '');\n  var keywordMatch = stipped.match(unaryOperatorsRE);\n  if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {\n    errors.push(\n      \"avoid using JavaScript unary operator as property name: \" +\n      \"\\\"\" + (keywordMatch[0]) + \"\\\" in expression \" + (text.trim())\n    );\n  }\n  checkExpression(exp, text, errors);\n}\n\nfunction checkFor (node, text, errors) {\n  checkExpression(node.for || '', text, errors);\n  checkIdentifier(node.alias, 'v-for alias', text, errors);\n  checkIdentifier(node.iterator1, 'v-for iterator', text, errors);\n  checkIdentifier(node.iterator2, 'v-for iterator', text, errors);\n}\n\nfunction checkIdentifier (\n  ident,\n  type,\n  text,\n  errors\n) {\n  if (typeof ident === 'string') {\n    try {\n      new Function((\"var \" + ident + \"=_\"));\n    } catch (e) {\n      errors.push((\"invalid \" + type + \" \\\"\" + ident + \"\\\" in expression: \" + (text.trim())));\n    }\n  }\n}\n\nfunction checkExpression (exp, text, errors) {\n  try {\n    new Function((\"return \" + exp));\n  } catch (e) {\n    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);\n    if (keywordMatch) {\n      errors.push(\n        \"avoid using JavaScript keyword as property name: \" +\n        \"\\\"\" + (keywordMatch[0]) + \"\\\"\\n  Raw expression: \" + (text.trim())\n      );\n    } else {\n      errors.push(\n        \"invalid expression: \" + (e.message) + \" in\\n\\n\" +\n        \"    \" + exp + \"\\n\\n\" +\n        \"  Raw expression: \" + (text.trim()) + \"\\n\"\n      );\n    }\n  }\n}\n\n/*  */\n\n\n\nfunction createFunction (code, errors) {\n  try {\n    return new Function(code)\n  } catch (err) {\n    errors.push({ err: err, code: code });\n    return noop\n  }\n}\n\nfunction createCompileToFunctionFn (compile) {\n  var cache = Object.create(null);\n\n  return function compileToFunctions (\n    template,\n    options,\n    vm\n  ) {\n    options = extend({}, options);\n    var warn$$1 = options.warn || warn;\n    delete options.warn;\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      // detect possible CSP restriction\n      try {\n        new Function('return 1');\n      } catch (e) {\n        if (e.toString().match(/unsafe-eval|CSP/)) {\n          warn$$1(\n            'It seems you are using the standalone build of Vue.js in an ' +\n            'environment with Content Security Policy that prohibits unsafe-eval. ' +\n            'The template compiler cannot work in this environment. Consider ' +\n            'relaxing the policy to allow unsafe-eval or pre-compiling your ' +\n            'templates into render functions.'\n          );\n        }\n      }\n    }\n\n    // check cache\n    var key = options.delimiters\n      ? String(options.delimiters) + template\n      : template;\n    if (cache[key]) {\n      return cache[key]\n    }\n\n    // compile\n    var compiled = compile(template, options);\n\n    // check compilation errors/tips\n    if (process.env.NODE_ENV !== 'production') {\n      if (compiled.errors && compiled.errors.length) {\n        warn$$1(\n          \"Error compiling template:\\n\\n\" + template + \"\\n\\n\" +\n          compiled.errors.map(function (e) { return (\"- \" + e); }).join('\\n') + '\\n',\n          vm\n        );\n      }\n      if (compiled.tips && compiled.tips.length) {\n        compiled.tips.forEach(function (msg) { return tip(msg, vm); });\n      }\n    }\n\n    // turn code into functions\n    var res = {};\n    var fnGenErrors = [];\n    res.render = createFunction(compiled.render, fnGenErrors);\n    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {\n      return createFunction(code, fnGenErrors)\n    });\n\n    // check function generation errors.\n    // this should only happen if there is a bug in the compiler itself.\n    // mostly for codegen development use\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production') {\n      if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {\n        warn$$1(\n          \"Failed to generate render function:\\n\\n\" +\n          fnGenErrors.map(function (ref) {\n            var err = ref.err;\n            var code = ref.code;\n\n            return ((err.toString()) + \" in\\n\\n\" + code + \"\\n\");\n        }).join('\\n'),\n          vm\n        );\n      }\n    }\n\n    return (cache[key] = res)\n  }\n}\n\n/*  */\n\nfunction createCompilerCreator (baseCompile) {\n  return function createCompiler (baseOptions) {\n    function compile (\n      template,\n      options\n    ) {\n      var finalOptions = Object.create(baseOptions);\n      var errors = [];\n      var tips = [];\n      finalOptions.warn = function (msg, tip) {\n        (tip ? tips : errors).push(msg);\n      };\n\n      if (options) {\n        // merge custom modules\n        if (options.modules) {\n          finalOptions.modules =\n            (baseOptions.modules || []).concat(options.modules);\n        }\n        // merge custom directives\n        if (options.directives) {\n          finalOptions.directives = extend(\n            Object.create(baseOptions.directives || null),\n            options.directives\n          );\n        }\n        // copy other options\n        for (var key in options) {\n          if (key !== 'modules' && key !== 'directives') {\n            finalOptions[key] = options[key];\n          }\n        }\n      }\n\n      var compiled = baseCompile(template, finalOptions);\n      if (process.env.NODE_ENV !== 'production') {\n        errors.push.apply(errors, detectErrors(compiled.ast));\n      }\n      compiled.errors = errors;\n      compiled.tips = tips;\n      return compiled\n    }\n\n    return {\n      compile: compile,\n      compileToFunctions: createCompileToFunctionFn(compile)\n    }\n  }\n}\n\n/*  */\n\n// `createCompilerCreator` allows creating compilers that use alternative\n// parser/optimizer/codegen, e.g the SSR optimizing compiler.\n// Here we just export a default compiler using the default parts.\nvar createCompiler = createCompilerCreator(function baseCompile (\n  template,\n  options\n) {\n  var ast = parse(template.trim(), options);\n  if (options.optimize !== false) {\n    optimize(ast, options);\n  }\n  var code = generate(ast, options);\n  return {\n    ast: ast,\n    render: code.render,\n    staticRenderFns: code.staticRenderFns\n  }\n});\n\n/*  */\n\nvar ref$1 = createCompiler(baseOptions);\nvar compile = ref$1.compile;\nvar compileToFunctions = ref$1.compileToFunctions;\n\n/*  */\n\n// check whether current browser encodes a char inside attribute values\nvar div;\nfunction getShouldDecode (href) {\n  div = div || document.createElement('div');\n  div.innerHTML = href ? \"<a href=\\\"\\n\\\"/>\" : \"<div a=\\\"\\n\\\"/>\";\n  return div.innerHTML.indexOf('&#10;') > 0\n}\n\n// #3663: IE encodes newlines inside attribute values while other browsers don't\nvar shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;\n// #6828: chrome encodes content in a[href]\nvar shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;\n\n/*  */\n\nvar idToTemplate = cached(function (id) {\n  var el = query(id);\n  return el && el.innerHTML\n});\n\nvar mount = Vue.prototype.$mount;\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && query(el);\n\n  /* istanbul ignore if */\n  if (el === document.body || el === document.documentElement) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Do not mount Vue to <html> or <body> - mount to normal elements instead.\"\n    );\n    return this\n  }\n\n  var options = this.$options;\n  // resolve template/el and convert to render function\n  if (!options.render) {\n    var template = options.template;\n    if (template) {\n      if (typeof template === 'string') {\n        if (template.charAt(0) === '#') {\n          template = idToTemplate(template);\n          /* istanbul ignore if */\n          if (process.env.NODE_ENV !== 'production' && !template) {\n            warn(\n              (\"Template element not found or is empty: \" + (options.template)),\n              this\n            );\n          }\n        }\n      } else if (template.nodeType) {\n        template = template.innerHTML;\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          warn('invalid template option:' + template, this);\n        }\n        return this\n      }\n    } else if (el) {\n      template = getOuterHTML(el);\n    }\n    if (template) {\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile');\n      }\n\n      var ref = compileToFunctions(template, {\n        shouldDecodeNewlines: shouldDecodeNewlines,\n        shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,\n        delimiters: options.delimiters,\n        comments: options.comments\n      }, this);\n      var render = ref.render;\n      var staticRenderFns = ref.staticRenderFns;\n      options.render = render;\n      options.staticRenderFns = staticRenderFns;\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n        mark('compile end');\n        measure((\"vue \" + (this._name) + \" compile\"), 'compile', 'compile end');\n      }\n    }\n  }\n  return mount.call(this, el, hydrating)\n};\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n */\nfunction getOuterHTML (el) {\n  if (el.outerHTML) {\n    return el.outerHTML\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML\n  }\n}\n\nVue.compile = compileToFunctions;\n\nexport default Vue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue/dist/vue.esm.js\n// module id = 2\n// module chunks = 0","\"use strict\";\n\nexports.__esModule = true;\nexports.default = updatePicture;\n// adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\n\nfunction updatePicture(node) {\n  var drawingNode = node.getLayer() || node.getStage();\n  drawingNode && drawingNode.batchDraw();\n}\nmodule.exports = exports[\"default\"];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/utils/updatePicture.js\n// module id = 3\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 4\n// module chunks = 0","<template>\n  <div id=\"app\">\n\n      <div class=\"container\">\n <div class=\"row  \" >\n            \n                <div class=\"col-lg-5 \" >\n                    \n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">TITLE</span> </div>\n                    <input v-model=\"title\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n                    \n                 <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">SUb Title</span> </div>\n                    <input  v-model=\"subtitle\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>\n                    \n\n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">Author Name</span> </div>\n                    <input v-model=\"author\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>      \n                    \n                <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">Background Color</span> </div>\n                    <input v-model=\"background\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div>  \n\n                 <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">Publisher</span> </div>\n                    <input v-model=\"publisher\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div> \n                    \n\n                    \n                    \n                    \n             <div class=\"input-group mb-3\">\n              <div class=\"input-group-prepend\">\n                <label class=\"input-group-text\" for=\"inputGroupSelect01\">Year</label>\n              </div>\n              <select v-model=\"year\" class=\"custom-select years\" id=\"years\">\n                  \n                <option v-for=\"year in years\" :value=\"year\">{{year}}</option>\n                      \n                    \n                \n              </select>\n            </div>\n                    \n\n                    \n                    \n                    \n                    <div class=\"input-group mb-3\">\n                  <div class=\"input-group-prepend\">\n                    <span class=\"input-group-text\" id=\"inputGroup-sizing-default\" style=\"    font-family: cursive;\">Font Size</span> </div>\n                    <input v-model=\"font\" type=\"text\" class=\"form-control\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\">\n                </div> \n                \n  \n                    \n                    \n                    \n     </div>\n                <div class=\"col-lg-7 \" :style= \" { 'background-color' : background , 'border-radius': border+'px' }\"\n                      >\n                \n                    <div  class=\"container\">\n                    \n\n                        \n                    \n                        \n                        \n                        \n                        \n                        <div>\n    <v-stage ref=\"stage\" :config=\"stageSize\">\n      <v-layer>\n          \n          \n          \n          <v-text  :config=\"{text: this.title, fontSize: this.font , draggable:true}\"/>\n\n          <v-text  :config=\"{text: this.subtitle, fontSize: this.font , draggable:true}\"/>\n          <v-text   :config=\"{text: this.author, fontSize: this.font , draggable:true}\"/>\n          <v-text   :config=\"{text: this.publisher, fontSize: this.font , draggable:true}\"/>\n          <v-text   :config=\"{text: this.year, fontSize: this.font , draggable:true}\"/>\n      </v-layer>\n      <v-layer ref=\"dragLayer\"></v-layer>\n    </v-stage>\n  </div>\n                        \n                        \n                        \n                        \n                        \n                        \n                        \n                    </div>\n                    \n                </div>\n            \n            \n          \n         \n                \n        </div>\n        </div>\n      \n      \n            \n      <div class=\"card\">\n  <div class=\"card-body\" >\n      \n      <p :style=\"{'font-size' : font+ 'px'}\">\n   PLAY AND DESIGN YOUR BOOK COVER , YOU CAN DRAG AND DROP THE TEST WHEREVER YOU LIKE! ,\n      AND YOU CAN ALSO CHANGE THE FONT SIZE DYNAMICALLY!. TRY CHANGING THE SIZE NOW  \n          </p>\n  </div>\n      \n      \n  </div>\n      \n    </div>\n</template>\n\n<script>\n\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n    \n    \nexport default {\n  name: 'app',\n  data () {\n    return {\n         stageSize: {\n        width: width,\n        height: height\n      },\n  title: ' ' ,\n      \n      subtitle : ' ',\n      author : ' ',\n      background : ' ' ,\n      publisher : ' ',\n      year : ' ' ,\n        border : 50 ,\n        years : [] ,\n        font : 20 ,\n     \n    }\n  } ,\n\ncreated: function () {\n    \n  \n                            for (var i =0 ; i< 60 ; i++)\n                            {\n                            \n \n                                this.years.push( 2018-i );  \n    \n}\n    \n\n}\n}\n    \n \n\n</script>\n\n<style>\n    \n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","import Vue from 'vue'\nimport VueKonva from 'vue-konva'\nimport App from './App.vue'\n\n\nVue.use(VueKonva)\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 7\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _Stage = require('./components/Stage');\n\nvar _Stage2 = _interopRequireDefault(_Stage);\n\nvar _KonvaNode = require('./components/KonvaNode');\n\nvar _KonvaNode2 = _interopRequireDefault(_KonvaNode);\n\nvar _utils = require('./utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nif (typeof window !== 'undefined' && !window.Konva) {\n  require('konva');\n}\n\nvar KONVA_NODES = ['Layer', 'FastLayer', 'Group', 'Label', 'Rect', 'Circle', 'Ellipse', 'Wedge', 'Line', 'Sprite', 'Image', 'Text', 'TextPath', 'Star', 'Ring', 'Arc', 'Tag', 'Path', 'RegularPolygon', 'Arrow', 'Shape', 'Transformer'];\nvar components = {\n  Stage: _Stage2.default\n};\n\nKONVA_NODES.forEach(function (nodeName) {\n  components[nodeName] = (0, _KonvaNode2.default)();\n});\n\nvar VueKonva = _extends({}, components, {\n  install: function install(Vue) {\n    return Object.keys(components).forEach(function (k) {\n      Vue.component('' + _utils.componentPrefix + k, components[k]);\n    });\n  }\n});\n\nexports.default = VueKonva;\n\n\nif (typeof window !== 'undefined' && window.Vue) {\n  window.Vue.use(VueKonva);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/index.js\n// module id = 10\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _vue = require('vue');\n\nvar _vue2 = _interopRequireDefault(_vue);\n\nvar _utils = require('../utils');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = require('events');\n\nvar StageEmitter = function (_EventEmitter) {\n  _inherits(StageEmitter, _EventEmitter);\n\n  function StageEmitter() {\n    _classCallCheck(this, StageEmitter);\n\n    return _possibleConstructorReturn(this, _EventEmitter.apply(this, arguments));\n  }\n\n  return StageEmitter;\n}(EventEmitter);\n\nvar cacheConfig = {};\n\nexports.default = _vue2.default.component('v-stage', {\n  render: function render(createElement) {\n    return createElement('div', [this.config, this.$slots.default]);\n  },\n  props: {\n    config: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    }\n  },\n  data: function data() {\n    return {\n      _stage: {}\n    };\n  },\n  created: function created() {\n    this.StageEmitter = new StageEmitter();\n    this.StageEmitter.setMaxListeners(0);\n    this._stage = {};\n  },\n  mounted: function mounted() {\n    this._stage = new window.Konva.Stage({\n      width: this.config.width,\n      height: this.config.height,\n      container: this.$el\n    });\n    this.StageEmitter.emit('mounted', this._stage);\n    this.uploadKonva();\n  },\n  updated: function updated() {\n    this.uploadKonva();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this._stage.destroy();\n  },\n\n  methods: {\n    getNode: function getNode() {\n      return this._stage;\n    },\n    getStage: function getStage() {\n      return this._stage;\n    },\n    uploadKonva: function uploadKonva() {\n      var props = _extends({}, this.config, (0, _utils.createListener)(this.$listeners));\n      (0, _utils.applyNodeProps)(this, props, cacheConfig);\n      cacheConfig = props;\n    }\n  }\n});\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/components/Stage.js\n// module id = 11\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\nexports.default = applyNodeProps;\n\nvar _updatePicture = require('./updatePicture');\n\nvar _updatePicture2 = _interopRequireDefault(_updatePicture);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar propsToSkip = { key: true, style: true, elm: true, isRootInsert: true }; // adapted FROM: https://github.com/lavrton/react-konva/blob/master/src/react-konva-fiber.js\n\nvar EVENTS_NAMESPACE = '.vue-konva-event';\n\nfunction applyNodeProps(vueComponent) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var oldProps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if ('id' in props) {\n    var message = 'VueKonva: You are using \"id\" attribute for Konva node. In some very rare cases it may produce bugs. Currently we recommend not to use it and use \"name\" attribute instead.';\n    console.warn(message);\n  }\n  var instance = vueComponent._stage;\n  var updatedProps = {};\n  var hasUpdates = false;\n  for (var key in oldProps) {\n    if (propsToSkip[key]) {\n      continue;\n    }\n    var isEvent = key.slice(0, 2) === 'on';\n    var propChanged = oldProps[key] !== props[key];\n    if (isEvent && propChanged) {\n      var eventName = key.substr(2).toLowerCase();\n      if (eventName.substr(0, 7) === 'content') {\n        eventName = 'content' + eventName.substr(7, 1).toUpperCase() + eventName.substr(8);\n      }\n      instance.off(eventName + EVENTS_NAMESPACE, oldProps[key]);\n    }\n    var toRemove = !props.hasOwnProperty(key);\n    if (toRemove) {\n      instance.setAttr(key, undefined);\n    }\n  }\n  for (var _key in props) {\n    if (propsToSkip[_key]) {\n      continue;\n    }\n    var _isEvent = _key.slice(0, 2) === 'on';\n    var toAdd = oldProps[_key] !== props[_key];\n    if (_isEvent && toAdd) {\n      var _eventName = _key.substr(2).toLowerCase();\n      if (_eventName.substr(0, 7) === 'content') {\n        _eventName = 'content' + _eventName.substr(7, 1).toUpperCase() + _eventName.substr(8);\n      }\n      if (props[_key]) {\n        instance.off(_eventName + EVENTS_NAMESPACE);\n        instance.on(_eventName + EVENTS_NAMESPACE, props[_key]);\n      }\n    }\n    if (!_isEvent && props[_key] !== oldProps[_key]) {\n      hasUpdates = true;\n      updatedProps[_key] = props[_key];\n    }\n  }\n\n  if (hasUpdates) {\n    instance.setAttrs(updatedProps);\n    (0, _updatePicture2.default)(instance);\n    // var val, prop;\n    // for (prop in updatedProps) {\n    //   val = updatedProps[prop];\n    //   if (val instanceof window.Image && !val.complete) {\n    //     var node = instance;\n    //     val.addEventListener('load', function() {\n    //       var layer = node.getLayer();\n    //       layer && layer.batchDraw();\n    //     });\n    //   }\n    // }\n  }\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/utils/applyNodeProps.js\n// module id = 12\n// module chunks = 0","'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.default = function () {\n  var StageEmitter = function (_EventEmitter) {\n    _inherits(StageEmitter, _EventEmitter);\n\n    function StageEmitter() {\n      _classCallCheck(this, StageEmitter);\n\n      return _possibleConstructorReturn(this, _EventEmitter.apply(this, arguments));\n    }\n\n    return StageEmitter;\n  }(EventEmitter);\n\n  return {\n    render: function render(createElement) {\n      return createElement('div', [this.config, this.$slots.default]);\n    },\n\n    watch: {\n      // $attrs: {\n      //   handler(val) {\n      //     this.uploadKonva();\n      //   },\n      //   deep: true\n      // },\n      config: {\n        handler: function handler(val) {\n          this.uploadKonva();\n        },\n\n        deep: true\n      }\n    },\n    props: {\n      config: {\n        type: Object,\n        default: function _default() {\n          return {};\n        }\n      }\n    },\n    created: function created() {\n      this.StageEmitter = new StageEmitter();\n      this.StageEmitter.setMaxListeners(0);\n      this._stage = {};\n      this._parentStage = {};\n      this.name = this.$options._componentTag;\n    },\n    mounted: function mounted() {\n      var _this2 = this;\n\n      var parentKonva = (0, _utils.findParentKonva)(this);\n      var _parentStage = parentKonva._stage;\n\n      if (_parentStage && Object.keys(_parentStage).length) {\n        this.initKonva(_parentStage);\n      }\n      parentKonva.StageEmitter.on('mounted', function (parentStage) {\n        _this2.initKonva(parentStage);\n      });\n    },\n    updated: function updated() {\n      var _this3 = this;\n\n      this.uploadKonva();\n      // check indexes\n      // somehow this.$children are not ordered correctly\n      // so we have to dive-in into componentOptions of vnode\n      this.$children.forEach(function (component) {\n        var vnode = component.$vnode;\n        var index = _this3.$vnode.componentOptions.children.indexOf(vnode);\n        var konvaNode = (0, _utils.findKonvaNode)(component);\n        konvaNode.setZIndex(index);\n      });\n    },\n    destroyed: function destroyed() {\n      (0, _utils.updatePicture)(this._stage);\n      this._stage.destroy();\n      this._stage.off(EVENTS_NAMESPACE);\n    },\n\n    methods: {\n      getNode: function getNode() {\n        return this._stage;\n      },\n      getStage: function getStage() {\n        return this._stage;\n      },\n      initKonva: function initKonva(parentStage) {\n        var vm = this;\n        var tagName = this.name;\n        var nameNode = (0, _utils.getName)(tagName);\n        var NodeClass = window.Konva[nameNode];\n\n        if (!NodeClass) {\n          console.error('vue-konva error: Can not find node ' + nameNode);\n          return;\n        }\n\n        this._stage = new NodeClass();\n        this._stage.VueComponent = this;\n        var animationStage = this._stage.to.bind(this._stage);\n\n        this._stage.to = function (newConfig) {\n          animationStage(newConfig);\n          setTimeout(function () {\n            Object.keys(vm._stage.attrs).forEach(function (key) {\n              if (typeof vm._stage.attrs[key] !== 'function') {\n                vm.config[key] = vm._stage.attrs[key];\n              }\n            });\n          }, 200);\n        };\n\n        this.uploadKonva();\n        this.StageEmitter.emit('mounted', this._stage);\n        // const index = this.$parent.$children.indexOf(this);\n        parentStage.add(this._stage);\n        // this._stage.setZIndex(index);\n        (0, _utils.updatePicture)(parentStage);\n      },\n      uploadKonva: function uploadKonva() {\n        var oldProps = this.oldProps || {};\n        var props = _extends({}, this.$attrs, this.config, (0, _utils.createListener)(this.$listeners));\n        (0, _utils.applyNodeProps)(this, props, oldProps);\n        this.oldProps = props;\n      }\n    }\n  };\n};\n\nvar _utils = require('../utils');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar EventEmitter = require('events');\n\nvar EVENTS_NAMESPACE = '.vue-konva-event';\n\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-konva/lib/components/KonvaNode.js\n// module id = 13\n// module chunks = 0","/*\n * Konva JavaScript Framework v2.6.0\n * http://konvajs.github.io/\n * Licensed under the MIT\n * Date: Fri Dec 14 2018\n *\n * Original work Copyright (C) 2011 - 2013 by Eric Rowell (KineticJS)\n * Modified work Copyright (C) 2014 - present by Anton Lavrenov (Konva)\n *\n * @license\n */\n\n// runtime check for already included Konva\n(function() {\n  'use strict';\n  /**\n   * @namespace Konva\n   */\n\n  var PI_OVER_180 = Math.PI / 180;\n\n  var Konva = {\n    // public\n    version: '2.6.0',\n\n    // private\n    stages: [],\n    idCounter: 0,\n    ids: {},\n    names: {},\n    shapes: {},\n    listenClickTap: false,\n    inDblClickWindow: false,\n\n    isBrowser:\n      typeof window !== 'undefined' &&\n      // browser case\n      ({}.toString.call(window) === '[object Window]' ||\n        // electron case\n        {}.toString.call(window) === '[object global]'),\n\n    isUnminified: /comment/.test(function() {\n      /* comment */\n    }),\n\n    // configurations\n    enableTrace: false,\n    traceArrMax: 100,\n    dblClickWindow: 400,\n    /**\n     * Global pixel ratio configuration. KonvaJS automatically detect pixel ratio of current device.\n     * But you may override such property, if you want to use your value.\n     * @property pixelRatio\n     * @default undefined\n     * @memberof Konva\n     * @example\n     * Konva.pixelRatio = 1;\n     */\n    pixelRatio: undefined,\n    /**\n     * Drag distance property. If you start to drag a node you may want to wait until pointer is moved to some distance from start point,\n     * only then start dragging. Default is 3px.\n     * @property dragDistance\n     * @default 0\n     * @memberof Konva\n     * @example\n     * Konva.dragDistance = 10;\n     */\n    dragDistance: 3,\n    /**\n     * Use degree values for angle properties. You may set this property to false if you want to use radiant values.\n     * @property angleDeg\n     * @default true\n     * @memberof Konva\n     * @example\n     * node.rotation(45); // 45 degrees\n     * Konva.angleDeg = false;\n     * node.rotation(Math.PI / 2); // PI/2 radian\n     */\n    angleDeg: true,\n    /**\n     * Show different warnings about errors or wrong API usage\n     * @property showWarnings\n     * @default true\n     * @memberof Konva\n     * @example\n     * Konva.showWarnings = false;\n     */\n    showWarnings: true,\n\n    /**\n     * @namespace Filters\n     * @memberof Konva\n     */\n    Filters: {},\n\n    /**\n     * returns whether or not drag and drop is currently active\n     * @method\n     * @memberof Konva\n     */\n    isDragging: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return dd.isDragging;\n      }\n      return false;\n    },\n    /**\n     * returns whether or not a drag and drop operation is ready, but may\n     *  not necessarily have started\n     * @method\n     * @memberof Konva\n     */\n    isDragReady: function() {\n      var dd = Konva.DD;\n\n      // if DD is not included with the build, then\n      // drag and drop is not even possible\n      if (dd) {\n        return !!dd.node;\n      }\n      return false;\n    },\n    _addId: function(node, id) {\n      if (!id) {\n        return;\n      }\n      // do we need this warning?\n      // if (this.ids[id]) {\n      //   Konva.Util.warn(\n      //     'Duplicate id \"' +\n      //       id +\n      //       '\". Please don not use same id several times. It may break find() method look up.'\n      //   );\n      // }\n      this.ids[id] = node;\n    },\n    _removeId: function(id) {\n      if (id !== undefined) {\n        delete this.ids[id];\n      }\n    },\n    _addName: function(node, name) {\n      if (name) {\n        if (!this.names[name]) {\n          this.names[name] = [];\n        }\n        this.names[name].push(node);\n      }\n    },\n    _removeName: function(name, _id) {\n      if (!name) {\n        return;\n      }\n      var nodes = this.names[name];\n      if (!nodes) {\n        return;\n      }\n      for (var n = 0; n < nodes.length; n++) {\n        var no = nodes[n];\n        if (no._id === _id) {\n          nodes.splice(n, 1);\n        }\n      }\n      if (nodes.length === 0) {\n        delete this.names[name];\n      }\n    },\n    getAngle: function(angle) {\n      return this.angleDeg ? angle * PI_OVER_180 : angle;\n    },\n    _detectIE: function(ua) {\n      var msie = ua.indexOf('msie ');\n      if (msie > 0) {\n        // IE 10 or older => return version number\n        return parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n      }\n\n      var trident = ua.indexOf('trident/');\n      if (trident > 0) {\n        // IE 11 => return version number\n        var rv = ua.indexOf('rv:');\n        return parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n      }\n\n      var edge = ua.indexOf('edge/');\n      if (edge > 0) {\n        // Edge (IE 12+) => return version number\n        return parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n      }\n\n      // other browser\n      return false;\n    },\n    _parseUA: function(userAgent) {\n      var ua = userAgent.toLowerCase(),\n        // jQuery UA regex\n        match =\n          /(chrome)[ /]([\\w.]+)/.exec(ua) ||\n          /(webkit)[ /]([\\w.]+)/.exec(ua) ||\n          /(opera)(?:.*version|)[ /]([\\w.]+)/.exec(ua) ||\n          /(msie) ([\\w.]+)/.exec(ua) ||\n          (ua.indexOf('compatible') < 0 &&\n            /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec(ua)) ||\n          [],\n        // adding mobile flag as well\n        mobile = !!userAgent.match(\n          /Android|BlackBerry|iPhone|iPad|iPod|Opera Mini|IEMobile/i\n        ),\n        ieMobile = !!userAgent.match(/IEMobile/i);\n\n      return {\n        browser: match[1] || '',\n        version: match[2] || '0',\n        isIE: Konva._detectIE(ua),\n        // adding mobile flab\n        mobile: mobile,\n        ieMobile: ieMobile // If this is true (i.e., WP8), then Konva touch events are executed instead of equivalent Konva mouse events\n      };\n    },\n    // user agent\n    UA: undefined\n  };\n\n  var glob =\n    typeof global !== 'undefined'\n      ? global\n      : typeof window !== 'undefined'\n        ? window\n        : typeof WorkerGlobalScope !== 'undefined'\n          ? self\n          : {};\n\n  Konva.UA = Konva._parseUA((glob.navigator && glob.navigator.userAgent) || '');\n\n  if (glob.Konva) {\n    console.error(\n      'Konva instance is already exist in current eviroment. ' +\n        'Please use only one instance.'\n    );\n  }\n  glob.Konva = Konva;\n  Konva.global = glob;\n  Konva.window = glob;\n  Konva.document = glob.document;\n\n  if (typeof exports === 'object') {\n    module.exports = Konva;\n  } else if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(function() {\n      return Konva;\n    });\n  }\n})();\n\n/*eslint-disable  eqeqeq, no-cond-assign, no-empty*/\n(function() {\n  'use strict';\n  /**\n   * Collection constructor.  Collection extends\n   *  Array.  This class is used in conjunction with {@link Konva.Container#get}\n   * @constructor\n   * @memberof Konva\n   */\n  Konva.Collection = function() {\n    var args = [].slice.call(arguments),\n      length = args.length,\n      i = 0;\n\n    this.length = length;\n    for (; i < length; i++) {\n      this[i] = args[i];\n    }\n    return this;\n  };\n  Konva.Collection.prototype = [];\n  /**\n   * iterate through node array and run a function for each node.\n   *  The node and index is passed into the function\n   * @method\n   * @memberof Konva.Collection.prototype\n   * @param {Function} func\n   * @example\n   * // get all nodes with name foo inside layer, and set x to 10 for each\n   * layer.get('.foo').each(function(shape, n) {\n   *   shape.setX(10);\n   * });\n   */\n  Konva.Collection.prototype.each = function(func) {\n    for (var n = 0; n < this.length; n++) {\n      func(this[n], n);\n    }\n  };\n  /**\n   * convert collection into an array\n   * @method\n   * @memberof Konva.Collection.prototype\n   */\n  Konva.Collection.prototype.toArray = function() {\n    var arr = [],\n      len = this.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      arr.push(this[n]);\n    }\n    return arr;\n  };\n  /**\n   * convert array into a collection\n   * @method\n   * @memberof Konva.Collection\n   * @param {Array} arr\n   */\n  Konva.Collection.toCollection = function(arr) {\n    var collection = new Konva.Collection(),\n      len = arr.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      collection.push(arr[n]);\n    }\n    return collection;\n  };\n\n  // map one method by it's name\n  Konva.Collection._mapMethod = function(methodName) {\n    Konva.Collection.prototype[methodName] = function() {\n      var len = this.length,\n        i;\n\n      var args = [].slice.call(arguments);\n      for (i = 0; i < len; i++) {\n        this[i][methodName].apply(this[i], args);\n      }\n\n      return this;\n    };\n  };\n\n  Konva.Collection.mapMethods = function(constructor) {\n    var prot = constructor.prototype;\n    for (var methodName in prot) {\n      Konva.Collection._mapMethod(methodName);\n    }\n  };\n\n  /*\n    * Last updated November 2011\n    * By Simon Sarris\n    * www.simonsarris.com\n    * sarris@acm.org\n    *\n    * Free to use and distribute at will\n    * So long as you are nice to people, etc\n    */\n\n  /*\n    * The usage of this class was inspired by some of the work done by a forked\n    * project, KineticJS-Ext by Wappworks, which is based on Simon's Transform\n    * class.  Modified by Eric Rowell\n    */\n\n  /**\n   * Transform constructor. Transform object is a private class of Konva framework.\n   * In most of the cases you don't need to use it in your app.\n   * But there is a documentation for that class in case you still want\n   * to make some manual calculations.\n   * @constructor\n   * @param {Array} [m] Optional six-element matrix\n   * @memberof Konva\n   */\n  Konva.Transform = function(m) {\n    this.m = (m && m.slice()) || [1, 0, 0, 1, 0, 0];\n  };\n\n  Konva.Transform.prototype = {\n    /**\n     * Copy Konva.Transform object\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    copy: function() {\n      return new Konva.Transform(this.m);\n    },\n    /**\n     * Transform point\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Object} point 2D point(x, y)\n     * @returns {Object} 2D point(x, y)\n     */\n    point: function(point) {\n      var m = this.m;\n      return {\n        x: m[0] * point.x + m[2] * point.y + m[4],\n        y: m[1] * point.x + m[3] * point.y + m[5]\n      };\n    },\n    /**\n     * Apply translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} x\n     * @param {Number} y\n     * @returns {Konva.Transform}\n     */\n    translate: function(x, y) {\n      this.m[4] += this.m[0] * x + this.m[2] * y;\n      this.m[5] += this.m[1] * x + this.m[3] * y;\n      return this;\n    },\n    /**\n     * Apply scale\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    scale: function(sx, sy) {\n      this.m[0] *= sx;\n      this.m[1] *= sx;\n      this.m[2] *= sy;\n      this.m[3] *= sy;\n      return this;\n    },\n    /**\n     * Apply rotation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} rad  Angle in radians\n     * @returns {Konva.Transform}\n     */\n    rotate: function(rad) {\n      var c = Math.cos(rad);\n      var s = Math.sin(rad);\n      var m11 = this.m[0] * c + this.m[2] * s;\n      var m12 = this.m[1] * c + this.m[3] * s;\n      var m21 = this.m[0] * -s + this.m[2] * c;\n      var m22 = this.m[1] * -s + this.m[3] * c;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Returns the translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Object} 2D point(x, y)\n     */\n    getTranslation: function() {\n      return {\n        x: this.m[4],\n        y: this.m[5]\n      };\n    },\n    /**\n     * Apply skew\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Number} sx\n     * @param {Number} sy\n     * @returns {Konva.Transform}\n     */\n    skew: function(sx, sy) {\n      var m11 = this.m[0] + this.m[2] * sy;\n      var m12 = this.m[1] + this.m[3] * sy;\n      var m21 = this.m[2] + this.m[0] * sx;\n      var m22 = this.m[3] + this.m[1] * sx;\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      return this;\n    },\n    /**\n     * Transform multiplication\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @param {Konva.Transform} matrix\n     * @returns {Konva.Transform}\n     */\n    multiply: function(matrix) {\n      var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];\n      var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];\n\n      var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];\n      var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];\n\n      var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];\n      var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];\n\n      this.m[0] = m11;\n      this.m[1] = m12;\n      this.m[2] = m21;\n      this.m[3] = m22;\n      this.m[4] = dx;\n      this.m[5] = dy;\n      return this;\n    },\n    /**\n     * Invert the matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     */\n    invert: function() {\n      var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);\n      var m0 = this.m[3] * d;\n      var m1 = -this.m[1] * d;\n      var m2 = -this.m[2] * d;\n      var m3 = this.m[0] * d;\n      var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);\n      var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);\n      this.m[0] = m0;\n      this.m[1] = m1;\n      this.m[2] = m2;\n      this.m[3] = m3;\n      this.m[4] = m4;\n      this.m[5] = m5;\n      return this;\n    },\n    /**\n     * return matrix\n     * @method\n     * @memberof Konva.Transform.prototype\n     */\n    getMatrix: function() {\n      return this.m;\n    },\n    /**\n     * set to absolute position via translation\n     * @method\n     * @memberof Konva.Transform.prototype\n     * @returns {Konva.Transform}\n     * @author ericdrowell\n     */\n    setAbsolutePosition: function(x, y) {\n      var m0 = this.m[0],\n        m1 = this.m[1],\n        m2 = this.m[2],\n        m3 = this.m[3],\n        m4 = this.m[4],\n        m5 = this.m[5],\n        yt = (m0 * (y - m5) - m1 * (x - m4)) / (m0 * m3 - m1 * m2),\n        xt = (x - m4 - m2 * yt) / m0;\n\n      return this.translate(xt, yt);\n    }\n  };\n\n  // CONSTANTS\n  var CONTEXT_2D = '2d',\n    OBJECT_ARRAY = '[object Array]',\n    OBJECT_NUMBER = '[object Number]',\n    OBJECT_STRING = '[object String]',\n    OBJECT_BOOLEAN = '[object Boolean]',\n    PI_OVER_DEG180 = Math.PI / 180,\n    DEG180_OVER_PI = 180 / Math.PI,\n    HASH = '#',\n    EMPTY_STRING = '',\n    ZERO = '0',\n    KONVA_WARNING = 'Konva warning: ',\n    KONVA_ERROR = 'Konva error: ',\n    RGB_PAREN = 'rgb(',\n    COLORS = {\n      aliceblue: [240, 248, 255],\n      antiquewhite: [250, 235, 215],\n      aqua: [0, 255, 255],\n      aquamarine: [127, 255, 212],\n      azure: [240, 255, 255],\n      beige: [245, 245, 220],\n      bisque: [255, 228, 196],\n      black: [0, 0, 0],\n      blanchedalmond: [255, 235, 205],\n      blue: [0, 0, 255],\n      blueviolet: [138, 43, 226],\n      brown: [165, 42, 42],\n      burlywood: [222, 184, 135],\n      cadetblue: [95, 158, 160],\n      chartreuse: [127, 255, 0],\n      chocolate: [210, 105, 30],\n      coral: [255, 127, 80],\n      cornflowerblue: [100, 149, 237],\n      cornsilk: [255, 248, 220],\n      crimson: [220, 20, 60],\n      cyan: [0, 255, 255],\n      darkblue: [0, 0, 139],\n      darkcyan: [0, 139, 139],\n      darkgoldenrod: [184, 132, 11],\n      darkgray: [169, 169, 169],\n      darkgreen: [0, 100, 0],\n      darkgrey: [169, 169, 169],\n      darkkhaki: [189, 183, 107],\n      darkmagenta: [139, 0, 139],\n      darkolivegreen: [85, 107, 47],\n      darkorange: [255, 140, 0],\n      darkorchid: [153, 50, 204],\n      darkred: [139, 0, 0],\n      darksalmon: [233, 150, 122],\n      darkseagreen: [143, 188, 143],\n      darkslateblue: [72, 61, 139],\n      darkslategray: [47, 79, 79],\n      darkslategrey: [47, 79, 79],\n      darkturquoise: [0, 206, 209],\n      darkviolet: [148, 0, 211],\n      deeppink: [255, 20, 147],\n      deepskyblue: [0, 191, 255],\n      dimgray: [105, 105, 105],\n      dimgrey: [105, 105, 105],\n      dodgerblue: [30, 144, 255],\n      firebrick: [178, 34, 34],\n      floralwhite: [255, 255, 240],\n      forestgreen: [34, 139, 34],\n      fuchsia: [255, 0, 255],\n      gainsboro: [220, 220, 220],\n      ghostwhite: [248, 248, 255],\n      gold: [255, 215, 0],\n      goldenrod: [218, 165, 32],\n      gray: [128, 128, 128],\n      green: [0, 128, 0],\n      greenyellow: [173, 255, 47],\n      grey: [128, 128, 128],\n      honeydew: [240, 255, 240],\n      hotpink: [255, 105, 180],\n      indianred: [205, 92, 92],\n      indigo: [75, 0, 130],\n      ivory: [255, 255, 240],\n      khaki: [240, 230, 140],\n      lavender: [230, 230, 250],\n      lavenderblush: [255, 240, 245],\n      lawngreen: [124, 252, 0],\n      lemonchiffon: [255, 250, 205],\n      lightblue: [173, 216, 230],\n      lightcoral: [240, 128, 128],\n      lightcyan: [224, 255, 255],\n      lightgoldenrodyellow: [250, 250, 210],\n      lightgray: [211, 211, 211],\n      lightgreen: [144, 238, 144],\n      lightgrey: [211, 211, 211],\n      lightpink: [255, 182, 193],\n      lightsalmon: [255, 160, 122],\n      lightseagreen: [32, 178, 170],\n      lightskyblue: [135, 206, 250],\n      lightslategray: [119, 136, 153],\n      lightslategrey: [119, 136, 153],\n      lightsteelblue: [176, 196, 222],\n      lightyellow: [255, 255, 224],\n      lime: [0, 255, 0],\n      limegreen: [50, 205, 50],\n      linen: [250, 240, 230],\n      magenta: [255, 0, 255],\n      maroon: [128, 0, 0],\n      mediumaquamarine: [102, 205, 170],\n      mediumblue: [0, 0, 205],\n      mediumorchid: [186, 85, 211],\n      mediumpurple: [147, 112, 219],\n      mediumseagreen: [60, 179, 113],\n      mediumslateblue: [123, 104, 238],\n      mediumspringgreen: [0, 250, 154],\n      mediumturquoise: [72, 209, 204],\n      mediumvioletred: [199, 21, 133],\n      midnightblue: [25, 25, 112],\n      mintcream: [245, 255, 250],\n      mistyrose: [255, 228, 225],\n      moccasin: [255, 228, 181],\n      navajowhite: [255, 222, 173],\n      navy: [0, 0, 128],\n      oldlace: [253, 245, 230],\n      olive: [128, 128, 0],\n      olivedrab: [107, 142, 35],\n      orange: [255, 165, 0],\n      orangered: [255, 69, 0],\n      orchid: [218, 112, 214],\n      palegoldenrod: [238, 232, 170],\n      palegreen: [152, 251, 152],\n      paleturquoise: [175, 238, 238],\n      palevioletred: [219, 112, 147],\n      papayawhip: [255, 239, 213],\n      peachpuff: [255, 218, 185],\n      peru: [205, 133, 63],\n      pink: [255, 192, 203],\n      plum: [221, 160, 203],\n      powderblue: [176, 224, 230],\n      purple: [128, 0, 128],\n      rebeccapurple: [102, 51, 153],\n      red: [255, 0, 0],\n      rosybrown: [188, 143, 143],\n      royalblue: [65, 105, 225],\n      saddlebrown: [139, 69, 19],\n      salmon: [250, 128, 114],\n      sandybrown: [244, 164, 96],\n      seagreen: [46, 139, 87],\n      seashell: [255, 245, 238],\n      sienna: [160, 82, 45],\n      silver: [192, 192, 192],\n      skyblue: [135, 206, 235],\n      slateblue: [106, 90, 205],\n      slategray: [119, 128, 144],\n      slategrey: [119, 128, 144],\n      snow: [255, 255, 250],\n      springgreen: [0, 255, 127],\n      steelblue: [70, 130, 180],\n      tan: [210, 180, 140],\n      teal: [0, 128, 128],\n      thistle: [216, 191, 216],\n      transparent: [255, 255, 255, 0],\n      tomato: [255, 99, 71],\n      turquoise: [64, 224, 208],\n      violet: [238, 130, 238],\n      wheat: [245, 222, 179],\n      white: [255, 255, 255],\n      whitesmoke: [245, 245, 245],\n      yellow: [255, 255, 0],\n      yellowgreen: [154, 205, 5]\n    },\n    RGB_REGEX = /rgb\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)/;\n\n  /**\n   * @namespace Util\n   * @memberof Konva\n   */\n  Konva.Util = {\n    /*\n    * cherry-picked utilities from underscore.js\n    */\n    _isElement: function(obj) {\n      return !!(obj && obj.nodeType == 1);\n    },\n    _isFunction: function(obj) {\n      return !!(obj && obj.constructor && obj.call && obj.apply);\n    },\n    _isObject: function(obj) {\n      return !!obj && obj.constructor === Object;\n    },\n    _isArray: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_ARRAY;\n    },\n    _isNumber: function(obj) {\n      return (\n        Object.prototype.toString.call(obj) === OBJECT_NUMBER &&\n        !isNaN(obj) &&\n        isFinite(obj)\n      );\n    },\n    _isString: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_STRING;\n    },\n    _isBoolean: function(obj) {\n      return Object.prototype.toString.call(obj) === OBJECT_BOOLEAN;\n    },\n    // arrays are objects too\n    isObject: function(val) {\n      return val instanceof Object;\n    },\n    isValidSelector: function(selector) {\n      if (typeof selector !== 'string') {\n        return false;\n      }\n      var firstChar = selector[0];\n      return (\n        firstChar === '#' ||\n        firstChar === '.' ||\n        firstChar === firstChar.toUpperCase()\n      );\n    },\n    _sign: function(number) {\n      if (number === 0) {\n        return 0;\n      }\n      if (number > 0) {\n        return 1;\n      } else {\n        return -1;\n      }\n    },\n    createCanvasElement: function() {\n      var canvas = Konva.isBrowser\n        ? Konva.document.createElement('canvas')\n        : new Konva._nodeCanvas();\n      // on some environments canvas.style is readonly\n      try {\n        canvas.style = canvas.style || {};\n      } catch (e) {}\n      return canvas;\n    },\n    _isInDocument: function(el) {\n      while ((el = el.parentNode)) {\n        if (el == Konva.document) {\n          return true;\n        }\n      }\n      return false;\n    },\n    _simplifyArray: function(arr) {\n      var retArr = [],\n        len = arr.length,\n        util = Konva.Util,\n        n,\n        val;\n\n      for (n = 0; n < len; n++) {\n        val = arr[n];\n        if (util._isNumber(val)) {\n          val = Math.round(val * 1000) / 1000;\n        } else if (!util._isString(val)) {\n          val = val.toString();\n        }\n\n        retArr.push(val);\n      }\n\n      return retArr;\n    },\n    /*\n    * arg can be an image object or image data\n    */\n    _getImage: function(arg, callback) {\n      var imageObj, canvas;\n\n      // if arg is null or undefined\n      if (!arg) {\n        callback(null);\n      } else if (this._isElement(arg)) {\n        // if arg is already an image object\n        callback(arg);\n      } else if (this._isString(arg)) {\n        // if arg is a string, then it's a data url\n        imageObj = new Konva.window.Image();\n        imageObj.onload = function() {\n          callback(imageObj);\n        };\n        imageObj.src = arg;\n      } else if (arg.data) {\n        //if arg is an object that contains the data property, it's an image object\n        canvas = Konva.Util.createCanvasElement();\n        canvas.width = arg.width;\n        canvas.height = arg.height;\n        var _context = canvas.getContext(CONTEXT_2D);\n        _context.putImageData(arg, 0, 0);\n        this._getImage(canvas.toDataURL(), callback);\n      } else {\n        callback(null);\n      }\n    },\n    _getRGBAString: function(obj) {\n      var red = obj.red || 0,\n        green = obj.green || 0,\n        blue = obj.blue || 0,\n        alpha = obj.alpha || 1;\n\n      return ['rgba(', red, ',', green, ',', blue, ',', alpha, ')'].join(\n        EMPTY_STRING\n      );\n    },\n    _rgbToHex: function(r, g, b) {\n      return ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    },\n    _hexToRgb: function(hex) {\n      hex = hex.replace(HASH, EMPTY_STRING);\n      var bigint = parseInt(hex, 16);\n      return {\n        r: (bigint >> 16) & 255,\n        g: (bigint >> 8) & 255,\n        b: bigint & 255\n      };\n    },\n    /**\n     * return random hex color\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    getRandomColor: function() {\n      var randColor = ((Math.random() * 0xffffff) << 0).toString(16);\n      while (randColor.length < 6) {\n        randColor = ZERO + randColor;\n      }\n      return HASH + randColor;\n    },\n    /**\n     * return value with default fallback\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    get: function(val, def) {\n      if (val === undefined) {\n        return def;\n      } else {\n        return val;\n      }\n    },\n    /**\n     * get RGB components of a color\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {String} color\n     * @example\n     * // each of the following examples return {r:0, g:0, b:255}\n     * var rgb = Konva.Util.getRGB('blue');\n     * var rgb = Konva.Util.getRGB('#0000ff');\n     * var rgb = Konva.Util.getRGB('rgb(0,0,255)');\n     */\n    getRGB: function(color) {\n      var rgb;\n      // color string\n      if (color in COLORS) {\n        rgb = COLORS[color];\n        return {\n          r: rgb[0],\n          g: rgb[1],\n          b: rgb[2]\n        };\n      } else if (color[0] === HASH) {\n        // hex\n        return this._hexToRgb(color.substring(1));\n      } else if (color.substr(0, 4) === RGB_PAREN) {\n        // rgb string\n        rgb = RGB_REGEX.exec(color.replace(/ /g, ''));\n        return {\n          r: parseInt(rgb[1], 10),\n          g: parseInt(rgb[2], 10),\n          b: parseInt(rgb[3], 10)\n        };\n      } else {\n        // default\n        return {\n          r: 0,\n          g: 0,\n          b: 0\n        };\n      }\n    },\n    // convert any color string to RGBA object\n    // from https://github.com/component/color-parser\n    colorToRGBA: function(str) {\n      str = str || 'black';\n      return (\n        Konva.Util._namedColorToRBA(str) ||\n        Konva.Util._hex3ColorToRGBA(str) ||\n        Konva.Util._hex6ColorToRGBA(str) ||\n        Konva.Util._rgbColorToRGBA(str) ||\n        Konva.Util._rgbaColorToRGBA(str)\n      );\n    },\n    // Parse named css color. Like \"green\"\n    _namedColorToRBA: function(str) {\n      var c = COLORS[str.toLowerCase()];\n      if (!c) {\n        return null;\n      }\n      return {\n        r: c[0],\n        g: c[1],\n        b: c[2],\n        a: 1\n      };\n    },\n    // Parse rgb(n, n, n)\n    _rgbColorToRGBA: function(str) {\n      if (str.indexOf('rgb(') === 0) {\n        str = str.match(/rgb\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: 1\n        };\n      }\n    },\n    // Parse rgba(n, n, n, n)\n    _rgbaColorToRGBA: function(str) {\n      if (str.indexOf('rgba(') === 0) {\n        str = str.match(/rgba\\(([^)]+)\\)/)[1];\n        var parts = str.split(/ *, */).map(Number);\n        return {\n          r: parts[0],\n          g: parts[1],\n          b: parts[2],\n          a: parts[3]\n        };\n      }\n    },\n    // Parse #nnnnnn\n    _hex6ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 7) {\n        return {\n          r: parseInt(str.slice(1, 3), 16),\n          g: parseInt(str.slice(3, 5), 16),\n          b: parseInt(str.slice(5, 7), 16),\n          a: 1\n        };\n      }\n    },\n    // Parse #nnn\n    _hex3ColorToRGBA: function(str) {\n      if (str[0] === '#' && str.length === 4) {\n        return {\n          r: parseInt(str[1] + str[1], 16),\n          g: parseInt(str[2] + str[2], 16),\n          b: parseInt(str[3] + str[3], 16),\n          a: 1\n        };\n      }\n    },\n    // o1 takes precedence over o2\n    _merge: function(o1, o2) {\n      var retObj = this._clone(o2);\n      for (var key in o1) {\n        if (this._isObject(o1[key])) {\n          retObj[key] = this._merge(o1[key], retObj[key]);\n        } else {\n          retObj[key] = o1[key];\n        }\n      }\n      return retObj;\n    },\n    trimRight: function(str) {\n      return str.replace(/\\s+$/, '');\n    },\n    trimLeft: function(str) {\n      return str.replace(/^\\s+/, '');\n    },\n    /**\n     * check intersection of two client rectangles\n     * @method\n     * @memberof Konva.Util.prototype\n     */\n    haveIntersection: function(r1, r2) {\n      return !(\n        r2.x > r1.x + r1.width ||\n        r2.x + r2.width < r1.x ||\n        r2.y > r1.y + r1.height ||\n        r2.y + r2.height < r1.y\n      );\n    },\n    cloneObject: function(obj) {\n      var retObj = {};\n      for (var key in obj) {\n        if (this._isObject(obj[key])) {\n          retObj[key] = this.cloneObject(obj[key]);\n        } else if (this._isArray(obj[key])) {\n          retObj[key] = this.cloneArray(obj[key]);\n        } else {\n          retObj[key] = obj[key];\n        }\n      }\n      return retObj;\n    },\n    cloneArray: function(arr) {\n      return arr.slice(0);\n    },\n    _degToRad: function(deg) {\n      return deg * PI_OVER_DEG180;\n    },\n    _radToDeg: function(rad) {\n      return rad * DEG180_OVER_PI;\n    },\n    _capitalize: function(str) {\n      return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n    throw: function(str) {\n      throw new Error(KONVA_ERROR + str);\n    },\n    error: function(str) {\n      console.error(KONVA_ERROR + str);\n    },\n    warn: function(str) {\n      /*\n             * IE9 on Windows7 64bit will throw a JS error\n             * if we don't use window.console in the conditional\n             */\n      if (Konva.global.console && console.warn && Konva.showWarnings) {\n        console.warn(KONVA_WARNING + str);\n      }\n    },\n    extend: function(child, parent) {\n      function Ctor() {\n        this.constructor = child;\n      }\n      Ctor.prototype = parent.prototype;\n      var oldProto = child.prototype;\n      child.prototype = new Ctor();\n      for (var key in oldProto) {\n        if (oldProto.hasOwnProperty(key)) {\n          child.prototype[key] = oldProto[key];\n        }\n      }\n      child.__super__ = parent.prototype;\n      // create reference to parent\n      child.super = parent;\n    },\n    /**\n     * adds methods to a constructor prototype\n     * @method\n     * @memberof Konva.Util.prototype\n     * @param {Function} constructor\n     * @param {Object} methods\n     */\n    addMethods: function(constructor, methods) {\n      var key;\n\n      for (key in methods) {\n        constructor.prototype[key] = methods[key];\n      }\n    },\n    _getControlPoints: function(x0, y0, x1, y1, x2, y2, t) {\n      var d01 = Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2)),\n        d12 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2)),\n        fa = t * d01 / (d01 + d12),\n        fb = t * d12 / (d01 + d12),\n        p1x = x1 - fa * (x2 - x0),\n        p1y = y1 - fa * (y2 - y0),\n        p2x = x1 + fb * (x2 - x0),\n        p2y = y1 + fb * (y2 - y0);\n\n      return [p1x, p1y, p2x, p2y];\n    },\n    _expandPoints: function(p, tension) {\n      var len = p.length,\n        allPoints = [],\n        n,\n        cp;\n\n      for (n = 2; n < len - 2; n += 2) {\n        cp = Konva.Util._getControlPoints(\n          p[n - 2],\n          p[n - 1],\n          p[n],\n          p[n + 1],\n          p[n + 2],\n          p[n + 3],\n          tension\n        );\n        allPoints.push(cp[0]);\n        allPoints.push(cp[1]);\n        allPoints.push(p[n]);\n        allPoints.push(p[n + 1]);\n        allPoints.push(cp[2]);\n        allPoints.push(cp[3]);\n      }\n\n      return allPoints;\n    },\n    _removeLastLetter: function(str) {\n      return str.substring(0, str.length - 1);\n    },\n    each: function(obj, func) {\n      for (var key in obj) {\n        func(key, obj[key]);\n      }\n    },\n    _inRange: function(val, left, right) {\n      return left <= val && val < right;\n    },\n    _getProjectionToSegment: function(x1, y1, x2, y2, x3, y3) {\n      var x, y, dist;\n\n      var pd2 = (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n      if (pd2 == 0) {\n        x = x1;\n        y = y1;\n        dist = (x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2);\n      } else {\n        var u = ((x3 - x1) * (x2 - x1) + (y3 - y1) * (y2 - y1)) / pd2;\n        if (u < 0) {\n          x = x1;\n          y = y1;\n          dist = (x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3);\n        } else if (u > 1.0) {\n          x = x2;\n          y = y2;\n          dist = (x2 - x3) * (x2 - x3) + (y2 - y3) * (y2 - y3);\n        } else {\n          x = x1 + u * (x2 - x1);\n          y = y1 + u * (y2 - y1);\n          dist = (x - x3) * (x - x3) + (y - y3) * (y - y3);\n        }\n      }\n      return [x, y, dist];\n    },\n    // line as array of points.\n    // line might be closed\n    _getProjectionToLine: function(pt, line, isClosed) {\n      var pc = Konva.Util.cloneObject(pt);\n      var dist = Number.MAX_VALUE;\n      line.forEach(function(p1, i) {\n        if (!isClosed && i === line.length - 1) {\n          return;\n        }\n        var p2 = line[(i + 1) % line.length];\n        var proj = Konva.Util._getProjectionToSegment(\n          p1.x,\n          p1.y,\n          p2.x,\n          p2.y,\n          pt.x,\n          pt.y\n        );\n        var px = proj[0],\n          py = proj[1],\n          pdist = proj[2];\n        if (pdist < dist) {\n          pc.x = px;\n          pc.y = py;\n          dist = pdist;\n        }\n      });\n      return pc;\n    },\n    _prepareArrayForTween: function(startArray, endArray, isClosed) {\n      var n,\n        start = [],\n        end = [];\n      if (startArray.length > endArray.length) {\n        var temp = endArray;\n        endArray = startArray;\n        startArray = temp;\n      }\n      for (n = 0; n < startArray.length; n += 2) {\n        start.push({\n          x: startArray[n],\n          y: startArray[n + 1]\n        });\n      }\n      for (n = 0; n < endArray.length; n += 2) {\n        end.push({\n          x: endArray[n],\n          y: endArray[n + 1]\n        });\n      }\n\n      var newStart = [];\n      end.forEach(function(point) {\n        var pr = Konva.Util._getProjectionToLine(point, start, isClosed);\n        newStart.push(pr.x);\n        newStart.push(pr.y);\n      });\n      return newStart;\n    },\n    _prepareToStringify: function(obj) {\n      var desc;\n\n      obj.visitedByCircularReferenceRemoval = true;\n\n      for (var key in obj) {\n        if (\n          !(obj.hasOwnProperty(key) && obj[key] && typeof obj[key] == 'object')\n        ) {\n          continue;\n        }\n        desc = Object.getOwnPropertyDescriptor(obj, key);\n        if (\n          obj[key].visitedByCircularReferenceRemoval ||\n          Konva.Util._isElement(obj[key])\n        ) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        } else if (Konva.Util._prepareToStringify(obj[key]) === null) {\n          if (desc.configurable) {\n            delete obj[key];\n          } else {\n            return null;\n          }\n        }\n      }\n\n      delete obj.visitedByCircularReferenceRemoval;\n\n      return obj;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  // calculate pixel ratio\n\n  var _pixelRatio;\n  function getDevicePixelRatio() {\n    if (_pixelRatio) {\n      return _pixelRatio;\n    }\n    var canvas = Konva.Util.createCanvasElement();\n    var context = canvas.getContext('2d');\n    _pixelRatio = (function() {\n      var devicePixelRatio = Konva.window.devicePixelRatio || 1,\n        backingStoreRatio =\n          context.webkitBackingStorePixelRatio ||\n          context.mozBackingStorePixelRatio ||\n          context.msBackingStorePixelRatio ||\n          context.oBackingStorePixelRatio ||\n          context.backingStorePixelRatio ||\n          1;\n      return devicePixelRatio / backingStoreRatio;\n    })();\n    return _pixelRatio;\n  }\n\n  /**\n   * Canvas Renderer constructor\n   * @constructor\n   * @abstract\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Number} config.width\n   * @param {Number} config.height\n   * @param {Number} config.pixelRatio KonvaJS automatically handles pixel ratio adjustments in order to render crisp drawings\n   *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n   *  of 1.  Some high end tablets and phones, like iPhones and iPads (not the mini) have a device pixel ratio\n   *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n   *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n   *  specified, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n   *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n   */\n  Konva.Canvas = function(config) {\n    this.init(config);\n  };\n\n  Konva.Canvas.prototype = {\n    init: function(config) {\n      var conf = config || {};\n\n      var pixelRatio =\n        conf.pixelRatio || Konva.pixelRatio || getDevicePixelRatio();\n\n      this.pixelRatio = pixelRatio;\n      this._canvas = Konva.Util.createCanvasElement();\n\n      // set inline styles\n      this._canvas.style.padding = 0;\n      this._canvas.style.margin = 0;\n      this._canvas.style.border = 0;\n      this._canvas.style.background = 'transparent';\n      this._canvas.style.position = 'absolute';\n      this._canvas.style.top = 0;\n      this._canvas.style.left = 0;\n    },\n    /**\n     * get canvas context\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {CanvasContext} context\n     */\n    getContext: function() {\n      return this.context;\n    },\n    /**\n     * get pixel ratio\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} pixel ratio\n     */\n    getPixelRatio: function() {\n      return this.pixelRatio;\n    },\n    /**\n     * get pixel ratio\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} pixelRatio KonvaJS automatically handles pixel ratio adustments in order to render crisp drawings\n     *  on all devices. Most desktops, low end tablets, and low end phones, have device pixel ratios\n     *  of 1.  Some high end tablets and phones, like iPhones and iPads have a device pixel ratio\n     *  of 2.  Some Macbook Pros, and iMacs also have a device pixel ratio of 2.  Some high end Android devices have pixel\n     *  ratios of 2 or 3.  Some browsers like Firefox allow you to configure the pixel ratio of the viewport.  Unless otherwise\n     *  specificed, the pixel ratio will be defaulted to the actual device pixel ratio.  You can override the device pixel\n     *  ratio for special situations, or, if you don't want the pixel ratio to be taken into account, you can set it to 1.\n     */\n    setPixelRatio: function(pixelRatio) {\n      var previousRatio = this.pixelRatio;\n      this.pixelRatio = pixelRatio;\n      this.setSize(\n        this.getWidth() / previousRatio,\n        this.getHeight() / previousRatio\n      );\n    },\n    /**\n     * set width\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      // take into account pixel ratio\n      this.width = this._canvas.width = width * this.pixelRatio;\n      this._canvas.style.width = width + 'px';\n\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n     * set height\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      // take into account pixel ratio\n      this.height = this._canvas.height = height * this.pixelRatio;\n      this._canvas.style.height = height + 'px';\n      var pixelRatio = this.pixelRatio,\n        _context = this.getContext()._context;\n      _context.scale(pixelRatio, pixelRatio);\n    },\n    /**\n     * get width\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} width\n     */\n    getWidth: function() {\n      return this.width;\n    },\n    /**\n     * get height\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @returns {Number} height\n     */\n    getHeight: function() {\n      return this.height;\n    },\n    /**\n     * set size\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {Number} width\n     * @param {Number} height\n     */\n    setSize: function(width, height) {\n      this.setWidth(width);\n      this.setHeight(height);\n    },\n    /**\n     * to data url\n     * @method\n     * @memberof Konva.Canvas.prototype\n     * @param {String} mimeType\n     * @param {Number} quality between 0 and 1 for jpg mime types\n     * @returns {String} data url string\n     */\n    toDataURL: function(mimeType, quality) {\n      try {\n        // If this call fails (due to browser bug, like in Firefox 3.6),\n        // then revert to previous no-parameter image/png behavior\n        return this._canvas.toDataURL(mimeType, quality);\n      } catch (e) {\n        try {\n          return this._canvas.toDataURL();\n        } catch (err) {\n          Konva.Util.warn('Unable to get data URL. ' + err.message);\n          return '';\n        }\n      }\n    }\n  };\n\n  Konva.SceneCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.SceneContext(this);\n    this.setSize(width, height);\n  };\n\n  Konva.Util.extend(Konva.SceneCanvas, Konva.Canvas);\n\n  Konva.HitCanvas = function(config) {\n    var conf = config || {};\n    var width = conf.width || 0,\n      height = conf.height || 0;\n\n    Konva.Canvas.call(this, conf);\n    this.context = new Konva.HitContext(this);\n    this.setSize(width, height);\n    this.hitCanvas = true;\n  };\n  Konva.Util.extend(Konva.HitCanvas, Konva.Canvas);\n})();\n\n(function() {\n  'use strict';\n  var COMMA = ',',\n    OPEN_PAREN = '(',\n    CLOSE_PAREN = ')',\n    OPEN_PAREN_BRACKET = '([',\n    CLOSE_BRACKET_PAREN = '])',\n    SEMICOLON = ';',\n    DOUBLE_PAREN = '()',\n    // EMPTY_STRING = '',\n    EQUALS = '=',\n    // SET = 'set',\n    CONTEXT_METHODS = [\n      'arc',\n      'arcTo',\n      'beginPath',\n      'bezierCurveTo',\n      'clearRect',\n      'clip',\n      'closePath',\n      'createLinearGradient',\n      'createPattern',\n      'createRadialGradient',\n      'drawImage',\n      'fill',\n      'fillText',\n      'getImageData',\n      'createImageData',\n      'lineTo',\n      'moveTo',\n      'putImageData',\n      'quadraticCurveTo',\n      'rect',\n      'restore',\n      'rotate',\n      'save',\n      'scale',\n      'setLineDash',\n      'setTransform',\n      'stroke',\n      'strokeText',\n      'transform',\n      'translate'\n    ];\n\n  var CONTEXT_PROPERTIES = [\n    'fillStyle',\n    'strokeStyle',\n    'shadowColor',\n    'shadowBlur',\n    'shadowOffsetX',\n    'shadowOffsetY',\n    'lineCap',\n    'lineDashOffset',\n    'lineJoin',\n    'lineWidth',\n    'miterLimit',\n    'font',\n    'textAlign',\n    'textBaseline',\n    'globalAlpha',\n    'globalCompositeOperation'\n  ];\n\n  /**\n   * Canvas Context constructor\n   * @constructor\n   * @abstract\n   * @memberof Konva\n   */\n  Konva.Context = function(canvas) {\n    this.init(canvas);\n  };\n\n  Konva.Context.prototype = {\n    init: function(canvas) {\n      this.canvas = canvas;\n      this._context = canvas._canvas.getContext('2d');\n\n      if (Konva.enableTrace) {\n        this.traceArr = [];\n        this._enableTrace();\n      }\n    },\n    /**\n     * fill shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillShape: function(shape) {\n      if (shape.getFillEnabled()) {\n        this._fill(shape);\n      }\n    },\n    /**\n     * stroke shape\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    strokeShape: function(shape) {\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * fill then stroke\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Konva.Shape} shape\n     */\n    fillStrokeShape: function(shape) {\n      var fillEnabled = shape.getFillEnabled();\n      if (fillEnabled) {\n        this._fill(shape);\n      }\n      if (shape.getStrokeEnabled()) {\n        this._stroke(shape);\n      }\n    },\n    /**\n     * get context trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Boolean} relaxed if false, return strict context trace, which includes method names, method parameters\n     *  properties, and property values.  If true, return relaxed context trace, which only returns method names and\n     *  properites.\n     * @returns {String}\n     */\n    getTrace: function(relaxed) {\n      var traceArr = this.traceArr,\n        len = traceArr.length,\n        str = '',\n        n,\n        trace,\n        method,\n        args;\n\n      for (n = 0; n < len; n++) {\n        trace = traceArr[n];\n        method = trace.method;\n\n        // methods\n        if (method) {\n          args = trace.args;\n          str += method;\n          if (relaxed) {\n            str += DOUBLE_PAREN;\n          } else {\n            if (Konva.Util._isArray(args[0])) {\n              str +=\n                OPEN_PAREN_BRACKET + args.join(COMMA) + CLOSE_BRACKET_PAREN;\n            } else {\n              str += OPEN_PAREN + args.join(COMMA) + CLOSE_PAREN;\n            }\n          }\n        } else {\n          // properties\n          str += trace.property;\n          if (!relaxed) {\n            str += EQUALS + trace.val;\n          }\n        }\n\n        str += SEMICOLON;\n      }\n\n      return str;\n    },\n    /**\n     * clear trace if trace is enabled\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    clearTrace: function() {\n      this.traceArr = [];\n    },\n    _trace: function(str) {\n      var traceArr = this.traceArr,\n        len;\n\n      traceArr.push(str);\n      len = traceArr.length;\n\n      if (len >= Konva.traceArrMax) {\n        traceArr.shift();\n      }\n    },\n    /**\n     * reset canvas context transform\n     * @method\n     * @memberof Konva.Context.prototype\n     */\n    reset: function() {\n      var pixelRatio = this.getCanvas().getPixelRatio();\n      this.setTransform(1 * pixelRatio, 0, 0, 1 * pixelRatio, 0, 0);\n    },\n    /**\n     * get canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * clear canvas\n     * @method\n     * @memberof Konva.Context.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     */\n    clear: function(bounds) {\n      var canvas = this.getCanvas();\n\n      if (bounds) {\n        this.clearRect(\n          bounds.x || 0,\n          bounds.y || 0,\n          bounds.width || 0,\n          bounds.height || 0\n        );\n      } else {\n        this.clearRect(\n          0,\n          0,\n          canvas.getWidth() / canvas.pixelRatio,\n          canvas.getHeight() / canvas.pixelRatio\n        );\n      }\n    },\n    _applyLineCap: function(shape) {\n      var lineCap = shape.getLineCap();\n      if (lineCap) {\n        this.setAttr('lineCap', lineCap);\n      }\n    },\n    _applyOpacity: function(shape) {\n      var absOpacity = shape.getAbsoluteOpacity();\n      if (absOpacity !== 1) {\n        this.setAttr('globalAlpha', absOpacity);\n      }\n    },\n    _applyLineJoin: function(shape) {\n      var lineJoin = shape.getLineJoin();\n      if (lineJoin) {\n        this.setAttr('lineJoin', lineJoin);\n      }\n    },\n    setAttr: function(attr, val) {\n      this._context[attr] = val;\n    },\n\n    // context pass through methods\n    arc: function() {\n      var a = arguments;\n      this._context.arc(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    beginPath: function() {\n      this._context.beginPath();\n    },\n    bezierCurveTo: function() {\n      var a = arguments;\n      this._context.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    clearRect: function() {\n      var a = arguments;\n      this._context.clearRect(a[0], a[1], a[2], a[3]);\n    },\n    clip: function() {\n      this._context.clip();\n    },\n    closePath: function() {\n      this._context.closePath();\n    },\n    createImageData: function() {\n      var a = arguments;\n      if (a.length === 2) {\n        return this._context.createImageData(a[0], a[1]);\n      } else if (a.length === 1) {\n        return this._context.createImageData(a[0]);\n      }\n    },\n    createLinearGradient: function() {\n      var a = arguments;\n      return this._context.createLinearGradient(a[0], a[1], a[2], a[3]);\n    },\n    createPattern: function() {\n      var a = arguments;\n      return this._context.createPattern(a[0], a[1]);\n    },\n    createRadialGradient: function() {\n      var a = arguments;\n      return this._context.createRadialGradient(\n        a[0],\n        a[1],\n        a[2],\n        a[3],\n        a[4],\n        a[5]\n      );\n    },\n    drawImage: function() {\n      var a = arguments,\n        _context = this._context;\n\n      if (a.length === 3) {\n        _context.drawImage(a[0], a[1], a[2]);\n      } else if (a.length === 5) {\n        _context.drawImage(a[0], a[1], a[2], a[3], a[4]);\n      } else if (a.length === 9) {\n        _context.drawImage(\n          a[0],\n          a[1],\n          a[2],\n          a[3],\n          a[4],\n          a[5],\n          a[6],\n          a[7],\n          a[8]\n        );\n      }\n    },\n    isPointInPath: function(x, y) {\n      return this._context.isPointInPath(x, y);\n    },\n    fill: function() {\n      this._context.fill();\n    },\n    fillRect: function(x, y, width, height) {\n      this._context.fillRect(x, y, width, height);\n    },\n    strokeRect: function(x, y, width, height) {\n      this._context.strokeRect(x, y, width, height);\n    },\n    fillText: function() {\n      var a = arguments;\n      this._context.fillText(a[0], a[1], a[2]);\n    },\n    measureText: function(text) {\n      return this._context.measureText(text);\n    },\n    getImageData: function() {\n      var a = arguments;\n      return this._context.getImageData(a[0], a[1], a[2], a[3]);\n    },\n    lineTo: function() {\n      var a = arguments;\n      this._context.lineTo(a[0], a[1]);\n    },\n    moveTo: function() {\n      var a = arguments;\n      this._context.moveTo(a[0], a[1]);\n    },\n    rect: function() {\n      var a = arguments;\n      this._context.rect(a[0], a[1], a[2], a[3]);\n    },\n    putImageData: function() {\n      var a = arguments;\n      this._context.putImageData(a[0], a[1], a[2]);\n    },\n    quadraticCurveTo: function() {\n      var a = arguments;\n      this._context.quadraticCurveTo(a[0], a[1], a[2], a[3]);\n    },\n    restore: function() {\n      this._context.restore();\n    },\n    rotate: function() {\n      var a = arguments;\n      this._context.rotate(a[0]);\n    },\n    save: function() {\n      this._context.save();\n    },\n    scale: function() {\n      var a = arguments;\n      this._context.scale(a[0], a[1]);\n    },\n    setLineDash: function() {\n      var a = arguments,\n        _context = this._context;\n\n      // works for Chrome and IE11\n      if (this._context.setLineDash) {\n        _context.setLineDash(a[0]);\n      } else if ('mozDash' in _context) {\n        // verified that this works in firefox\n        _context.mozDash = a[0];\n      } else if ('webkitLineDash' in _context) {\n        // does not currently work for Safari\n        _context.webkitLineDash = a[0];\n      }\n\n      // no support for IE9 and IE10\n    },\n    getLineDash: function() {\n      return this._context.getLineDash();\n    },\n    setTransform: function() {\n      var a = arguments;\n      this._context.setTransform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    stroke: function() {\n      this._context.stroke();\n    },\n    strokeText: function() {\n      var a = arguments;\n      this._context.strokeText(a[0], a[1], a[2]);\n    },\n    transform: function() {\n      var a = arguments;\n      this._context.transform(a[0], a[1], a[2], a[3], a[4], a[5]);\n    },\n    translate: function() {\n      var a = arguments;\n      this._context.translate(a[0], a[1]);\n    },\n    _enableTrace: function() {\n      var that = this,\n        len = CONTEXT_METHODS.length,\n        _simplifyArray = Konva.Util._simplifyArray,\n        origSetter = this.setAttr,\n        n,\n        args;\n\n      // to prevent creating scope function at each loop\n      var func = function(methodName) {\n        var origMethod = that[methodName],\n          ret;\n\n        that[methodName] = function() {\n          args = _simplifyArray(Array.prototype.slice.call(arguments, 0));\n          ret = origMethod.apply(that, arguments);\n\n          that._trace({\n            method: methodName,\n            args: args\n          });\n\n          return ret;\n        };\n      };\n      // methods\n      for (n = 0; n < len; n++) {\n        func(CONTEXT_METHODS[n]);\n      }\n\n      // attrs\n      that.setAttr = function() {\n        origSetter.apply(that, arguments);\n        var prop = arguments[0];\n        var val = arguments[1];\n        if (\n          prop === 'shadowOffsetX' ||\n          prop === 'shadowOffsetY' ||\n          prop === 'shadowBlur'\n        ) {\n          val = val / this.canvas.getPixelRatio();\n        }\n        that._trace({\n          property: prop,\n          val: val\n        });\n      };\n    }\n  };\n\n  CONTEXT_PROPERTIES.forEach(function(prop) {\n    Object.defineProperty(Konva.Context.prototype, prop, {\n      get: function() {\n        return this._context[prop];\n      },\n      set: function(val) {\n        this._context[prop] = val;\n      }\n    });\n  });\n\n  Konva.SceneContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.SceneContext.prototype = {\n    _fillColor: function(shape) {\n      var fill = shape.fill();\n\n      this.setAttr('fillStyle', fill);\n      shape._fillFunc(this);\n    },\n    _fillPattern: function(shape) {\n      var fillPatternX = shape.getFillPatternX(),\n        fillPatternY = shape.getFillPatternY(),\n        fillPatternScale = shape.getFillPatternScale(),\n        fillPatternRotation = Konva.getAngle(shape.getFillPatternRotation()),\n        fillPatternOffset = shape.getFillPatternOffset();\n\n      if (fillPatternX || fillPatternY) {\n        this.translate(fillPatternX || 0, fillPatternY || 0);\n      }\n      if (fillPatternRotation) {\n        this.rotate(fillPatternRotation);\n      }\n      if (fillPatternScale) {\n        this.scale(fillPatternScale.x, fillPatternScale.y);\n      }\n      if (fillPatternOffset) {\n        this.translate(-1 * fillPatternOffset.x, -1 * fillPatternOffset.y);\n      }\n\n      this.setAttr(\n        'fillStyle',\n        this.createPattern(\n          shape.getFillPatternImage(),\n          shape.getFillPatternRepeat() || 'repeat'\n        )\n      );\n      this.fill();\n    },\n    _fillLinearGradient: function(shape) {\n      var start = shape.getFillLinearGradientStartPoint(),\n        end = shape.getFillLinearGradientEndPoint(),\n        colorStops = shape.getFillLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('fillStyle', grd);\n        shape._fillFunc(this);\n      }\n    },\n    _fillRadialGradient: function(shape) {\n      var start = shape.getFillRadialGradientStartPoint(),\n        end = shape.getFillRadialGradientEndPoint(),\n        startRadius = shape.getFillRadialGradientStartRadius(),\n        endRadius = shape.getFillRadialGradientEndRadius(),\n        colorStops = shape.getFillRadialGradientColorStops(),\n        grd = this.createRadialGradient(\n          start.x,\n          start.y,\n          startRadius,\n          end.x,\n          end.y,\n          endRadius\n        );\n\n      // build color stops\n      for (var n = 0; n < colorStops.length; n += 2) {\n        grd.addColorStop(colorStops[n], colorStops[n + 1]);\n      }\n      this.setAttr('fillStyle', grd);\n      this.fill();\n    },\n    _fill: function(shape) {\n      var hasColor = shape.fill(),\n        fillPriority = shape.getFillPriority();\n\n      // priority fills\n      if (hasColor && fillPriority === 'color') {\n        this._fillColor(shape);\n        return;\n      }\n\n      var hasPattern = shape.getFillPatternImage();\n      if (hasPattern && fillPriority === 'pattern') {\n        this._fillPattern(shape);\n        return;\n      }\n\n      var hasLinearGradient = shape.getFillLinearGradientColorStops();\n      if (hasLinearGradient && fillPriority === 'linear-gradient') {\n        this._fillLinearGradient(shape);\n        return;\n      }\n\n      var hasRadialGradient = shape.getFillRadialGradientColorStops();\n      if (hasRadialGradient && fillPriority === 'radial-gradient') {\n        this._fillRadialGradient(shape);\n        return;\n      }\n\n      // now just try and fill with whatever is available\n      if (hasColor) {\n        this._fillColor(shape);\n      } else if (hasPattern) {\n        this._fillPattern(shape);\n      } else if (hasLinearGradient) {\n        this._fillLinearGradient(shape);\n      } else if (hasRadialGradient) {\n        this._fillRadialGradient(shape);\n      }\n    },\n    _strokeLinearGradient: function(shape) {\n      var start = shape.getStrokeLinearGradientStartPoint(),\n        end = shape.getStrokeLinearGradientEndPoint(),\n        colorStops = shape.getStrokeLinearGradientColorStops(),\n        grd = this.createLinearGradient(start.x, start.y, end.x, end.y);\n\n      if (colorStops) {\n        // build color stops\n        for (var n = 0; n < colorStops.length; n += 2) {\n          grd.addColorStop(colorStops[n], colorStops[n + 1]);\n        }\n        this.setAttr('strokeStyle', grd);\n      }\n    },\n    _stroke: function(shape) {\n      var dash = shape.dash(),\n        // ignore strokeScaleEnabled for Text\n        strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n\n      if (shape.hasStroke()) {\n        if (!strokeScaleEnabled) {\n          this.save();\n          var pixelRatio = this.getCanvas().getPixelRatio();\n          this.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        }\n\n        this._applyLineCap(shape);\n        if (dash && shape.dashEnabled()) {\n          this.setLineDash(dash);\n          this.setAttr('lineDashOffset', shape.dashOffset());\n        }\n\n        this.setAttr('lineWidth', shape.strokeWidth());\n\n        if (!shape.getShadowForStrokeEnabled()) {\n          this.setAttr('shadowColor', 'rgba(0,0,0,0)');\n        }\n\n        // TODO - do we need to make like a fill function?\n\n        var hasLinearGradient = shape.getStrokeLinearGradientColorStops();\n        if (hasLinearGradient) {\n          this._strokeLinearGradient(shape);\n        } else {\n          this.setAttr('strokeStyle', shape.stroke());\n        }\n\n        shape._strokeFunc(this);\n\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    },\n    _applyShadow: function(shape) {\n      var util = Konva.Util,\n        color = util.get(shape.getShadowRGBA(), 'black'),\n        blur = util.get(shape.getShadowBlur(), 5),\n        offset = util.get(shape.getShadowOffset(), {\n          x: 0,\n          y: 0\n        }),\n        scale = shape.getAbsoluteScale(),\n        ratio = this.canvas.getPixelRatio(),\n        scaleX = scale.x * ratio,\n        scaleY = scale.y * ratio;\n\n      this.setAttr('shadowColor', color);\n      this.setAttr(\n        'shadowBlur',\n        blur * Math.min(Math.abs(scaleX), Math.abs(scaleY))\n      );\n      this.setAttr('shadowOffsetX', offset.x * scaleX);\n      this.setAttr('shadowOffsetY', offset.y * scaleY);\n    },\n    _applyGlobalCompositeOperation: function(shape) {\n      var globalCompositeOperation = shape.getGlobalCompositeOperation();\n      if (globalCompositeOperation !== 'source-over') {\n        this.setAttr('globalCompositeOperation', globalCompositeOperation);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.SceneContext, Konva.Context);\n\n  Konva.HitContext = function(canvas) {\n    Konva.Context.call(this, canvas);\n  };\n\n  Konva.HitContext.prototype = {\n    _fill: function(shape) {\n      this.save();\n      this.setAttr('fillStyle', shape.colorKey);\n      shape._fillFuncHit(this);\n      this.restore();\n    },\n    _stroke: function(shape) {\n      if (shape.hasStroke() && shape.strokeHitEnabled()) {\n        // ignore strokeScaleEnabled for Text\n        var strokeScaleEnabled =\n          shape.getStrokeScaleEnabled() || shape instanceof Konva.Text;\n        if (!strokeScaleEnabled) {\n          this.save();\n          this.setTransform(1, 0, 0, 1, 0, 0);\n        }\n        this._applyLineCap(shape);\n        this.setAttr('lineWidth', shape.strokeWidth());\n        this.setAttr('strokeStyle', shape.colorKey);\n        shape._strokeFuncHit(this);\n        if (!strokeScaleEnabled) {\n          this.restore();\n        }\n      }\n    }\n  };\n  Konva.Util.extend(Konva.HitContext, Konva.Context);\n})();\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var GET = 'get',\n    SET = 'set';\n\n  Konva.Factory = {\n    addGetterSetter: function(constructor, attr, def, validator, after) {\n      this.addGetter(constructor, attr, def);\n      this.addSetter(constructor, attr, validator, after);\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addGetter: function(constructor, attr, def) {\n      var method = GET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function() {\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n    },\n    addSetter: function(constructor, attr, validator, after) {\n      // if (!validator && validator !== null) {\n      //   console.error(constructor, attr, 'has no validator.');\n      // }\n      var method = SET + Konva.Util._capitalize(attr);\n\n      constructor.prototype[method] = function(val) {\n        if (validator && val !== undefined && val !== null) {\n          val = validator.call(this, val, attr);\n        }\n\n        this._setAttr(attr, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n    },\n    addComponentsGetterSetter: function(\n      constructor,\n      attr,\n      components,\n      validator,\n      after\n    ) {\n      var len = components.length,\n        capitalize = Konva.Util._capitalize,\n        getter = GET + capitalize(attr),\n        setter = SET + capitalize(attr),\n        n,\n        component;\n\n      // getter\n      constructor.prototype[getter] = function() {\n        var ret = {};\n\n        for (n = 0; n < len; n++) {\n          component = components[n];\n          ret[component] = this.getAttr(attr + capitalize(component));\n        }\n\n        return ret;\n      };\n\n      // setter\n      constructor.prototype[setter] = function(val) {\n        var oldVal = this.attrs[attr],\n          key;\n\n        if (validator) {\n          val = validator.call(this, val);\n        }\n\n        for (key in val) {\n          if (!val.hasOwnProperty(key)) {\n            continue;\n          }\n          this._setAttr(attr + capitalize(key), val[key]);\n        }\n\n        this._fireChangeEvent(attr, oldVal, val);\n\n        if (after) {\n          after.call(this);\n        }\n\n        return this;\n      };\n\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    addOverloadedGetterSetter: function(constructor, attr) {\n      var capitalizedAttr = Konva.Util._capitalize(attr),\n        setter = SET + capitalizedAttr,\n        getter = GET + capitalizedAttr;\n\n      constructor.prototype[attr] = function() {\n        // setting\n        if (arguments.length) {\n          this[setter](arguments[0]);\n          return this;\n        }\n        // getting\n        return this[getter]();\n      };\n    },\n    addDeprecatedGetterSetter: function(constructor, attr, def, validator) {\n      Konva.Util.error('Adding deprecated ' + attr);\n\n      var method = GET + Konva.Util._capitalize(attr);\n\n      var message =\n        attr +\n        ' property is deprecated and will be removed soon. Look at Konva change log for more information.';\n      constructor.prototype[method] = function() {\n        Konva.Util.error(message);\n        var val = this.attrs[attr];\n        return val === undefined ? def : val;\n      };\n      this.addSetter(constructor, attr, validator, function() {\n        Konva.Util.error(message);\n      });\n      this.addOverloadedGetterSetter(constructor, attr);\n    },\n    backCompat: function(constructor, methods) {\n      Konva.Util.each(methods, function(oldMethodName, newMethodName) {\n        var method = constructor.prototype[newMethodName];\n        var oldGetter = GET + Konva.Util._capitalize(oldMethodName);\n        var oldSetter = SET + Konva.Util._capitalize(oldMethodName);\n\n        function deprecated() {\n          method.apply(this, arguments);\n          Konva.Util.error(\n            '\"' +\n              oldMethodName +\n              '\" method is deprecated and will be removed soon. Use \"\"' +\n              newMethodName +\n              '\" instead.'\n          );\n        }\n\n        constructor.prototype[oldMethodName] = deprecated;\n        constructor.prototype[oldGetter] = deprecated;\n        constructor.prototype[oldSetter] = deprecated;\n      });\n    },\n    afterSetFilter: function() {\n      this._filterUpToDate = false;\n    }\n  };\n\n  Konva.Validators = {\n    /**\n     * @return {number}\n     */\n    RGBComponent: function(val) {\n      if (val > 255) {\n        return 255;\n      } else if (val < 0) {\n        return 0;\n      }\n      return Math.round(val);\n    },\n    alphaComponent: function(val) {\n      if (val > 1) {\n        return 1;\n      } else if (val < 0.0001) {\n        // chrome does not honor alpha values of 0\n        return 0.0001;\n      }\n\n      return val;\n    },\n    _formatValue: function(val) {\n      if (Konva.Util._isString(val)) {\n        return '\"' + val + '\"';\n      }\n      if (Object.prototype.toString.call(val) === '[object Number]') {\n        return val;\n      }\n      if (Konva.Util._isBoolean(val)) {\n        return val;\n      }\n      return Object.prototype.toString.call(val);\n    },\n    getNumberValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isNumber(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a number.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getNumberOrAutoValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          var isNumber = Konva.Util._isNumber(val);\n          var isAuto = val === 'auto';\n\n          if (!(isNumber || isAuto)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a number or \"auto\".'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getStringValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isString(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a string.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getFunctionValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isFunction(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a function.'\n            );\n          }\n          return val;\n        };\n      }\n    },\n    getNumberArrayValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          if (!Konva.Util._isArray(val)) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a array of numbers.'\n            );\n          } else {\n            val.forEach(function(item) {\n              if (!Konva.Util._isNumber(item)) {\n                Konva.Util.warn(\n                  '\"' +\n                    attr +\n                    '\" attribute has non numeric element ' +\n                    item +\n                    '. Make sure that all elements are numbers.'\n                );\n              }\n            });\n          }\n          return val;\n        };\n      }\n    },\n    getBooleanValidator: function() {\n      if (Konva.isUnminified) {\n        return function(val, attr) {\n          var isBool = val === true || val === false;\n          if (!isBool) {\n            Konva.Util.warn(\n              Konva.Validators._formatValue(val) +\n                ' is a not valid value for \"' +\n                attr +\n                '\" attribute. The value should be a boolean.'\n            );\n          }\n          return val;\n        };\n      }\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  // CONSTANTS\n  var ABSOLUTE_OPACITY = 'absoluteOpacity',\n    ABSOLUTE_TRANSFORM = 'absoluteTransform',\n    ABSOLUTE_SCALE = 'absoluteScale',\n    CHANGE = 'Change',\n    CHILDREN = 'children',\n    DOT = '.',\n    EMPTY_STRING = '',\n    GET = 'get',\n    ID = 'id',\n    KONVA = 'konva',\n    LISTENING = 'listening',\n    MOUSEENTER = 'mouseenter',\n    MOUSELEAVE = 'mouseleave',\n    NAME = 'name',\n    SET = 'set',\n    SHAPE = 'Shape',\n    SPACE = ' ',\n    STAGE = 'stage',\n    TRANSFORM = 'transform',\n    UPPER_STAGE = 'Stage',\n    VISIBLE = 'visible',\n    CLONE_BLACK_LIST = ['id'],\n    TRANSFORM_CHANGE_STR = [\n      'xChange.konva',\n      'yChange.konva',\n      'scaleXChange.konva',\n      'scaleYChange.konva',\n      'skewXChange.konva',\n      'skewYChange.konva',\n      'rotationChange.konva',\n      'offsetXChange.konva',\n      'offsetYChange.konva',\n      'transformsEnabledChange.konva'\n    ].join(SPACE),\n    SCALE_CHANGE_STR = ['scaleXChange.konva', 'scaleYChange.konva'].join(SPACE);\n\n  /**\n   * Node constructor. Nodes are entities that can be transformed, layered,\n   * and have bound events. The stage, layers, groups, and shapes all extend Node.\n   * @constructor\n   * @memberof Konva\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   */\n  Konva.Node = function(config) {\n    this._init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Node, {\n    _init: function(config) {\n      this._id = Konva.idCounter++;\n      this.eventListeners = {};\n      this.attrs = {};\n      this._cache = {};\n      this._filterUpToDate = false;\n      this._isUnderCache = false;\n      this.setAttrs(config);\n\n      // event bindings for cache handling\n      this.on(TRANSFORM_CHANGE_STR, function() {\n        this._clearCache(TRANSFORM);\n        this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      });\n\n      this.on(SCALE_CHANGE_STR, function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n      });\n\n      this.on('visibleChange.konva', function() {\n        this._clearSelfAndDescendantCache(VISIBLE);\n      });\n      this.on('listeningChange.konva', function() {\n        this._clearSelfAndDescendantCache(LISTENING);\n      });\n      this.on('opacityChange.konva', function() {\n        this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      });\n    },\n    _clearCache: function(attr) {\n      if (attr) {\n        delete this._cache[attr];\n      } else {\n        this._cache = {};\n      }\n    },\n    _getCache: function(attr, privateGetter) {\n      var cache = this._cache[attr];\n\n      // if not cached, we need to set it using the private getter method.\n      if (cache === undefined) {\n        this._cache[attr] = privateGetter.call(this);\n      }\n\n      return this._cache[attr];\n    },\n    /*\n     * when the logic for a cached result depends on ancestor propagation, use this\n     * method to clear self and children cache\n     */\n    _clearSelfAndDescendantCache: function(attr) {\n      this._clearCache(attr);\n\n      // skip clearing of node is cached with canvas\n      if (this._cache.canvas) {\n        return;\n      }\n      if (this.children) {\n        this.getChildren().each(function(node) {\n          node._clearSelfAndDescendantCache(attr);\n        });\n      }\n    },\n    /**\n     * clear cached canvas\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.clearCache();\n     */\n    clearCache: function() {\n      delete this._cache.canvas;\n      this._filterUpToDate = false;\n      this._clearSelfAndDescendantCache();\n      return this;\n    },\n    /**\n     *  cache node to improve drawing performance, apply filters, or create more accurate\n     *  hit regions. For all basic shapes size of cache canvas will be automatically detected.\n     *  If you need to cache your custom `Konva.Shape` instance you have to pass shape's bounding box\n     *  properties. Look at [https://konvajs.github.io/docs/performance/Shape_Caching.html](link to demo page) for more information.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} [config]\n     * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Number} [config.offset]  increase canvas size by `offset` pixel in all directions.\n     * @param {Boolean} [config.drawBorder] when set to true, a red border will be drawn around the cached\n     *  region for debugging purposes\n     * @param {Number} [config.pixelRatio] change quality (or pixel ratio) of cached image. pixelRatio = 2 will produce 2x sized cache.\n     * @returns {Konva.Node}\n     * @example\n     * // cache a shape with the x,y position of the bounding box at the center and\n     * // the width and height of the bounding box equal to the width and height of\n     * // the shape obtained from shape.width() and shape.height()\n     * image.cache();\n     *\n     * // cache a node and define the bounding box position and size\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200\n     * });\n     *\n     * // cache a node and draw a red border around the bounding box\n     * // for debugging purposes\n     * node.cache({\n     *   x: -30,\n     *   y: -30,\n     *   width: 100,\n     *   height: 200,\n     *   offset : 10,\n     *   drawBorder: true\n     * });\n     */\n    cache: function(config) {\n      var conf = config || {};\n      var rect = {};\n\n      // don't call getClientRect if we have all attributes\n      // it means call it only if have one undefined\n      if (\n        conf.x === undefined ||\n        conf.y === undefined ||\n        conf.width === undefined ||\n        conf.height === undefined\n      ) {\n        rect = this.getClientRect({\n          skipTransform: true,\n          relativeTo: this.getParent()\n        });\n      }\n      var width = conf.width || rect.width,\n        height = conf.height || rect.height,\n        pixelRatio = conf.pixelRatio,\n        x = conf.x === undefined ? rect.x : conf.x,\n        y = conf.y === undefined ? rect.y : conf.y,\n        offset = conf.offset || 0,\n        drawBorder = conf.drawBorder || false;\n\n      if (!width || !height) {\n        Konva.Util.error(\n          'Can not cache the node. Width or height of the node equals 0. Caching is skipped.'\n        );\n        return;\n      }\n\n      width += offset * 2;\n      height += offset * 2;\n\n      x -= offset;\n      y -= offset;\n\n      var cachedSceneCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedFilterCanvas = new Konva.SceneCanvas({\n          pixelRatio: pixelRatio,\n          width: width,\n          height: height\n        }),\n        cachedHitCanvas = new Konva.HitCanvas({\n          pixelRatio: 1,\n          width: width,\n          height: height\n        }),\n        sceneContext = cachedSceneCanvas.getContext(),\n        hitContext = cachedHitCanvas.getContext();\n\n      cachedHitCanvas.isCache = true;\n\n      this.clearCache();\n\n      sceneContext.save();\n      hitContext.save();\n\n      sceneContext.translate(-x, -y);\n      hitContext.translate(-x, -y);\n\n      // extra flag to skip on getAbsolute opacity calc\n      this._isUnderCache = true;\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n      this._clearSelfAndDescendantCache(ABSOLUTE_SCALE);\n\n      this.drawScene(cachedSceneCanvas, this, true);\n      this.drawHit(cachedHitCanvas, this, true);\n      this._isUnderCache = false;\n\n      sceneContext.restore();\n      hitContext.restore();\n\n      // this will draw a red border around the cached box for\n      // debugging purposes\n      if (drawBorder) {\n        sceneContext.save();\n        sceneContext.beginPath();\n        sceneContext.rect(0, 0, width, height);\n        sceneContext.closePath();\n        sceneContext.setAttr('strokeStyle', 'red');\n        sceneContext.setAttr('lineWidth', 5);\n        sceneContext.stroke();\n        sceneContext.restore();\n      }\n\n      this._cache.canvas = {\n        scene: cachedSceneCanvas,\n        filter: cachedFilterCanvas,\n        hit: cachedHitCanvas,\n        x: x,\n        y: y\n      };\n\n      return this;\n    },\n    /**\n     * Return client rectangle {x, y, width, height} of node. This rectangle also include all styling (strokes, shadows, etc).\n     * The rectangle position is relative to parent container.\n     * The purpose of the method is similar to getBoundingClientRect API of the DOM.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Boolean} [config.skipTransform] should we apply transform to node for calculating rect?\n     * @param {Boolean} [config.skipShadow] should we apply shadow to the node for calculating bound box?\n     * @param {Boolean} [config.skipStroke] should we apply stroke to the node for calculating bound box?\n     * @param {Object} [config.relativeTo] calculate client rect relative to one of the parents\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     * var rect = new Konva.Rect({\n     *      width : 100,\n     *      height : 100,\n     *      x : 50,\n     *      y : 50,\n     *      strokeWidth : 4,\n     *      stroke : 'black',\n     *      offsetX : 50,\n     *      scaleY : 2\n     * });\n     *\n     * // get client rect without think off transformations (position, rotation, scale, offset, etc)\n     * rect.getClientRect({ skipTransform: true});\n     * // returns {\n     * //     x : -2,   // two pixels for stroke / 2\n     * //     y : -2,\n     * //     width : 104, // increased by 4 for stroke\n     * //     height : 104\n     * //}\n     *\n     * // get client rect with transformation applied\n     * rect.getClientRect();\n     * // returns Object {x: -2, y: 46, width: 104, height: 208}\n     */\n    getClientRect: function() {\n      // abstract method\n      // redefine in Container and Shape\n      throw new Error('abstract \"getClientRect\" method call');\n    },\n    _transformedRect: function(rect, top) {\n      var points = [\n        { x: rect.x, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y },\n        { x: rect.x + rect.width, y: rect.y + rect.height },\n        { x: rect.x, y: rect.y + rect.height }\n      ];\n      var minX, minY, maxX, maxY;\n      var trans = this.getAbsoluteTransform(top);\n      points.forEach(function(point) {\n        var transformed = trans.point(point);\n        if (minX === undefined) {\n          minX = maxX = transformed.x;\n          minY = maxY = transformed.y;\n        }\n        minX = Math.min(minX, transformed.x);\n        minY = Math.min(minY, transformed.y);\n        maxX = Math.max(maxX, transformed.x);\n        maxY = Math.max(maxY, transformed.y);\n      });\n      return {\n        x: minX,\n        y: minY,\n        width: maxX - minX,\n        height: maxY - minY\n      };\n    },\n    _drawCachedSceneCanvas: function(context) {\n      context.save();\n      context._applyOpacity(this);\n      context._applyGlobalCompositeOperation(this);\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n\n      var cacheCanvas = this._getCachedSceneCanvas();\n      var ratio = cacheCanvas.pixelRatio;\n\n      context.drawImage(\n        cacheCanvas._canvas,\n        0,\n        0,\n        cacheCanvas.width / ratio,\n        cacheCanvas.height / ratio\n      );\n      context.restore();\n    },\n    _drawCachedHitCanvas: function(context) {\n      var cachedCanvas = this._cache.canvas,\n        hitCanvas = cachedCanvas.hit;\n      context.save();\n      context.translate(this._cache.canvas.x, this._cache.canvas.y);\n      context.drawImage(hitCanvas._canvas, 0, 0);\n      context.restore();\n    },\n    _getCachedSceneCanvas: function() {\n      var filters = this.filters(),\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = cachedCanvas.scene,\n        filterCanvas = cachedCanvas.filter,\n        filterContext = filterCanvas.getContext(),\n        len,\n        imageData,\n        n,\n        filter;\n\n      if (filters) {\n        if (!this._filterUpToDate) {\n          var ratio = sceneCanvas.pixelRatio;\n\n          try {\n            len = filters.length;\n            filterContext.clear();\n\n            // copy cached canvas onto filter context\n            filterContext.drawImage(\n              sceneCanvas._canvas,\n              0,\n              0,\n              sceneCanvas.getWidth() / ratio,\n              sceneCanvas.getHeight() / ratio\n            );\n            imageData = filterContext.getImageData(\n              0,\n              0,\n              filterCanvas.getWidth(),\n              filterCanvas.getHeight()\n            );\n\n            // apply filters to filter context\n            for (n = 0; n < len; n++) {\n              filter = filters[n];\n              if (typeof filter !== 'function') {\n                Konva.Util.error(\n                  'Filter should be type of function, but got ' +\n                    typeof filter +\n                    ' insted. Please check correct filters'\n                );\n                continue;\n              }\n              filter.call(this, imageData);\n              filterContext.putImageData(imageData, 0, 0);\n            }\n          } catch (e) {\n            Konva.Util.error('Unable to apply filter. ' + e.message);\n          }\n\n          this._filterUpToDate = true;\n        }\n\n        return filterCanvas;\n      }\n      return sceneCanvas;\n    },\n    /**\n     * bind events to the node. KonvaJS supports mouseover, mousemove,\n     *  mouseout, mouseenter, mouseleave, mousedown, mouseup, wheel, contextmenu, click, dblclick, touchstart, touchmove,\n     *  touchend, tap, dbltap, dragstart, dragmove, and dragend events. The Konva Stage supports\n     *  contentMouseover, contentMousemove, contentMouseout, contentMousedown, contentMouseup, contentWheel, contentContextmenu\n     *  contentClick, contentDblclick, contentTouchstart, contentTouchmove, contentTouchend, contentTap,\n     *  and contentDblTap.  Pass in a string of events delimited by a space to bind multiple events at once\n     *  such as 'mousedown mouseup mousemove'. Include a namespace to bind an\n     *  event by name such as 'click.foobar'.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', 'mousedown.foo touchstart.foo'\n     * @param {Function} handler The handler function is passed an event object\n     * @returns {Konva.Node}\n     * @example\n     * // add click listener\n     * node.on('click', function() {\n     *   console.log('you clicked me!');\n     * });\n     *\n     * // get the target node\n     * node.on('click', function(evt) {\n     *   console.log(evt.target);\n     * });\n     *\n     * // stop event propagation\n     * node.on('click', function(evt) {\n     *   evt.cancelBubble = true;\n     * });\n     *\n     * // bind multiple listeners\n     * node.on('click touchstart', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // namespace listener\n     * node.on('click.foo', function() {\n     *   console.log('you clicked/touched me!');\n     * });\n     *\n     * // get the event type\n     * node.on('click tap', function(evt) {\n     *   var eventType = evt.type;\n     * });\n     *\n     * // get native event object\n     * node.on('click tap', function(evt) {\n     *   var nativeEvent = evt.evt;\n     * });\n     *\n     * // for change events, get the old and new val\n     * node.on('xChange', function(evt) {\n     *   var oldVal = evt.oldVal;\n     *   var newVal = evt.newVal;\n     * });\n     *\n     * // get event targets\n     * // with event delegations\n     * layer.on('click', 'Group', function(evt) {\n     *   var shape = evt.target;\n     *   var group = evtn.currentTarger;\n     * });\n     */\n    on: function(evtStr, handler) {\n      if (arguments.length === 3) {\n        return this._delegate.apply(this, arguments);\n      }\n      var events = evtStr.split(SPACE),\n        len = events.length,\n        n,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      /*\n       * loop through types and attach event listeners to\n       * each one.  eg. 'click mouseover.namespace mouseout'\n       * will create three event bindings\n       */\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1] || EMPTY_STRING;\n\n        // create events array if it doesn't exist\n        if (!this.eventListeners[baseEvent]) {\n          this.eventListeners[baseEvent] = [];\n        }\n\n        this.eventListeners[baseEvent].push({\n          name: name,\n          handler: handler\n        });\n      }\n\n      return this;\n    },\n    /**\n     * remove event bindings from the node. Pass in a string of\n     *  event types delimmited by a space to remove multiple event\n     *  bindings at once such as 'mousedown mouseup mousemove'.\n     *  include a namespace to remove an event binding by name\n     *  such as 'click.foobar'. If you only give a name like '.foobar',\n     *  all events in that namespace will be removed.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} evtStr e.g. 'click', 'mousedown touchstart', '.foobar'\n     * @returns {Konva.Node}\n     * @example\n     * // remove listener\n     * node.off('click');\n     *\n     * // remove multiple listeners\n     * node.off('click touchstart');\n     *\n     * // remove listener by name\n     * node.off('click.foo');\n     */\n    off: function(evtStr, callback) {\n      var events = (evtStr || '').split(SPACE),\n        len = events.length,\n        n,\n        t,\n        event,\n        parts,\n        baseEvent,\n        name;\n\n      if (!evtStr) {\n        // remove all events\n        for (t in this.eventListeners) {\n          this._off(t);\n        }\n      }\n      for (n = 0; n < len; n++) {\n        event = events[n];\n        parts = event.split(DOT);\n        baseEvent = parts[0];\n        name = parts[1];\n\n        if (baseEvent) {\n          if (this.eventListeners[baseEvent]) {\n            this._off(baseEvent, name, callback);\n          }\n        } else {\n          for (t in this.eventListeners) {\n            this._off(t, name, callback);\n          }\n        }\n      }\n      return this;\n    },\n    // some event aliases for third party integration like HammerJS\n    dispatchEvent: function(evt) {\n      var e = {\n        target: this,\n        type: evt.type,\n        evt: evt\n      };\n      this.fire(evt.type, e);\n      return this;\n    },\n    addEventListener: function(type, handler) {\n      // we have to pass native event to handler\n      this.on(type, function(evt) {\n        handler.call(this, evt.evt);\n      });\n      return this;\n    },\n    removeEventListener: function(type) {\n      this.off(type);\n      return this;\n    },\n    // like node.on\n    _delegate: function(event, selector, handler) {\n      var stopNode = this;\n      this.on(event, function(evt) {\n        var targets = evt.target.findAncestors(selector, true, stopNode);\n        for (var i = 0; i < targets.length; i++) {\n          evt = Konva.Util.cloneObject(evt);\n          evt.currentTarget = targets[i];\n          handler.call(targets[i], evt);\n        }\n      });\n    },\n    /**\n     * remove self from parent, but don't destroy. You can reuse node later.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     * @example\n     * node.remove();\n     */\n    remove: function() {\n      var parent = this.getParent();\n\n      if (parent && parent.children) {\n        parent.children.splice(this.index, 1);\n        parent._setChildrenIndices();\n        delete this.parent;\n      }\n\n      // every cached attr that is calculated via node tree\n      // traversal must be cleared when removing a node\n      this._clearSelfAndDescendantCache(STAGE);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n      this._clearSelfAndDescendantCache(VISIBLE);\n      this._clearSelfAndDescendantCache(LISTENING);\n      this._clearSelfAndDescendantCache(ABSOLUTE_OPACITY);\n\n      return this;\n    },\n    /**\n     * remove and destroy a node. Kill it and delete forever! You should not reuse node after destroy().\n     * @method\n     * @memberof Konva.Node.prototype\n     * @example\n     * node.destroy();\n     */\n    destroy: function() {\n      // remove from ids and names hashes\n      Konva._removeId(this.getId());\n\n      // remove all names\n      var names = (this.getName() || '').split(/\\s/g);\n      for (var i = 0; i < names.length; i++) {\n        var subname = names[i];\n        Konva._removeName(subname, this._id);\n      }\n\n      this.remove();\n      return this;\n    },\n    /**\n     * get attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @returns {Integer|String|Object|Array}\n     * @example\n     * var x = node.getAttr('x');\n     */\n    getAttr: function(attr) {\n      var method = GET + Konva.Util._capitalize(attr);\n      if (Konva.Util._isFunction(this[method])) {\n        return this[method]();\n      }\n      // otherwise get directly\n      return this.attrs[attr];\n    },\n    /**\n     * get ancestors\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Collection}\n     * @example\n     * shape.getAncestors().each(function(node) {\n     *   console.log(node.getId());\n     * })\n     */\n    getAncestors: function() {\n      var parent = this.getParent(),\n        ancestors = new Konva.Collection();\n\n      while (parent) {\n        ancestors.push(parent);\n        parent = parent.getParent();\n      }\n\n      return ancestors;\n    },\n    /**\n     * get attrs object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAttrs: function() {\n      return this.attrs || {};\n    },\n    /**\n     * set multiple attrs at once using an object literal\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config object containing key value pairs\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttrs({\n     *   x: 5,\n     *   fill: 'red'\n     * });\n     */\n    setAttrs: function(config) {\n      var key, method;\n\n      if (!config) {\n        return this;\n      }\n      for (key in config) {\n        if (key === CHILDREN) {\n          continue;\n        }\n        method = SET + Konva.Util._capitalize(key);\n        // use setter if available\n        if (Konva.Util._isFunction(this[method])) {\n          this[method](config[key]);\n        } else {\n          // otherwise set directly\n          this._setAttr(key, config[key]);\n        }\n      }\n      return this;\n    },\n    /**\n     * determine if node is listening for events by taking into account ancestors.\n     *\n     * Parent    | Self      | isListening\n     * listening | listening |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n     *\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    isListening: function() {\n      return this._getCache(LISTENING, this._isListening);\n    },\n    _isListening: function() {\n      var listening = this.getListening(),\n        parent = this.getParent();\n\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (listening === 'inherit') {\n        if (parent) {\n          return parent.isListening();\n        } else {\n          return true;\n        }\n      } else {\n        return listening;\n      }\n    },\n    /**\n     * determine if node is visible by taking into account ancestors.\n     *\n     * Parent    | Self      | isVisible\n     * visible   | visible   |\n     * ----------+-----------+------------\n     * T         | T         | T\n     * T         | F         | F\n     * F         | T         | T\n     * F         | F         | F\n     * ----------+-----------+------------\n     * T         | I         | T\n     * F         | I         | F\n     * I         | I         | T\n\n      * @method\n      * @memberof Konva.Node.prototype\n      * @returns {Boolean}\n      */\n    isVisible: function() {\n      return this._getCache(VISIBLE, this._isVisible);\n    },\n    _isVisible: function(relativeTo) {\n      var visible = this.getVisible(),\n        parent = this.getParent();\n\n      if (relativeTo === parent && visible === 'inherit') {\n        return true;\n      } else if (relativeTo === parent) {\n        return visible;\n      }\n      // the following conditions are a simplification of the truth table above.\n      // please modify carefully\n      if (visible === 'inherit') {\n        if (parent) {\n          return parent._isVisible(relativeTo);\n        } else {\n          return true;\n        }\n      } else {\n        return visible;\n      }\n    },\n    /**\n     * determine if listening is enabled by taking into account descendants.  If self or any children\n     * have _isListeningEnabled set to true, then self also has listening enabled.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    shouldDrawHit: function() {\n      var layer = this.getLayer();\n\n      return (\n        (!layer && this.isListening() && this.isVisible()) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isListening() &&\n          this.isVisible())\n      );\n    },\n    /**\n     * show node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    show: function() {\n      this.setVisible(true);\n      return this;\n    },\n    /**\n     * hide node.  Hidden nodes are no longer detectable\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    hide: function() {\n      this.setVisible(false);\n      return this;\n    },\n    /**\n     * get zIndex relative to the node's siblings who share the same parent\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getZIndex: function() {\n      return this.index || 0;\n    },\n    /**\n     * get absolute z-index which takes into account sibling\n     *  and ancestor indices\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getAbsoluteZIndex: function() {\n      var depth = this.getDepth(),\n        that = this,\n        index = 0,\n        nodes,\n        len,\n        n,\n        child;\n\n      function addChildren(children) {\n        nodes = [];\n        len = children.length;\n        for (n = 0; n < len; n++) {\n          child = children[n];\n          index++;\n\n          if (child.nodeType !== SHAPE) {\n            nodes = nodes.concat(child.getChildren().toArray());\n          }\n\n          if (child._id === that._id) {\n            n = len;\n          }\n        }\n\n        if (nodes.length > 0 && nodes[0].getDepth() <= depth) {\n          addChildren(nodes);\n        }\n      }\n      if (that.nodeType !== UPPER_STAGE) {\n        addChildren(that.getStage().getChildren());\n      }\n\n      return index;\n    },\n    /**\n     * get node depth in node tree.  Returns an integer.\n     *  e.g. Stage depth will always be 0.  Layers will always be 1.  Groups and Shapes will always\n     *  be >= 2\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Integer}\n     */\n    getDepth: function() {\n      var depth = 0,\n        parent = this.parent;\n\n      while (parent) {\n        depth++;\n        parent = parent.parent;\n      }\n      return depth;\n    },\n    setPosition: function(pos) {\n      this.setX(pos.x);\n      this.setY(pos.y);\n      return this;\n    },\n    getPosition: function() {\n      return {\n        x: this.getX(),\n        y: this.getY()\n      };\n    },\n    /**\n     * get absolute position relative to the top left corner of the stage container div\n     * or relative to passed node\n     * @method\n     * @param {Object} [top] optional parent node\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    getAbsolutePosition: function(top) {\n      var absoluteMatrix = this.getAbsoluteTransform(top).getMatrix(),\n        absoluteTransform = new Konva.Transform(),\n        offset = this.offset();\n\n      // clone the matrix array\n      absoluteTransform.m = absoluteMatrix.slice();\n      absoluteTransform.translate(offset.x, offset.y);\n\n      return absoluteTransform.getTranslation();\n    },\n    /**\n     * set absolute position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Konva.Node}\n     */\n    setAbsolutePosition: function(pos) {\n      var origTrans = this._clearTransform(),\n        it;\n\n      // don't clear translation\n      this.attrs.x = origTrans.x;\n      this.attrs.y = origTrans.y;\n      delete origTrans.x;\n      delete origTrans.y;\n\n      // unravel transform\n      it = this.getAbsoluteTransform();\n\n      it.invert();\n      it.translate(pos.x, pos.y);\n      pos = {\n        x: this.attrs.x + it.getTranslation().x,\n        y: this.attrs.y + it.getTranslation().y\n      };\n\n      this.setPosition({ x: pos.x, y: pos.y });\n      this._setTransform(origTrans);\n\n      return this;\n    },\n    _setTransform: function(trans) {\n      var key;\n\n      for (key in trans) {\n        this.attrs[key] = trans[key];\n      }\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n    },\n    _clearTransform: function() {\n      var trans = {\n        x: this.getX(),\n        y: this.getY(),\n        rotation: this.getRotation(),\n        scaleX: this.getScaleX(),\n        scaleY: this.getScaleY(),\n        offsetX: this.getOffsetX(),\n        offsetY: this.getOffsetY(),\n        skewX: this.getSkewX(),\n        skewY: this.getSkewY()\n      };\n\n      this.attrs.x = 0;\n      this.attrs.y = 0;\n      this.attrs.rotation = 0;\n      this.attrs.scaleX = 1;\n      this.attrs.scaleY = 1;\n      this.attrs.offsetX = 0;\n      this.attrs.offsetY = 0;\n      this.attrs.skewX = 0;\n      this.attrs.skewY = 0;\n\n      this._clearCache(TRANSFORM);\n      this._clearSelfAndDescendantCache(ABSOLUTE_TRANSFORM);\n\n      // return original transform\n      return trans;\n    },\n    /**\n     * move node by an amount relative to its current position\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} change\n     * @param {Number} change.x\n     * @param {Number} change.y\n     * @returns {Konva.Node}\n     * @example\n     * // move node in x direction by 1px and y direction by 2px\n     * node.move({\n     *   x: 1,\n     *   y: 2)\n     * });\n     */\n    move: function(change) {\n      var changeX = change.x,\n        changeY = change.y,\n        x = this.getX(),\n        y = this.getY();\n\n      if (changeX !== undefined) {\n        x += changeX;\n      }\n\n      if (changeY !== undefined) {\n        y += changeY;\n      }\n\n      this.setPosition({ x: x, y: y });\n      return this;\n    },\n    _eachAncestorReverse: function(func, top) {\n      var family = [],\n        parent = this.getParent(),\n        len,\n        n;\n\n      // if top node is defined, and this node is top node,\n      // there's no need to build a family tree.  just execute\n      // func with this because it will be the only node\n      if (top && top._id === this._id) {\n        func(this);\n        return;\n      }\n\n      family.unshift(this);\n\n      while (parent && (!top || parent._id !== top._id)) {\n        family.unshift(parent);\n        parent = parent.parent;\n      }\n\n      len = family.length;\n      for (n = 0; n < len; n++) {\n        func(family[n]);\n      }\n    },\n    /**\n     * rotate node by an amount in degrees relative to its current rotation\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Number} theta\n     * @returns {Konva.Node}\n     */\n    rotate: function(theta) {\n      this.setRotation(this.getRotation() + theta);\n      return this;\n    },\n    /**\n     * move node to the top of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToTop: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveToTop function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.push(this);\n      this.parent._setChildrenIndices();\n      return true;\n    },\n    /**\n     * move node up\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean} flag is moved or not\n     */\n    moveUp: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveUp function is ignored.');\n        return false;\n      }\n      var index = this.index,\n        len = this.parent.getChildren().length;\n      if (index < len - 1) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index + 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node down\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveDown: function() {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. moveDown function is ignored.');\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.splice(index - 1, 0, this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * move node to the bottom of its siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Boolean}\n     */\n    moveToBottom: function() {\n      if (!this.parent) {\n        Konva.Util.warn(\n          'Node has no parent. moveToBottom function is ignored.'\n        );\n        return false;\n      }\n      var index = this.index;\n      if (index > 0) {\n        this.parent.children.splice(index, 1);\n        this.parent.children.unshift(this);\n        this.parent._setChildrenIndices();\n        return true;\n      }\n      return false;\n    },\n    /**\n     * set zIndex relative to siblings\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Integer} zIndex\n     * @returns {Konva.Node}\n     */\n    setZIndex: function(zIndex) {\n      if (!this.parent) {\n        Konva.Util.warn('Node has no parent. zIndex parameter is ignored.');\n        return false;\n      }\n      var index = this.index;\n      this.parent.children.splice(index, 1);\n      this.parent.children.splice(zIndex, 0, this);\n      this.parent._setChildrenIndices();\n      return this;\n    },\n    /**\n     * get absolute opacity\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Number}\n     */\n    getAbsoluteOpacity: function() {\n      return this._getCache(ABSOLUTE_OPACITY, this._getAbsoluteOpacity);\n    },\n    _getAbsoluteOpacity: function() {\n      var absOpacity = this.getOpacity();\n      var parent = this.getParent();\n      if (parent && !parent._isUnderCache) {\n        absOpacity *= this.getParent().getAbsoluteOpacity();\n      }\n      return absOpacity;\n    },\n    /**\n     * move node to another container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Container} newContainer\n     * @returns {Konva.Node}\n     * @example\n     * // move node from current layer into layer2\n     * node.moveTo(layer2);\n     */\n    moveTo: function(newContainer) {\n      // do nothing if new container is already parent\n      if (this.getParent() !== newContainer) {\n        // this.remove my be overrided by drag and drop\n        // buy we need original\n        (this.__originalRemove || this.remove).call(this);\n        newContainer.add(this);\n      }\n      return this;\n    },\n    /**\n     * convert Node into an object for serialization.  Returns an object.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Object}\n     */\n    toObject: function() {\n      var obj = {},\n        attrs = this.getAttrs(),\n        key,\n        val,\n        getter,\n        defaultValue;\n\n      obj.attrs = {};\n\n      for (key in attrs) {\n        val = attrs[key];\n        getter = typeof this[key] === 'function' && this[key];\n        // remove attr value so that we can extract the default value from the getter\n        delete attrs[key];\n        defaultValue = getter ? getter.call(this) : null;\n        // restore attr value\n        attrs[key] = val;\n        if (defaultValue !== val) {\n          obj.attrs[key] = val;\n        }\n      }\n\n      obj.className = this.getClassName();\n      return Konva.Util._prepareToStringify(obj);\n    },\n    /**\n     * convert Node into a JSON string.  Returns a JSON string.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}}\n     */\n    toJSON: function() {\n      return JSON.stringify(this.toObject());\n    },\n    /**\n     * get parent container\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    getParent: function() {\n      return this.parent;\n    },\n    /**\n     * get all ancestros (parent then parent of the parent, etc) of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Array} [ancestors]\n     * @example\n     * // get one of the parent group\n     * var parentGroups = node.findAncestors('Group');\n     */\n    findAncestors: function(selector, includeSelf, stopNode) {\n      var res = [];\n\n      if (includeSelf && this._isMatch(selector)) {\n        res.push(this);\n      }\n      var ancestor = this.parent;\n      while (ancestor) {\n        if (ancestor === stopNode) {\n          return res;\n        }\n        if (ancestor._isMatch(selector)) {\n          res.push(ancestor);\n        }\n        ancestor = ancestor.parent;\n      }\n      return res;\n    },\n    /**\n     * get ancestor (parent or parent of the parent, etc) of the node that match passed selector\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} [selector] selector for search\n     * @param {Boolean} [includeSelf] show we think that node is ancestro itself?\n     * @param {Konva.Node} [stopNode] optional node where we need to stop searching (one of ancestors)\n     * @returns {Konva.Node} ancestor\n     * @example\n     * // get one of the parent group\n     * var group = node.findAncestors('.mygroup');\n     */\n    findAncestor: function(selector, includeSelf, stopNode) {\n      return this.findAncestors(selector, includeSelf, stopNode)[0];\n    },\n    // is current node match passed selector?\n    _isMatch: function(selector) {\n      if (!selector) {\n        return false;\n      }\n      var selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        sel;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          Konva.Util.warn(\n            'Selector \"' +\n              sel +\n              '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".'\n          );\n          Konva.Util.warn(\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".'\n          );\n          Konva.Util.warn('Konva is awesome, right?');\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          if (this.id() === sel.slice(1)) {\n            return true;\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          if (this.hasName(sel.slice(1))) {\n            return true;\n          }\n        } else if (this._get(sel).length !== 0) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * get layer ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Layer}\n     */\n    getLayer: function() {\n      var parent = this.getParent();\n      return parent ? parent.getLayer() : null;\n    },\n    /**\n     * get stage ancestor\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Stage}\n     */\n    getStage: function() {\n      return this._getCache(STAGE, this._getStage);\n    },\n    _getStage: function() {\n      var parent = this.getParent();\n      if (parent) {\n        return parent.getStage();\n      } else {\n        return undefined;\n      }\n    },\n    /**\n     * fire event\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} eventType event type.  can be a regular event, like click, mouseover, or mouseout, or it can be a custom event, like myCustomEvent\n     * @param {Event} [evt] event object\n     * @param {Boolean} [bubble] setting the value to false, or leaving it undefined, will result in the event\n     *  not bubbling.  Setting the value to true will result in the event bubbling.\n     * @returns {Konva.Node}\n     * @example\n     * // manually fire click event\n     * node.fire('click');\n     *\n     * // fire custom event\n     * node.fire('foo');\n     *\n     * // fire custom event with custom event object\n     * node.fire('foo', {\n     *   bar: 10\n     * });\n     *\n     * // fire click event that bubbles\n     * node.fire('click', null, true);\n     */\n    fire: function(eventType, evt, bubble) {\n      evt = evt || {};\n      evt.target = evt.target || this;\n      // bubble\n      if (bubble) {\n        this._fireAndBubble(eventType, evt);\n      } else {\n        // no bubble\n        this._fire(eventType, evt);\n      }\n      return this;\n    },\n    /**\n     * get absolute transform of the node which takes into\n     *  account its ancestor transforms\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteTransform: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteTransform(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_TRANSFORM, this._getAbsoluteTransform);\n      }\n    },\n    _getAbsoluteTransform: function(top) {\n      var at = new Konva.Transform();\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        var transformsEnabled = node.transformsEnabled();\n\n        if (transformsEnabled === 'all') {\n          at.multiply(node.getTransform());\n        } else if (transformsEnabled === 'position') {\n          at.translate(\n            node.getX() - node.getOffsetX(),\n            node.getY() - node.getOffsetY()\n          );\n        }\n      }, top);\n      return at;\n    },\n    /**\n     * get absolute scale of the node which takes into\n     *  account its ancestor scales\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getAbsoluteScale: function(top) {\n      // if using an argument, we can't cache the result.\n      if (top) {\n        return this._getAbsoluteScale(top);\n      } else {\n        // if no argument, we can cache the result\n        return this._getCache(ABSOLUTE_SCALE, this._getAbsoluteScale);\n      }\n    },\n    _getAbsoluteScale: function(top) {\n      // this is special logic for caching with some shapes with shadow\n      var parent = this;\n      while (parent) {\n        if (parent._isUnderCache) {\n          top = parent;\n        }\n        parent = parent.getParent();\n      }\n\n      var scaleX = 1,\n        scaleY = 1;\n\n      // start with stage and traverse downwards to self\n      this._eachAncestorReverse(function(node) {\n        scaleX *= node.scaleX();\n        scaleY *= node.scaleY();\n      }, top);\n      return {\n        x: scaleX,\n        y: scaleY\n      };\n    },\n    /**\n     * get transform of the node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Transform}\n     */\n    getTransform: function() {\n      return this._getCache(TRANSFORM, this._getTransform);\n    },\n    _getTransform: function() {\n      var m = new Konva.Transform(),\n        x = this.getX(),\n        y = this.getY(),\n        rotation = Konva.getAngle(this.getRotation()),\n        scaleX = this.getScaleX(),\n        scaleY = this.getScaleY(),\n        skewX = this.getSkewX(),\n        skewY = this.getSkewY(),\n        offsetX = this.getOffsetX(),\n        offsetY = this.getOffsetY();\n\n      if (x !== 0 || y !== 0) {\n        m.translate(x, y);\n      }\n      if (rotation !== 0) {\n        m.rotate(rotation);\n      }\n      if (skewX !== 0 || skewY !== 0) {\n        m.skew(skewX, skewY);\n      }\n      if (scaleX !== 1 || scaleY !== 1) {\n        m.scale(scaleX, scaleY);\n      }\n      if (offsetX !== 0 || offsetY !== 0) {\n        m.translate(-1 * offsetX, -1 * offsetY);\n      }\n\n      return m;\n    },\n    /**\n     * clone node.  Returns a new Node instance with identical attributes.  You can also override\n     *  the node properties with an object literal, enabling you to use an existing node as a template\n     *  for another node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} obj override attrs\n     * @returns {Konva.Node}\n     * @example\n     * // simple clone\n     * var clone = node.clone();\n     *\n     * // clone a node and override the x position\n     * var clone = rect.clone({\n     *   x: 5\n     * });\n     */\n    clone: function(obj) {\n      // instantiate new node\n      var attrs = Konva.Util.cloneObject(this.attrs),\n        key,\n        allListeners,\n        len,\n        n,\n        listener;\n      // filter black attrs\n      for (var i in CLONE_BLACK_LIST) {\n        var blockAttr = CLONE_BLACK_LIST[i];\n        delete attrs[blockAttr];\n      }\n      // apply attr overrides\n      for (key in obj) {\n        attrs[key] = obj[key];\n      }\n\n      var node = new this.constructor(attrs);\n      // copy over listeners\n      for (key in this.eventListeners) {\n        allListeners = this.eventListeners[key];\n        len = allListeners.length;\n        for (n = 0; n < len; n++) {\n          listener = allListeners[n];\n          /*\n           * don't include konva namespaced listeners because\n           *  these are generated by the constructors\n           */\n          if (listener.name.indexOf(KONVA) < 0) {\n            // if listeners array doesn't exist, then create it\n            if (!node.eventListeners[key]) {\n              node.eventListeners[key] = [];\n            }\n            node.eventListeners[key].push(listener);\n          }\n        }\n      }\n      return node;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var box = this.getClientRect();\n\n      var stage = this.getStage(),\n        x = config.x !== undefined ? config.x : box.x,\n        y = config.y !== undefined ? config.y : box.y,\n        pixelRatio = config.pixelRatio || 1,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || box.width || (stage ? stage.getWidth() : 0),\n          height:\n            config.height || box.height || (stage ? stage.getHeight() : 0),\n          pixelRatio: pixelRatio\n        }),\n        context = canvas.getContext();\n\n      context.save();\n\n      if (x || y) {\n        context.translate(-1 * x, -1 * y);\n      }\n\n      this.drawScene(canvas);\n      context.restore();\n\n      return canvas;\n    },\n    /**\n     * converts node into an canvas element.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var canvas = node.toCanvas();\n     */\n    toCanvas: function(config) {\n      return this._toKonvaCanvas(config)._canvas;\n    },\n    /**\n     * Creates a composite data URL (base64 string). If MIME type is not\n     * specified, then \"image/png\" will result. For \"image/jpeg\", specify a quality\n     * level as quality (range 0.0 - 1.0)\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @param {Number} [config.pixelRatio] pixelRatio of output image url. Default is 1\n     * @returns {String}\n     */\n    toDataURL: function(config) {\n      config = config || {};\n      var mimeType = config.mimeType || null,\n        quality = config.quality || null;\n      var url = this._toKonvaCanvas(config).toDataURL(mimeType, quality);\n      if (config.callback) {\n        config.callback(url);\n      }\n      return url;\n    },\n    /**\n     * converts node into an image.  Since the toImage\n     *  method is asynchronous, a callback is required.  toImage is most commonly used\n     *  to cache complex drawings as an image so that they don't have to constantly be redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     * @paremt {Number} [config.pixelRatio] pixelRatio of ouput image.  Default is 1.\n     * @example\n     * var image = node.toImage({\n     *   callback: function(img) {\n     *     // do stuff with img\n     *   }\n     * });\n     */\n    toImage: function(config) {\n      if (!config || !config.callback) {\n        throw 'callback required for toImage method config argument';\n      }\n      var callback = config.callback;\n      delete config.callback;\n      Konva.Util._getImage(this.toDataURL(config), function(img) {\n        callback(img);\n      });\n    },\n    setSize: function(size) {\n      this.setWidth(size.width);\n      this.setHeight(size.height);\n      return this;\n    },\n    getSize: function() {\n      return {\n        width: this.getWidth(),\n        height: this.getHeight()\n      };\n    },\n    getWidth: function() {\n      return this.attrs.width || 0;\n    },\n    getHeight: function() {\n      return this.attrs.height || 0;\n    },\n    /**\n     * get class name, which may return Stage, Layer, Group, or shape class names like Rect, Circle, Text, etc.\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getClassName: function() {\n      return this.className || this.nodeType;\n    },\n    /**\n     * get the node type, which may return Stage, Layer, Group, or Node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {String}\n     */\n    getType: function() {\n      return this.nodeType;\n    },\n    getDragDistance: function() {\n      // compare with undefined because we need to track 0 value\n      if (this.attrs.dragDistance !== undefined) {\n        return this.attrs.dragDistance;\n      } else if (this.parent) {\n        return this.parent.getDragDistance();\n      } else {\n        return Konva.dragDistance;\n      }\n    },\n    _get: function(selector) {\n      return this.className === selector || this.nodeType === selector\n        ? [this]\n        : [];\n    },\n    _off: function(type, name, callback) {\n      var evtListeners = this.eventListeners[type],\n        i,\n        evtName,\n        handler;\n\n      for (i = 0; i < evtListeners.length; i++) {\n        evtName = evtListeners[i].name;\n        handler = evtListeners[i].handler;\n\n        // the following two conditions must be true in order to remove a handler:\n        // 1) the current event name cannot be konva unless the event name is konva\n        //    this enables developers to force remove a konva specific listener for whatever reason\n        // 2) an event name is not specified, or if one is specified, it matches the current event name\n        if (\n          (evtName !== 'konva' || name === 'konva') &&\n          (!name || evtName === name) &&\n          (!callback || callback === handler)\n        ) {\n          evtListeners.splice(i, 1);\n          if (evtListeners.length === 0) {\n            delete this.eventListeners[type];\n            break;\n          }\n          i--;\n        }\n      }\n    },\n    _fireChangeEvent: function(attr, oldVal, newVal) {\n      this._fire(attr + CHANGE, {\n        oldVal: oldVal,\n        newVal: newVal\n      });\n    },\n    setId: function(id) {\n      var oldId = this.getId();\n\n      Konva._removeId(oldId);\n      Konva._addId(this, id);\n      this._setAttr(ID, id);\n      return this;\n    },\n    setName: function(name) {\n      var oldNames = (this.getName() || '').split(/\\s/g);\n      var newNames = (name || '').split(/\\s/g);\n      var subname, i;\n      // remove all subnames\n      for (i = 0; i < oldNames.length; i++) {\n        subname = oldNames[i];\n        if (newNames.indexOf(subname) === -1 && subname) {\n          Konva._removeName(subname, this._id);\n        }\n      }\n\n      // add new names\n      for (i = 0; i < newNames.length; i++) {\n        subname = newNames[i];\n        if (oldNames.indexOf(subname) === -1 && subname) {\n          Konva._addName(this, subname);\n        }\n      }\n\n      this._setAttr(NAME, name);\n      return this;\n    },\n    // naming methods\n    /**\n     * add name to node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red');\n     * node.addName('selected');\n     * node.name(); // return 'red selected'\n     */\n    addName: function(name) {\n      if (!this.hasName(name)) {\n        var oldName = this.name();\n        var newName = oldName ? oldName + ' ' + name : name;\n        this.setName(newName);\n      }\n      return this;\n    },\n    /**\n     * check is node has name\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Boolean}\n     * @example\n     * node.name('red');\n     * node.hasName('red');   // return true\n     * node.hasName('selected'); // return false\n     */\n    hasName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      return names.indexOf(name) !== -1;\n    },\n    /**\n     * remove name from node\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} name\n     * @returns {Konva.Node}\n     * @example\n     * node.name('red selected');\n     * node.removeName('selected');\n     * node.hasName('selected'); // return false\n     * node.name(); // return 'red'\n     */\n    removeName: function(name) {\n      var names = (this.name() || '').split(/\\s/g);\n      var index = names.indexOf(name);\n      if (index !== -1) {\n        names.splice(index, 1);\n        this.setName(names.join(' '));\n      }\n      return this;\n    },\n    /**\n     * set attr\n     * @method\n     * @memberof Konva.Node.prototype\n     * @param {String} attr\n     * @param {*} val\n     * @returns {Konva.Node}\n     * @example\n     * node.setAttr('x', 5);\n     */\n    setAttr: function(attr, val) {\n      var method = SET + Konva.Util._capitalize(attr),\n        func = this[method];\n\n      if (Konva.Util._isFunction(func)) {\n        func.call(this, val);\n      } else {\n        // otherwise set directly\n        this._setAttr(attr, val);\n      }\n      return this;\n    },\n    _setAttr: function(key, val) {\n      var oldVal;\n      oldVal = this.attrs[key];\n      var same = oldVal === val;\n      if (same && !Konva.Util.isObject(val)) {\n        return;\n      }\n      if (val === undefined || val === null) {\n        delete this.attrs[key];\n      } else {\n        this.attrs[key] = val;\n      }\n      this._fireChangeEvent(key, oldVal, val);\n    },\n    _setComponentAttr: function(key, component, val) {\n      var oldVal;\n      if (val !== undefined) {\n        oldVal = this.attrs[key];\n\n        if (!oldVal) {\n          // set value to default value using getAttr\n          this.attrs[key] = this.getAttr(key);\n        }\n\n        this.attrs[key][component] = val;\n        this._fireChangeEvent(key, oldVal, val);\n      }\n    },\n    _fireAndBubble: function(eventType, evt, compareShape) {\n      var okayToRun = true;\n\n      if (evt && this.nodeType === SHAPE) {\n        evt.target = this;\n      }\n\n      if (\n        eventType === MOUSEENTER &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      } else if (\n        eventType === MOUSELEAVE &&\n        compareShape &&\n        (this._id === compareShape._id ||\n          (this.isAncestorOf && this.isAncestorOf(compareShape)))\n      ) {\n        okayToRun = false;\n      }\n      if (okayToRun) {\n        this._fire(eventType, evt);\n\n        // simulate event bubbling\n        var stopBubble =\n          (eventType === MOUSEENTER || eventType === MOUSELEAVE) &&\n          (compareShape &&\n            compareShape.isAncestorOf &&\n            compareShape.isAncestorOf(this) &&\n            !compareShape.isAncestorOf(this.parent));\n        if (\n          ((evt && !evt.cancelBubble) || !evt) &&\n          this.parent &&\n          this.parent.isListening() &&\n          !stopBubble\n        ) {\n          if (compareShape && compareShape.parent) {\n            this._fireAndBubble.call(\n              this.parent,\n              eventType,\n              evt,\n              compareShape.parent\n            );\n          } else {\n            this._fireAndBubble.call(this.parent, eventType, evt);\n          }\n        }\n      }\n    },\n    _fire: function(eventType, evt) {\n      var events = this.eventListeners[eventType],\n        i;\n\n      evt = evt || {};\n      evt.currentTarget = this;\n      evt.type = eventType;\n\n      if (events) {\n        for (i = 0; i < events.length; i++) {\n          events[i].handler.call(this, evt);\n        }\n      }\n    },\n    /**\n     * draw both scene and hit graphs.  If the node being drawn is the stage, all of the layers will be cleared and redrawn\n     * @method\n     * @memberof Konva.Node.prototype\n     * @returns {Konva.Node}\n     */\n    draw: function() {\n      this.drawScene();\n      this.drawHit();\n      return this;\n    }\n  });\n\n  /**\n   * create node with JSON string or an Object.  De-serializtion does not generate custom\n   *  shape drawing functions, images, or event handlers (this would make the\n   *  serialized object huge).  If your app uses custom shapes, images, and\n   *  event handlers (it probably does), then you need to select the appropriate\n   *  shapes after loading the stage and set these properties via on(), setSceneFunc(),\n   *  and setImage() methods\n   * @method\n   * @memberof Konva.Node\n   * @param {String|Object} json string or object\n   * @param {Element} [container] optional container dom element used only if you're\n   *  creating a stage node\n   */\n  Konva.Node.create = function(data, container) {\n    if (Konva.Util._isString(data)) {\n      data = JSON.parse(data);\n    }\n    return this._createNode(data, container);\n  };\n  Konva.Node._createNode = function(obj, container) {\n    var className = Konva.Node.prototype.getClassName.call(obj),\n      children = obj.children,\n      no,\n      len,\n      n;\n\n    // if container was passed in, add it to attrs\n    if (container) {\n      obj.attrs.container = container;\n    }\n\n    no = new Konva[className](obj.attrs);\n    if (children) {\n      len = children.length;\n      for (n = 0; n < len; n++) {\n        no.add(this._createNode(children[n]));\n      }\n    }\n\n    return no;\n  };\n\n  // =========================== add getters setters ===========================\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'position');\n  /**\n   * get/set node position relative to parent\n   * @name position\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} pos\n   * @param {Number} pos.x\n   * @param {Number} pos.y\n   * @returns {Object}\n   * @example\n   * // get position\n   * var position = node.position();\n   *\n   * // set position\n   * node.position({\n   *   x: 5\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'x',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set x position\n   * @name x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Object}\n   * @example\n   * // get x\n   * var x = node.x();\n   *\n   * // set x\n   * node.x(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'y',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set y position\n   * @name y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Integer}\n   * @example\n   * // get y\n   * var y = node.y();\n   *\n   * // set y\n   * node.y(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'globalCompositeOperation',\n    'source-over',\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set globalCompositeOperation of a shape\n   * @name globalCompositeOperation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} type\n   * @returns {String}\n   * @example\n   * // get globalCompositeOperation\n   * var globalCompositeOperation = shape.globalCompositeOperation();\n   *\n   * // set globalCompositeOperation\n   * shape.globalCompositeOperation('source-in');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'opacity',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set opacity.  Opacity values range from 0 to 1.\n   *  A node with an opacity of 0 is fully transparent, and a node\n   *  with an opacity of 1 is fully opaque\n   * @name opacity\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} opacity\n   * @returns {Number}\n   * @example\n   * // get opacity\n   * var opacity = node.opacity();\n   *\n   * // set opacity\n   * node.opacity(0.5);\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'name');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'name');\n\n  /**\n   * get/set name\n   * @name name\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} name\n   * @returns {String}\n   * @example\n   * // get name\n   * var name = node.name();\n   *\n   * // set name\n   * node.name('foo');\n   *\n   * // also node may have multiple names (as css classes)\n   * node.name('foo bar');\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'id');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'id');\n\n  /**\n   * get/set id. Id is global for whole page.\n   * @name id\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} id\n   * @returns {String}\n   * @example\n   * // get id\n   * var name = node.id();\n   *\n   * // set id\n   * node.id('foo');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'rotation',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set rotation in degrees\n   * @name rotation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} rotation\n   * @returns {Number}\n   * @example\n   * // get rotation in degrees\n   * var rotation = node.rotation();\n   *\n   * // set rotation in degrees\n   * node.rotation(45);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'scale', ['x', 'y']);\n\n  /**\n   * get/set scale\n   * @name scale\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get scale\n   * var scale = node.scale();\n   *\n   * // set scale\n   * shape.scale({\n   *   x: 2\n   *   y: 3\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'scaleX',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set scale x\n   * @name scaleX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale x\n   * var scaleX = node.scaleX();\n   *\n   * // set scale x\n   * node.scaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'scaleY',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set scale y\n   * @name scaleY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get scale y\n   * var scaleY = node.scaleY();\n   *\n   * // set scale y\n   * node.scaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'skew', ['x', 'y']);\n\n  /**\n   * get/set skew\n   * @name skew\n   * @param {Object} skew\n   * @param {Number} skew.x\n   * @param {Number} skew.y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Object}\n   * @example\n   * // get skew\n   * var skew = node.skew();\n   *\n   * // set skew\n   * node.skew({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'skewX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set skew x\n   * @name skewX\n   * @param {Number} x\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew x\n   * var skewX = node.skewX();\n   *\n   * // set skew x\n   * node.skewX(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'skewY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set skew y\n   * @name skewY\n   * @param {Number} y\n   * @method\n   * @memberof Konva.Node.prototype\n   * @returns {Number}\n   * @example\n   * // get skew y\n   * var skewY = node.skewY();\n   *\n   * // set skew y\n   * node.skewY(3);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Node, 'offset', ['x', 'y']);\n\n  /**\n   * get/set offset.  Offsets the default position and rotation point\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get offset\n   * var offset = node.offset();\n   *\n   * // set offset\n   * node.offset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'offsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set offset x\n   * @name offsetX\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get offset x\n   * var offsetX = node.offsetX();\n   *\n   * // set offset x\n   * node.offsetX(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'offsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set offset y\n   * @name offsetY\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get offset y\n   * var offsetY = node.offsetY();\n   *\n   * // set offset y\n   * node.offsetY(3);\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'dragDistance',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'dragDistance');\n\n  /**\n   * get/set drag distance\n   * @name dragDistance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} distance\n   * @returns {Number}\n   * @example\n   * // get drag distance\n   * var dragDistance = node.dragDistance();\n   *\n   * // set distance\n   * // node starts dragging only if pointer moved more then 3 pixels\n   * node.dragDistance(3);\n   * // or set globally\n   * Konva.dragDistance = 3;\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'width',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'width');\n  /**\n   * get/set width\n   * @name width\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get width\n   * var width = node.width();\n   *\n   * // set width\n   * node.width(100);\n   */\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'height',\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'height');\n  /**\n   * get/set height\n   * @name height\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get height\n   * var height = node.height();\n   *\n   * // set height\n   * node.height(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'listening', 'inherit', function(\n    val\n  ) {\n    var isValid = val === true || val === false || val === 'inherit';\n    if (!isValid) {\n      Konva.Util.warn(\n        val +\n          ' is a not valid value for \"listening\" attribute. The value may be true, false or \"inherit\".'\n      );\n    }\n    return val;\n  });\n  /**\n   * get/set listenig attr.  If you need to determine if a node is listening or not\n   *   by taking into account its parents, use the isListening() method\n   * @name listening\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} listening Can be \"inherit\", true, or false.  The default is \"inherit\".\n   * @returns {Boolean|String}\n   * @example\n   * // get listening attr\n   * var listening = node.listening();\n   *\n   * // stop listening for events\n   * node.listening(false);\n   *\n   * // listen for events\n   * node.listening(true);\n   *\n   * // listen to events according to the parent\n   * node.listening('inherit');\n   */\n\n  /**\n   * get/set preventDefault\n   * By default all shapes will prevent default behaviour\n   * of a browser on a pointer move or tap.\n   * that will prevent native scrolling when you are trying to drag&drop a node\n   * but sometimes you may need to enable default actions\n   * in that case you can set the property to false\n   * @name preventDefault\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} preventDefault\n   * @returns {Number}\n   * @example\n   * // get preventDefault\n   * var shouldPrevent = shape.preventDefault();\n   *\n   * // set preventDefault\n   * shape.preventDefault(false);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'preventDefault',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'filters', null, function(val) {\n    this._filterUpToDate = false;\n    return val;\n  });\n  /**\n   * get/set filters.  Filters are applied to cached canvases\n   * @name filters\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Array} filters array of filters\n   * @returns {Array}\n   * @example\n   * // get filters\n   * var filters = node.filters();\n   *\n   * // set a single filter\n   * node.cache();\n   * node.filters([Konva.Filters.Blur]);\n   *\n   * // set multiple filters\n   * node.cache();\n   * node.filters([\n   *   Konva.Filters.Blur,\n   *   Konva.Filters.Sepia,\n   *   Konva.Filters.Invert\n   * ]);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'visible', 'inherit', function(\n    val\n  ) {\n    var isValid = val === true || val === false || val === 'inherit';\n    if (!isValid) {\n      Konva.Util.warn(\n        val +\n          ' is a not valid value for \"visible\" attribute. The value may be true, false or \"inherit\".'\n      );\n    }\n    return val;\n  });\n  /**\n   * get/set visible attr.  Can be \"inherit\", true, or false.  The default is \"inherit\".\n   *   If you need to determine if a node is visible or not\n   *   by taking into account its parents, use the isVisible() method\n   * @name visible\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean|String} visible\n   * @returns {Boolean|String}\n   * @example\n   * // get visible attr\n   * var visible = node.visible();\n   *\n   * // make invisible\n   * node.visible(false);\n   *\n   * // make visible\n   * node.visible(true);\n   *\n   * // make visible according to the parent\n   * node.visible('inherit');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'transformsEnabled',\n    'all',\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set transforms that are enabled.  Can be \"all\", \"none\", or \"position\".  The default\n   *  is \"all\"\n   * @name transformsEnabled\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} enabled\n   * @returns {String}\n   * @example\n   * // enable position transform only to improve draw performance\n   * node.transformsEnabled('position');\n   *\n   * // enable all transforms\n   * node.transformsEnabled('all');\n   */\n\n  /**\n   * get/set node size\n   * @name size\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Object} size\n   * @param {Number} size.width\n   * @param {Number} size.height\n   * @returns {Object}\n   * @example\n   * // get node size\n   * var size = node.size();\n   * var x = size.x;\n   * var y = size.y;\n   *\n   * // set size\n   * node.size({\n   *   width: 100,\n   *   height: 200\n   * });\n   */\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'size');\n\n  Konva.Factory.backCompat(Konva.Node, {\n    rotateDeg: 'rotate',\n    setRotationDeg: 'setRotation',\n    getRotationDeg: 'getRotation'\n  });\n\n  Konva.Collection.mapMethods(Konva.Node);\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Grayscale Filter\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Grayscale]);\n   */\n  Konva.Filters.Grayscale = function(imageData) {\n    var data = imageData.data,\n      len = data.length,\n      i,\n      brightness;\n\n    for (i = 0; i < len; i += 4) {\n      brightness = 0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2];\n      // red\n      data[i] = brightness;\n      // green\n      data[i + 1] = brightness;\n      // blue\n      data[i + 2] = brightness;\n    }\n  };\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Brighten Filter.\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Brighten]);\n   * node.brightness(0.8);\n   */\n  Konva.Filters.Brighten = function(imageData) {\n    var brightness = this.brightness() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] += brightness;\n      // green\n      data[i + 1] += brightness;\n      // blue\n      data[i + 2] += brightness;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'brightness',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter brightness.  The brightness is a number between -1 and 1.&nbsp; Positive values\n   *  brighten the pixels and negative values darken them. Use with {@link Konva.Filters.Brighten} filter.\n   * @name brightness\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} brightness value between -1 and 1\n   * @returns {Number}\n   */\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Invert Filter\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Invert]);\n   */\n  Konva.Filters.Invert = function(imageData) {\n    var data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 4) {\n      // red\n      data[i] = 255 - data[i];\n      // green\n      data[i + 1] = 255 - data[i + 1];\n      // blue\n      data[i + 2] = 255 - data[i + 2];\n    }\n  };\n})();\n\n/*\n the Gauss filter\n master repo: https://github.com/pavelpower/kineticjsGaussFilter\n*/\n(function(Konva) {\n  'use strict';\n  /*\n\n     StackBlur - a fast almost Gaussian Blur For Canvas\n\n     Version:   0.5\n     Author:    Mario Klingemann\n     Contact:   mario@quasimondo.com\n     Website:   http://www.quasimondo.com/StackBlurForCanvas\n     Twitter:   @quasimondo\n\n     In case you find this class useful - especially in commercial projects -\n     I am not totally unhappy for a small donation to my PayPal account\n     mario@quasimondo.de\n\n     Or support me on flattr:\n     https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript\n\n     Copyright (c) 2010 Mario Klingemann\n\n     Permission is hereby granted, free of charge, to any person\n     obtaining a copy of this software and associated documentation\n     files (the \"Software\"), to deal in the Software without\n     restriction, including without limitation the rights to use,\n     copy, modify, merge, publish, distribute, sublicense, and/or sell\n     copies of the Software, and to permit persons to whom the\n     Software is furnished to do so, subject to the following\n     conditions:\n\n     The above copyright notice and this permission notice shall be\n     included in all copies or substantial portions of the Software.\n\n     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n     OTHER DEALINGS IN THE SOFTWARE.\n     */\n\n  function BlurStack() {\n    this.r = 0;\n    this.g = 0;\n    this.b = 0;\n    this.a = 0;\n    this.next = null;\n  }\n\n  var mul_table = [\n    512,\n    512,\n    456,\n    512,\n    328,\n    456,\n    335,\n    512,\n    405,\n    328,\n    271,\n    456,\n    388,\n    335,\n    292,\n    512,\n    454,\n    405,\n    364,\n    328,\n    298,\n    271,\n    496,\n    456,\n    420,\n    388,\n    360,\n    335,\n    312,\n    292,\n    273,\n    512,\n    482,\n    454,\n    428,\n    405,\n    383,\n    364,\n    345,\n    328,\n    312,\n    298,\n    284,\n    271,\n    259,\n    496,\n    475,\n    456,\n    437,\n    420,\n    404,\n    388,\n    374,\n    360,\n    347,\n    335,\n    323,\n    312,\n    302,\n    292,\n    282,\n    273,\n    265,\n    512,\n    497,\n    482,\n    468,\n    454,\n    441,\n    428,\n    417,\n    405,\n    394,\n    383,\n    373,\n    364,\n    354,\n    345,\n    337,\n    328,\n    320,\n    312,\n    305,\n    298,\n    291,\n    284,\n    278,\n    271,\n    265,\n    259,\n    507,\n    496,\n    485,\n    475,\n    465,\n    456,\n    446,\n    437,\n    428,\n    420,\n    412,\n    404,\n    396,\n    388,\n    381,\n    374,\n    367,\n    360,\n    354,\n    347,\n    341,\n    335,\n    329,\n    323,\n    318,\n    312,\n    307,\n    302,\n    297,\n    292,\n    287,\n    282,\n    278,\n    273,\n    269,\n    265,\n    261,\n    512,\n    505,\n    497,\n    489,\n    482,\n    475,\n    468,\n    461,\n    454,\n    447,\n    441,\n    435,\n    428,\n    422,\n    417,\n    411,\n    405,\n    399,\n    394,\n    389,\n    383,\n    378,\n    373,\n    368,\n    364,\n    359,\n    354,\n    350,\n    345,\n    341,\n    337,\n    332,\n    328,\n    324,\n    320,\n    316,\n    312,\n    309,\n    305,\n    301,\n    298,\n    294,\n    291,\n    287,\n    284,\n    281,\n    278,\n    274,\n    271,\n    268,\n    265,\n    262,\n    259,\n    257,\n    507,\n    501,\n    496,\n    491,\n    485,\n    480,\n    475,\n    470,\n    465,\n    460,\n    456,\n    451,\n    446,\n    442,\n    437,\n    433,\n    428,\n    424,\n    420,\n    416,\n    412,\n    408,\n    404,\n    400,\n    396,\n    392,\n    388,\n    385,\n    381,\n    377,\n    374,\n    370,\n    367,\n    363,\n    360,\n    357,\n    354,\n    350,\n    347,\n    344,\n    341,\n    338,\n    335,\n    332,\n    329,\n    326,\n    323,\n    320,\n    318,\n    315,\n    312,\n    310,\n    307,\n    304,\n    302,\n    299,\n    297,\n    294,\n    292,\n    289,\n    287,\n    285,\n    282,\n    280,\n    278,\n    275,\n    273,\n    271,\n    269,\n    267,\n    265,\n    263,\n    261,\n    259\n  ];\n\n  var shg_table = [\n    9,\n    11,\n    12,\n    13,\n    13,\n    14,\n    14,\n    15,\n    15,\n    15,\n    15,\n    16,\n    16,\n    16,\n    16,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    17,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    18,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    19,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    20,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    21,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    22,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    23,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24,\n    24\n  ];\n\n  function filterGaussBlurRGBA(imageData, radius) {\n    var pixels = imageData.data,\n      width = imageData.width,\n      height = imageData.height;\n\n    var x,\n      y,\n      i,\n      p,\n      yp,\n      yi,\n      yw,\n      r_sum,\n      g_sum,\n      b_sum,\n      a_sum,\n      r_out_sum,\n      g_out_sum,\n      b_out_sum,\n      a_out_sum,\n      r_in_sum,\n      g_in_sum,\n      b_in_sum,\n      a_in_sum,\n      pr,\n      pg,\n      pb,\n      pa,\n      rbs;\n\n    var div = radius + radius + 1,\n      widthMinus1 = width - 1,\n      heightMinus1 = height - 1,\n      radiusPlus1 = radius + 1,\n      sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2,\n      stackStart = new BlurStack(),\n      stackEnd = null,\n      stack = stackStart,\n      stackIn = null,\n      stackOut = null,\n      mul_sum = mul_table[radius],\n      shg_sum = shg_table[radius];\n\n    for (i = 1; i < div; i++) {\n      stack = stack.next = new BlurStack();\n      if (i === radiusPlus1) {\n        stackEnd = stack;\n      }\n    }\n\n    stack.next = stackStart;\n\n    yw = yi = 0;\n\n    for (y = 0; y < height; y++) {\n      r_in_sum = g_in_sum = b_in_sum = a_in_sum = r_sum = g_sum = b_sum = a_sum = 0;\n\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      for (i = 1; i < radiusPlus1; i++) {\n        p = yi + ((widthMinus1 < i ? widthMinus1 : i) << 2);\n        r_sum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[p + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[p + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[p + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n      }\n\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (x = 0; x < width; x++) {\n        pixels[yi + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa !== 0) {\n          pa = 255 / pa;\n          pixels[yi] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[yi + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p = (yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1)) << 2;\n\n        r_in_sum += stackIn.r = pixels[p];\n        g_in_sum += stackIn.g = pixels[p + 1];\n        b_in_sum += stackIn.b = pixels[p + 2];\n        a_in_sum += stackIn.a = pixels[p + 3];\n\n        r_sum += r_in_sum;\n        g_sum += g_in_sum;\n        b_sum += b_in_sum;\n        a_sum += a_in_sum;\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += 4;\n      }\n      yw += width;\n    }\n\n    for (x = 0; x < width; x++) {\n      g_in_sum = b_in_sum = a_in_sum = r_in_sum = g_sum = b_sum = a_sum = r_sum = 0;\n\n      yi = x << 2;\n      r_out_sum = radiusPlus1 * (pr = pixels[yi]);\n      g_out_sum = radiusPlus1 * (pg = pixels[yi + 1]);\n      b_out_sum = radiusPlus1 * (pb = pixels[yi + 2]);\n      a_out_sum = radiusPlus1 * (pa = pixels[yi + 3]);\n\n      r_sum += sumFactor * pr;\n      g_sum += sumFactor * pg;\n      b_sum += sumFactor * pb;\n      a_sum += sumFactor * pa;\n\n      stack = stackStart;\n\n      for (i = 0; i < radiusPlus1; i++) {\n        stack.r = pr;\n        stack.g = pg;\n        stack.b = pb;\n        stack.a = pa;\n        stack = stack.next;\n      }\n\n      yp = width;\n\n      for (i = 1; i <= radius; i++) {\n        yi = (yp + x) << 2;\n\n        r_sum += (stack.r = pr = pixels[yi]) * (rbs = radiusPlus1 - i);\n        g_sum += (stack.g = pg = pixels[yi + 1]) * rbs;\n        b_sum += (stack.b = pb = pixels[yi + 2]) * rbs;\n        a_sum += (stack.a = pa = pixels[yi + 3]) * rbs;\n\n        r_in_sum += pr;\n        g_in_sum += pg;\n        b_in_sum += pb;\n        a_in_sum += pa;\n\n        stack = stack.next;\n\n        if (i < heightMinus1) {\n          yp += width;\n        }\n      }\n\n      yi = x;\n      stackIn = stackStart;\n      stackOut = stackEnd;\n      for (y = 0; y < height; y++) {\n        p = yi << 2;\n        pixels[p + 3] = pa = (a_sum * mul_sum) >> shg_sum;\n        if (pa > 0) {\n          pa = 255 / pa;\n          pixels[p] = ((r_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 1] = ((g_sum * mul_sum) >> shg_sum) * pa;\n          pixels[p + 2] = ((b_sum * mul_sum) >> shg_sum) * pa;\n        } else {\n          pixels[p] = pixels[p + 1] = pixels[p + 2] = 0;\n        }\n\n        r_sum -= r_out_sum;\n        g_sum -= g_out_sum;\n        b_sum -= b_out_sum;\n        a_sum -= a_out_sum;\n\n        r_out_sum -= stackIn.r;\n        g_out_sum -= stackIn.g;\n        b_out_sum -= stackIn.b;\n        a_out_sum -= stackIn.a;\n\n        p =\n          (x +\n            ((p = y + radiusPlus1) < heightMinus1 ? p : heightMinus1) *\n              width) <<\n          2;\n\n        r_sum += r_in_sum += stackIn.r = pixels[p];\n        g_sum += g_in_sum += stackIn.g = pixels[p + 1];\n        b_sum += b_in_sum += stackIn.b = pixels[p + 2];\n        a_sum += a_in_sum += stackIn.a = pixels[p + 3];\n\n        stackIn = stackIn.next;\n\n        r_out_sum += pr = stackOut.r;\n        g_out_sum += pg = stackOut.g;\n        b_out_sum += pb = stackOut.b;\n        a_out_sum += pa = stackOut.a;\n\n        r_in_sum -= pr;\n        g_in_sum -= pg;\n        b_in_sum -= pb;\n        a_in_sum -= pa;\n\n        stackOut = stackOut.next;\n\n        yi += width;\n      }\n    }\n  }\n\n  /**\n   * Blur Filter\n   * @function\n   * @name Blur\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Blur]);\n   * node.blurRadius(10);\n   */\n  Konva.Filters.Blur = function Blur(imageData) {\n    var radius = Math.round(this.blurRadius());\n\n    if (radius > 0) {\n      filterGaussBlurRGBA(imageData, radius);\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blurRadius',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set blur radius. Use with {@link Konva.Filters.Blur} filter\n   * @name blurRadius\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} radius\n   * @returns {Integer}\n   */\n})(Konva);\n\n/*eslint-disable  max-depth */\n(function() {\n  'use strict';\n  function pixelAt(idata, x, y) {\n    var idx = (y * idata.width + x) * 4;\n    var d = [];\n    d.push(\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++],\n      idata.data[idx++]\n    );\n    return d;\n  }\n\n  function rgbDistance(p1, p2) {\n    return Math.sqrt(\n      Math.pow(p1[0] - p2[0], 2) +\n        Math.pow(p1[1] - p2[1], 2) +\n        Math.pow(p1[2] - p2[2], 2)\n    );\n  }\n\n  function rgbMean(pTab) {\n    var m = [0, 0, 0];\n\n    for (var i = 0; i < pTab.length; i++) {\n      m[0] += pTab[i][0];\n      m[1] += pTab[i][1];\n      m[2] += pTab[i][2];\n    }\n\n    m[0] /= pTab.length;\n    m[1] /= pTab.length;\n    m[2] /= pTab.length;\n\n    return m;\n  }\n\n  function backgroundMask(idata, threshold) {\n    var rgbv_no = pixelAt(idata, 0, 0);\n    var rgbv_ne = pixelAt(idata, idata.width - 1, 0);\n    var rgbv_so = pixelAt(idata, 0, idata.height - 1);\n    var rgbv_se = pixelAt(idata, idata.width - 1, idata.height - 1);\n\n    var thres = threshold || 10;\n    if (\n      rgbDistance(rgbv_no, rgbv_ne) < thres &&\n      rgbDistance(rgbv_ne, rgbv_se) < thres &&\n      rgbDistance(rgbv_se, rgbv_so) < thres &&\n      rgbDistance(rgbv_so, rgbv_no) < thres\n    ) {\n      // Mean color\n      var mean = rgbMean([rgbv_ne, rgbv_no, rgbv_se, rgbv_so]);\n\n      // Mask based on color distance\n      var mask = [];\n      for (var i = 0; i < idata.width * idata.height; i++) {\n        var d = rgbDistance(mean, [\n          idata.data[i * 4],\n          idata.data[i * 4 + 1],\n          idata.data[i * 4 + 2]\n        ]);\n        mask[i] = d < thres ? 0 : 255;\n      }\n\n      return mask;\n    }\n  }\n\n  function applyMask(idata, mask) {\n    for (var i = 0; i < idata.width * idata.height; i++) {\n      idata.data[4 * i + 3] = mask[i];\n    }\n  }\n\n  function erodeMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 0, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a === 255 * 8 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function dilateMask(mask, sw, sh) {\n    var weights = [1, 1, 1, 1, 1, 1, 1, 1, 1];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a >= 255 * 4 ? 255 : 0;\n      }\n    }\n\n    return maskResult;\n  }\n\n  function smoothEdgeMask(mask, sw, sh) {\n    var weights = [\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9,\n      1 / 9\n    ];\n    var side = Math.round(Math.sqrt(weights.length));\n    var halfSide = Math.floor(side / 2);\n\n    var maskResult = [];\n    for (var y = 0; y < sh; y++) {\n      for (var x = 0; x < sw; x++) {\n        var so = y * sw + x;\n        var a = 0;\n        for (var cy = 0; cy < side; cy++) {\n          for (var cx = 0; cx < side; cx++) {\n            var scy = y + cy - halfSide;\n            var scx = x + cx - halfSide;\n\n            if (scy >= 0 && scy < sh && scx >= 0 && scx < sw) {\n              var srcOff = scy * sw + scx;\n              var wt = weights[cy * side + cx];\n\n              a += mask[srcOff] * wt;\n            }\n          }\n        }\n\n        maskResult[so] = a;\n      }\n    }\n\n    return maskResult;\n  }\n\n  /**\n   * Mask Filter\n   * @function\n   * @name Mask\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Mask]);\n   * node.threshold(200);\n   */\n  Konva.Filters.Mask = function(imageData) {\n    // Detect pixels close to the background color\n    var threshold = this.threshold(),\n      mask = backgroundMask(imageData, threshold);\n    if (mask) {\n      // Erode\n      mask = erodeMask(mask, imageData.width, imageData.height);\n\n      // Dilate\n      mask = dilateMask(mask, imageData.width, imageData.height);\n\n      // Gradient\n      mask = smoothEdgeMask(mask, imageData.width, imageData.height);\n\n      // Apply mask\n      applyMask(imageData, mask);\n\n      // todo : Update hit region function according to mask\n    }\n\n    return imageData;\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RGB Filter\n   * @function\n   * @name RGB\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.RGB]);\n   * node.blue(120);\n   * node.green(200);\n   */\n  Konva.Filters.RGB = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      i,\n      brightness;\n\n    for (i = 0; i < nPixels; i += 4) {\n      brightness =\n        (0.34 * data[i] + 0.5 * data[i + 1] + 0.16 * data[i + 2]) / 255;\n      data[i] = brightness * red; // r\n      data[i + 1] = brightness * green; // g\n      data[i + 2] = brightness * blue; // b\n      data[i + 3] = data[i + 3]; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter red value. Use with {@link Konva.Filters.RGB} filter.\n   * @name red\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} red value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter green value. Use with {@link Konva.Filters.RGB} filter.\n   * @name green\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} green value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter blue value. Use with {@link Konva.Filters.RGB} filter.\n   * @name blue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} blue value between 0 and 255\n   * @returns {Integer}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RGBA Filter\n   * @function\n   * @name RGBA\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author codefo\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.RGBA]);\n   * node.blue(120);\n   * node.green(200);\n   * node.alpha(0.3);\n   */\n  Konva.Filters.RGBA = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      red = this.red(),\n      green = this.green(),\n      blue = this.blue(),\n      alpha = this.alpha(),\n      i,\n      ia;\n\n    for (i = 0; i < nPixels; i += 4) {\n      ia = 1 - alpha;\n\n      data[i] = red * alpha + data[i] * ia; // r\n      data[i + 1] = green * alpha + data[i + 1] * ia; // g\n      data[i + 2] = blue * alpha + data[i + 2] * ia; // b\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'red', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter red value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name red\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} red value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'green', 0, function(val) {\n    this._filterUpToDate = false;\n    if (val > 255) {\n      return 255;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return Math.round(val);\n    }\n  });\n  /**\n   * get/set filter green value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name green\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} green value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'blue',\n    0,\n    Konva.Validators.RGBComponent,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set filter blue value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name blue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} blue value between 0 and 255\n   * @returns {Integer}\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'alpha', 1, function(val) {\n    this._filterUpToDate = false;\n    if (val > 1) {\n      return 1;\n    } else if (val < 0) {\n      return 0;\n    } else {\n      return val;\n    }\n  });\n  /**\n   * get/set filter alpha value. Use with {@link Konva.Filters.RGBA} filter.\n   * @name alpha\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Float} alpha value between 0 and 1\n   * @returns {Float}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * HSV Filter. Adjusts the hue, saturation and value\n   * @function\n   * @name HSV\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * image.filters([Konva.Filters.HSV]);\n   * image.value(200);\n   */\n\n  Konva.Filters.HSV = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = Math.pow(2, this.value()),\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos(h * Math.PI / 180),\n      vsw = v * s * Math.sin(h * Math.PI / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b;\n      data[i + 1] = gr * r + gg * g + gb * b;\n      data[i + 2] = br * r + bg * g + bb * b;\n      data[i + 3] = a; // alpha\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name hue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} hue value between 0 and 359\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name saturation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'value',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv value. Use with {@link Konva.Filters.HSV} filter.\n   * @name value\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} value 0 is no change, -1.0 halves the value, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'hue',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv hue in degrees. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name hue\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} hue value between 0 and 359\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'saturation',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsv saturation. Use with {@link Konva.Filters.HSV} or {@link Konva.Filters.HSL} filter.\n   * @name saturation\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} saturation 0 is no change, -1.0 halves the saturation, 1.0 doubles, etc..\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'luminance',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set hsl luminance. Use with {@link Konva.Filters.HSL} filter.\n   * @name luminance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} value from -1 to 1\n   * @returns {Number}\n   */\n\n  /**\n   * HSL Filter. Adjusts the hue, saturation and luminance (or lightness)\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * image.filters([Konva.Filters.HSL]);\n   * image.luminance(0.2);\n   */\n\n  Konva.Filters.HSL = function(imageData) {\n    var data = imageData.data,\n      nPixels = data.length,\n      v = 1,\n      s = Math.pow(2, this.saturation()),\n      h = Math.abs(this.hue() + 360) % 360,\n      l = this.luminance() * 127,\n      i;\n\n    // Basis for the technique used:\n    // http://beesbuzz.biz/code/hsv_color_transforms.php\n    // V is the value multiplier (1 for none, 2 for double, 0.5 for half)\n    // S is the saturation multiplier (1 for none, 2 for double, 0.5 for half)\n    // H is the hue shift in degrees (0 to 360)\n    // vsu = V*S*cos(H*PI/180);\n    // vsw = V*S*sin(H*PI/180);\n    //[ .299V+.701vsu+.168vsw    .587V-.587vsu+.330vsw    .114V-.114vsu-.497vsw ] [R]\n    //[ .299V-.299vsu-.328vsw    .587V+.413vsu+.035vsw    .114V-.114vsu+.292vsw ]*[G]\n    //[ .299V-.300vsu+1.25vsw    .587V-.588vsu-1.05vsw    .114V+.886vsu-.203vsw ] [B]\n\n    // Precompute the values in the matrix:\n    var vsu = v * s * Math.cos((h * Math.PI) / 180),\n      vsw = v * s * Math.sin((h * Math.PI) / 180);\n    // (result spot)(source spot)\n    var rr = 0.299 * v + 0.701 * vsu + 0.167 * vsw,\n      rg = 0.587 * v - 0.587 * vsu + 0.33 * vsw,\n      rb = 0.114 * v - 0.114 * vsu - 0.497 * vsw;\n    var gr = 0.299 * v - 0.299 * vsu - 0.328 * vsw,\n      gg = 0.587 * v + 0.413 * vsu + 0.035 * vsw,\n      gb = 0.114 * v - 0.114 * vsu + 0.293 * vsw;\n    var br = 0.299 * v - 0.3 * vsu + 1.25 * vsw,\n      bg = 0.587 * v - 0.586 * vsu - 1.05 * vsw,\n      bb = 0.114 * v + 0.886 * vsu - 0.2 * vsw;\n\n    var r, g, b, a;\n\n    for (i = 0; i < nPixels; i += 4) {\n      r = data[i + 0];\n      g = data[i + 1];\n      b = data[i + 2];\n      a = data[i + 3];\n\n      data[i + 0] = rr * r + rg * g + rb * b + l;\n      data[i + 1] = gr * r + gg * g + gb * b + l;\n      data[i + 2] = br * r + bg * g + bb * b + l;\n      data[i + 3] = a; // alpha\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Emboss Filter.\n   * Pixastic Lib - Emboss filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * License: [http://www.pixastic.com/lib/license.txt]\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Emboss]);\n   * node.embossStrength(0.8);\n   * node.embossWhiteLevel(0.3);\n   * node.embossDirection('right');\n   * node.embossBlend(true);\n   */\n  Konva.Filters.Emboss = function(imageData) {\n    // pixastic strength is between 0 and 10.  I want it between 0 and 1\n    // pixastic greyLevel is between 0 and 255.  I want it between 0 and 1.  Also,\n    // a max value of greyLevel yields a white emboss, and the min value yields a black\n    // emboss.  Therefore, I changed greyLevel to whiteLevel\n    var strength = this.embossStrength() * 10,\n      greyLevel = this.embossWhiteLevel() * 255,\n      direction = this.embossDirection(),\n      blend = this.embossBlend(),\n      dirY = 0,\n      dirX = 0,\n      data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    switch (direction) {\n      case 'top-left':\n        dirY = -1;\n        dirX = -1;\n        break;\n      case 'top':\n        dirY = -1;\n        dirX = 0;\n        break;\n      case 'top-right':\n        dirY = -1;\n        dirX = 1;\n        break;\n      case 'right':\n        dirY = 0;\n        dirX = 1;\n        break;\n      case 'bottom-right':\n        dirY = 1;\n        dirX = 1;\n        break;\n      case 'bottom':\n        dirY = 1;\n        dirX = 0;\n        break;\n      case 'bottom-left':\n        dirY = 1;\n        dirX = -1;\n        break;\n      case 'left':\n        dirY = 0;\n        dirX = -1;\n        break;\n      default:\n        Konva.Util.error('Unknown emboss direction: ' + direction);\n    }\n\n    do {\n      var offsetY = (y - 1) * w4;\n\n      var otherY = dirY;\n      if (y + otherY < 1) {\n        otherY = 0;\n      }\n      if (y + otherY > h) {\n        otherY = 0;\n      }\n\n      var offsetYOther = (y - 1 + otherY) * w * 4;\n\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n\n        var otherX = dirX;\n        if (x + otherX < 1) {\n          otherX = 0;\n        }\n        if (x + otherX > w) {\n          otherX = 0;\n        }\n\n        var offsetOther = offsetYOther + (x - 1 + otherX) * 4;\n\n        var dR = data[offset] - data[offsetOther];\n        var dG = data[offset + 1] - data[offsetOther + 1];\n        var dB = data[offset + 2] - data[offsetOther + 2];\n\n        var dif = dR;\n        var absDif = dif > 0 ? dif : -dif;\n\n        var absG = dG > 0 ? dG : -dG;\n        var absB = dB > 0 ? dB : -dB;\n\n        if (absG > absDif) {\n          dif = dG;\n        }\n        if (absB > absDif) {\n          dif = dB;\n        }\n\n        dif *= strength;\n\n        if (blend) {\n          var r = data[offset] + dif;\n          var g = data[offset + 1] + dif;\n          var b = data[offset + 2] + dif;\n\n          data[offset] = r > 255 ? 255 : r < 0 ? 0 : r;\n          data[offset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n          data[offset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n        } else {\n          var grey = greyLevel - dif;\n          if (grey < 0) {\n            grey = 0;\n          } else if (grey > 255) {\n            grey = 255;\n          }\n\n          data[offset] = data[offset + 1] = data[offset + 2] = grey;\n        }\n      } while (--x);\n    } while (--y);\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossStrength',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss strength. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossStrength\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} level between 0 and 1.  Default is 0.5\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossWhiteLevel',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss white level. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossWhiteLevel\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} embossWhiteLevel between 0 and 1.  Default is 0.5\n   * @returns {Number}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossDirection',\n    'top-left',\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss direction. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossDirection\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {String} embossDirection can be top-left, top, top-right, right, bottom-right, bottom, bottom-left or left\n   *   The default is top-left\n   * @returns {String}\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'embossBlend',\n    false,\n    null,\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set emboss blend. Use with {@link Konva.Filters.Emboss} filter.\n   * @name embossBlend\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean} embossBlend\n   * @returns {Boolean}\n   */\n})();\n\n(function() {\n  'use strict';\n  function remap(fromValue, fromMin, fromMax, toMin, toMax) {\n    // Compute the range of the data\n    var fromRange = fromMax - fromMin,\n      toRange = toMax - toMin,\n      toValue;\n\n    // If either range is 0, then the value can only be mapped to 1 value\n    if (fromRange === 0) {\n      return toMin + toRange / 2;\n    }\n    if (toRange === 0) {\n      return toMin;\n    }\n\n    // (1) untranslate, (2) unscale, (3) rescale, (4) retranslate\n    toValue = (fromValue - fromMin) / fromRange;\n    toValue = toRange * toValue + toMin;\n\n    return toValue;\n  }\n\n  /**\n   * Enhance Filter. Adjusts the colors so that they span the widest\n   *  possible range (ie 0-255). Performs w*h pixel reads and w*h pixel\n   *  writes.\n   * @function\n   * @name Enhance\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Enhance]);\n   * node.enhance(0.4);\n   */\n  Konva.Filters.Enhance = function(imageData) {\n    var data = imageData.data,\n      nSubPixels = data.length,\n      rMin = data[0],\n      rMax = rMin,\n      r,\n      gMin = data[1],\n      gMax = gMin,\n      g,\n      bMin = data[2],\n      bMax = bMin,\n      b,\n      i;\n\n    // If we are not enhancing anything - don't do any computation\n    var enhanceAmount = this.enhance();\n    if (enhanceAmount === 0) {\n      return;\n    }\n\n    // 1st Pass - find the min and max for each channel:\n    for (i = 0; i < nSubPixels; i += 4) {\n      r = data[i + 0];\n      if (r < rMin) {\n        rMin = r;\n      } else if (r > rMax) {\n        rMax = r;\n      }\n      g = data[i + 1];\n      if (g < gMin) {\n        gMin = g;\n      } else if (g > gMax) {\n        gMax = g;\n      }\n      b = data[i + 2];\n      if (b < bMin) {\n        bMin = b;\n      } else if (b > bMax) {\n        bMax = b;\n      }\n      //a = data[i + 3];\n      //if (a < aMin) { aMin = a; } else\n      //if (a > aMax) { aMax = a; }\n    }\n\n    // If there is only 1 level - don't remap\n    if (rMax === rMin) {\n      rMax = 255;\n      rMin = 0;\n    }\n    if (gMax === gMin) {\n      gMax = 255;\n      gMin = 0;\n    }\n    if (bMax === bMin) {\n      bMax = 255;\n      bMin = 0;\n    }\n\n    var rMid,\n      rGoalMax,\n      rGoalMin,\n      gMid,\n      gGoalMax,\n      gGoalMin,\n      bMid,\n      bGoalMax,\n      bGoalMin;\n\n    // If the enhancement is positive - stretch the histogram\n    if (enhanceAmount > 0) {\n      rGoalMax = rMax + enhanceAmount * (255 - rMax);\n      rGoalMin = rMin - enhanceAmount * (rMin - 0);\n      gGoalMax = gMax + enhanceAmount * (255 - gMax);\n      gGoalMin = gMin - enhanceAmount * (gMin - 0);\n      bGoalMax = bMax + enhanceAmount * (255 - bMax);\n      bGoalMin = bMin - enhanceAmount * (bMin - 0);\n      // If the enhancement is negative -   compress the histogram\n    } else {\n      rMid = (rMax + rMin) * 0.5;\n      rGoalMax = rMax + enhanceAmount * (rMax - rMid);\n      rGoalMin = rMin + enhanceAmount * (rMin - rMid);\n      gMid = (gMax + gMin) * 0.5;\n      gGoalMax = gMax + enhanceAmount * (gMax - gMid);\n      gGoalMin = gMin + enhanceAmount * (gMin - gMid);\n      bMid = (bMax + bMin) * 0.5;\n      bGoalMax = bMax + enhanceAmount * (bMax - bMid);\n      bGoalMin = bMin + enhanceAmount * (bMin - bMid);\n    }\n\n    // Pass 2 - remap everything, except the alpha\n    for (i = 0; i < nSubPixels; i += 4) {\n      data[i + 0] = remap(data[i + 0], rMin, rMax, rGoalMin, rGoalMax);\n      data[i + 1] = remap(data[i + 1], gMin, gMax, gGoalMin, gGoalMax);\n      data[i + 2] = remap(data[i + 2], bMin, bMax, bGoalMin, bGoalMax);\n      //data[i + 3] = remap(data[i + 3], aMin, aMax, aGoalMin, aGoalMax);\n    }\n  };\n\n  /**\n   * get/set enhance. Use with {@link Konva.Filters.Enhance} filter. -1 to 1 values\n   * @name enhance\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Float} amount\n   * @returns {Float}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'enhance',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Posterize Filter. Adjusts the channels so that there are no more\n   *  than n different values for that channel. This is also applied\n   *  to the alpha channel.\n   * @function\n   * @name Posterize\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Posterize]);\n   * node.levels(0.8); // between 0 and 1\n   */\n\n  Konva.Filters.Posterize = function(imageData) {\n    // level must be between 1 and 255\n    var levels = Math.round(this.levels() * 254) + 1,\n      data = imageData.data,\n      len = data.length,\n      scale = 255 / levels,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = Math.floor(data[i] / scale) * scale;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'levels',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set levels.  Must be a number between 0 and 1.  Use with {@link Konva.Filters.Posterize} filter.\n   * @name levels\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} level between 0 and 1\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Noise Filter. Randomly adds or substracts to the color channels\n   * @function\n   * @name Noise\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Noise]);\n   * node.noise(0.8);\n   */\n  Konva.Filters.Noise = function(imageData) {\n    var amount = this.noise() * 255,\n      data = imageData.data,\n      nPixels = data.length,\n      half = amount / 2,\n      i;\n\n    for (i = 0; i < nPixels; i += 4) {\n      data[i + 0] += half - 2 * half * Math.random();\n      data[i + 1] += half - 2 * half * Math.random();\n      data[i + 2] += half - 2 * half * Math.random();\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'noise',\n    0.2,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set noise amount.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Noise} filter.\n   * @name noise\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} noise\n   * @returns {Number}\n   */\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  /**\n   * Pixelate Filter. Averages groups of pixels and redraws\n   *  them as larger pixels\n   * @function\n   * @name Pixelate\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Pixelate]);\n   * node.pixelSize(10);\n   */\n\n  Konva.Filters.Pixelate = function(imageData) {\n    var pixelSize = Math.ceil(this.pixelSize()),\n      width = imageData.width,\n      height = imageData.height,\n      x,\n      y,\n      i,\n      //pixelsPerBin = pixelSize * pixelSize,\n      red,\n      green,\n      blue,\n      alpha,\n      nBinsX = Math.ceil(width / pixelSize),\n      nBinsY = Math.ceil(height / pixelSize),\n      xBinStart,\n      xBinEnd,\n      yBinStart,\n      yBinEnd,\n      xBin,\n      yBin,\n      pixelsInBin;\n    imageData = imageData.data;\n\n    if (pixelSize <= 0) {\n      Konva.Util.error('pixelSize value can not be <= 0');\n      return;\n    }\n\n    for (xBin = 0; xBin < nBinsX; xBin += 1) {\n      for (yBin = 0; yBin < nBinsY; yBin += 1) {\n        // Initialize the color accumlators to 0\n        red = 0;\n        green = 0;\n        blue = 0;\n        alpha = 0;\n\n        // Determine which pixels are included in this bin\n        xBinStart = xBin * pixelSize;\n        xBinEnd = xBinStart + pixelSize;\n        yBinStart = yBin * pixelSize;\n        yBinEnd = yBinStart + pixelSize;\n\n        // Add all of the pixels to this bin!\n        pixelsInBin = 0;\n        for (x = xBinStart; x < xBinEnd; x += 1) {\n          if (x >= width) {\n            continue;\n          }\n          for (y = yBinStart; y < yBinEnd; y += 1) {\n            if (y >= height) {\n              continue;\n            }\n            i = (width * y + x) * 4;\n            red += imageData[i + 0];\n            green += imageData[i + 1];\n            blue += imageData[i + 2];\n            alpha += imageData[i + 3];\n            pixelsInBin += 1;\n          }\n        }\n\n        // Make sure the channels are between 0-255\n        red = red / pixelsInBin;\n        green = green / pixelsInBin;\n        blue = blue / pixelsInBin;\n        alpha = alpha / pixelsInBin;\n\n        // Draw this bin\n        for (x = xBinStart; x < xBinEnd; x += 1) {\n          if (x >= width) {\n            continue;\n          }\n          for (y = yBinStart; y < yBinEnd; y += 1) {\n            if (y >= height) {\n              continue;\n            }\n            i = (width * y + x) * 4;\n            imageData[i + 0] = red;\n            imageData[i + 1] = green;\n            imageData[i + 2] = blue;\n            imageData[i + 3] = alpha;\n          }\n        }\n      }\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'pixelSize',\n    8,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set pixel size. Use with {@link Konva.Filters.Pixelate} filter.\n   * @name pixelSize\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} pixelSize\n   * @returns {Integer}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Threshold Filter. Pushes any value above the mid point to\n   *  the max and any value below the mid point to the min.\n   *  This affects the alpha channel.\n   * @function\n   * @name Threshold\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author ippo615\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Threshold]);\n   * node.threshold(0.1);\n   */\n\n  Konva.Filters.Threshold = function(imageData) {\n    var level = this.threshold() * 255,\n      data = imageData.data,\n      len = data.length,\n      i;\n\n    for (i = 0; i < len; i += 1) {\n      data[i] = data[i] < level ? 0 : 255;\n    }\n  };\n\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'threshold',\n    0.5,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n  /**\n   * get/set threshold.  Must be a value between 0 and 1. Use with {@link Konva.Filters.Threshold} or {@link Konva.Filters.Mask} filter.\n   * @name threshold\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} threshold\n   * @returns {Number}\n   */\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Sepia Filter\n   * Based on: Pixastic Lib - Sepia filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * @function\n   * @name Sepia\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @author Jacob Seidelin <jseidelin@nihilogic.dk>\n   * @license MPL v1.1 [http://www.pixastic.com/lib/license.txt]\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Sepia]);\n   */\n  Konva.Filters.Sepia = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      y = imageData.height,\n      w4 = w * 4,\n      offsetY,\n      x,\n      offset,\n      or,\n      og,\n      ob,\n      r,\n      g,\n      b;\n\n    do {\n      offsetY = (y - 1) * w4;\n      x = w;\n      do {\n        offset = offsetY + (x - 1) * 4;\n\n        or = data[offset];\n        og = data[offset + 1];\n        ob = data[offset + 2];\n\n        r = or * 0.393 + og * 0.769 + ob * 0.189;\n        g = or * 0.349 + og * 0.686 + ob * 0.168;\n        b = or * 0.272 + og * 0.534 + ob * 0.131;\n\n        data[offset] = r > 255 ? 255 : r;\n        data[offset + 1] = g > 255 ? 255 : g;\n        data[offset + 2] = b > 255 ? 255 : b;\n        data[offset + 3] = data[offset + 3];\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Solarize Filter\n   * Pixastic Lib - Solarize filter - v0.1.0\n   * Copyright (c) 2008 Jacob Seidelin, jseidelin@nihilogic.dk, http://blog.nihilogic.dk/\n   * License: [http://www.pixastic.com/lib/license.txt]\n   * @function\n   * @name Solarize\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Solarize]);\n   */\n  Konva.Filters.Solarize = function(imageData) {\n    var data = imageData.data,\n      w = imageData.width,\n      h = imageData.height,\n      w4 = w * 4,\n      y = h;\n\n    do {\n      var offsetY = (y - 1) * w4;\n      var x = w;\n      do {\n        var offset = offsetY + (x - 1) * 4;\n        var r = data[offset];\n        var g = data[offset + 1];\n        var b = data[offset + 2];\n\n        if (r > 127) {\n          r = 255 - r;\n        }\n        if (g > 127) {\n          g = 255 - g;\n        }\n        if (b > 127) {\n          b = 255 - b;\n        }\n\n        data[offset] = r;\n        data[offset + 1] = g;\n        data[offset + 2] = b;\n      } while (--x);\n    } while (--y);\n  };\n})();\n\n(function() {\n  'use strict';\n  /*\n   * ToPolar Filter. Converts image data to polar coordinates. Performs\n   *  w*h*4 pixel reads and w*h pixel writes. The r axis is placed along\n   *  what would be the y axis and the theta axis along the x axis.\n   * @function\n   * @author ippo615\n   * @memberof Konva.Filters\n   * @param {ImageData} src, the source image data (what will be transformed)\n   * @param {ImageData} dst, the destination image data (where it will be saved)\n   * @param {Object} opt\n   * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n   *  default is in the middle\n   * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n   *  default is in the middle\n   */\n\n  var ToPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng y as the radius, and x as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta;\n\n    // We want to cover all angles (0-360) and we need to convert to\n    // radians (*PI/180)\n    var conversion = 360 / tSize * Math.PI / 180,\n      sin,\n      cos;\n\n    // var x1, x2, x1i, x2i, y1, y2, y1i, y2i, scale;\n\n    for (theta = 0; theta < tSize; theta += 1) {\n      sin = Math.sin(theta * conversion);\n      cos = Math.cos(theta * conversion);\n      for (radius = 0; radius < rSize; radius += 1) {\n        x = Math.floor(xMid + rMax * radius / rSize * cos);\n        y = Math.floor(yMid + rMax * radius / rSize * sin);\n        i = (y * xSize + x) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        //i = (theta * xSize  +  radius) * 4;\n        i = (theta + radius * xSize) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  /*\n     * FromPolar Filter. Converts image data from polar coordinates back to rectangular.\n     *  Performs w*h*4 pixel reads and w*h pixel writes.\n     * @function\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @param {ImageData} src, the source image data (what will be transformed)\n     * @param {ImageData} dst, the destination image data (where it will be saved)\n     * @param {Object} opt\n     * @param {Number} [opt.polarCenterX] horizontal location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarCenterY] vertical location for the center of the circle,\n     *  default is in the middle\n     * @param {Number} [opt.polarRotation] amount to rotate the image counterclockwis,\n     *  0 is no rotation, 360 degrees is a full rotation\n     */\n\n  var FromPolar = function(src, dst, opt) {\n    var srcPixels = src.data,\n      dstPixels = dst.data,\n      xSize = src.width,\n      ySize = src.height,\n      xMid = opt.polarCenterX || xSize / 2,\n      yMid = opt.polarCenterY || ySize / 2,\n      i,\n      x,\n      y,\n      dx,\n      dy,\n      r = 0,\n      g = 0,\n      b = 0,\n      a = 0;\n\n    // Find the largest radius\n    var rad,\n      rMax = Math.sqrt(xMid * xMid + yMid * yMid);\n    x = xSize - xMid;\n    y = ySize - yMid;\n    rad = Math.sqrt(x * x + y * y);\n    rMax = rad > rMax ? rad : rMax;\n\n    // We'll be uisng x as the radius, and y as the angle (theta=t)\n    var rSize = ySize,\n      tSize = xSize,\n      radius,\n      theta,\n      phaseShift = opt.polarRotation || 0;\n\n    // We need to convert to degrees and we need to make sure\n    // it's between (0-360)\n    // var conversion = tSize/360*180/Math.PI;\n    //var conversion = tSize/360*180/Math.PI;\n\n    var x1, y1;\n\n    for (x = 0; x < xSize; x += 1) {\n      for (y = 0; y < ySize; y += 1) {\n        dx = x - xMid;\n        dy = y - yMid;\n        radius = Math.sqrt(dx * dx + dy * dy) * rSize / rMax;\n        theta = (Math.atan2(dy, dx) * 180 / Math.PI + 360 + phaseShift) % 360;\n        theta = theta * tSize / 360;\n        x1 = Math.floor(theta);\n        y1 = Math.floor(radius);\n        i = (y1 * xSize + x1) * 4;\n        r = srcPixels[i + 0];\n        g = srcPixels[i + 1];\n        b = srcPixels[i + 2];\n        a = srcPixels[i + 3];\n\n        // Store it\n        i = (y * xSize + x) * 4;\n        dstPixels[i + 0] = r;\n        dstPixels[i + 1] = g;\n        dstPixels[i + 2] = b;\n        dstPixels[i + 3] = a;\n      }\n    }\n  };\n\n  //Konva.Filters.ToPolar = Konva.Util._FilterWrapDoubleBuffer(ToPolar);\n  //Konva.Filters.FromPolar = Konva.Util._FilterWrapDoubleBuffer(FromPolar);\n\n  // create a temporary canvas for working - shared between multiple calls\n\n  /*\n     * Kaleidoscope Filter.\n     * @function\n     * @name Kaleidoscope\n     * @author ippo615\n     * @memberof Konva.Filters\n     * @example\n     * node.cache();\n     * node.filters([Konva.Filters.Kaleidoscope]);\n     * node.kaleidoscopePower(3);\n     * node.kaleidoscopeAngle(45);\n     */\n  Konva.Filters.Kaleidoscope = function(imageData) {\n    var xSize = imageData.width,\n      ySize = imageData.height;\n\n    var x, y, xoff, i, r, g, b, a, srcPos, dstPos;\n    var power = Math.round(this.kaleidoscopePower());\n    var angle = Math.round(this.kaleidoscopeAngle());\n    var offset = Math.floor(xSize * (angle % 360) / 360);\n\n    if (power < 1) {\n      return;\n    }\n\n    // Work with our shared buffer canvas\n    var tempCanvas = Konva.Util.createCanvasElement();\n    tempCanvas.width = xSize;\n    tempCanvas.height = ySize;\n    var scratchData = tempCanvas\n      .getContext('2d')\n      .getImageData(0, 0, xSize, ySize);\n\n    // Convert thhe original to polar coordinates\n    ToPolar(imageData, scratchData, {\n      polarCenterX: xSize / 2,\n      polarCenterY: ySize / 2\n    });\n\n    // Determine how big each section will be, if it's too small\n    // make it bigger\n    var minSectionSize = xSize / Math.pow(2, power);\n    while (minSectionSize <= 8) {\n      minSectionSize = minSectionSize * 2;\n      power -= 1;\n    }\n    minSectionSize = Math.ceil(minSectionSize);\n    var sectionSize = minSectionSize;\n\n    // Copy the offset region to 0\n    // Depending on the size of filter and location of the offset we may need\n    // to copy the section backwards to prevent it from rewriting itself\n    var xStart = 0,\n      xEnd = sectionSize,\n      xDelta = 1;\n    if (offset + minSectionSize > xSize) {\n      xStart = sectionSize;\n      xEnd = 0;\n      xDelta = -1;\n    }\n    for (y = 0; y < ySize; y += 1) {\n      for (x = xStart; x !== xEnd; x += xDelta) {\n        xoff = Math.round(x + offset) % xSize;\n        srcPos = (xSize * y + xoff) * 4;\n        r = scratchData.data[srcPos + 0];\n        g = scratchData.data[srcPos + 1];\n        b = scratchData.data[srcPos + 2];\n        a = scratchData.data[srcPos + 3];\n        dstPos = (xSize * y + x) * 4;\n        scratchData.data[dstPos + 0] = r;\n        scratchData.data[dstPos + 1] = g;\n        scratchData.data[dstPos + 2] = b;\n        scratchData.data[dstPos + 3] = a;\n      }\n    }\n\n    // Perform the actual effect\n    for (y = 0; y < ySize; y += 1) {\n      sectionSize = Math.floor(minSectionSize);\n      for (i = 0; i < power; i += 1) {\n        for (x = 0; x < sectionSize + 1; x += 1) {\n          srcPos = (xSize * y + x) * 4;\n          r = scratchData.data[srcPos + 0];\n          g = scratchData.data[srcPos + 1];\n          b = scratchData.data[srcPos + 2];\n          a = scratchData.data[srcPos + 3];\n          dstPos = (xSize * y + sectionSize * 2 - x - 1) * 4;\n          scratchData.data[dstPos + 0] = r;\n          scratchData.data[dstPos + 1] = g;\n          scratchData.data[dstPos + 2] = b;\n          scratchData.data[dstPos + 3] = a;\n        }\n        sectionSize *= 2;\n      }\n    }\n\n    // Convert back from polar coordinates\n    FromPolar(scratchData, imageData, { polarRotation: 0 });\n  };\n\n  /**\n   * get/set kaleidoscope power. Use with {@link Konva.Filters.Kaleidoscope} filter.\n   * @name kaleidoscopePower\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} power of kaleidoscope\n   * @returns {Integer}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopePower',\n    2,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n\n  /**\n   * get/set kaleidoscope angle. Use with {@link Konva.Filters.Kaleidoscope} filter.\n   * @name kaleidoscopeAngle\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Integer} degrees\n   * @returns {Integer}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'kaleidoscopeAngle',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Contrast Filter.\n   * @function\n   * @memberof Konva.Filters\n   * @param {Object} imageData\n   * @example\n   * node.cache();\n   * node.filters([Konva.Filters.Contrast]);\n   * node.contrast(10);\n   */\n\n  Konva.Filters.Contrast = function(imageData) {\n    var adjust = Math.pow((parseInt(this.contrast()) + 100) / 100, 2);\n\n    var data = imageData.data,\n      nPixels = data.length,\n      red = 150,\n      green = 150,\n      blue = 150,\n      i;\n\n    for (i = 0; i < nPixels; i += 4) {\n      red = data[i];\n      green = data[i + 1];\n      blue = data[i + 2];\n\n      //Red channel\n      red /= 255;\n      red -= 0.5;\n      red *= adjust;\n      red += 0.5;\n      red *= 255;\n\n      //Green channel\n      green /= 255;\n      green -= 0.5;\n      green *= adjust;\n      green += 0.5;\n      green *= 255;\n\n      //Blue channel\n      blue /= 255;\n      blue -= 0.5;\n      blue *= adjust;\n      blue += 0.5;\n      blue *= 255;\n\n      red = red < 0 ? 0 : red > 255 ? 255 : red;\n      green = green < 0 ? 0 : green > 255 ? 255 : green;\n      blue = blue < 0 ? 0 : blue > 255 ? 255 : blue;\n\n      data[i] = red;\n      data[i + 1] = green;\n      data[i + 2] = blue;\n    }\n  };\n\n  /**\n   * get/set filter contrast.  The contrast is a number between -100 and 100.\n   * Use with {@link Konva.Filters.Contrast} filter.\n   * @name contrast\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Number} contrast value between -100 and 100\n   * @returns {Number}\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Node,\n    'contrast',\n    0,\n    Konva.Validators.getNumberValidator(),\n    Konva.Factory.afterSetFilter\n  );\n})(Konva);\n\n(function() {\n  'use strict';\n  /**\n   * Container constructor.&nbsp; Containers are used to contain nodes or other containers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @abstract\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   */\n  Konva.Container = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Container, {\n    __init: function(config) {\n      this.children = new Konva.Collection();\n      Konva.Node.call(this, config);\n    },\n    /**\n     * returns a {@link Konva.Collection} of direct descendant nodes\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Function} [filterFunc] filter function\n     * @returns {Konva.Collection}\n     * @example\n     * // get all children\n     * var children = layer.getChildren();\n     *\n     * // get only circles\n     * var circles = layer.getChildren(function(node){\n     *    return node.getClassName() === 'Circle';\n     * });\n     */\n    getChildren: function(filterFunc) {\n      if (!filterFunc) {\n        return this.children;\n      }\n\n      var results = new Konva.Collection();\n      this.children.each(function(child) {\n        if (filterFunc(child)) {\n          results.push(child);\n        }\n      });\n      return results;\n    },\n    /**\n     * determine if node has children\n     * @method\n     * @memberof Konva.Container.prototype\n     * @returns {Boolean}\n     */\n    hasChildren: function() {\n      return this.getChildren().length > 0;\n    },\n    /**\n     * remove all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    removeChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.remove();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * destroy all children\n     * @method\n     * @memberof Konva.Container.prototype\n     */\n    destroyChildren: function() {\n      var children = Konva.Collection.toCollection(this.children);\n      var child;\n      for (var i = 0; i < children.length; i++) {\n        child = children[i];\n        // reset parent to prevent many _setChildrenIndices calls\n        delete child.parent;\n        child.index = 0;\n        child.destroy();\n      }\n      children = null;\n      this.children = new Konva.Collection();\n      return this;\n    },\n    /**\n     * Add node or nodes to container.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {...Konva.Node} child\n     * @returns {Container}\n     * @example\n     * layer.add(shape1, shape2, shape3);\n     */\n    add: function(child) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      if (child.getParent()) {\n        child.moveTo(this);\n        return this;\n      }\n      var children = this.children;\n      this._validateAdd(child);\n      child.index = children.length;\n      child.parent = this;\n      children.push(child);\n      this._fire('add', {\n        child: child\n      });\n\n      // if node under drag we need to update drag animation\n      if (Konva.DD && child.isDragging()) {\n        Konva.DD.anim.setLayers(child.getLayer());\n      }\n\n      // chainable\n      return this;\n    },\n    destroy: function() {\n      // destroy children\n      if (this.hasChildren()) {\n        this.destroyChildren();\n      }\n      // then destroy self\n      Konva.Node.prototype.destroy.call(this);\n      return this;\n    },\n    /**\n     * return a {@link Konva.Collection} of nodes that match the selector.\n     * You can provide a string with '#' for id selections and '.' for name selections.\n     * Or a function that will return true/false when a node is passed through.  See example below.\n     * With strings you can also select by type or class name. Pass multiple selectors\n     * separated by a space.\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Collection}\n     * @example\n     *\n     * Passing a string as a selector\n     * // select node with id foo\n     * var node = stage.find('#foo');\n     *\n     * // select nodes with name bar inside layer\n     * var nodes = layer.find('.bar');\n     *\n     * // select all groups inside layer\n     * var nodes = layer.find('Group');\n     *\n     * // select all rectangles inside layer\n     * var nodes = layer.find('Rect');\n     *\n     * // select node with an id of foo or a name of bar inside layer\n     * var nodes = layer.find('#foo, .bar');\n     *\n     * Passing a function as a selector\n     *\n     * // get all Groups\n     * var groups = stage.find(node => {\n     *  return node.getType() === 'Group';\n     * });\n     *\n     * // get only Nodes with partial opacity\n     * var alphaNodes = layer.find(node => {\n     *  return node.getType() === 'Node' && node.getAbsoluteOpacity() < 1;\n     * });\n     */\n    find: function(selector) {\n      // protecting _generalFind to prevent user from accidentally adding\n      // second argument and getting unexpected `findOne` result\n      return this._generalFind(selector, false);\n    },\n    /**\n     * return a first node from `find` method\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {String | Function} selector\n     * @returns {Konva.Node | Undefined}\n     * @example\n     * // select node with id foo\n     * var node = stage.findOne('#foo');\n     *\n     * // select node with name bar inside layer\n     * var nodes = layer.findOne('.bar');\n     *\n     * // select the first node to return true in a function\n     * var node = stage.findOne(node => {\n     *  return node.getType() === 'Shape'\n     * })\n     */\n    findOne: function(selector) {\n      var result = this._generalFind(selector, true);\n      return result.length > 0 ? result[0] : undefined;\n    },\n    _generalFind: function(selector, findOne) {\n      var retArr = [];\n\n      if (typeof selector === 'string') {\n        retArr = this._findByString(selector, findOne);\n      } else if (typeof selector === 'function') {\n        retArr = this._findByFunction(selector, findOne);\n      }\n\n      return Konva.Collection.toCollection(retArr);\n    },\n    _findByString: function(selector) {\n      var retArr = [],\n        selectorArr = selector.replace(/ /g, '').split(','),\n        len = selectorArr.length,\n        n,\n        i,\n        sel,\n        arr,\n        node,\n        children,\n        clen;\n\n      for (n = 0; n < len; n++) {\n        sel = selectorArr[n];\n        if (!Konva.Util.isValidSelector(sel)) {\n          var message =\n            'Selector \"' +\n            sel +\n            '\" is invalid. Allowed selectors examples are \"#foo\", \".bar\" or \"Group\".\\n' +\n            'If you have a custom shape with such className, please change it to start with upper letter like \"Triangle\".\\n' +\n            'Konva is awesome, right?';\n          Konva.Util.warn(message);\n        }\n        // id selector\n        if (sel.charAt(0) === '#') {\n          node = this._getNodeById(sel.slice(1));\n          if (node) {\n            retArr.push(node);\n          }\n        } else if (sel.charAt(0) === '.') {\n          // name selector\n          arr = this._getNodesByName(sel.slice(1));\n          retArr = retArr.concat(arr);\n        } else {\n          // unrecognized selector, pass to children\n          children = this.getChildren();\n          clen = children.length;\n          for (i = 0; i < clen; i++) {\n            retArr = retArr.concat(children[i]._get(sel));\n          }\n        }\n      }\n\n      return retArr;\n    },\n    // (fn: ((Node) => boolean, findOne?: boolean)\n    _findByFunction: function(fn, findOne) {\n      var retArr = [];\n\n      var addItems = function(el) {\n        // escape function if we've already found one.\n        if (findOne && retArr.length > 0) {\n          return;\n        }\n\n        var children = el.getChildren();\n        var clen = children.length;\n\n        if (fn(el)) {\n          retArr = retArr.concat(el);\n        }\n\n        for (var i = 0; i < clen; i++) {\n          addItems(children[i]);\n        }\n      };\n\n      addItems(this);\n\n      return retArr;\n    },\n    _getNodeById: function(key) {\n      var node = Konva.ids[key];\n\n      if (node !== undefined && this.isAncestorOf(node)) {\n        return node;\n      }\n      return null;\n    },\n    _getNodesByName: function(key) {\n      var arr = Konva.names[key] || [];\n      return this._getDescendants(arr);\n    },\n    _get: function(selector) {\n      var retArr = Konva.Node.prototype._get.call(this, selector);\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        retArr = retArr.concat(children[n]._get(selector));\n      }\n      return retArr;\n    },\n    // extenders\n    toObject: function() {\n      var obj = Konva.Node.prototype.toObject.call(this);\n\n      obj.children = [];\n\n      var children = this.getChildren();\n      var len = children.length;\n      for (var n = 0; n < len; n++) {\n        var child = children[n];\n        obj.children.push(child.toObject());\n      }\n\n      return obj;\n    },\n    _getDescendants: function(arr) {\n      var retArr = [];\n      var len = arr.length;\n      for (var n = 0; n < len; n++) {\n        var node = arr[n];\n        if (this.isAncestorOf(node)) {\n          retArr.push(node);\n        }\n      }\n\n      return retArr;\n    },\n    /**\n     * determine if node is an ancestor\n     * of descendant\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Konva.Node} node\n     */\n    isAncestorOf: function(node) {\n      var parent = node.getParent();\n      while (parent) {\n        if (parent._id === this._id) {\n          return true;\n        }\n        parent = parent.getParent();\n      }\n\n      return false;\n    },\n    clone: function(obj) {\n      // call super method\n      var node = Konva.Node.prototype.clone.call(this, obj);\n\n      this.getChildren().each(function(no) {\n        node.add(no.clone());\n      });\n      return node;\n    },\n    /**\n     * get all shapes that intersect a point.  Note: because this method must clear a temporary\n     * canvas and redraw every shape inside the container, it should only be used for special sitations\n     * because it performs very poorly.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     * because it performs much better\n     * @method\n     * @memberof Konva.Container.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @returns {Array} array of shapes\n     */\n    getAllIntersections: function(pos) {\n      var arr = [];\n\n      this.find('Shape').each(function(shape) {\n        if (shape.isVisible() && shape.intersects(pos)) {\n          arr.push(shape);\n        }\n      });\n\n      return arr;\n    },\n    _setChildrenIndices: function() {\n      this.children.each(function(child, n) {\n        child.index = n;\n      });\n    },\n    drawScene: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas()),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedSceneCanvas = cachedCanvas && cachedCanvas.scene;\n\n      if (this.isVisible() || caching) {\n        if (!caching && cachedSceneCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedSceneCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawScene', top, false, caching);\n        }\n      }\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas),\n        context = canvas && canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (this.shouldDrawHit(canvas) || caching) {\n        if (layer) {\n          layer.clearHitCache();\n        }\n        if (!caching && cachedHitCanvas) {\n          context.save();\n          layer._applyTransform(this, context, top);\n          this._drawCachedHitCanvas(context);\n          context.restore();\n        } else {\n          this._drawChildren(canvas, 'drawHit', top);\n        }\n      }\n      return this;\n    },\n    _drawChildren: function(canvas, drawMethod, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        context = canvas && canvas.getContext(),\n        clipWidth = this.getClipWidth(),\n        clipHeight = this.getClipHeight(),\n        clipFunc = this.getClipFunc(),\n        hasClip = (clipWidth && clipHeight) || clipFunc,\n        clipX,\n        clipY;\n\n      if (hasClip && layer) {\n        context.save();\n        var transform = this.getAbsoluteTransform(top);\n        var m = transform.getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        context.beginPath();\n        if (clipFunc) {\n          clipFunc.call(this, context, this);\n        } else {\n          clipX = this.getClipX();\n          clipY = this.getClipY();\n          context.rect(clipX, clipY, clipWidth, clipHeight);\n        }\n        context.clip();\n        m = transform\n          .copy()\n          .invert()\n          .getMatrix();\n        context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      this.children.each(function(child) {\n        child[drawMethod](canvas, top, caching, skipBuffer);\n      });\n\n      if (hasClip) {\n        context.restore();\n      }\n    },\n    shouldDrawHit: function(canvas) {\n      var layer = this.getLayer();\n      var dd = Konva.DD;\n      var layerUnderDrag =\n        dd &&\n        Konva.isDragging() &&\n        Konva.DD.anim.getLayers().indexOf(layer) !== -1;\n      return (\n        (canvas && canvas.isCache) ||\n        (layer &&\n          layer.hitGraphEnabled() &&\n          this.isVisible() &&\n          !layerUnderDrag)\n      );\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n      var relativeTo = attrs.relativeTo;\n\n      var minX, minY, maxX, maxY;\n      var selfRect = {\n        x: Infinity,\n        y: Infinity,\n        width: 0,\n        height: 0\n      };\n      var that = this;\n      this.children.each(function(child) {\n        // skip invisible children\n        if (!child.getVisible()) {\n          return;\n        }\n\n        var rect = child.getClientRect({\n          relativeTo: that,\n          skipShadow: attrs.skipShadow,\n          skipStroke: attrs.skipStroke\n        });\n\n        // skip invisible children (like empty groups)\n        if (rect.width === 0 && rect.height === 0) {\n          return;\n        }\n\n        if (minX === undefined) {\n          // initial value for first child\n          minX = rect.x;\n          minY = rect.y;\n          maxX = rect.x + rect.width;\n          maxY = rect.y + rect.height;\n        } else {\n          minX = Math.min(minX, rect.x);\n          minY = Math.min(minY, rect.y);\n          maxX = Math.max(maxX, rect.x + rect.width);\n          maxY = Math.max(maxY, rect.y + rect.height);\n        }\n      });\n\n      // if child is group we need to make sure it has visible shapes inside\n      var shapes = this.find('Shape');\n      var hasVisible = false;\n      for (var i = 0; i < shapes.length; i++) {\n        var shape = shapes[i];\n        if (shape._isVisible(this)) {\n          hasVisible = true;\n          break;\n        }\n      }\n\n      if (hasVisible) {\n        selfRect = {\n          x: minX,\n          y: minY,\n          width: maxX - minX,\n          height: maxY - minY\n        };\n      } else {\n        selfRect = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n\n      if (!skipTransform) {\n        return this._transformedRect(selfRect, relativeTo);\n      }\n      return selfRect;\n    }\n  });\n\n  Konva.Util.extend(Konva.Container, Konva.Node);\n  // deprecated methods\n  Konva.Container.prototype.get = Konva.Container.prototype.find;\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Container, 'clip', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n   * get/set clip\n   * @method\n   * @name clip\n   * @memberof Konva.Container.prototype\n   * @param {Object} clip\n   * @param {Number} clip.x\n   * @param {Number} clip.y\n   * @param {Number} clip.width\n   * @param {Number} clip.height\n   * @returns {Object}\n   * @example\n   * // get clip\n   * var clip = container.clip();\n   *\n   * // set clip\n   * container.setClip({\n   *   x: 20,\n   *   y: 20,\n   *   width: 20,\n   *   height: 20\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipX',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip x\n   * @name clipX\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get clip x\n   * var clipX = container.clipX();\n   *\n   * // set clip x\n   * container.clipX(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipY',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip y\n   * @name clipY\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get clip y\n   * var clipY = container.clipY();\n   *\n   * // set clip y\n   * container.clipY(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipWidth',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip width\n   * @name clipWidth\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get clip width\n   * var clipWidth = container.clipWidth();\n   *\n   * // set clip width\n   * container.clipWidth(100);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Container,\n    'clipHeight',\n    undefined,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set clip height\n   * @name clipHeight\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get clip height\n   * var clipHeight = container.clipHeight();\n   *\n   * // set clip height\n   * container.clipHeight(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Container, 'clipFunc');\n  /**\n   * get/set clip function\n   * @name clipFunc\n   * @method\n   * @memberof Konva.Container.prototype\n   * @param {Function} function\n   * @returns {Function}\n   * @example\n   * // get clip function\n   * var clipFunction = container.clipFunc();\n   *\n   * // set clip height\n   * container.clipFunc(function(ctx) {\n   *   ctx.rect(0, 0, 100, 100);\n   * });\n   */\n\n  Konva.Collection.mapMethods(Konva.Container);\n})();\n\n(function(Konva) {\n  'use strict';\n  var HAS_SHADOW = 'hasShadow';\n  var SHADOW_RGBA = 'shadowRGBA';\n\n  function _fillFunc(context) {\n    context.fill();\n  }\n  function _strokeFunc(context) {\n    context.stroke();\n  }\n  function _fillFuncHit(context) {\n    context.fill();\n  }\n  function _strokeFuncHit(context) {\n    context.stroke();\n  }\n\n  function _clearHasShadowCache() {\n    this._clearCache(HAS_SHADOW);\n  }\n\n  function _clearGetShadowRGBACache() {\n    this._clearCache(SHADOW_RGBA);\n  }\n\n  /**\n   * Shape constructor.  Shapes are primitive objects such as rectangles,\n   *  circles, text, lines, etc.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Node\n   * @param {Object} config\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var customShape = new Konva.Shape({\n   *   x: 5,\n   *   y: 10,\n   *   fill: 'red',\n   *   // a Konva.Canvas renderer is passed into the sceneFunc function\n   *   sceneFunc: function(context, shape) {\n   *     context.beginPath();\n   *     context.moveTo(200, 50);\n   *     context.lineTo(420, 80);\n   *     context.quadraticCurveTo(300, 100, 260, 170);\n   *     context.closePath();\n   *     // Konva specific method\n   *     context.fillStrokeShape(shape);\n   *   }\n   *});\n   */\n  Konva.Shape = function(config) {\n    this.__init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Shape, {\n    __init: function(config) {\n      this.nodeType = 'Shape';\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFuncHit;\n      this._strokeFuncHit = _strokeFuncHit;\n\n      // set colorKey\n      var shapes = Konva.shapes;\n      var key;\n\n      while (true) {\n        key = Konva.Util.getRandomColor();\n        if (key && !(key in shapes)) {\n          break;\n        }\n      }\n\n      this.colorKey = key;\n      shapes[key] = this;\n\n      // call super constructor\n      Konva.Node.call(this, config);\n\n      this.on(\n        'shadowColorChange.konva shadowBlurChange.konva shadowOffsetChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearHasShadowCache\n      );\n\n      this.on(\n        'shadowColorChange.konva shadowOpacityChange.konva shadowEnabledChange.konva',\n        _clearGetShadowRGBACache\n      );\n    },\n    hasChildren: function() {\n      return false;\n    },\n    getChildren: function() {\n      return [];\n    },\n    /**\n     * get canvas context tied to the layer\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Context}\n     */\n    getContext: function() {\n      return this.getLayer().getContext();\n    },\n    /**\n     * get canvas renderer tied to the layer.  Note that this returns a canvas renderer, not a canvas element\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Konva.Canvas}\n     */\n    getCanvas: function() {\n      return this.getLayer().getCanvas();\n    },\n    /**\n     * returns whether or not a shadow will be rendered\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasShadow: function() {\n      return this._getCache(HAS_SHADOW, this._hasShadow);\n    },\n    _hasShadow: function() {\n      return (\n        this.getShadowEnabled() &&\n        (this.getShadowOpacity() !== 0 &&\n          !!(\n            this.getShadowColor() ||\n            this.getShadowBlur() ||\n            this.getShadowOffsetX() ||\n            this.getShadowOffsetY()\n          ))\n      );\n    },\n    getShadowRGBA: function() {\n      return this._getCache(SHADOW_RGBA, this._getShadowRGBA);\n    },\n    _getShadowRGBA: function() {\n      if (this.hasShadow()) {\n        var rgba = Konva.Util.colorToRGBA(this.shadowColor());\n        return (\n          'rgba(' +\n          rgba.r +\n          ',' +\n          rgba.g +\n          ',' +\n          rgba.b +\n          ',' +\n          rgba.a * (this.getShadowOpacity() || 1) +\n          ')'\n        );\n      }\n    },\n    /**\n     * returns whether or not the shape will be filled\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasFill: function() {\n      return !!(\n        this.getFill() ||\n        this.getFillPatternImage() ||\n        this.getFillLinearGradientColorStops() ||\n        this.getFillRadialGradientColorStops()\n      );\n    },\n    /**\n     * returns whether or not the shape will be stroked\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Boolean}\n     */\n    hasStroke: function() {\n      return (\n        this.strokeEnabled() &&\n        !!(this.stroke() || this.getStrokeLinearGradientColorStops())\n        // TODO: do we need radial gradient\n        // this.getStrokeRadialGradientColorStops()\n      );\n    },\n    /**\n     * determines if point is in the shape, regardless if other shapes are on top of it.  Note: because\n     *  this method clears a temporary canvas and then redraws the shape, it performs very poorly if executed many times\n     *  consecutively.  Please use the {@link Konva.Stage#getIntersection} method if at all possible\n     *  because it performs much better\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Object} point\n     * @param {Number} point.x\n     * @param {Number} point.y\n     * @returns {Boolean}\n     */\n    intersects: function(point) {\n      var stage = this.getStage(),\n        bufferHitCanvas = stage.bufferHitCanvas,\n        p;\n\n      bufferHitCanvas.getContext().clear();\n      this.drawHit(bufferHitCanvas);\n      p = bufferHitCanvas.context.getImageData(\n        Math.round(point.x),\n        Math.round(point.y),\n        1,\n        1\n      ).data;\n      return p[3] > 0;\n    },\n    // extends Node.prototype.destroy\n    destroy: function() {\n      Konva.Node.prototype.destroy.call(this);\n      delete Konva.shapes[this.colorKey];\n      return this;\n    },\n    _useBufferCanvas: function(caching) {\n      return (\n        (!caching &&\n          (this.perfectDrawEnabled() &&\n            this.getAbsoluteOpacity() !== 1 &&\n            this.hasFill() &&\n            this.hasStroke() &&\n            this.getStage())) ||\n        (this.perfectDrawEnabled() &&\n          this.hasShadow() &&\n          this.getAbsoluteOpacity() !== 1 &&\n          this.hasFill() &&\n          this.hasStroke() &&\n          this.getStage())\n      );\n    },\n    /**\n     * return self rectangle (x, y, width, height) of shape.\n     * This method are not taken into account transformation and styles.\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @returns {Object} rect with {x, y, width, height} properties\n     * @example\n     *\n     * rect.getSelfRect();  // return {x:0, y:0, width:rect.width(), height:rect.height()}\n     * circle.getSelfRect();  // return {x: - circle.width() / 2, y: - circle.height() / 2, width:circle.width(), height:circle.height()}\n     *\n     */\n    getSelfRect: function() {\n      var size = this.getSize();\n      return {\n        x: this._centroid ? Math.round(-size.width / 2) : 0,\n        y: this._centroid ? Math.round(-size.height / 2) : 0,\n        width: size.width,\n        height: size.height\n      };\n    },\n    getClientRect: function(attrs) {\n      attrs = attrs || {};\n      var skipTransform = attrs.skipTransform;\n\n      var relativeTo = attrs.relativeTo;\n\n      var fillRect = this.getSelfRect();\n\n      var applyStroke = !attrs.skipStroke && this.hasStroke();\n      var strokeWidth = (applyStroke && this.strokeWidth()) || 0;\n\n      // var scale = {\n      //   x: 1,\n      //   y: 1\n      // };\n      // if (!this.strokeScaleEnabled()) {\n      //   var scale = this.getAbsoluteScale();\n      //   // scale = {\n      //   //   x: Math.abs(scale.x)\n      //   // }\n      // }\n\n      var fillAndStrokeWidth = fillRect.width + strokeWidth;\n      var fillAndStrokeHeight = fillRect.height + strokeWidth;\n\n      var applyShadow = !attrs.skipShadow && this.hasShadow();\n      var shadowOffsetX = applyShadow ? this.shadowOffsetX() : 0;\n      var shadowOffsetY = applyShadow ? this.shadowOffsetY() : 0;\n\n      var preWidth = fillAndStrokeWidth + Math.abs(shadowOffsetX);\n      var preHeight = fillAndStrokeHeight + Math.abs(shadowOffsetY);\n\n      var blurRadius = (applyShadow && this.shadowBlur()) || 0;\n\n      var width = preWidth + blurRadius * 2;\n      var height = preHeight + blurRadius * 2;\n\n      // if stroke, for example = 3\n      // we need to set x to 1.5, but after Math.round it will be 2\n      // as we have additional offset we need to increase width and height by 1 pixel\n      var roundingOffset = 0;\n      if (Math.round(strokeWidth / 2) !== strokeWidth / 2) {\n        roundingOffset = 1;\n      }\n      var rect = {\n        width: width + roundingOffset,\n        height: height + roundingOffset,\n        x:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetX, 0) +\n          fillRect.x,\n        y:\n          -Math.round(strokeWidth / 2 + blurRadius) +\n          Math.min(shadowOffsetY, 0) +\n          fillRect.y\n      };\n      if (!skipTransform) {\n        return this._transformedRect(rect, relativeTo);\n      }\n      return rect;\n    },\n    drawScene: function(can, top, caching, skipBuffer) {\n      var layer = this.getLayer(),\n        canvas = can || layer.getCanvas(),\n        context = canvas.getContext(),\n        cachedCanvas = this._cache.canvas,\n        drawFunc = this.sceneFunc(),\n        hasShadow = this.hasShadow(),\n        hasStroke = this.hasStroke(),\n        stage,\n        bufferCanvas,\n        bufferContext;\n\n      if (!this.isVisible() && !caching) {\n        return this;\n      }\n      if (cachedCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedSceneCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      // if buffer canvas is needed\n      if (this._useBufferCanvas(caching) && !skipBuffer) {\n        stage = this.getStage();\n        bufferCanvas = stage.bufferCanvas;\n        bufferContext = bufferCanvas.getContext();\n        bufferContext.clear();\n        bufferContext.save();\n        bufferContext._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, bufferContext, top);\n          } else {\n            var m = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n          }\n        }\n\n        drawFunc.call(this, bufferContext, this);\n        bufferContext.restore();\n\n        var ratio = bufferCanvas.pixelRatio;\n        if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n\n          context._applyShadow(this);\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n          context.restore();\n        } else {\n          context._applyOpacity(this);\n          context._applyGlobalCompositeOperation(this);\n          context.drawImage(\n            bufferCanvas._canvas,\n            0,\n            0,\n            bufferCanvas.width / ratio,\n            bufferCanvas.height / ratio\n          );\n        }\n      } else {\n        // if buffer canvas is not needed\n        context._applyLineJoin(this);\n        // layer might be undefined if we are using cache before adding to layer\n        if (!caching) {\n          if (layer) {\n            layer._applyTransform(this, context, top);\n          } else {\n            var o = this.getAbsoluteTransform(top).getMatrix();\n            context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n          }\n        }\n\n        if (hasShadow && hasStroke && !canvas.hitCanvas) {\n          context.save();\n          // apply shadow\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n\n          drawFunc.call(this, context, this);\n          context.restore();\n          // if shape has stroke we need to redraw shape\n          // otherwise we will see a shadow under stroke (and over fill)\n          // but I think this is unexpected behavior\n          if (this.hasFill() && this.getShadowForStrokeEnabled()) {\n            drawFunc.call(this, context, this);\n          }\n        } else if (hasShadow && !canvas.hitCanvas) {\n          context.save();\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          context._applyShadow(this);\n          drawFunc.call(this, context, this);\n          context.restore();\n        } else {\n          if (!caching) {\n            context._applyOpacity(this);\n            context._applyGlobalCompositeOperation(this);\n          }\n          drawFunc.call(this, context, this);\n        }\n      }\n      context.restore();\n      return this;\n    },\n    drawHit: function(can, top, caching) {\n      var layer = this.getLayer(),\n        canvas = can || layer.hitCanvas,\n        context = canvas.getContext(),\n        drawFunc = this.hitFunc() || this.sceneFunc(),\n        cachedCanvas = this._cache.canvas,\n        cachedHitCanvas = cachedCanvas && cachedCanvas.hit;\n\n      if (!this.shouldDrawHit(canvas) && !caching) {\n        return this;\n      }\n      if (layer) {\n        layer.clearHitCache();\n      }\n      if (cachedHitCanvas) {\n        context.save();\n        layer._applyTransform(this, context, top);\n        this._drawCachedHitCanvas(context);\n        context.restore();\n        return this;\n      }\n      if (!drawFunc) {\n        return this;\n      }\n      context.save();\n      context._applyLineJoin(this);\n      if (!caching) {\n        if (layer) {\n          layer._applyTransform(this, context, top);\n        } else {\n          var o = this.getAbsoluteTransform(top).getMatrix();\n          context.transform(o[0], o[1], o[2], o[3], o[4], o[5]);\n        }\n      }\n      drawFunc.call(this, context, this);\n      context.restore();\n      return this;\n    },\n    /**\n     * draw hit graph using the cached scene canvas\n     * @method\n     * @memberof Konva.Shape.prototype\n     * @param {Integer} alphaThreshold alpha channel threshold that determines whether or not\n     *  a pixel should be drawn onto the hit graph.  Must be a value between 0 and 255.\n     *  The default is 0\n     * @returns {Konva.Shape}\n     * @example\n     * shape.cache();\n     * shape.drawHitFromCache();\n     */\n    drawHitFromCache: function(alphaThreshold) {\n      var threshold = alphaThreshold || 0,\n        cachedCanvas = this._cache.canvas,\n        sceneCanvas = this._getCachedSceneCanvas(),\n        hitCanvas = cachedCanvas.hit,\n        hitContext = hitCanvas.getContext(),\n        hitWidth = hitCanvas.getWidth(),\n        hitHeight = hitCanvas.getHeight(),\n        hitImageData,\n        hitData,\n        len,\n        rgbColorKey,\n        i,\n        alpha;\n\n      hitContext.clear();\n      hitContext.drawImage(sceneCanvas._canvas, 0, 0, hitWidth, hitHeight);\n\n      try {\n        hitImageData = hitContext.getImageData(0, 0, hitWidth, hitHeight);\n        hitData = hitImageData.data;\n        len = hitData.length;\n        rgbColorKey = Konva.Util._hexToRgb(this.colorKey);\n\n        // replace non transparent pixels with color key\n        for (i = 0; i < len; i += 4) {\n          alpha = hitData[i + 3];\n          if (alpha > threshold) {\n            hitData[i] = rgbColorKey.r;\n            hitData[i + 1] = rgbColorKey.g;\n            hitData[i + 2] = rgbColorKey.b;\n            hitData[i + 3] = 255;\n          } else {\n            hitData[i + 3] = 0;\n          }\n        }\n        hitContext.putImageData(hitImageData, 0, 0);\n      } catch (e) {\n        Konva.Util.error(\n          'Unable to draw hit graph from cached scene canvas. ' + e.message\n        );\n      }\n\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Shape, Konva.Node);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'stroke',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set stroke color\n   * @name stroke\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get stroke color\n   * var stroke = shape.stroke();\n   *\n   * // set stroke color with color string\n   * shape.stroke('green');\n   *\n   * // set stroke color with hex\n   * shape.stroke('#00ff00');\n   *\n   * // set stroke color with rgb\n   * shape.stroke('rgb(0,255,0)');\n   *\n   * // set stroke color with rgba and make it 50% opaque\n   * shape.stroke('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeWidth',\n    2,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set stroke width\n   * @name strokeWidth\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} strokeWidth\n   * @returns {Number}\n   * @example\n   * // get stroke width\n   * var strokeWidth = shape.strokeWidth();\n   *\n   * // set stroke width\n   * shape.strokeWidth();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeHitEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set strokeHitEnabled property. Useful for performance optimization.\n   * You may set `shape.strokeHitEnabled(false)`. In this case stroke will be no draw on hit canvas, so hit area\n   * of shape will be decreased (by lineWidth / 2). Remember that non closed line with `strokeHitEnabled = false`\n   * will be not drawn on hit canvas, that is mean line will no trigger pointer events (like mouseover)\n   * Default value is true\n   * @name strokeHitEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} strokeHitEnabled\n   * @returns {Boolean}\n   * @example\n   * // get strokeHitEnabled\n   * var strokeHitEnabled = shape.strokeHitEnabled();\n   *\n   * // set strokeHitEnabled\n   * shape.strokeHitEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'perfectDrawEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set perfectDrawEnabled. If a shape has fill, stroke and opacity you may set `perfectDrawEnabled` to false to improve performance.\n   * See http://konvajs.github.io/docs/performance/Disable_Perfect_Draw.html for more information.\n   * Default value is true\n   * @name perfectDrawEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} perfectDrawEnabled\n   * @returns {Boolean}\n   * @example\n   * // get perfectDrawEnabled\n   * var perfectDrawEnabled = shape.perfectDrawEnabled();\n   *\n   * // set perfectDrawEnabled\n   * shape.perfectDrawEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowForStrokeEnabled',\n    true,\n    Konva.Validators.getBooleanValidator()\n  );\n\n  /**\n   * get/set shadowForStrokeEnabled. Useful for performance optimization.\n   * You may set `shape.shadowForStrokeEnabled(false)`. In this case stroke will be no draw shadow for stroke.\n   * Remember if you set `shadowForStrokeEnabled = false` for non closed line - that line with have no shadow!.\n   * Default value is true\n   * @name shadowForStrokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} shadowForStrokeEnabled\n   * @returns {Boolean}\n   * @example\n   * // get shadowForStrokeEnabled\n   * var shadowForStrokeEnabled = shape.shadowForStrokeEnabled();\n   *\n   * // set shadowForStrokeEnabled\n   * shape.shadowForStrokeEnabled();\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineJoin');\n\n  /**\n   * get/set line join.  Can be miter, round, or bevel.  The\n   *  default is miter\n   * @name lineJoin\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineJoin\n   * @returns {String}\n   * @example\n   * // get line join\n   * var lineJoin = shape.lineJoin();\n   *\n   * // set line join\n   * shape.lineJoin('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'lineCap');\n\n  /**\n   * get/set line cap.  Can be butt, round, or square\n   * @name lineCap\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} lineCap\n   * @returns {String}\n   * @example\n   * // get line cap\n   * var lineCap = shape.lineCap();\n   *\n   * // set line cap\n   * shape.lineCap('round');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'sceneFunc');\n\n  /**\n   * get/set scene draw function\n   * @name sceneFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get scene draw function\n   * var sceneFunc = shape.sceneFunc();\n   *\n   * // set scene draw function\n   * shape.sceneFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'hitFunc');\n\n  /**\n   * get/set hit draw function\n   * @name hitFunc\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Function} drawFunc drawing function\n   * @returns {Function}\n   * @example\n   * // get hit draw function\n   * var hitFunc = shape.hitFunc();\n   *\n   * // set hit draw function\n   * shape.hitFunc(function(context) {\n   *   context.beginPath();\n   *   context.rect(0, 0, this.width(), this.height());\n   *   context.closePath();\n   *   context.fillStrokeShape(this);\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dash');\n\n  /**\n   * get/set dash array for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} dash\n   * @returns {Array}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart\n   *  line.dash([10, 5]);\n   *  // apply dashed stroke that is made up of alternating dashed\n   *  // lines that are 10px long and 20px apart, and dots that have\n   *  // a radius of 5px and are 20px apart\n   *  line.dash([10, 20, 0.001, 20]);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'dashOffset',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set dash offset for stroke.\n   * @name dash\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} dash offset\n   * @returns {Number}\n   * @example\n   *  // apply dashed stroke that is 10px long and 5 pixels apart with an offset of 5px\n   *  line.dash([10, 5]);\n   *  line.dashOffset(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowColor',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set shadow color\n   * @name shadowColor\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get shadow color\n   * var shadow = shape.shadowColor();\n   *\n   * // set shadow color with color string\n   * shape.shadowColor('green');\n   *\n   * // set shadow color with hex\n   * shape.shadowColor('#00ff00');\n   *\n   * // set shadow color with rgb\n   * shape.shadowColor('rgb(0,255,0)');\n   *\n   * // set shadow color with rgba and make it 50% opaque\n   * shape.shadowColor('rgba(0,255,0,0.5');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowBlur',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow blur\n   * @name shadowBlur\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} blur\n   * @returns {Number}\n   * @example\n   * // get shadow blur\n   * var shadowBlur = shape.shadowBlur();\n   *\n   * // set shadow blur\n   * shape.shadowBlur(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOpacity',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow opacity.  must be a value between 0 and 1\n   * @name shadowOpacity\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} opacity\n   * @returns {Number}\n   * @example\n   * // get shadow opacity\n   * var shadowOpacity = shape.shadowOpacity();\n   *\n   * // set shadow opacity\n   * shape.shadowOpacity(0.5);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'shadowOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set shadow offset\n   * @name shadowOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get shadow offset\n   * var shadowOffset = shape.shadowOffset();\n   *\n   * // set shadow offset\n   * shape.shadowOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOffsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow offset x\n   * @name shadowOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get shadow offset x\n   * var shadowOffsetX = shape.shadowOffsetX();\n   *\n   * // set shadow offset x\n   * shape.shadowOffsetX(5);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'shadowOffsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set shadow offset y\n   * @name shadowOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get shadow offset y\n   * var shadowOffsetY = shape.shadowOffsetY();\n   *\n   * // set shadow offset y\n   * shape.shadowOffsetY(5);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternImage');\n\n  /**\n   * get/set fill pattern image\n   * @name fillPatternImage\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Image} image object\n   * @returns {Image}\n   * @example\n   * // get fill pattern image\n   * var fillPatternImage = shape.fillPatternImage();\n   *\n   * // set fill pattern image\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   shape.fillPatternImage(imageObj);\n   * };\n   * imageObj.src = 'path/to/image/jpg';\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fill',\n    undefined,\n    Konva.Validators.getStringValidator()\n  );\n\n  /**\n   * get/set fill color\n   * @name fill\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} color\n   * @returns {String}\n   * @example\n   * // get fill color\n   * var fill = shape.fill();\n   *\n   * // set fill color with color string\n   * shape.fill('green');\n   *\n   * // set fill color with hex\n   * shape.fill('#00ff00');\n   *\n   * // set fill color with rgb\n   * shape.fill('rgb(0,255,0)');\n   *\n   * // set fill color with rgba and make it 50% opaque\n   * shape.fill('rgba(0,255,0,0.5');\n   *\n   * // shape without fill\n   * shape.fill(null);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern x\n   * @name fillPatternX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern x\n   * var fillPatternX = shape.fillPatternX();\n   * // set fill pattern x\n   * shape.fillPatternX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern y\n   * @name fillPatternY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern y\n   * var fillPatternY = shape.fillPatternY();\n   * // set fill pattern y\n   * shape.fillPatternY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientColorStops');\n\n  /**\n   * get/set fill linear gradient color stops\n   * @name fillLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get fill linear gradient color stops\n   * var colorStops = shape.fillLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillLinearGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeLinearGradientColorStops');\n\n  /**\n   * get/set stroke linear gradient color stops\n   * @name strokeLinearGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Array} colorStops\n   * @returns {Array} colorStops\n   * @example\n   * // get stroke linear gradient color stops\n   * var colorStops = shape.strokeLinearGradientColorStops();\n   *\n   * // create a linear gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.strokeLinearGradientColorStops([0, 'red', 0.5, 'blue', 1, 'green']);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartRadius',\n    0\n  );\n\n  /**\n   * get/set fill radial gradient start radius\n   * @name fillRadialGradientStartRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient start radius\n   * var startRadius = shape.fillRadialGradientStartRadius();\n   *\n   * // set radial gradient start radius\n   * shape.fillRadialGradientStartRadius(0);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndRadius', 0);\n\n  /**\n   * get/set fill radial gradient end radius\n   * @name fillRadialGradientEndRadius\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radial gradient end radius\n   * var endRadius = shape.fillRadialGradientEndRadius();\n   *\n   * // set radial gradient end radius\n   * shape.fillRadialGradientEndRadius(100);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientColorStops');\n\n  /**\n   * get/set fill radial gradient color stops\n   * @name fillRadialGradientColorStops\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} colorStops\n   * @returns {Array}\n   * @example\n   * // get fill radial gradient color stops\n   * var colorStops = shape.fillRadialGradientColorStops();\n   *\n   * // create a radial gradient that starts with red, changes to blue\n   * // halfway through, and then changes to green\n   * shape.fillRadialGradientColorStops(0, 'red', 0.5, 'blue', 1, 'green');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRepeat', 'repeat');\n\n  /**\n   * get/set fill pattern repeat.  Can be 'repeat', 'repeat-x', 'repeat-y', or 'no-repeat'.  The default is 'repeat'\n   * @name fillPatternRepeat\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} repeat\n   * @returns {String}\n   * @example\n   * // get fill pattern repeat\n   * var repeat = shape.fillPatternRepeat();\n   *\n   * // repeat pattern in x direction only\n   * shape.fillPatternRepeat('repeat-x');\n   *\n   * // do not repeat the pattern\n   * shape.fillPatternRepeat('no repeat');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillEnabled', true);\n\n  /**\n   * get/set fill enabled flag\n   * @name fillEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get fill enabled flag\n   * var fillEnabled = shape.fillEnabled();\n   *\n   * // disable fill\n   * shape.fillEnabled(false);\n   *\n   * // enable fill\n   * shape.fillEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeEnabled', true);\n\n  /**\n   * get/set stroke enabled flag\n   * @name strokeEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke enabled flag\n   * var strokeEnabled = shape.strokeEnabled();\n   *\n   * // disable stroke\n   * shape.strokeEnabled(false);\n   *\n   * // enable stroke\n   * shape.strokeEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'shadowEnabled', true);\n\n  /**\n   * get/set shadow enabled flag\n   * @name shadowEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get shadow enabled flag\n   * var shadowEnabled = shape.shadowEnabled();\n   *\n   * // disable shadow\n   * shape.shadowEnabled(false);\n   *\n   * // enable shadow\n   * shape.shadowEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'dashEnabled', true);\n\n  /**\n   * get/set dash enabled flag\n   * @name dashEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get dash enabled flag\n   * var dashEnabled = shape.dashEnabled();\n   *\n   * // disable dash\n   * shape.dashEnabled(false);\n   *\n   * // enable dash\n   * shape.dashEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'strokeScaleEnabled', true);\n\n  /**\n   * get/set strokeScale enabled flag\n   * @name strokeScaleEnabled\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get stroke scale enabled flag\n   * var strokeScaleEnabled = shape.strokeScaleEnabled();\n   *\n   * // disable stroke scale\n   * shape.strokeScaleEnabled(false);\n   *\n   * // enable stroke scale\n   * shape.strokeScaleEnabled(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPriority', 'color');\n\n  /**\n   * get/set fill priority.  can be color, pattern, linear-gradient, or radial-gradient.  The default is color.\n   *   This is handy if you want to toggle between different fill types.\n   * @name fillPriority\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {String} priority\n   * @returns {String}\n   * @example\n   * // get fill priority\n   * var fillPriority = shape.fillPriority();\n   *\n   * // set fill priority\n   * shape.fillPriority('linear-gradient');\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternOffset', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern offset\n   * @name fillPatternOffset\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} offset\n   * @param {Number} offset.x\n   * @param {Number} offset.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern offset\n   * var patternOffset = shape.fillPatternOffset();\n   *\n   * // set fill pattern offset\n   * shape.fillPatternOffset({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternOffsetX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern offset x\n   * @name fillPatternOffsetX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset x\n   * var patternOffsetX = shape.fillPatternOffsetX();\n   *\n   * // set fill pattern offset x\n   * shape.fillPatternOffsetX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternOffsetY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern offset y\n   * @name fillPatternOffsetY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern offset y\n   * var patternOffsetY = shape.fillPatternOffsetY();\n   *\n   * // set fill pattern offset y\n   * shape.fillPatternOffsetY(10);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Shape, 'fillPatternScale', [\n    'x',\n    'y'\n  ]);\n\n  /**\n   * get/set fill pattern scale\n   * @name fillPatternScale\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} scale\n   * @param {Number} scale.x\n   * @param {Number} scale.y\n   * @returns {Object}\n   * @example\n   * // get fill pattern scale\n   * var patternScale = shape.fillPatternScale();\n   *\n   * // set fill pattern scale\n   * shape.fillPatternScale({\n   *   x: 2\n   *   y: 2\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternScaleX',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern scale x\n   * @name fillPatternScaleX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale x\n   * var patternScaleX = shape.fillPatternScaleX();\n   *\n   * // set fill pattern scale x\n   * shape.fillPatternScaleX(2);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillPatternScaleY',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set fill pattern scale y\n   * @name fillPatternScaleY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill pattern scale y\n   * var patternScaleY = shape.fillPatternScaleY();\n   *\n   * // set fill pattern scale y\n   * shape.fillPatternScaleY(2);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient start point\n   * @name fillLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient start point\n   * var startPoint = shape.fillLinearGradientStartPoint();\n   *\n   * // set fill linear gradient start point\n   * shape.fillLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient start point\n   * @name strokeLinearGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient start point\n   * var startPoint = shape.strokeLinearGradientStartPoint();\n   *\n   * // set stroke linear gradient start point\n   * shape.strokeLinearGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point x\n   * @name fillLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point x\n   * var startPointX = shape.fillLinearGradientStartPointX();\n   *\n   * // set fill linear gradient start point x\n   * shape.fillLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointX',\n    0\n  );\n\n  /**\n   * get/set stroke linear gradient start point x\n   * @name linearLinearGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point x\n   * var startPointX = shape.strokeLinearGradientStartPointX();\n   *\n   * // set stroke linear gradient start point x\n   * shape.strokeLinearGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientStartPointY',\n    0\n  );\n\n  /**\n   * get/set fill linear gradient start point y\n   * @name fillLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient start point y\n   * var startPointY = shape.fillLinearGradientStartPointY();\n   *\n   * // set fill linear gradient start point y\n   * shape.fillLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientStartPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient start point y\n   * @name strokeLinearGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient start point y\n   * var startPointY = shape.strokeLinearGradientStartPointY();\n   *\n   * // set stroke linear gradient start point y\n   * shape.strokeLinearGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill linear gradient end point\n   * @name fillLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill linear gradient end point\n   * var endPoint = shape.fillLinearGradientEndPoint();\n   *\n   * // set fill linear gradient end point\n   * shape.fillLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set stroke linear gradient end point\n   * @name strokeLinearGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get stroke linear gradient end point\n   * var endPoint = shape.strokeLinearGradientEndPoint();\n   *\n   * // set stroke linear gradient end point\n   * shape.strokeLinearGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointX', 0);\n  /**\n   * get/set fill linear gradient end point x\n   * @name fillLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point x\n   * var endPointX = shape.fillLinearGradientEndPointX();\n   *\n   * // set fill linear gradient end point x\n   * shape.fillLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointX',\n    0\n  );\n  /**\n   * get/set fill linear gradient end point x\n   * @name strokeLinearGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point x\n   * var endPointX = shape.strokeLinearGradientEndPointX();\n   *\n   * // set stroke linear gradient end point x\n   * shape.strokeLinearGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillLinearGradientEndPointY', 0);\n  /**\n   * get/set fill linear gradient end point y\n   * @name fillLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill linear gradient end point y\n   * var endPointY = shape.fillLinearGradientEndPointY();\n   *\n   * // set fill linear gradient end point y\n   * shape.fillLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'strokeLinearGradientEndPointY',\n    0\n  );\n  /**\n   * get/set stroke linear gradient end point y\n   * @name strokeLinearGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get stroke linear gradient end point y\n   * var endPointY = shape.strokeLinearGradientEndPointY();\n   *\n   * // set stroke linear gradient end point y\n   * shape.strokeLinearGradientEndPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient start point\n   * @name fillRadialGradientStartPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} startPoint\n   * @param {Number} startPoint.x\n   * @param {Number} startPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient start point\n   * var startPoint = shape.fillRadialGradientStartPoint();\n   *\n   * // set fill radial gradient start point\n   * shape.fillRadialGradientStartPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointX',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point x\n   * @name fillRadialGradientStartPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point x\n   * var startPointX = shape.fillRadialGradientStartPointX();\n   *\n   * // set fill radial gradient start point x\n   * shape.fillRadialGradientStartPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientStartPointY',\n    0\n  );\n  /**\n   * get/set fill radial gradient start point y\n   * @name fillRadialGradientStartPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient start point y\n   * var startPointY = shape.fillRadialGradientStartPointY();\n   *\n   * // set fill radial gradient start point y\n   * shape.fillRadialGradientStartPointY(20);\n   */\n\n  Konva.Factory.addComponentsGetterSetter(\n    Konva.Shape,\n    'fillRadialGradientEndPoint',\n    ['x', 'y']\n  );\n\n  /**\n   * get/set fill radial gradient end point\n   * @name fillRadialGradientEndPoint\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Object} endPoint\n   * @param {Number} endPoint.x\n   * @param {Number} endPoint.y\n   * @returns {Object}\n   * @example\n   * // get fill radial gradient end point\n   * var endPoint = shape.fillRadialGradientEndPoint();\n   *\n   * // set fill radial gradient end point\n   * shape.fillRadialGradientEndPoint({\n   *   x: 20\n   *   y: 10\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointX', 0);\n  /**\n   * get/set fill radial gradient end point x\n   * @name fillRadialGradientEndPointX\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point x\n   * var endPointX = shape.fillRadialGradientEndPointX();\n   *\n   * // set fill radial gradient end point x\n   * shape.fillRadialGradientEndPointX(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillRadialGradientEndPointY', 0);\n  /**\n   * get/set fill radial gradient end point y\n   * @name fillRadialGradientEndPointY\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get fill radial gradient end point y\n   * var endPointY = shape.fillRadialGradientEndPointY();\n   *\n   * // set fill radial gradient end point y\n   * shape.fillRadialGradientEndPointY(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Shape, 'fillPatternRotation', 0);\n\n  /**\n   * get/set fill pattern rotation in degrees\n   * @name fillPatternRotation\n   * @method\n   * @memberof Konva.Shape.prototype\n   * @param {Number} rotation\n   * @returns {Konva.Shape}\n   * @example\n   * // get fill pattern rotation\n   * var patternRotation = shape.fillPatternRotation();\n   *\n   * // set fill pattern rotation\n   * shape.fillPatternRotation(20);\n   */\n\n  Konva.Factory.backCompat(Konva.Shape, {\n    dashArray: 'dash',\n    getDashArray: 'getDash',\n    setDashArray: 'getDash',\n\n    drawFunc: 'sceneFunc',\n    getDrawFunc: 'getSceneFunc',\n    setDrawFunc: 'setSceneFunc',\n\n    drawHitFunc: 'hitFunc',\n    getDrawHitFunc: 'getHitFunc',\n    setDrawHitFunc: 'setHitFunc'\n  });\n\n  Konva.Collection.mapMethods(Konva.Shape);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var STAGE = 'Stage',\n    STRING = 'string',\n    PX = 'px',\n    MOUSEOUT = 'mouseout',\n    MOUSELEAVE = 'mouseleave',\n    MOUSEOVER = 'mouseover',\n    MOUSEENTER = 'mouseenter',\n    MOUSEMOVE = 'mousemove',\n    MOUSEDOWN = 'mousedown',\n    MOUSEUP = 'mouseup',\n    CONTEXTMENU = 'contextmenu',\n    CLICK = 'click',\n    DBL_CLICK = 'dblclick',\n    TOUCHSTART = 'touchstart',\n    TOUCHEND = 'touchend',\n    TAP = 'tap',\n    DBL_TAP = 'dbltap',\n    TOUCHMOVE = 'touchmove',\n    WHEEL = 'wheel',\n    CONTENT_MOUSEOUT = 'contentMouseout',\n    CONTENT_MOUSEOVER = 'contentMouseover',\n    CONTENT_MOUSEMOVE = 'contentMousemove',\n    CONTENT_MOUSEDOWN = 'contentMousedown',\n    CONTENT_MOUSEUP = 'contentMouseup',\n    CONTENT_CONTEXTMENU = 'contentContextmenu',\n    CONTENT_CLICK = 'contentClick',\n    CONTENT_DBL_CLICK = 'contentDblclick',\n    CONTENT_TOUCHSTART = 'contentTouchstart',\n    CONTENT_TOUCHEND = 'contentTouchend',\n    CONTENT_DBL_TAP = 'contentDbltap',\n    CONTENT_TAP = 'contentTap',\n    CONTENT_TOUCHMOVE = 'contentTouchmove',\n    CONTENT_WHEEL = 'contentWheel',\n    DIV = 'div',\n    RELATIVE = 'relative',\n    KONVA_CONTENT = 'konvajs-content',\n    SPACE = ' ',\n    UNDERSCORE = '_',\n    CONTAINER = 'container',\n    EMPTY_STRING = '',\n    EVENTS = [\n      MOUSEDOWN,\n      MOUSEMOVE,\n      MOUSEUP,\n      MOUSEOUT,\n      TOUCHSTART,\n      TOUCHMOVE,\n      TOUCHEND,\n      MOUSEOVER,\n      WHEEL,\n      CONTEXTMENU\n    ],\n    // cached variables\n    eventsLength = EVENTS.length;\n\n  function addEvent(ctx, eventName) {\n    ctx.content.addEventListener(\n      eventName,\n      function(evt) {\n        ctx[UNDERSCORE + eventName](evt);\n      },\n      false\n    );\n  }\n\n  /**\n   * Stage constructor.  A stage is used to contain multiple layers\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {String|Element} config.container Container selector or DOM element\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var stage = new Konva.Stage({\n   *   width: 500,\n   *   height: 800,\n   *   container: 'containerId' // or \"#containerId\" or \".containerClass\"\n   * });\n   */\n  Konva.Stage = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Stage, {\n    ___init: function(config) {\n      this.nodeType = STAGE;\n      // call super constructor\n      Konva.Container.call(this, config);\n      this._id = Konva.idCounter++;\n      this._buildDOM();\n      this._bindContentEvents();\n      this._enableNestedTransforms = false;\n      Konva.stages.push(this);\n    },\n    _validateAdd: function(child) {\n      if (child.getType() !== 'Layer') {\n        Konva.Util.throw('You may only add layers to the stage.');\n      }\n    },\n    /**\n     * set container dom element which contains the stage wrapper div element\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {DomElement} container can pass in a dom element or id string\n     */\n    setContainer: function(container) {\n      if (typeof container === STRING) {\n        if (container.charAt(0) === '.') {\n          var className = container.slice(1);\n          container = Konva.document.getElementsByClassName(className)[0];\n        } else {\n          var id;\n          if (container.charAt(0) !== '#') {\n            id = container;\n          } else {\n            id = container.slice(1);\n          }\n          container = Konva.document.getElementById(id);\n        }\n        if (!container) {\n          throw 'Can not find container in document with id ' + id;\n        }\n      }\n      this._setAttr(CONTAINER, container);\n      return this;\n    },\n    shouldDrawHit: function() {\n      return true;\n    },\n    draw: function() {\n      Konva.Node.prototype.draw.call(this);\n      return this;\n    },\n    /**\n     * draw layer scene graphs\n     * @name draw\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * draw layer hit graphs\n     * @name drawHit\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n\n    /**\n     * set height\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} height\n     */\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * set width\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Number} width\n     */\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this._resizeDOM();\n      return this;\n    },\n    /**\n     * clear all layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    clear: function() {\n      var layers = this.children,\n        len = layers.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        layers[n].clear();\n      }\n      return this;\n    },\n    clone: function(obj) {\n      if (!obj) {\n        obj = {};\n      }\n      obj.container = Konva.document.createElement(DIV);\n      return Konva.Container.prototype.clone.call(this, obj);\n    },\n    /**\n     * destroy stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    destroy: function() {\n      var content = this.content;\n      Konva.Container.prototype.destroy.call(this);\n\n      if (content && Konva.Util._isInDocument(content)) {\n        this.getContainer().removeChild(content);\n      }\n      var index = Konva.stages.indexOf(this);\n      if (index > -1) {\n        Konva.stages.splice(index, 1);\n      }\n      return this;\n    },\n    /**\n     * get pointer position which can be a touch position or mouse position\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @returns {Object}\n     */\n    getPointerPosition: function() {\n      return this.pointerPos;\n    },\n    getStage: function() {\n      return this;\n    },\n    /**\n     * get stage content div element which has the\n     *  the class name \"konvajs-content\"\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getContent: function() {\n      return this.content;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n\n      var x = config.x || 0,\n        y = config.y || 0,\n        canvas = new Konva.SceneCanvas({\n          width: config.width || this.getWidth(),\n          height: config.height || this.getHeight(),\n          pixelRatio: config.pixelRatio || 1\n        }),\n        _context = canvas.getContext()._context,\n        layers = this.children;\n\n      if (x || y) {\n        _context.translate(-1 * x, -1 * y);\n      }\n\n      layers.each(function(layer) {\n        if (!layer.isVisible()) {\n          return;\n        }\n        var layerCanvas = layer._toKonvaCanvas(config);\n        _context.drawImage(\n          layerCanvas._canvas,\n          x,\n          y,\n          layerCanvas.getWidth() / layerCanvas.getPixelRatio(),\n          layerCanvas.getHeight() / layerCanvas.getPixelRatio()\n        );\n      });\n      return canvas;\n    },\n    /**\n     * converts stage into an image.\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} config\n     * @param {Function} config.callback function executed when the composite has completed\n     * @param {String} [config.mimeType] can be \"image/png\" or \"image/jpeg\".\n     *  \"image/png\" is the default\n     * @param {Number} [config.x] x position of canvas section\n     * @param {Number} [config.y] y position of canvas section\n     * @param {Number} [config.width] width of canvas section\n     * @param {Number} [config.height] height of canvas section\n     * @param {Number} [config.quality] jpeg quality.  If using an \"image/jpeg\" mimeType,\n     *  you can specify the quality from 0 to 1, where 0 is very poor quality and 1\n     *  is very high quality\n     */\n    toImage: function(config) {\n      var cb = config.callback;\n\n      config.callback = function(dataUrl) {\n        Konva.Util._getImage(dataUrl, function(img) {\n          cb(img);\n        });\n      };\n      this.toDataURL(config);\n    },\n    /**\n     * get visible intersection shape. This is the preferred\n     *  method for determining if a point intersects a shape or not\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @param {String} [selector]\n     * @returns {Konva.Node}\n     * @example\n     * var shape = stage.getIntersection({x: 50, y: 50});\n     * // or if you interested in shape parent:\n     * var group = stage.getIntersection({x: 50, y: 50}, 'Group');\n     */\n    getIntersection: function(pos, selector) {\n      var layers = this.getChildren(),\n        len = layers.length,\n        end = len - 1,\n        n,\n        shape;\n\n      for (n = end; n >= 0; n--) {\n        shape = layers[n].getIntersection(pos, selector);\n        if (shape) {\n          return shape;\n        }\n      }\n\n      return null;\n    },\n    _resizeDOM: function() {\n      if (this.content) {\n        var width = this.getWidth(),\n          height = this.getHeight(),\n          layers = this.getChildren(),\n          len = layers.length,\n          n,\n          layer;\n\n        // set content dimensions\n        this.content.style.width = width + PX;\n        this.content.style.height = height + PX;\n\n        this.bufferCanvas.setSize(width, height);\n        this.bufferHitCanvas.setSize(width, height);\n\n        // set layer dimensions\n        for (n = 0; n < len; n++) {\n          layer = layers[n];\n          layer.setSize(width, height);\n          layer.draw();\n        }\n      }\n    },\n    /**\n     * add layer or layers to stage\n     * @method\n     * @memberof Konva.Stage.prototype\n     * @param {...Konva.Layer} layer\n     * @example\n     * stage.add(layer1, layer2, layer3);\n     */\n    add: function(layer) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n        return this;\n      }\n      Konva.Container.prototype.add.call(this, layer);\n      layer._setCanvasSize(this.width(), this.height());\n\n      // draw layer and append canvas to container\n      layer.draw();\n\n      if (Konva.isBrowser) {\n        this.content.appendChild(layer.canvas._canvas);\n      }\n\n      // chainable\n      return this;\n    },\n    getParent: function() {\n      return null;\n    },\n    getLayer: function() {\n      return null;\n    },\n    /**\n     * returns a {@link Konva.Collection} of layers\n     * @method\n     * @memberof Konva.Stage.prototype\n     */\n    getLayers: function() {\n      return this.getChildren();\n    },\n    _bindContentEvents: function() {\n      if (!Konva.isBrowser) {\n        return;\n      }\n      for (var n = 0; n < eventsLength; n++) {\n        addEvent(this, EVENTS[n]);\n      }\n    },\n    _mouseover: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        this._fire(CONTENT_MOUSEOVER, { evt: evt });\n      }\n    },\n    _mouseout: function(evt) {\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var targetShape = this.targetShape;\n\n        if (targetShape && !Konva.isDragging()) {\n          targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n          targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n          this.targetShape = null;\n        }\n        this.pointerPos = undefined;\n\n        this._fire(CONTENT_MOUSEOUT, { evt: evt });\n      }\n    },\n    _mousemove: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchmove(evt);\n      }\n      // workaround fake mousemove event in chrome browser https://code.google.com/p/chromium/issues/detail?id=161464\n      if (\n        (typeof evt.movementX !== 'undefined' ||\n          typeof evt.movementY !== 'undefined') &&\n        evt.movementY === 0 &&\n        evt.movementX === 0\n      ) {\n        return null;\n      }\n      if (Konva.UA.mobile) {\n        return null;\n      }\n      this._setPointerPosition(evt);\n      var shape;\n\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          if (\n            !Konva.isDragging() &&\n            (!this.targetShape || this.targetShape._id !== shape._id)\n          ) {\n            if (this.targetShape) {\n              this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt }, shape);\n              this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt }, shape);\n            }\n            shape._fireAndBubble(MOUSEOVER, { evt: evt }, this.targetShape);\n            shape._fireAndBubble(MOUSEENTER, { evt: evt }, this.targetShape);\n            this.targetShape = shape;\n          } else {\n            shape._fireAndBubble(MOUSEMOVE, { evt: evt });\n          }\n        } else {\n          /*\n                 * if no shape was detected, clear target shape and try\n                 * to run mouseout from previous target shape\n                 */\n          if (this.targetShape && !Konva.isDragging()) {\n            this.targetShape._fireAndBubble(MOUSEOUT, { evt: evt });\n            this.targetShape._fireAndBubble(MOUSELEAVE, { evt: evt });\n            this.targetShape = null;\n          }\n          this._fire(MOUSEMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEMOVE, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _mousedown: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchstart(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition());\n\n        Konva.listenClickTap = true;\n\n        if (shape && shape.isListening()) {\n          this.clickStartShape = shape;\n          shape._fireAndBubble(MOUSEDOWN, { evt: evt });\n        } else {\n          this._fire(MOUSEDOWN, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n\n        // content event\n        this._fire(CONTENT_MOUSEDOWN, { evt: evt });\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      // TODO: if we preventDefault() it will cancel event detection outside of window inside iframe\n      // but we need it for better drag&drop\n      // can we disable native drag&drop somehow differently?\n      // if (evt.cancelable) {\n      // evt.preventDefault();\n      // }\n    },\n    _mouseup: function(evt) {\n      // workaround for mobile IE to force touch event when unhandled pointer event elevates into a mouse event\n      if (Konva.UA.ieMobile) {\n        return this._touchend(evt);\n      }\n      if (!Konva.UA.mobile) {\n        this._setPointerPosition(evt);\n        var shape = this.getIntersection(this.getPointerPosition()),\n          clickStartShape = this.clickStartShape,\n          clickEndShape = this.clickEndShape,\n          fireDblClick = false,\n          dd = Konva.DD;\n\n        if (Konva.inDblClickWindow) {\n          fireDblClick = true;\n          clearTimeout(this.dblTimeout);\n          // Konva.inDblClickWindow = false;\n        } else if (!dd || !dd.justDragged) {\n          // don't set inDblClickWindow after dragging\n          Konva.inDblClickWindow = true;\n          clearTimeout(this.dblTimeout);\n        } else if (dd) {\n          dd.justDragged = false;\n        }\n\n        this.dblTimeout = setTimeout(function() {\n          Konva.inDblClickWindow = false;\n        }, Konva.dblClickWindow);\n\n        if (shape && shape.isListening()) {\n          this.clickEndShape = shape;\n          shape._fireAndBubble(MOUSEUP, { evt: evt });\n\n          // detect if click or double click occurred\n          if (\n            Konva.listenClickTap &&\n            clickStartShape &&\n            clickStartShape._id === shape._id\n          ) {\n            shape._fireAndBubble(CLICK, { evt: evt });\n\n            if (\n              fireDblClick &&\n              clickEndShape &&\n              clickEndShape._id === shape._id\n            ) {\n              shape._fireAndBubble(DBL_CLICK, { evt: evt });\n            }\n          }\n        } else {\n          this._fire(MOUSEUP, { evt: evt, target: this, currentTarget: this });\n          if (Konva.listenClickTap) {\n            this._fire(CLICK, { evt: evt, target: this, currentTarget: this });\n          }\n\n          if (fireDblClick) {\n            this._fire(DBL_CLICK, {\n              evt: evt,\n              target: this,\n              currentTarget: this\n            });\n          }\n        }\n        // content events\n        this._fire(CONTENT_MOUSEUP, { evt: evt });\n        if (Konva.listenClickTap) {\n          this._fire(CONTENT_CLICK, { evt: evt });\n          if (fireDblClick) {\n            this._fire(CONTENT_DBL_CLICK, { evt: evt });\n          }\n        }\n\n        Konva.listenClickTap = false;\n      }\n\n      // always call preventDefault for desktop events because some browsers\n      // try to drag and drop the canvas element\n      if (evt.cancelable) {\n        evt.preventDefault();\n      }\n    },\n    _contextmenu: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(CONTEXTMENU, { evt: evt });\n      } else {\n        this._fire(CONTEXTMENU, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_CONTEXTMENU, { evt: evt });\n    },\n    _touchstart: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      Konva.listenClickTap = true;\n\n      if (shape && shape.isListening()) {\n        this.tapStartShape = shape;\n        shape._fireAndBubble(TOUCHSTART, { evt: evt });\n\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHSTART, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      // content event\n      this._fire(CONTENT_TOUCHSTART, { evt: evt });\n    },\n    _touchend: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition()),\n        fireDblClick = false;\n\n      if (Konva.inDblClickWindow) {\n        fireDblClick = true;\n        clearTimeout(this.dblTimeout);\n        // Konva.inDblClickWindow = false;\n      } else {\n        Konva.inDblClickWindow = true;\n        clearTimeout(this.dblTimeout);\n      }\n\n      this.dblTimeout = setTimeout(function() {\n        Konva.inDblClickWindow = false;\n      }, Konva.dblClickWindow);\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(TOUCHEND, { evt: evt });\n\n        // detect if tap or double tap occurred\n        if (\n          Konva.listenClickTap &&\n          this.tapStartShape &&\n          shape._id === this.tapStartShape._id\n        ) {\n          shape._fireAndBubble(TAP, { evt: evt });\n\n          if (fireDblClick) {\n            shape._fireAndBubble(DBL_TAP, { evt: evt });\n          }\n        }\n        // only call preventDefault if the shape is listening for events\n        if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n          evt.preventDefault();\n        }\n      } else {\n        this._fire(TOUCHEND, { evt: evt, target: this, currentTarget: this });\n        if (Konva.listenClickTap) {\n          this._fire(TAP, { evt: evt, target: this, currentTarget: this });\n        }\n        if (fireDblClick) {\n          this._fire(DBL_TAP, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n      }\n      // content events\n      this._fire(CONTENT_TOUCHEND, { evt: evt });\n      if (Konva.listenClickTap) {\n        this._fire(CONTENT_TAP, { evt: evt });\n        if (fireDblClick) {\n          this._fire(CONTENT_DBL_TAP, { evt: evt });\n        }\n      }\n\n      Konva.listenClickTap = false;\n    },\n    _touchmove: function(evt) {\n      this._setPointerPosition(evt);\n      var dd = Konva.DD,\n        shape;\n      if (!Konva.isDragging()) {\n        shape = this.getIntersection(this.getPointerPosition());\n        if (shape && shape.isListening()) {\n          shape._fireAndBubble(TOUCHMOVE, { evt: evt });\n          // only call preventDefault if the shape is listening for events\n          if (shape.isListening() && shape.preventDefault() && evt.cancelable) {\n            evt.preventDefault();\n          }\n        } else {\n          this._fire(TOUCHMOVE, {\n            evt: evt,\n            target: this,\n            currentTarget: this\n          });\n        }\n        this._fire(CONTENT_TOUCHMOVE, { evt: evt });\n      }\n      if (dd) {\n        if (\n          Konva.isDragging() &&\n          Konva.DD.node.preventDefault() &&\n          evt.cancelable\n        ) {\n          evt.preventDefault();\n        }\n      }\n    },\n    _wheel: function(evt) {\n      this._setPointerPosition(evt);\n      var shape = this.getIntersection(this.getPointerPosition());\n\n      if (shape && shape.isListening()) {\n        shape._fireAndBubble(WHEEL, { evt: evt });\n      } else {\n        this._fire(WHEEL, {\n          evt: evt,\n          target: this,\n          currentTarget: this\n        });\n      }\n      this._fire(CONTENT_WHEEL, { evt: evt });\n    },\n    _setPointerPosition: function(evt) {\n      var contentPosition = this._getContentPosition(),\n        x = null,\n        y = null;\n      evt = evt ? evt : window.event;\n\n      // touch events\n      if (evt.touches !== undefined) {\n        // currently, only handle one finger\n        if (evt.touches.length > 0) {\n          var touch = evt.touches[0];\n          // get the information for finger #1\n          x = touch.clientX - contentPosition.left;\n          y = touch.clientY - contentPosition.top;\n        }\n      } else {\n        // mouse events\n        x = evt.clientX - contentPosition.left;\n        y = evt.clientY - contentPosition.top;\n      }\n      if (x !== null && y !== null) {\n        this.pointerPos = {\n          x: x,\n          y: y\n        };\n      }\n    },\n    _getContentPosition: function() {\n      var rect = this.content.getBoundingClientRect\n        ? this.content.getBoundingClientRect()\n        : { top: 0, left: 0 };\n      return {\n        top: rect.top,\n        left: rect.left\n      };\n    },\n    _buildDOM: function() {\n      // the buffer canvas pixel ratio must be 1 because it is used as an\n      // intermediate canvas before copying the result onto a scene canvas.\n      // not setting it to 1 will result in an over compensation\n      this.bufferCanvas = new Konva.SceneCanvas();\n      this.bufferHitCanvas = new Konva.HitCanvas({ pixelRatio: 1 });\n\n      if (!Konva.isBrowser) {\n        return;\n      }\n      var container = this.getContainer();\n      if (!container) {\n        throw 'Stage has no container. A container is required.';\n      }\n      // clear content inside container\n      container.innerHTML = EMPTY_STRING;\n\n      // content\n      this.content = Konva.document.createElement(DIV);\n      this.content.style.position = RELATIVE;\n      this.content.style.userSelect = 'none';\n      this.content.className = KONVA_CONTENT;\n\n      this.content.setAttribute('role', 'presentation');\n\n      container.appendChild(this.content);\n\n      this._resizeDOM();\n    },\n    _onContent: function(typesStr, handler) {\n      var types = typesStr.split(SPACE),\n        len = types.length,\n        n,\n        baseEvent;\n\n      for (n = 0; n < len; n++) {\n        baseEvent = types[n];\n        this.content.addEventListener(baseEvent, handler, false);\n      }\n    },\n    // currently cache function is now working for stage, because stage has no its own canvas element\n    // TODO: may be it is better to cache all children layers?\n    cache: function() {\n      Konva.Util.warn(\n        'Cache function is not allowed for stage. You may use cache only for layers, groups and shapes.'\n      );\n    },\n    clearCache: function() {}\n  });\n  Konva.Util.extend(Konva.Stage, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetter(Konva.Stage, 'container');\n  Konva.Factory.addOverloadedGetterSetter(Konva.Stage, 'container');\n\n  /**\n   * get container DOM element\n   * @name container\n   * @method\n   * @memberof Konva.Stage.prototype\n   * @returns {DomElement} container\n   * @example\n   * // get container\n   * var container = stage.container();\n   * // set container\n   * var container = document.createElement('div');\n   * body.appendChild(container);\n   * stage.container(container);\n   */\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * BaseLayer constructor.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   */\n  Konva.BaseLayer = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.BaseLayer, {\n    ___init: function(config) {\n      this.nodeType = 'Layer';\n      Konva.Container.call(this, config);\n    },\n    createPNGStream: function() {\n      return this.canvas._canvas.createPNGStream();\n    },\n    /**\n     * get layer canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getCanvas: function() {\n      return this.canvas;\n    },\n    /**\n     * get layer hit canvas\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getHitCanvas: function() {\n      return this.hitCanvas;\n    },\n    /**\n     * get layer canvas context\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     */\n    getContext: function() {\n      return this.getCanvas().getContext();\n    },\n    /**\n     * clear scene and hit canvas contexts tied to the layer\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @param {Object} [bounds]\n     * @param {Number} [bounds.x]\n     * @param {Number} [bounds.y]\n     * @param {Number} [bounds.width]\n     * @param {Number} [bounds.height]\n     * @example\n     * layer.clear();\n     * layer.clear({\n     *   x : 0,\n     *   y : 0,\n     *   width : 100,\n     *   height : 100\n     * });\n     */\n    clear: function(bounds) {\n      this.getContext().clear(bounds);\n      return this;\n    },\n    clearHitCache: function() {\n      this._hitImageData = undefined;\n    },\n    // extend Node.prototype.setZIndex\n    setZIndex: function(index) {\n      Konva.Node.prototype.setZIndex.call(this, index);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n\n        if (index < stage.getChildren().length - 1) {\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            stage.getChildren()[index + 1].getCanvas()._canvas\n          );\n        } else {\n          stage.content.appendChild(this.getCanvas()._canvas);\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToTop\n    moveToTop: function() {\n      Konva.Node.prototype.moveToTop.call(this);\n      var stage = this.getStage();\n      if (stage) {\n        stage.content.removeChild(this.getCanvas()._canvas);\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveUp\n    moveUp: function() {\n      var moved = Konva.Node.prototype.moveUp.call(this);\n      if (!moved) {\n        return this;\n      }\n      var stage = this.getStage();\n      if (!stage) {\n        return this;\n      }\n      stage.content.removeChild(this.getCanvas()._canvas);\n\n      if (this.index < stage.getChildren().length - 1) {\n        stage.content.insertBefore(\n          this.getCanvas()._canvas,\n          stage.getChildren()[this.index + 1].getCanvas()._canvas\n        );\n      } else {\n        stage.content.appendChild(this.getCanvas()._canvas);\n      }\n      return this;\n    },\n    // extend Node.prototype.moveDown\n    moveDown: function() {\n      if (Konva.Node.prototype.moveDown.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[this.index + 1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    // extend Node.prototype.moveToBottom\n    moveToBottom: function() {\n      if (Konva.Node.prototype.moveToBottom.call(this)) {\n        var stage = this.getStage();\n        if (stage) {\n          var children = stage.getChildren();\n          stage.content.removeChild(this.getCanvas()._canvas);\n          stage.content.insertBefore(\n            this.getCanvas()._canvas,\n            children[1].getCanvas()._canvas\n          );\n        }\n      }\n      return this;\n    },\n    getLayer: function() {\n      return this;\n    },\n    remove: function() {\n      var _canvas = this.getCanvas()._canvas;\n\n      Konva.Node.prototype.remove.call(this);\n\n      if (_canvas && _canvas.parentNode && Konva.Util._isInDocument(_canvas)) {\n        _canvas.parentNode.removeChild(_canvas);\n      }\n      return this;\n    },\n    getStage: function() {\n      return this.parent;\n    },\n    setSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      return this;\n    },\n    _toKonvaCanvas: function(config) {\n      config = config || {};\n      config.width = config.width || this.getWidth();\n      config.height = config.height || this.getHeight();\n      config.x = config.x !== undefined ? config.x : this.getX();\n      config.y = config.y !== undefined ? config.y : this.getY();\n\n      return Konva.Node.prototype._toKonvaCanvas.call(this, config);\n    },\n    /**\n     * get/set width of layer.getter return width of stage. setter doing nothing.\n     * if you want change width use `stage.width(value);`\n     * @name width\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var width = layer.width();\n     */\n    getWidth: function() {\n      if (this.parent) {\n        return this.parent.getWidth();\n      }\n    },\n    setWidth: function() {\n      Konva.Util.warn(\n        'Can not change width of layer. Use \"stage.width(value)\" function instead.'\n      );\n    },\n    /**\n     * get/set height of layer.getter return height of stage. setter doing nothing.\n     * if you want change height use `stage.height(value);`\n     * @name height\n     * @method\n     * @memberof Konva.BaseLayer.prototype\n     * @returns {Number}\n     * @example\n     * var height = layer.height();\n     */\n    getHeight: function() {\n      if (this.parent) {\n        return this.parent.getHeight();\n      }\n    },\n    setHeight: function() {\n      Konva.Util.warn(\n        'Can not change height of layer. Use \"stage.height(value)\" function instead.'\n      );\n    },\n    // the apply transform method is handled by the Layer and FastLayer class\n    // because it is up to the layer to decide if an absolute or relative transform\n    // should be used\n    _applyTransform: function(shape, context, top) {\n      var m = shape.getAbsoluteTransform(top).getMatrix();\n      context.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    }\n  });\n  Konva.Util.extend(Konva.BaseLayer, Konva.Container);\n\n  // add getters and setters\n  Konva.Factory.addGetterSetter(Konva.BaseLayer, 'clearBeforeDraw', true);\n  /**\n   * get/set clearBeforeDraw flag which determines if the layer is cleared or not\n   *  before drawing\n   * @name clearBeforeDraw\n   * @method\n   * @memberof Konva.BaseLayer.prototype\n   * @param {Boolean} clearBeforeDraw\n   * @returns {Boolean}\n   * @example\n   * // get clearBeforeDraw flag\n   * var clearBeforeDraw = layer.clearBeforeDraw();\n   *\n   * // disable clear before draw\n   * layer.clearBeforeDraw(false);\n   *\n   * // enable clear before draw\n   * layer.clearBeforeDraw(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.BaseLayer);\n})(Konva);\n\n(function() {\n  'use strict';\n  // constants\n  var HASH = '#',\n    BEFORE_DRAW = 'beforeDraw',\n    DRAW = 'draw',\n    /*\n         * 2 - 3 - 4\n         * |       |\n         * 1 - 0   5\n         *         |\n         * 8 - 7 - 6\n         */\n    INTERSECTION_OFFSETS = [\n      { x: 0, y: 0 }, // 0\n      { x: -1, y: -1 }, // 2\n      { x: 1, y: -1 }, // 4\n      { x: 1, y: 1 }, // 6\n      { x: -1, y: 1 } // 8\n    ],\n    INTERSECTION_OFFSETS_LEN = INTERSECTION_OFFSETS.length;\n\n  /**\n   * Layer constructor.  Layers are tied to their own canvas element and are used\n   * to contain groups or shapes.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.BaseLayer\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var layer = new Konva.Layer();\n   */\n  Konva.Layer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Layer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      this.hitCanvas = new Konva.HitCanvas({\n        pixelRatio: 1\n      });\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n      this.hitCanvas.setSize(width, height);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to a layer.');\n      }\n    },\n    /**\n     * get visible intersection shape. This is the preferred\n     * method for determining if a point intersects a shape or not\n     * also you may pass optional selector parametr to return ancestor of intersected shape\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @param {Object} pos\n     * @param {Number} pos.x\n     * @param {Number} pos.y\n     * @param {String} [selector]\n     * @returns {Konva.Node}\n     * @example\n     * var shape = layer.getIntersection({x: 50, y: 50});\n     * // or if you interested in shape parent:\n     * var group = layer.getIntersection({x: 50, y: 50}, 'Group');\n     */\n    getIntersection: function(pos, selector) {\n      var obj, i, intersectionOffset, shape;\n\n      if (!this.hitGraphEnabled() || !this.isVisible()) {\n        return null;\n      }\n      // in some cases antialiased area may be bigger than 1px\n      // it is possible if we will cache node, then scale it a lot\n      // TODO: check { 0; 0 } point before loop, and remove it from INTERSECTION_OFFSETS.\n      var spiralSearchDistance = 1;\n      var continueSearch = false;\n      while (true) {\n        for (i = 0; i < INTERSECTION_OFFSETS_LEN; i++) {\n          intersectionOffset = INTERSECTION_OFFSETS[i];\n          obj = this._getIntersection({\n            x: pos.x + intersectionOffset.x * spiralSearchDistance,\n            y: pos.y + intersectionOffset.y * spiralSearchDistance\n          });\n          shape = obj.shape;\n          if (shape && selector) {\n            return shape.findAncestor(selector, true);\n          } else if (shape) {\n            return shape;\n          }\n          // we should continue search if we found antialiased pixel\n          // that means our node somewhere very close\n          continueSearch = !!obj.antialiased;\n          // stop search if found empty pixel\n          if (!obj.antialiased) {\n            break;\n          }\n        }\n        // if no shape, and no antialiased pixel, we should end searching\n        if (continueSearch) {\n          spiralSearchDistance += 1;\n        } else {\n          return null;\n        }\n      }\n    },\n    _getImageData: function(x, y) {\n      var width = this.hitCanvas.width || 1,\n        height = this.hitCanvas.height || 1,\n        index = Math.round(y) * width + Math.round(x);\n\n      if (!this._hitImageData) {\n        this._hitImageData = this.hitCanvas.context.getImageData(\n          0,\n          0,\n          width,\n          height\n        );\n      }\n\n      return [\n        this._hitImageData.data[4 * index + 0], // Red\n        this._hitImageData.data[4 * index + 1], // Green\n        this._hitImageData.data[4 * index + 2], // Blue\n        this._hitImageData.data[4 * index + 3] // Alpha\n      ];\n    },\n    _getIntersection: function(pos) {\n      var ratio = this.hitCanvas.pixelRatio;\n      var p = this.hitCanvas.context.getImageData(\n          Math.round(pos.x * ratio),\n          Math.round(pos.y * ratio),\n          1,\n          1\n        ).data,\n        p3 = p[3],\n        colorKey,\n        shape;\n      // fully opaque pixel\n      if (p3 === 255) {\n        colorKey = Konva.Util._rgbToHex(p[0], p[1], p[2]);\n        shape = Konva.shapes[HASH + colorKey];\n        if (shape) {\n          return {\n            shape: shape\n          };\n        }\n        return {\n          antialiased: true\n        };\n      } else if (p3 > 0) {\n        // antialiased pixel\n        return {\n          antialiased: true\n        };\n      }\n      // empty pixel\n      return {};\n    },\n    drawScene: function(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas());\n\n      this._fire(BEFORE_DRAW, {\n        node: this\n      });\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas, top);\n\n      this._fire(DRAW, {\n        node: this\n      });\n\n      return this;\n    },\n    drawHit: function(can, top) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.hitCanvas);\n\n      if (layer && layer.getClearBeforeDraw()) {\n        layer\n          .getHitCanvas()\n          .getContext()\n          .clear();\n      }\n\n      Konva.Container.prototype.drawHit.call(this, canvas, top);\n      this.imageData = null; // Clear imageData cache\n      return this;\n    },\n    clear: function(bounds) {\n      Konva.BaseLayer.prototype.clear.call(this, bounds);\n      this.getHitCanvas()\n        .getContext()\n        .clear(bounds);\n      this.imageData = null; // Clear getImageData cache\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n        this.hitCanvas._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n        this.hitCanvas._canvas.style.display = 'none';\n      }\n      return this;\n    },\n    /**\n     * enable hit graph\n     * @name enableHitGraph\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @returns {Layer}\n     */\n    enableHitGraph: function() {\n      this.setHitGraphEnabled(true);\n      return this;\n    },\n    /**\n     * disable hit graph\n     * @name disableHitGraph\n     * @method\n     * @memberof Konva.Layer.prototype\n     * @returns {Layer}\n     */\n    disableHitGraph: function() {\n      this.setHitGraphEnabled(false);\n      return this;\n    },\n    setSize: function(width, height) {\n      Konva.BaseLayer.prototype.setSize.call(this, width, height);\n      this.hitCanvas.setSize(width, height);\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.Layer, Konva.BaseLayer);\n\n  Konva.Factory.addGetterSetter(Konva.Layer, 'hitGraphEnabled', true);\n  /**\n   * get/set hitGraphEnabled flag.  Disabling the hit graph will greatly increase\n   *  draw performance because the hit graph will not be redrawn each time the layer is\n   *  drawn.  This, however, also disables mouse/touch event detection\n   * @name hitGraphEnabled\n   * @method\n   * @memberof Konva.Layer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get hitGraphEnabled flag\n   * var hitGraphEnabled = layer.hitGraphEnabled();\n   *\n   * // disable hit graph\n   * layer.hitGraphEnabled(false);\n   *\n   * // enable hit graph\n   * layer.hitGraphEnabled(true);\n   */\n  Konva.Collection.mapMethods(Konva.Layer);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * FastLayer constructor. Layers are tied to their own canvas element and are used\n   * to contain shapes only.  If you don't need node nesting, mouse and touch interactions,\n   * or event pub/sub, you should use FastLayer instead of Layer to create your layers.\n   * It renders about 2x faster than normal layers.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.BaseLayer\n   * @param {Object} config\n   * @param {Boolean} [config.clearBeforeDraw] set this property to false if you don't want\n   * to clear the canvas before each layer draw.  The default value is true.\n   * @param {Boolean} [config.visible]\n   * @param {String} [config.id] unique id\n   * @param {String} [config.name] non-unique name\n   * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var layer = new Konva.FastLayer();\n   */\n  Konva.FastLayer = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Util.addMethods(Konva.FastLayer, {\n    ____init: function(config) {\n      this.nodeType = 'Layer';\n      this.canvas = new Konva.SceneCanvas();\n      // call super constructor\n      Konva.BaseLayer.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Shape') {\n        Konva.Util.throw('You may only add shapes to a fast layer.');\n      }\n    },\n    _setCanvasSize: function(width, height) {\n      this.canvas.setSize(width, height);\n    },\n    hitGraphEnabled: function() {\n      return false;\n    },\n    getIntersection: function() {\n      return null;\n    },\n    drawScene: function(can) {\n      var layer = this.getLayer(),\n        canvas = can || (layer && layer.getCanvas());\n\n      if (this.getClearBeforeDraw()) {\n        canvas.getContext().clear();\n      }\n\n      Konva.Container.prototype.drawScene.call(this, canvas);\n\n      return this;\n    },\n    draw: function() {\n      this.drawScene();\n      return this;\n    },\n    // extend Node.prototype.setVisible\n    setVisible: function(visible) {\n      Konva.Node.prototype.setVisible.call(this, visible);\n      if (visible) {\n        this.getCanvas()._canvas.style.display = 'block';\n      } else {\n        this.getCanvas()._canvas.style.display = 'none';\n      }\n      return this;\n    }\n  });\n  Konva.Util.extend(Konva.FastLayer, Konva.BaseLayer);\n\n  Konva.Collection.mapMethods(Konva.FastLayer);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Group constructor.  Groups are used to contain shapes or other groups.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Container\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * * @param {Object} [config.clip] set clip\n     * @param {Number} [config.clipX] set clip x\n     * @param {Number} [config.clipY] set clip y\n     * @param {Number} [config.clipWidth] set clip width\n     * @param {Number} [config.clipHeight] set clip height\n     * @param {Function} [config.clipFunc] set clip func\n\n   * @example\n   * var group = new Konva.Group();\n   */\n  Konva.Group = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Util.addMethods(Konva.Group, {\n    ___init: function(config) {\n      this.nodeType = 'Group';\n      // call super constructor\n      Konva.Container.call(this, config);\n    },\n    _validateAdd: function(child) {\n      var type = child.getType();\n      if (type !== 'Group' && type !== 'Shape') {\n        Konva.Util.throw('You may only add groups and shapes to groups.');\n      }\n    }\n  });\n  Konva.Util.extend(Konva.Group, Konva.Container);\n\n  Konva.Collection.mapMethods(Konva.Group);\n})();\n\n(function(Konva) {\n  'use strict';\n  var now = (function() {\n    if (Konva.global.performance && Konva.global.performance.now) {\n      return function() {\n        return Konva.global.performance.now();\n      };\n    }\n\n    return function() {\n      return new Date().getTime();\n    };\n  })();\n\n  function FRAF(callback) {\n    setTimeout(callback, 1000 / 60);\n  }\n\n  var RAF = (function() {\n    return (\n      Konva.global.requestAnimationFrame ||\n      Konva.global.webkitRequestAnimationFrame ||\n      Konva.global.mozRequestAnimationFrame ||\n      Konva.global.oRequestAnimationFrame ||\n      Konva.global.msRequestAnimationFrame ||\n      FRAF\n    );\n  })();\n\n  function requestAnimFrame() {\n    return RAF.apply(Konva.global, arguments);\n  }\n\n  /**\n   * Animation constructor.  A stage is used to contain multiple layers and handle\n   * @constructor\n   * @memberof Konva\n   * @param {Function} func function executed on each animation frame.  The function is passed a frame object, which contains\n   *  timeDiff, lastTime, time, and frameRate properties.  The timeDiff property is the number of milliseconds that have passed\n   *  since the last animation frame.  The lastTime property is time in milliseconds that elapsed from the moment the animation started\n   *  to the last animation frame.  The time property is the time in milliseconds that ellapsed from the moment the animation started\n   *  to the current animation frame.  The frameRate property is the current frame rate in frames / second. Return false from function,\n   *  if you don't need to redraw layer/layers on some frames.\n   * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn on each animation frame. Can be a layer, an array of layers, or null.\n   *  Not specifying a node will result in no redraw.\n   * @example\n   * // move a node to the right at 50 pixels / second\n   * var velocity = 50;\n   *\n   * var anim = new Konva.Animation(function(frame) {\n   *   var dist = velocity * (frame.timeDiff / 1000);\n   *   node.move(dist, 0);\n   * }, layer);\n   *\n   * anim.start();\n   */\n  Konva.Animation = function(func, layers) {\n    var Anim = Konva.Animation;\n    this.func = func;\n    this.setLayers(layers);\n    this.id = Anim.animIdCounter++;\n    this.frame = {\n      time: 0,\n      timeDiff: 0,\n      lastTime: now()\n    };\n  };\n  /*\n   * Animation methods\n   */\n  Konva.Animation.prototype = {\n    /**\n     * set layers to be redrawn on each animation frame\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @param {Konva.Layer|Array} [layers] layer(s) to be redrawn.&nbsp; Can be a layer, an array of layers, or null.  Not specifying a node will result in no redraw.\n     * @return {Konva.Animation} this\n     */\n    setLayers: function(layers) {\n      var lays = [];\n      // if passing in no layers\n      if (!layers) {\n        lays = [];\n      } else if (layers.length > 0) {\n        // if passing in an array of Layers\n        // NOTE: layers could be an array or Konva.Collection.  for simplicity, I'm just inspecting\n        // the length property to check for both cases\n        lays = layers;\n      } else {\n        // if passing in a Layer\n        lays = [layers];\n      }\n\n      this.layers = lays;\n      return this;\n    },\n    /**\n     * get layers\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Array} Array of Konva.Layer\n     */\n    getLayers: function() {\n      return this.layers;\n    },\n    /**\n     * add layer.  Returns true if the layer was added, and false if it was not\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @param {Konva.Layer} layer to add\n     * @return {Bool} true if layer is added to animation, otherwise false\n     */\n    addLayer: function(layer) {\n      var layers = this.layers,\n        len = layers.length,\n        n;\n\n      // don't add the layer if it already exists\n      for (n = 0; n < len; n++) {\n        if (layers[n]._id === layer._id) {\n          return false;\n        }\n      }\n\n      this.layers.push(layer);\n      return true;\n    },\n    /**\n     * determine if animation is running or not.  returns true or false\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Bool} is animation running?\n     */\n    isRunning: function() {\n      var a = Konva.Animation,\n        animations = a.animations,\n        len = animations.length,\n        n;\n\n      for (n = 0; n < len; n++) {\n        if (animations[n].id === this.id) {\n          return true;\n        }\n      }\n      return false;\n    },\n    /**\n     * start animation\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Konva.Animation} this\n     */\n    start: function() {\n      var Anim = Konva.Animation;\n      this.stop();\n      this.frame.timeDiff = 0;\n      this.frame.lastTime = now();\n      Anim._addAnimation(this);\n      return this;\n    },\n    /**\n     * stop animation\n     * @method\n     * @memberof Konva.Animation.prototype\n     * @return {Konva.Animation} this\n     */\n    stop: function() {\n      Konva.Animation._removeAnimation(this);\n      return this;\n    },\n    _updateFrameObject: function(time) {\n      this.frame.timeDiff = time - this.frame.lastTime;\n      this.frame.lastTime = time;\n      this.frame.time += this.frame.timeDiff;\n      this.frame.frameRate = 1000 / this.frame.timeDiff;\n    }\n  };\n  Konva.Animation.animations = [];\n  Konva.Animation.animIdCounter = 0;\n  Konva.Animation.animRunning = false;\n\n  Konva.Animation._addAnimation = function(anim) {\n    this.animations.push(anim);\n    this._handleAnimation();\n  };\n  Konva.Animation._removeAnimation = function(anim) {\n    var id = anim.id,\n      animations = this.animations,\n      len = animations.length,\n      n;\n\n    for (n = 0; n < len; n++) {\n      if (animations[n].id === id) {\n        this.animations.splice(n, 1);\n        break;\n      }\n    }\n  };\n\n  Konva.Animation._runFrames = function() {\n    var layerHash = {},\n      animations = this.animations,\n      anim,\n      layers,\n      func,\n      n,\n      i,\n      layersLen,\n      layer,\n      key,\n      needRedraw;\n    /*\n     * loop through all animations and execute animation\n     *  function.  if the animation object has specified node,\n     *  we can add the node to the nodes hash to eliminate\n     *  drawing the same node multiple times.  The node property\n     *  can be the stage itself or a layer\n     */\n    /*\n     * WARNING: don't cache animations.length because it could change while\n     * the for loop is running, causing a JS error\n     */\n\n    for (n = 0; n < animations.length; n++) {\n      anim = animations[n];\n      layers = anim.layers;\n      func = anim.func;\n\n      anim._updateFrameObject(now());\n      layersLen = layers.length;\n\n      // if animation object has a function, execute it\n      if (func) {\n        // allow anim bypassing drawing\n        needRedraw = func.call(anim, anim.frame) !== false;\n      } else {\n        needRedraw = true;\n      }\n      if (!needRedraw) {\n        continue;\n      }\n      for (i = 0; i < layersLen; i++) {\n        layer = layers[i];\n\n        if (layer._id !== undefined) {\n          layerHash[layer._id] = layer;\n        }\n      }\n    }\n\n    for (key in layerHash) {\n      if (!layerHash.hasOwnProperty(key)) {\n        continue;\n      }\n      layerHash[key].draw();\n    }\n  };\n  Konva.Animation._animationLoop = function() {\n    var Anim = Konva.Animation;\n    if (Anim.animations.length) {\n      Anim._runFrames();\n      requestAnimFrame(Anim._animationLoop);\n    } else {\n      Anim.animRunning = false;\n    }\n  };\n  Konva.Animation._handleAnimation = function() {\n    if (!this.animRunning) {\n      this.animRunning = true;\n      requestAnimFrame(this._animationLoop);\n    }\n  };\n\n  /**\n   * batch draw. this function will not do immediate draw\n   * but it will schedule drawing to next tick (requestAnimFrame)\n   * @method\n   * @name batchDraw\n   * @return {Konva.Layer} this\n   * @memberof Konva.BaseLayer.prototype\n   */\n  Konva.BaseLayer.prototype.batchDraw = function() {\n    var that = this,\n      Anim = Konva.Animation;\n\n    if (!this.batchAnim) {\n      this.batchAnim = new Anim(function() {\n        // stop animation after first tick\n        that.batchAnim.stop();\n      }, this);\n    }\n\n    if (!this.batchAnim.isRunning()) {\n      this.batchAnim.start();\n    }\n    return this;\n  };\n\n  /**\n   * batch draw\n   * @method\n   * @name batchDraw\n   * @return {Konva.Stage} this\n   * @memberof Konva.Stage.prototype\n   */\n  Konva.Stage.prototype.batchDraw = function() {\n    this.getChildren().each(function(layer) {\n      layer.batchDraw();\n    });\n    return this;\n  };\n})(Konva);\n\n(function() {\n  'use strict';\n  var blacklist = {\n      node: 1,\n      duration: 1,\n      easing: 1,\n      onFinish: 1,\n      yoyo: 1\n    },\n    PAUSED = 1,\n    PLAYING = 2,\n    REVERSING = 3,\n    idCounter = 0,\n    colorAttrs = ['fill', 'stroke', 'shadowColor'];\n\n  var Tween = function(prop, propFunc, func, begin, finish, duration, yoyo) {\n    this.prop = prop;\n    this.propFunc = propFunc;\n    this.begin = begin;\n    this._pos = begin;\n    this.duration = duration;\n    this._change = 0;\n    this.prevPos = 0;\n    this.yoyo = yoyo;\n    this._time = 0;\n    this._position = 0;\n    this._startTime = 0;\n    this._finish = 0;\n    this.func = func;\n    this._change = finish - this.begin;\n    this.pause();\n  };\n  /*\n     * Tween methods\n     */\n  Tween.prototype = {\n    fire: function(str) {\n      var handler = this[str];\n      if (handler) {\n        handler();\n      }\n    },\n    setTime: function(t) {\n      if (t > this.duration) {\n        if (this.yoyo) {\n          this._time = this.duration;\n          this.reverse();\n        } else {\n          this.finish();\n        }\n      } else if (t < 0) {\n        if (this.yoyo) {\n          this._time = 0;\n          this.play();\n        } else {\n          this.reset();\n        }\n      } else {\n        this._time = t;\n        this.update();\n      }\n    },\n    getTime: function() {\n      return this._time;\n    },\n    setPosition: function(p) {\n      this.prevPos = this._pos;\n      this.propFunc(p);\n      this._pos = p;\n    },\n    getPosition: function(t) {\n      if (t === undefined) {\n        t = this._time;\n      }\n      return this.func(t, this.begin, this._change, this.duration);\n    },\n    play: function() {\n      this.state = PLAYING;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onPlay');\n    },\n    reverse: function() {\n      this.state = REVERSING;\n      this._time = this.duration - this._time;\n      this._startTime = this.getTimer() - this._time;\n      this.onEnterFrame();\n      this.fire('onReverse');\n    },\n    seek: function(t) {\n      this.pause();\n      this._time = t;\n      this.update();\n      this.fire('onSeek');\n    },\n    reset: function() {\n      this.pause();\n      this._time = 0;\n      this.update();\n      this.fire('onReset');\n    },\n    finish: function() {\n      this.pause();\n      this._time = this.duration;\n      this.update();\n      this.fire('onFinish');\n    },\n    update: function() {\n      this.setPosition(this.getPosition(this._time));\n    },\n    onEnterFrame: function() {\n      var t = this.getTimer() - this._startTime;\n      if (this.state === PLAYING) {\n        this.setTime(t);\n      } else if (this.state === REVERSING) {\n        this.setTime(this.duration - t);\n      }\n    },\n    pause: function() {\n      this.state = PAUSED;\n      this.fire('onPause');\n    },\n    getTimer: function() {\n      return new Date().getTime();\n    }\n  };\n\n  /**\n   * Tween constructor.  Tweens enable you to animate a node between the current state and a new state.\n   *  You can play, pause, reverse, seek, reset, and finish tweens.  By default, tweens are animated using\n   *  a linear easing.  For more tweening options, check out {@link Konva.Easings}\n   * @constructor\n   * @memberof Konva\n   * @example\n   * // instantiate new tween which fully rotates a node in 1 second\n   * var tween = new Konva.Tween({\n   *   node: node,\n   *   rotationDeg: 360,\n   *   duration: 1,\n   *   easing: Konva.Easings.EaseInOut\n   * });\n   *\n   * // play tween\n   * tween.play();\n   *\n   * // pause tween\n   * tween.pause();\n   */\n  Konva.Tween = function(config) {\n    var that = this,\n      node = config.node,\n      nodeId = node._id,\n      duration,\n      easing = config.easing || Konva.Easings.Linear,\n      yoyo = !!config.yoyo,\n      key;\n\n    if (typeof config.duration === 'undefined') {\n      duration = 0.3;\n    } else if (config.duration === 0) {\n      // zero is bad value for duration\n      duration = 0.001;\n    } else {\n      duration = config.duration;\n    }\n    this.node = node;\n    this._id = idCounter++;\n\n    var layers =\n      node.getLayer() ||\n      (node instanceof Konva.Stage ? node.getLayers() : null);\n    if (!layers) {\n      Konva.Util.error(\n        'Tween constructor have `node` that is not in a layer. Please add node into layer first.'\n      );\n    }\n    this.anim = new Konva.Animation(function() {\n      that.tween.onEnterFrame();\n    }, layers);\n\n    this.tween = new Tween(\n      key,\n      function(i) {\n        that._tweenFunc(i);\n      },\n      easing,\n      0,\n      1,\n      duration * 1000,\n      yoyo\n    );\n\n    this._addListeners();\n\n    // init attrs map\n    if (!Konva.Tween.attrs[nodeId]) {\n      Konva.Tween.attrs[nodeId] = {};\n    }\n    if (!Konva.Tween.attrs[nodeId][this._id]) {\n      Konva.Tween.attrs[nodeId][this._id] = {};\n    }\n    // init tweens map\n    if (!Konva.Tween.tweens[nodeId]) {\n      Konva.Tween.tweens[nodeId] = {};\n    }\n\n    for (key in config) {\n      if (blacklist[key] === undefined) {\n        this._addAttr(key, config[key]);\n      }\n    }\n\n    this.reset();\n\n    // callbacks\n    this.onFinish = config.onFinish;\n    this.onReset = config.onReset;\n  };\n\n  // start/diff object = attrs.nodeId.tweenId.attr\n  Konva.Tween.attrs = {};\n  // tweenId = tweens.nodeId.attr\n  Konva.Tween.tweens = {};\n\n  Konva.Tween.prototype = {\n    _addAttr: function(key, end) {\n      var node = this.node,\n        nodeId = node._id,\n        start,\n        diff,\n        tweenId,\n        n,\n        len,\n        trueEnd,\n        trueStart,\n        endRGBA;\n\n      // remove conflict from tween map if it exists\n      tweenId = Konva.Tween.tweens[nodeId][key];\n\n      if (tweenId) {\n        delete Konva.Tween.attrs[nodeId][tweenId][key];\n      }\n\n      // add to tween map\n      start = node.getAttr(key);\n\n      if (Konva.Util._isArray(end)) {\n        diff = [];\n        len = Math.max(end.length, start.length);\n\n        if (key === 'points' && end.length !== start.length) {\n          // before tweening points we need to make sure that start.length === end.length\n          // Konva.Util._prepareArrayForTween thinking that end.length > start.length\n\n          if (end.length > start.length) {\n            // so in this case we will increase number of starting points\n            trueStart = start;\n            start = Konva.Util._prepareArrayForTween(start, end, node.closed());\n          } else {\n            // in this case we will increase number of eding points\n            trueEnd = end;\n            end = Konva.Util._prepareArrayForTween(end, start, node.closed());\n          }\n        }\n\n        if (key.indexOf('fill') === 0) {\n          for (n = 0; n < len; n++) {\n            if (n % 2 === 0) {\n              diff.push(end[n] - start[n]);\n            } else {\n              var startRGBA = Konva.Util.colorToRGBA(start[n]);\n              endRGBA = Konva.Util.colorToRGBA(end[n]);\n              start[n] = startRGBA;\n              diff.push({\n                r: endRGBA.r - startRGBA.r,\n                g: endRGBA.g - startRGBA.g,\n                b: endRGBA.b - startRGBA.b,\n                a: endRGBA.a - startRGBA.a\n              });\n            }\n          }\n        } else {\n          for (n = 0; n < len; n++) {\n            diff.push(end[n] - start[n]);\n          }\n        }\n      } else if (colorAttrs.indexOf(key) !== -1) {\n        start = Konva.Util.colorToRGBA(start);\n        endRGBA = Konva.Util.colorToRGBA(end);\n        diff = {\n          r: endRGBA.r - start.r,\n          g: endRGBA.g - start.g,\n          b: endRGBA.b - start.b,\n          a: endRGBA.a - start.a\n        };\n      } else {\n        diff = end - start;\n      }\n\n      Konva.Tween.attrs[nodeId][this._id][key] = {\n        start: start,\n        diff: diff,\n        end: end,\n        trueEnd: trueEnd,\n        trueStart: trueStart\n      };\n      Konva.Tween.tweens[nodeId][key] = this._id;\n    },\n    _tweenFunc: function(i) {\n      var node = this.node,\n        attrs = Konva.Tween.attrs[node._id][this._id],\n        key,\n        attr,\n        start,\n        diff,\n        newVal,\n        n,\n        len,\n        end;\n\n      for (key in attrs) {\n        attr = attrs[key];\n        start = attr.start;\n        diff = attr.diff;\n        end = attr.end;\n\n        if (Konva.Util._isArray(start)) {\n          newVal = [];\n          len = Math.max(start.length, end.length);\n          if (key.indexOf('fill') === 0) {\n            for (n = 0; n < len; n++) {\n              if (n % 2 === 0) {\n                newVal.push((start[n] || 0) + diff[n] * i);\n              } else {\n                newVal.push(\n                  'rgba(' +\n                    Math.round(start[n].r + diff[n].r * i) +\n                    ',' +\n                    Math.round(start[n].g + diff[n].g * i) +\n                    ',' +\n                    Math.round(start[n].b + diff[n].b * i) +\n                    ',' +\n                    (start[n].a + diff[n].a * i) +\n                    ')'\n                );\n              }\n            }\n          } else {\n            for (n = 0; n < len; n++) {\n              newVal.push((start[n] || 0) + diff[n] * i);\n            }\n          }\n        } else if (colorAttrs.indexOf(key) !== -1) {\n          newVal =\n            'rgba(' +\n            Math.round(start.r + diff.r * i) +\n            ',' +\n            Math.round(start.g + diff.g * i) +\n            ',' +\n            Math.round(start.b + diff.b * i) +\n            ',' +\n            (start.a + diff.a * i) +\n            ')';\n        } else {\n          newVal = start + diff * i;\n        }\n\n        node.setAttr(key, newVal);\n      }\n    },\n    _addListeners: function() {\n      var that = this;\n\n      // start listeners\n      this.tween.onPlay = function() {\n        that.anim.start();\n      };\n      this.tween.onReverse = function() {\n        that.anim.start();\n      };\n\n      // stop listeners\n      this.tween.onPause = function() {\n        that.anim.stop();\n      };\n      this.tween.onFinish = function() {\n        var node = that.node;\n\n        // after tweening  points of line we need to set original end\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueEnd) {\n          node.points(attrs.points.trueEnd);\n        }\n\n        if (that.onFinish) {\n          that.onFinish.call(that);\n        }\n      };\n      this.tween.onReset = function() {\n        var node = that.node;\n        // after tweening  points of line we need to set original start\n        var attrs = Konva.Tween.attrs[node._id][that._id];\n        if (attrs.points && attrs.points.trueStart) {\n          node.points(attrs.points.trueStart);\n        }\n\n        if (that.onReset) {\n          that.onReset();\n        }\n      };\n    },\n    /**\n     * play\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    play: function() {\n      this.tween.play();\n      return this;\n    },\n    /**\n     * reverse\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    reverse: function() {\n      this.tween.reverse();\n      return this;\n    },\n    /**\n     * reset\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    reset: function() {\n      this.tween.reset();\n      return this;\n    },\n    /**\n     * seek\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @param {Integer} t time in seconds between 0 and the duration\n     * @returns {Tween}\n     */\n    seek: function(t) {\n      this.tween.seek(t * 1000);\n      return this;\n    },\n    /**\n     * pause\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    pause: function() {\n      this.tween.pause();\n      return this;\n    },\n    /**\n     * finish\n     * @method\n     * @memberof Konva.Tween.prototype\n     * @returns {Tween}\n     */\n    finish: function() {\n      this.tween.finish();\n      return this;\n    },\n    /**\n     * destroy\n     * @method\n     * @memberof Konva.Tween.prototype\n     */\n    destroy: function() {\n      var nodeId = this.node._id,\n        thisId = this._id,\n        attrs = Konva.Tween.tweens[nodeId],\n        key;\n\n      this.pause();\n\n      for (key in attrs) {\n        delete Konva.Tween.tweens[nodeId][key];\n      }\n\n      delete Konva.Tween.attrs[nodeId][thisId];\n    }\n  };\n\n  /**\n   * Tween node properties. Shorter usage of {@link Konva.Tween} object.\n   *\n   * @method Konva.Node#to\n   * @memberof Konva.Node\n   * @param {Object} [params] tween params\n   * @example\n   *\n   * circle.to({\n   *  x : 50,\n   *  duration : 0.5\n   * });\n   */\n  Konva.Node.prototype.to = function(params) {\n    var onFinish = params.onFinish;\n    params.node = this;\n    params.onFinish = function() {\n      this.destroy();\n      if (onFinish) {\n        onFinish();\n      }\n    };\n    var tween = new Konva.Tween(params);\n    tween.play();\n  };\n\n  /*\n    * These eases were ported from an Adobe Flash tweening library to JavaScript\n    * by Xaric\n    */\n\n  /**\n   * @namespace Easings\n   * @memberof Konva\n   */\n  Konva.Easings = {\n    /**\n     * back ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseIn: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * (t /= d) * t * ((s + 1) * t - s) + b;\n    },\n    /**\n     * back ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseOut: function(t, b, c, d) {\n      var s = 1.70158;\n      return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n    },\n    /**\n     * back ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BackEaseInOut: function(t, b, c, d) {\n      var s = 1.70158;\n      if ((t /= d / 2) < 1) {\n        return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n      }\n      return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n    },\n    /**\n     * elastic ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseIn: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        -(\n          a *\n          Math.pow(2, 10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p)\n        ) + b\n      );\n    },\n    /**\n     * elastic ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d) === 1) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * 0.3;\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      return (\n        a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * (2 * Math.PI) / p) +\n        c +\n        b\n      );\n    },\n    /**\n     * elastic ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    ElasticEaseInOut: function(t, b, c, d, a, p) {\n      // added s = 0\n      var s = 0;\n      if (t === 0) {\n        return b;\n      }\n      if ((t /= d / 2) === 2) {\n        return b + c;\n      }\n      if (!p) {\n        p = d * (0.3 * 1.5);\n      }\n      if (!a || a < Math.abs(c)) {\n        a = c;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n      if (t < 1) {\n        return (\n          -0.5 *\n            (a *\n              Math.pow(2, 10 * (t -= 1)) *\n              Math.sin((t * d - s) * (2 * Math.PI) / p)) +\n          b\n        );\n      }\n      return (\n        a *\n          Math.pow(2, -10 * (t -= 1)) *\n          Math.sin((t * d - s) * (2 * Math.PI) / p) *\n          0.5 +\n        c +\n        b\n      );\n    },\n    /**\n     * bounce ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseOut: function(t, b, c, d) {\n      if ((t /= d) < 1 / 2.75) {\n        return c * (7.5625 * t * t) + b;\n      } else if (t < 2 / 2.75) {\n        return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n      } else if (t < 2.5 / 2.75) {\n        return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n      } else {\n        return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n      }\n    },\n    /**\n     * bounce ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseIn: function(t, b, c, d) {\n      return c - Konva.Easings.BounceEaseOut(d - t, 0, c, d) + b;\n    },\n    /**\n     * bounce ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    BounceEaseInOut: function(t, b, c, d) {\n      if (t < d / 2) {\n        return Konva.Easings.BounceEaseIn(t * 2, 0, c, d) * 0.5 + b;\n      } else {\n        return (\n          Konva.Easings.BounceEaseOut(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b\n        );\n      }\n    },\n    /**\n     * ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n    /**\n     * ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseOut: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n    /**\n     * ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    EaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n    /**\n     * strong ease in\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseIn: function(t, b, c, d) {\n      return c * (t /= d) * t * t * t * t + b;\n    },\n    /**\n     * strong ease out\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseOut: function(t, b, c, d) {\n      return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n    },\n    /**\n     * strong ease in out\n     * @function\n     * @memberof Konva.Easings\n     */\n    StrongEaseInOut: function(t, b, c, d) {\n      if ((t /= d / 2) < 1) {\n        return c / 2 * t * t * t * t * t + b;\n      }\n      return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n    },\n    /**\n     * linear\n     * @function\n     * @memberof Konva.Easings\n     */\n    Linear: function(t, b, c, d) {\n      return c * t / d + b;\n    }\n  };\n})();\n\n(function() {\n  'use strict';\n  Konva.DD = {\n    // properties\n    anim: new Konva.Animation(function() {\n      var b = this.dirty;\n      this.dirty = false;\n      return b;\n    }),\n    isDragging: false,\n    justDragged: false,\n    offset: {\n      x: 0,\n      y: 0\n    },\n    node: null,\n\n    // methods\n    _drag: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node;\n      if (node) {\n        if (!dd.isDragging) {\n          var pos = node.getStage().getPointerPosition();\n          // it is possible that pos is undefined\n          // reattach it\n          if (!pos) {\n            node.getStage()._setPointerPosition(evt);\n            pos = node.getStage().getPointerPosition();\n          }\n          var dragDistance = node.dragDistance();\n          var distance = Math.max(\n            Math.abs(pos.x - dd.startPointerPos.x),\n            Math.abs(pos.y - dd.startPointerPos.y)\n          );\n          if (distance < dragDistance) {\n            return;\n          }\n        }\n\n        node.getStage()._setPointerPosition(evt);\n        if (!dd.isDragging) {\n          dd.isDragging = true;\n          node.fire(\n            'dragstart',\n            {\n              type: 'dragstart',\n              target: node,\n              evt: evt\n            },\n            true\n          );\n          // a user can stop dragging inside `dragstart`\n          if (!node.isDragging()) {\n            return;\n          }\n        }\n        node._setDragPosition(evt);\n\n        // execute ondragmove if defined\n        node.fire(\n          'dragmove',\n          {\n            type: 'dragmove',\n            target: node,\n            evt: evt\n          },\n          true\n        );\n      }\n    },\n    _endDragBefore: function(evt) {\n      var dd = Konva.DD,\n        node = dd.node,\n        layer;\n\n      if (node) {\n        layer = node.getLayer();\n        dd.anim.stop();\n\n        // only fire dragend event if the drag and drop\n        // operation actually started.\n        if (dd.isDragging) {\n          dd.isDragging = false;\n          dd.justDragged = true;\n          Konva.listenClickTap = false;\n\n          if (evt) {\n            evt.dragEndNode = node;\n          }\n        }\n\n        delete dd.node;\n\n        if (node.getLayer() || layer || node instanceof Konva.Stage) {\n          (layer || node).draw();\n        }\n      }\n    },\n    _endDragAfter: function(evt) {\n      evt = evt || {};\n      var dragEndNode = evt.dragEndNode;\n\n      if (evt && dragEndNode) {\n        dragEndNode.fire(\n          'dragend',\n          {\n            type: 'dragend',\n            target: dragEndNode,\n            evt: evt\n          },\n          true\n        );\n      }\n    }\n  };\n\n  // Node extenders\n\n  /**\n   * initiate drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.startDrag = function() {\n    var dd = Konva.DD,\n      stage = this.getStage(),\n      layer = this.getLayer(),\n      pos = stage.getPointerPosition(),\n      ap = this.getAbsolutePosition();\n\n    if (pos) {\n      if (dd.node) {\n        dd.node.stopDrag();\n      }\n\n      dd.node = this;\n      dd.startPointerPos = pos;\n      dd.offset.x = pos.x - ap.x;\n      dd.offset.y = pos.y - ap.y;\n      dd.anim.setLayers(layer || this.getLayers());\n      dd.anim.start();\n\n      this._setDragPosition();\n    }\n  };\n\n  Konva.Node.prototype._setDragPosition = function(evt) {\n    var dd = Konva.DD,\n      pos = this.getStage().getPointerPosition(),\n      dbf = this.getDragBoundFunc();\n    if (!pos) {\n      return;\n    }\n    var newNodePos = {\n      x: pos.x - dd.offset.x,\n      y: pos.y - dd.offset.y\n    };\n\n    if (dbf !== undefined) {\n      newNodePos = dbf.call(this, newNodePos, evt);\n    }\n    this.setAbsolutePosition(newNodePos);\n\n    if (\n      !this._lastPos ||\n      this._lastPos.x !== newNodePos.x ||\n      this._lastPos.y !== newNodePos.y\n    ) {\n      dd.anim.dirty = true;\n    }\n\n    this._lastPos = newNodePos;\n  };\n\n  /**\n   * stop drag and drop\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.stopDrag = function() {\n    var dd = Konva.DD,\n      evt = {};\n    dd._endDragBefore(evt);\n    dd._endDragAfter(evt);\n  };\n\n  Konva.Node.prototype.setDraggable = function(draggable) {\n    this._setAttr('draggable', draggable);\n    this._dragChange();\n  };\n\n  var origRemove = Konva.Node.prototype.remove;\n\n  Konva.Node.prototype.__originalRemove = origRemove;\n  Konva.Node.prototype.remove = function() {\n    var dd = Konva.DD;\n\n    // stop DD\n    if (dd.node && dd.node._id === this._id) {\n      this.stopDrag();\n    }\n\n    origRemove.call(this);\n  };\n\n  /**\n   * determine if node is currently in drag and drop mode\n   * @method\n   * @memberof Konva.Node.prototype\n   */\n  Konva.Node.prototype.isDragging = function() {\n    var dd = Konva.DD;\n    return !!(dd.node && dd.node._id === this._id && dd.isDragging);\n  };\n\n  Konva.Node.prototype._listenDrag = function() {\n    var that = this;\n\n    this._dragCleanup();\n\n    if (this.getClassName() === 'Stage') {\n      this.on('contentMousedown.konva contentTouchstart.konva', function(evt) {\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    } else {\n      this.on('mousedown.konva touchstart.konva', function(evt) {\n        // ignore right and middle buttons\n        if (evt.evt.button === 1 || evt.evt.button === 2) {\n          return;\n        }\n        if (!Konva.DD.node) {\n          that.startDrag(evt);\n        }\n      });\n    }\n\n    // listening is required for drag and drop\n    /*\n        this._listeningEnabled = true;\n        this._clearSelfAndAncestorCache('listeningEnabled');\n        */\n  };\n\n  Konva.Node.prototype._dragChange = function() {\n    if (this.attrs.draggable) {\n      this._listenDrag();\n    } else {\n      // remove event listeners\n      this._dragCleanup();\n\n      /*\n             * force drag and drop to end\n             * if this node is currently in\n             * drag and drop mode\n             */\n      var stage = this.getStage();\n      var dd = Konva.DD;\n      if (stage && dd.node && dd.node._id === this._id) {\n        dd.node.stopDrag();\n      }\n    }\n  };\n\n  Konva.Node.prototype._dragCleanup = function() {\n    if (this.getClassName() === 'Stage') {\n      this.off('contentMousedown.konva');\n      this.off('contentTouchstart.konva');\n    } else {\n      this.off('mousedown.konva');\n      this.off('touchstart.konva');\n    }\n  };\n\n  Konva.Factory.addGetterSetter(Konva.Node, 'dragBoundFunc');\n\n  /**\n   * get/set drag bound function.  This is used to override the default\n   *  drag and drop position.\n   * @name dragBoundFunc\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Function} dragBoundFunc\n   * @returns {Function}\n   * @example\n   * // get drag bound function\n   * var dragBoundFunc = node.dragBoundFunc();\n   *\n   * // create vertical drag and drop\n   * node.dragBoundFunc(function(pos){\n   *   // important pos - is absolute position of the node\n   *   // you should return absolute position too\n   *   return {\n   *     x: this.getAbsolutePosition().x,\n   *     y: pos.y\n   *   };\n   * });\n   */\n\n  Konva.Factory.addGetter(Konva.Node, 'draggable', false);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Node, 'draggable');\n\n  /**\n   * get/set draggable flag\n   * @name draggable\n   * @method\n   * @memberof Konva.Node.prototype\n   * @param {Boolean} draggable\n   * @returns {Boolean}\n   * @example\n   * // get draggable flag\n   * var draggable = node.draggable();\n   *\n   * // enable drag and drop\n   * node.draggable(true);\n   *\n   * // disable drag and drop\n   * node.draggable(false);\n   */\n\n  if (Konva.isBrowser) {\n    window.addEventListener('mouseup', Konva.DD._endDragBefore, true);\n    window.addEventListener('touchend', Konva.DD._endDragBefore, true);\n\n    window.addEventListener('mousemove', Konva.DD._drag);\n    window.addEventListener('touchmove', Konva.DD._drag);\n\n    window.addEventListener('mouseup', Konva.DD._endDragAfter, false);\n    window.addEventListener('touchend', Konva.DD._endDragAfter, false);\n  }\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Rect constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} [config.cornerRadius]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var rect = new Konva.Rect({\n   *   width: 100,\n   *   height: 50,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Rect = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Rect.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Rect';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var cornerRadius = this.getCornerRadius(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n\n      if (!cornerRadius) {\n        // simple rect - don't bother doing all that complicated maths stuff.\n        context.rect(0, 0, width, height);\n      } else {\n        // arcTo would be nicer, but browser support is patchy (Opera)\n        cornerRadius = Math.min(cornerRadius, width / 2, height / 2);\n        context.moveTo(cornerRadius, 0);\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    }\n  };\n\n  Konva.Util.extend(Konva.Rect, Konva.Shape);\n\n  Konva.Factory.addGetterSetter(\n    Konva.Rect,\n    'cornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set corner radius\n   * @name cornerRadius\n   * @method\n   * @memberof Konva.Rect.prototype\n   * @param {Number} cornerRadius\n   * @returns {Number}\n   * @example\n   * // get corner radius\n   * var cornerRadius = rect.cornerRadius();\n   *\n   * // set corner radius\n   * rect.cornerRadius(10);\n   */\n\n  Konva.Collection.mapMethods(Konva.Rect);\n})();\n\n(function(Konva) {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001,\n    CIRCLE = 'Circle';\n\n  /**\n   * Circle constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // create circle\n   * var circle = new Konva.Circle({\n   *   radius: 40,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Circle = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Circle.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = CIRCLE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getRadius(), 0, PIx2, false);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Circle, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Circle,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Circle, 'radius');\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Circle.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radius\n   * var radius = circle.radius();\n   *\n   * // set radius\n   * circle.radius(10);\n   */\n\n  Konva.Collection.mapMethods(Konva.Circle);\n})(Konva);\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001,\n    ELLIPSE = 'Ellipse';\n\n  /**\n   * Ellipse constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Object} config.radius defines x and y radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var ellipse = new Konva.Ellipse({\n   *   radius : {\n   *     x : 50,\n   *     y : 50\n   *   },\n   *   fill: 'red'\n   * });\n   */\n  Konva.Ellipse = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ellipse.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = ELLIPSE;\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var rx = this.getRadiusX(),\n        ry = this.getRadiusY();\n\n      context.beginPath();\n      context.save();\n      if (rx !== ry) {\n        context.scale(1, ry / rx);\n      }\n      context.arc(0, 0, rx, 0, PIx2, false);\n      context.restore();\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadiusX() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadiusY() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      this.setRadius({\n        x: width / 2\n      });\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      this.setRadius({\n        y: height / 2\n      });\n    }\n  };\n  Konva.Util.extend(Konva.Ellipse, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addComponentsGetterSetter(Konva.Ellipse, 'radius', ['x', 'y']);\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Object} radius\n   * @param {Number} radius.x\n   * @param {Number} radius.y\n   * @returns {Object}\n   * @example\n   * // get radius\n   * var radius = ellipse.radius();\n   *\n   * // set radius\n   * ellipse.radius({\n   *   x: 200,\n   *   y: 100\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Ellipse,\n    'radiusX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set radius x\n   * @name radiusX\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get radius x\n   * var radiusX = ellipse.radiusX();\n   *\n   * // set radius x\n   * ellipse.radiusX(200);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Ellipse,\n    'radiusY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set radius y\n   * @name radiusY\n   * @method\n   * @memberof Konva.Ellipse.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get radius y\n   * var radiusY = ellipse.radiusY();\n   *\n   * // set radius y\n   * ellipse.radiusY(200);\n   */\n\n  Konva.Collection.mapMethods(Konva.Ellipse);\n})();\n\n(function() {\n  'use strict';\n  // the 0.0001 offset fixes a bug in Chrome 27\n  var PIx2 = Math.PI * 2 - 0.0001;\n  /**\n   * Ring constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var ring = new Konva.Ring({\n   *   innerRadius: 40,\n   *   outerRadius: 80,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 5\n   * });\n   */\n  Konva.Ring = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Ring.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Ring';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(0, 0, this.getInnerRadius(), 0, PIx2, false);\n      context.moveTo(this.getOuterRadius(), 0);\n      context.arc(0, 0, this.getOuterRadius(), PIx2, 0, true);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    },\n    setOuterRadius: function(val) {\n      this._setAttr('outerRadius', val);\n      this.setWidth(val * 2);\n      this.setHeight(val * 2);\n    }\n  };\n  Konva.Util.extend(Konva.Ring, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Ring,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set innerRadius\n   * @name innerRadius\n   * @method\n   * @memberof Konva.Ring.prototype\n   * @param {Number} innerRadius\n   * @returns {Number}\n   * @example\n   * // get inner radius\n   * var innerRadius = ring.innerRadius();\n   *\n   * // set inner radius\n   * ring.innerRadius(20);\n   */\n  Konva.Factory.addGetter(\n    Konva.Ring,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  Konva.Factory.addOverloadedGetterSetter(Konva.Ring, 'outerRadius');\n\n  /**\n   * get/set outerRadius\n   * @name outerRadius\n   * @method\n   * @memberof Konva.Ring.prototype\n   * @param {Number} outerRadius\n   * @returns {Number}\n   * @example\n   * // get outer radius\n   * var outerRadius = ring.outerRadius();\n   *\n   * // set outer radius\n   * ring.outerRadius(20);\n   */\n\n  Konva.Collection.mapMethods(Konva.Ring);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Wedge constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.angle in degrees\n   * @param {Number} config.radius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // draw a wedge that's pointing downwards\n   * var wedge = new Konva.Wedge({\n   *   radius: 40,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5,\n   *   angleDeg: 60,\n   *   rotationDeg: -120\n   * });\n   */\n  Konva.Wedge = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Wedge.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Wedge';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      context.beginPath();\n      context.arc(\n        0,\n        0,\n        this.getRadius(),\n        0,\n        Konva.getAngle(this.getAngle()),\n        this.getClockwise()\n      );\n      context.lineTo(0, 0);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Wedge, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Wedge,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set radius\n   * @name radius\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} radius\n   * @returns {Number}\n   * @example\n   * // get radius\n   * var radius = wedge.radius();\n   *\n   * // set radius\n   * wedge.radius(10);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Wedge,\n    'angle',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set angle in degrees\n   * @name angle\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} angle\n   * @returns {Number}\n   * @example\n   * // get angle\n   * var angle = wedge.angle();\n   *\n   * // set angle\n   * wedge.angle(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Wedge, 'clockwise', false);\n\n  /**\n   * get/set clockwise flag\n   * @name clockwise\n   * @method\n   * @memberof Konva.Wedge.prototype\n   * @param {Number} clockwise\n   * @returns {Number}\n   * @example\n   * // get clockwise flag\n   * var clockwise = wedge.clockwise();\n   *\n   * // draw wedge counter-clockwise\n   * wedge.clockwise(false);\n   *\n   * // draw wedge clockwise\n   * wedge.clockwise(true);\n   */\n\n  Konva.Factory.backCompat(Konva.Wedge, {\n    angleDeg: 'angle',\n    getAngleDeg: 'getAngle',\n    setAngleDeg: 'setAngle'\n  });\n\n  Konva.Collection.mapMethods(Konva.Wedge);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Arc constructor\n   * @constructor\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.angle in degrees\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {Boolean} [config.clockwise]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // draw a Arc that's pointing downwards\n   * var arc = new Konva.Arc({\n   *   innerRadius: 40,\n   *   outerRadius: 80,\n   *   fill: 'red',\n   *   stroke: 'black'\n   *   strokeWidth: 5,\n   *   angle: 60,\n   *   rotationDeg: -120\n   * });\n   */\n  Konva.Arc = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Arc.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Arc';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var angle = Konva.getAngle(this.angle()),\n        clockwise = this.clockwise();\n\n      context.beginPath();\n      context.arc(0, 0, this.getOuterRadius(), 0, angle, clockwise);\n      context.arc(0, 0, this.getInnerRadius(), angle, 0, !clockwise);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.getOuterRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.getOuterRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Arc, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set innerRadius\n   * @name innerRadius\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} innerRadius\n   * @returns {Number}\n   * @example\n   * // get inner radius\n   * var innerRadius = arc.innerRadius();\n   *\n   * // set inner radius\n   * arc.innerRadius(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set outerRadius\n   * @name outerRadius\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} outerRadius\n   * @returns {Number}\n   * @example\n   * // get outer radius\n   * var outerRadius = arc.outerRadius();\n   *\n   * // set outer radius\n   * arc.outerRadius(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arc,\n    'angle',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set angle in degrees\n   * @name angle\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Number} angle\n   * @returns {Number}\n   * @example\n   * // get angle\n   * var angle = arc.angle();\n   *\n   * // set angle\n   * arc.angle(20);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arc, 'clockwise', false);\n\n  /**\n   * get/set clockwise flag\n   * @name clockwise\n   * @method\n   * @memberof Konva.Arc.prototype\n   * @param {Boolean} clockwise\n   * @returns {Boolean}\n   * @example\n   * // get clockwise flag\n   * var clockwise = arc.clockwise();\n   *\n   * // draw arc counter-clockwise\n   * arc.clockwise(false);\n   *\n   * // draw arc clockwise\n   * arc.clockwise(true);\n   */\n\n  Konva.Collection.mapMethods(Konva.Arc);\n})(Konva);\n\n(function() {\n  'use strict';\n  // CONSTANTS\n  var IMAGE = 'Image';\n\n  /**\n   * Image constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Image} config.image\n   * @param {Object} [config.crop]\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   var image = new Konva.Image({\n   *     x: 200,\n   *     y: 50,\n   *     image: imageObj,\n   *     width: 100,\n   *     height: 100\n   *   });\n   * };\n   * imageObj.src = '/path/to/image.jpg'\n   */\n  Konva.Image = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Image.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = IMAGE;\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke() &&\n        this.getStage()\n      );\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        image = this.getImage(),\n        cropWidth,\n        cropHeight,\n        params;\n\n      if (image) {\n        cropWidth = this.getCropWidth();\n        cropHeight = this.getCropHeight();\n        if (cropWidth && cropHeight) {\n          params = [\n            image,\n            this.getCropX(),\n            this.getCropY(),\n            cropWidth,\n            cropHeight,\n            0,\n            0,\n            width,\n            height\n          ];\n        } else {\n          params = [image, 0, 0, width, height];\n        }\n      }\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        context.drawImage.apply(context, params);\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      var image = this.getImage();\n      return this.attrs.width || (image ? image.width : 0);\n    },\n    getHeight: function() {\n      var image = this.getImage();\n      return this.attrs.height || (image ? image.height : 0);\n    }\n  };\n  Konva.Util.extend(Konva.Image, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Image, 'image');\n\n  /**\n   * set image\n   * @name setImage\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Image} image\n   */\n\n  /**\n   * get image\n   * @name getImage\n   * @method\n   * @memberof Konva.Image.prototype\n   * @returns {Image}\n   */\n\n  Konva.Factory.addComponentsGetterSetter(Konva.Image, 'crop', [\n    'x',\n    'y',\n    'width',\n    'height'\n  ]);\n  /**\n   * get/set crop\n   * @method\n   * @name crop\n   * @memberof Konva.Image.prototype\n   * @param {Object} crop\n   * @param {Number} crop.x\n   * @param {Number} crop.y\n   * @param {Number} crop.width\n   * @param {Number} crop.height\n   * @returns {Object}\n   * @example\n   * // get crop\n   * var crop = image.crop();\n   *\n   * // set crop\n   * image.crop({\n   *   x: 20,\n   *   y: 20,\n   *   width: 20,\n   *   height: 20\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropX',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop x\n   * @method\n   * @name cropX\n   * @memberof Konva.Image.prototype\n   * @param {Number} x\n   * @returns {Number}\n   * @example\n   * // get crop x\n   * var cropX = image.cropX();\n   *\n   * // set crop x\n   * image.cropX(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropY',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop y\n   * @name cropY\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} y\n   * @returns {Number}\n   * @example\n   * // get crop y\n   * var cropY = image.cropY();\n   *\n   * // set crop y\n   * image.cropY(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropWidth',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop width\n   * @name cropWidth\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} width\n   * @returns {Number}\n   * @example\n   * // get crop width\n   * var cropWidth = image.cropWidth();\n   *\n   * // set crop width\n   * image.cropWidth(20);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Image,\n    'cropHeight',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set crop height\n   * @name cropHeight\n   * @method\n   * @memberof Konva.Image.prototype\n   * @param {Number} height\n   * @returns {Number}\n   * @example\n   * // get crop height\n   * var cropHeight = image.cropHeight();\n   *\n   * // set crop height\n   * image.cropHeight(20);\n   */\n\n  Konva.Collection.mapMethods(Konva.Image);\n\n  /**\n   * load image from given url and create `Konva.Image` instance\n   * @method\n   * @memberof Konva.Image\n   * @param {String} url image source\n   * @param {Function} callback with Konva.Image instance as first argument\n   * @example\n   *  Konva.Image.fromURL(imageURL, function(image){\n   *    // image is Konva.Image instance\n   *    layer.add(image);\n   *    layer.draw();\n   *  });\n   */\n  Konva.Image.fromURL = function(url, callback) {\n    var img = new Image();\n    img.onload = function() {\n      var image = new Konva.Image({\n        image: img\n      });\n      callback(image);\n    };\n    img.crossOrigin = 'Anonymous';\n    img.src = url;\n  };\n})();\n\n/*eslint-disable max-depth */\n(function() {\n  'use strict';\n  // var isFirefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;\n  // constants\n  var AUTO = 'auto',\n    //CANVAS = 'canvas',\n    CENTER = 'center',\n    JUSTIFY = 'justify',\n    CHANGE_KONVA = 'Change.konva',\n    CONTEXT_2D = '2d',\n    DASH = '-',\n    EMPTY_STRING = '',\n    LEFT = 'left',\n    TEXT = 'text',\n    TEXT_UPPER = 'Text',\n    TOP = 'top',\n    BOTTOM = 'bottom',\n    MIDDLE = 'middle',\n    NORMAL = 'normal',\n    PX_SPACE = 'px ',\n    SPACE = ' ',\n    RIGHT = 'right',\n    WORD = 'word',\n    CHAR = 'char',\n    NONE = 'none',\n    ELLIPSIS = '…',\n    ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'fontVariant',\n      'padding',\n      'align',\n      'verticalAlign',\n      'lineHeight',\n      'text',\n      'width',\n      'height',\n      'wrap',\n      'ellipsis',\n      'letterSpacing'\n    ],\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n  var dummyContext;\n  function getDummyContext() {\n    if (dummyContext) {\n      return dummyContext;\n    }\n    dummyContext = Konva.Util.createCanvasElement().getContext(CONTEXT_2D);\n    return dummyContext;\n  }\n\n  /**\n   * Text constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Arial\n   * @param {Number} [config.fontSize] in pixels.  Default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} [config.align] can be left, center, or right\n   * @param {String} [config.verticalAlign] can be top, middle or bottom\n   * @param {Number} [config.padding]\n   * @param {Number} [config.lineHeight] default is 1\n   * @param {String} [config.wrap] can be word, char, or none. Default is word\n   * @param {Boolean} [config.ellipsis] can be true or false. Default is false. if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var text = new Konva.Text({\n   *   x: 10,\n   *   y: 15,\n   *   text: 'Simple Text',\n   *   fontSize: 30,\n   *   fontFamily: 'Calibri',\n   *   fill: 'green'\n   * });\n   */\n  Konva.Text = function(config) {\n    this.___init(config);\n  };\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.Text.prototype = {\n    ___init: function(config) {\n      config = config || {};\n\n      // set default color to black\n      if (\n        !config.fillLinearGradientColorStops &&\n        !config.fillRadialGradientColorStops\n      ) {\n        config.fill = config.fill || 'black';\n      }\n      //\n      // if (config.width === undefined) {\n      //     config.width = AUTO;\n      // }\n      // if (config.height === undefined) {\n      //     config.height = AUTO;\n      // }\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this.className = TEXT_UPPER;\n\n      // update text data for certain attr changes\n      for (var n = 0; n < attrChangeListLen; n++) {\n        this.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, this._setTextData);\n      }\n\n      this._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var padding = this.getPadding(),\n        textHeight = this.getTextHeight(),\n        lineHeightPx = this.getLineHeight() * textHeight,\n        textArr = this.textArr,\n        textArrLen = textArr.length,\n        verticalAlign = this.getVerticalAlign(),\n        alignY = 0,\n        align = this.getAlign(),\n        totalWidth = this.getWidth(),\n        letterSpacing = this.getLetterSpacing(),\n        textDecoration = this.textDecoration(),\n        fill = this.fill(),\n        fontSize = this.fontSize(),\n        n;\n\n      context.setAttr('font', this._getContextFont());\n\n      context.setAttr('textBaseline', MIDDLE);\n      context.setAttr('textAlign', LEFT);\n\n      // handle vertical alignment\n      if (verticalAlign === MIDDLE) {\n        alignY =\n          (this.getHeight() - textArrLen * lineHeightPx - padding * 2) / 2;\n      } else if (verticalAlign === BOTTOM) {\n        alignY = this.getHeight() - textArrLen * lineHeightPx - padding * 2;\n      }\n\n      if (padding) {\n        context.translate(padding, 0);\n        context.translate(0, alignY + padding + lineHeightPx / 2);\n      } else {\n        context.translate(0, alignY + lineHeightPx / 2);\n      }\n\n      // draw text lines\n      for (n = 0; n < textArrLen; n++) {\n        var obj = textArr[n],\n          text = obj.text,\n          width = obj.width,\n          lastLine = n !== textArrLen - 1,\n          spacesNumber,\n          oneWord,\n          lineWidth;\n\n        // horizontal alignment\n        context.save();\n        if (align === RIGHT) {\n          context.translate(totalWidth - width - padding * 2, 0);\n        } else if (align === CENTER) {\n          context.translate((totalWidth - width - padding * 2) / 2, 0);\n        }\n\n        if (textDecoration.indexOf('underline') !== -1) {\n          context.save();\n          context.beginPath();\n\n          context.moveTo(0, Math.round(lineHeightPx / 2));\n          spacesNumber = text.split(' ').length - 1;\n          oneWord = spacesNumber === 0;\n          lineWidth =\n            align === JUSTIFY && lastLine && !oneWord\n              ? totalWidth - padding * 2\n              : width;\n          context.lineTo(Math.round(lineWidth), Math.round(lineHeightPx / 2));\n          // TODO: I have no idea what is real ratio\n          // just /15 looks good enough\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (textDecoration.indexOf('line-through') !== -1) {\n          context.save();\n          context.beginPath();\n          context.moveTo(0, 0);\n          spacesNumber = text.split(' ').length - 1;\n          oneWord = spacesNumber === 0;\n          lineWidth =\n            align === JUSTIFY && lastLine && !oneWord\n              ? totalWidth - padding * 2\n              : width;\n          context.lineTo(Math.round(lineWidth), 0);\n          context.lineWidth = fontSize / 15;\n          context.strokeStyle = fill;\n          context.stroke();\n          context.restore();\n        }\n        if (letterSpacing !== 0 || align === JUSTIFY) {\n          //   var words = text.split(' ');\n          spacesNumber = text.split(' ').length - 1;\n          for (var li = 0; li < text.length; li++) {\n            var letter = text[li];\n            // skip justify for the last line\n            if (letter === ' ' && n !== textArrLen - 1 && align === JUSTIFY) {\n              context.translate(\n                Math.floor((totalWidth - padding * 2 - width) / spacesNumber),\n                0\n              );\n            }\n            this.partialText = letter;\n            context.fillStrokeShape(this);\n            context.translate(\n              Math.round(this._getTextSize(letter).width) + letterSpacing,\n              0\n            );\n          }\n        } else {\n          this.partialText = text;\n\n          context.fillStrokeShape(this);\n        }\n        context.restore();\n        if (textArrLen > 1) {\n          context.translate(0, lineHeightPx);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight();\n\n      context.beginPath();\n      context.rect(0, 0, width, height);\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    setText: function(text) {\n      var str = Konva.Util._isString(text) ? text : (text || '').toString();\n      this._setAttr(TEXT, str);\n      return this;\n    },\n    /**\n     * get width of text area, which includes padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getWidth: function() {\n      var isAuto = this.attrs.width === AUTO || this.attrs.width === undefined;\n      return isAuto\n        ? this.getTextWidth() + this.getPadding() * 2\n        : this.attrs.width;\n    },\n    /**\n     * get the height of the text area, which takes into account multi-line text, line heights, and padding\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getHeight: function() {\n      var isAuto =\n        this.attrs.height === AUTO || this.attrs.height === undefined;\n      return isAuto\n        ? this.getTextHeight() * this.textArr.length * this.getLineHeight() +\n            this.getPadding() * 2\n        : this.attrs.height;\n    },\n    /**\n     * get text width\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get height of one line text\n     * @method\n     * @memberof Konva.Text.prototype\n     * @returns {Number}\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    _getTextSize: function(text) {\n      var _context = getDummyContext(),\n        fontSize = this.getFontSize(),\n        metrics;\n\n      _context.save();\n      _context.font = this._getContextFont();\n\n      metrics = _context.measureText(text);\n      _context.restore();\n      return {\n        width: metrics.width,\n        height: parseInt(fontSize, 10)\n      };\n    },\n    _getContextFont: function() {\n      // IE don't want to work with usual font style\n      // bold was not working\n      // removing font variant will solve\n      // fix for: https://github.com/konvajs/konva/issues/94\n      if (Konva.UA.isIE) {\n        return (\n          this.getFontStyle() +\n          SPACE +\n          this.getFontSize() +\n          PX_SPACE +\n          this.getFontFamily()\n        );\n      }\n      return (\n        this.getFontStyle() +\n        SPACE +\n        this.getFontVariant() +\n        SPACE +\n        this.getFontSize() +\n        PX_SPACE +\n        this.getFontFamily()\n      );\n    },\n    _addTextLine: function(line) {\n      if (this.align() === JUSTIFY) {\n        line = line.trim();\n      }\n      var width = this._getTextWidth(line);\n      return this.textArr.push({ text: line, width: width });\n    },\n    _getTextWidth: function(text) {\n      var latterSpacing = this.getLetterSpacing();\n      var length = text.length;\n      return (\n        getDummyContext().measureText(text).width +\n        (length ? latterSpacing * (length - 1) : 0)\n      );\n    },\n    _setTextData: function() {\n      var lines = this.getText().split('\\n'),\n        fontSize = +this.getFontSize(),\n        textWidth = 0,\n        lineHeightPx = this.getLineHeight() * fontSize,\n        width = this.attrs.width,\n        height = this.attrs.height,\n        fixedWidth = width !== AUTO,\n        fixedHeight = height !== AUTO,\n        padding = this.getPadding(),\n        maxWidth = width - padding * 2,\n        maxHeightPx = height - padding * 2,\n        currentHeightPx = 0,\n        wrap = this.getWrap(),\n        // align = this.getAlign(),\n        shouldWrap = wrap !== NONE,\n        wrapAtWord = wrap !== CHAR && shouldWrap,\n        shouldAddEllipsis = this.getEllipsis() && !shouldWrap;\n\n      this.textArr = [];\n      getDummyContext().font = this._getContextFont();\n      for (var i = 0, max = lines.length; i < max; ++i) {\n        var line = lines[i];\n        var additionalWidth = shouldAddEllipsis\n          ? this._getTextWidth(ELLIPSIS)\n          : 0;\n\n        var lineWidth = this._getTextWidth(line);\n        if (fixedWidth && lineWidth > maxWidth) {\n          /*\n          * if width is fixed and line does not fit entirely\n          * break the line into multiple fitting lines\n          */\n          while (line.length > 0) {\n            /*\n            * use binary search to find the longest substring that\n            * that would fit in the specified width\n            */\n            var low = 0,\n              high = line.length,\n              match = '',\n              matchWidth = 0;\n            while (low < high) {\n              var mid = (low + high) >>> 1,\n                substr = line.slice(0, mid + 1),\n                substrWidth = this._getTextWidth(substr) + additionalWidth;\n              if (substrWidth <= maxWidth) {\n                low = mid + 1;\n                match = substr + (shouldAddEllipsis ? ELLIPSIS : '');\n                matchWidth = substrWidth;\n              } else {\n                high = mid;\n              }\n            }\n            /*\n            * 'low' is now the index of the substring end\n            * 'match' is the substring\n            * 'matchWidth' is the substring width in px\n            */\n            if (match) {\n              // a fitting substring was found\n              if (wrapAtWord) {\n                // try to find a space or dash where wrapping could be done\n                var wrapIndex;\n                var nextChar = line[match.length];\n                var nextIsSpaceOrDash = nextChar === SPACE || nextChar === DASH;\n                if (nextIsSpaceOrDash && matchWidth <= maxWidth) {\n                  wrapIndex = match.length;\n                } else {\n                  wrapIndex =\n                    Math.max(\n                      match.lastIndexOf(SPACE),\n                      match.lastIndexOf(DASH)\n                    ) + 1;\n                }\n                if (wrapIndex > 0) {\n                  // re-cut the substring found at the space/dash position\n                  low = wrapIndex;\n                  match = match.slice(0, low);\n                  matchWidth = this._getTextWidth(match);\n                }\n              }\n              // if (align === 'right') {\n              match = Konva.Util.trimRight(match);\n              // }\n              this._addTextLine(match);\n              textWidth = Math.max(textWidth, matchWidth);\n              currentHeightPx += lineHeightPx;\n              if (\n                !shouldWrap ||\n                (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx)\n              ) {\n                /*\n                * stop wrapping if wrapping is disabled or if adding\n                * one more line would overflow the fixed height\n                */\n                break;\n              }\n              line = line.slice(low);\n              line = Konva.Util.trimLeft(line);\n              if (line.length > 0) {\n                // Check if the remaining text would fit on one line\n                lineWidth = this._getTextWidth(line);\n                if (lineWidth <= maxWidth) {\n                  // if it does, add the line and break out of the loop\n                  this._addTextLine(line);\n                  currentHeightPx += lineHeightPx;\n                  textWidth = Math.max(textWidth, lineWidth);\n                  break;\n                }\n              }\n            } else {\n              // not even one character could fit in the element, abort\n              break;\n            }\n          }\n        } else {\n          // element width is automatically adjusted to max line width\n          this._addTextLine(line);\n          currentHeightPx += lineHeightPx;\n          textWidth = Math.max(textWidth, lineWidth);\n        }\n        // if element height is fixed, abort if adding one more line would overflow\n        if (fixedHeight && currentHeightPx + lineHeightPx > maxHeightPx) {\n          break;\n        }\n      }\n      this.textHeight = fontSize;\n      // var maxTextWidth = 0;\n      // for(var j = 0; j < this.textArr.length; j++) {\n      //     maxTextWidth = Math.max(maxTextWidth, this.textArr[j].width);\n      // }\n      this.textWidth = textWidth;\n    }\n  };\n  Konva.Util.extend(Konva.Text, Konva.Shape);\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'width',\n    Konva.Validators.getNumberOrAutoValidator()\n  );\n\n  Konva.Factory.addSetter(\n    Konva.Node,\n    'height',\n    Konva.Validators.getNumberOrAutoValidator()\n  );\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontFamily', 'Arial');\n\n  /**\n   * get/set font family\n   * @name fontFamily\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontFamily\n   * @returns {String}\n   * @example\n   * // get font family\n   * var fontFamily = text.fontFamily();\n   *\n   * // set font family\n   * text.fontFamily('Arial');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'fontSize',\n    12,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set font size in pixels\n   * @name fontSize\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} fontSize\n   * @returns {Number}\n   * @example\n   * // get font size\n   * var fontSize = text.fontSize();\n   *\n   * // set font size to 22px\n   * text.fontSize(22);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name fontStyle\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontStyle\n   * @returns {String}\n   * @example\n   * // get font style\n   * var fontStyle = text.fontStyle();\n   *\n   * // set font style\n   * text.fontStyle('bold');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name fontVariant\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} fontVariant\n   * @returns {String}\n   * @example\n   * // get font variant\n   * var fontVariant = text.fontVariant();\n   *\n   * // set font variant\n   * text.fontVariant('small-caps');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'padding',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} padding\n   * @returns {Number}\n   * @example\n   * // get padding\n   * var padding = text.padding();\n   *\n   * // set padding to 10 pixels\n   * text.padding(10);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'align', LEFT);\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'verticalAlign', TOP);\n\n  /**\n   * get/set vertical align of text.  Can be 'top', 'middle', 'bottom'.\n   * @name verticalAlign\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} verticalAlign\n   * @returns {String}\n   * @example\n   * // get text vertical align\n   * var verticalAlign = text.verticalAlign();\n   *\n   * // center text\n   * text.verticalAlign('middle');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'lineHeight',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set line height.  The default is 1.\n   * @name lineHeight\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Number} lineHeight\n   * @returns {Number}\n   * @example\n   * // get line height\n   * var lineHeight = text.lineHeight();\n   *\n   * // set the line height\n   * text.lineHeight(2);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'wrap', WORD);\n\n  /**\n   * get/set wrap.  Can be word, char, or none. Default is word.\n   * @name wrap\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} wrap\n   * @returns {String}\n   * @example\n   * // get wrap\n   * var wrap = text.wrap();\n   *\n   * // set wrap\n   * text.wrap('word');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'ellipsis', false);\n\n  /**\n   * get/set ellipsis.  Can be true or false. Default is false.\n   * if Konva.Text config is set to wrap=\"none\" and ellipsis=true, then it will add \"...\" to the end\n   * @name ellipsis\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {Boolean} ellipsis\n   * @returns {Boolean}\n   * @example\n   * // get ellipsis\n   * var ellipsis = text.ellipsis();\n   *\n   * // set ellipsis\n   * text.ellipsis(true);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Text,\n    'letterSpacing',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetter(Konva.Text, 'text', EMPTY_STRING);\n  Konva.Factory.addOverloadedGetterSetter(Konva.Text, 'text');\n\n  /**\n   * get/set text\n   * @name getText\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} text\n   * @returns {String}\n   * @example\n   * // get text\n   * var text = text.text();\n   *\n   * // set text\n   * text.text('Hello world!');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Text, 'textDecoration', EMPTY_STRING);\n\n  /**\n   * get/set text decoration of a text.  Possible values are 'underline', 'line-through' or combination of these values separated by space\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // underline text\n   * text.textDecoration('underline');\n   *\n   * // strike text\n   * text.textDecoration('line-through');\n   *\n   * // underline and strike text\n   * text.textDecoration('underline line-through');\n   */\n\n  Konva.Collection.mapMethods(Konva.Text);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Line constructor.&nbsp; Lines are defined by an array of points and\n   *  a tension\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Boolean} [config.closed] defines whether or not the line shape is closed, creating a polygon or blob\n   * @param {Boolean} [config.bezier] if no tension is provided but bezier=true, we draw the line as a bezier using the passed points\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   x: 100,\n   *   y: 50,\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1\n   * });\n   */\n  Konva.Line = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Line.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Line';\n\n      this.on(\n        'pointsChange.konva tensionChange.konva closedChange.konva bezierChange.konva',\n        function() {\n          this._clearCache('tensionPoints');\n        }\n      );\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var points = this.getPoints(),\n        length = points.length,\n        tension = this.getTension(),\n        closed = this.getClosed(),\n        bezier = this.getBezier(),\n        tp,\n        len,\n        n;\n\n      if (!length) {\n        return;\n      }\n\n      context.beginPath();\n      context.moveTo(points[0], points[1]);\n\n      // tension\n      if (tension !== 0 && length > 4) {\n        tp = this.getTensionPoints();\n        len = tp.length;\n        n = closed ? 0 : 4;\n\n        if (!closed) {\n          context.quadraticCurveTo(tp[0], tp[1], tp[2], tp[3]);\n        }\n\n        while (n < len - 2) {\n          context.bezierCurveTo(\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++],\n            tp[n++]\n          );\n        }\n\n        if (!closed) {\n          context.quadraticCurveTo(\n            tp[len - 2],\n            tp[len - 1],\n            points[length - 2],\n            points[length - 1]\n          );\n        }\n      } else if (bezier) {\n        // no tension but bezier\n        n = 2;\n\n        while (n < length) {\n          context.bezierCurveTo(\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++],\n            points[n++]\n          );\n        }\n      } else {\n        // no tension\n        for (n = 2; n < length; n += 2) {\n          context.lineTo(points[n], points[n + 1]);\n        }\n      }\n\n      // closed e.g. polygons and blobs\n      if (closed) {\n        context.closePath();\n        context.fillStrokeShape(this);\n      } else {\n        // open e.g. lines and splines\n        context.strokeShape(this);\n      }\n    },\n    getTensionPoints: function() {\n      return this._getCache('tensionPoints', this._getTensionPoints);\n    },\n    _getTensionPoints: function() {\n      if (this.getClosed()) {\n        return this._getTensionPointsClosed();\n      } else {\n        return Konva.Util._expandPoints(this.getPoints(), this.getTension());\n      }\n    },\n    _getTensionPointsClosed: function() {\n      var p = this.getPoints(),\n        len = p.length,\n        tension = this.getTension(),\n        util = Konva.Util,\n        firstControlPoints = util._getControlPoints(\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          p[2],\n          p[3],\n          tension\n        ),\n        lastControlPoints = util._getControlPoints(\n          p[len - 4],\n          p[len - 3],\n          p[len - 2],\n          p[len - 1],\n          p[0],\n          p[1],\n          tension\n        ),\n        middle = Konva.Util._expandPoints(p, tension),\n        tp = [firstControlPoints[2], firstControlPoints[3]]\n          .concat(middle)\n          .concat([\n            lastControlPoints[0],\n            lastControlPoints[1],\n            p[len - 2],\n            p[len - 1],\n            lastControlPoints[2],\n            lastControlPoints[3],\n            firstControlPoints[0],\n            firstControlPoints[1],\n            p[0],\n            p[1]\n          ]);\n\n      return tp;\n    },\n    getWidth: function() {\n      return this.getSelfRect().width;\n    },\n    getHeight: function() {\n      return this.getSelfRect().height;\n    },\n    // overload size detection\n    getSelfRect: function() {\n      var points;\n      if (this.getTension() !== 0) {\n        points = this._getTensionPoints();\n      } else {\n        points = this.getPoints();\n      }\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    }\n  };\n  Konva.Util.extend(Konva.Line, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Line, 'closed', false);\n\n  /**\n   * get/set closed flag.  The default is false\n   * @name closed\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} closed\n   * @returns {Boolean}\n   * @example\n   * // get closed flag\n   * var closed = line.closed();\n   *\n   * // close the shape\n   * line.closed(true);\n   *\n   * // open the shape\n   * line.closed(false);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Line, 'bezier', false);\n\n  /**\n   * get/set bezier flag.  The default is false\n   * @name bezier\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Boolean} bezier\n   * @returns {Boolean}\n   * @example\n   * // get whether the line is a bezier\n   * var isBezier = line.bezier();\n   *\n   * // set whether the line is a bezier\n   * line.bezier(true);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Line,\n    'tension',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set tension\n   * @name tension\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Number} Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var tension = line.tension();\n   *\n   * // set tension\n   * line.tension(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Line,\n    'points',\n    [],\n    Konva.Validators.getNumberArrayValidator()\n  );\n  /**\n   * get/set points array\n   * @name points\n   * @method\n   * @memberof Konva.Line.prototype\n   * @param {Array} points\n   * @returns {Array}\n   * @example\n   * // get points\n   * var points = line.points();\n   *\n   * // set points\n   * line.points([10, 20, 30, 40, 50, 60]);\n   *\n   * // push a new point\n   * line.points(line.points().concat([70, 80]));\n   */\n\n  Konva.Collection.mapMethods(Konva.Line);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Sprite constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} config.animation animation key\n   * @param {Object} config.animations animation map\n   * @param {Integer} [config.frameIndex] animation frame index\n   * @param {Image} config.image image object\n   * @param {Integer} [config.frameRate] animation frame rate\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var imageObj = new Image();\n   * imageObj.onload = function() {\n   *   var sprite = new Konva.Sprite({\n   *     x: 200,\n   *     y: 100,\n   *     image: imageObj,\n   *     animation: 'standing',\n   *     animations: {\n   *       standing: [\n   *         // x, y, width, height (6 frames)\n   *         0, 0, 49, 109,\n   *         52, 0, 49, 109,\n   *         105, 0, 49, 109,\n   *         158, 0, 49, 109,\n   *         210, 0, 49, 109,\n   *         262, 0, 49, 109\n   *       ],\n   *       kicking: [\n   *         // x, y, width, height (6 frames)\n   *         0, 109, 45, 98,\n   *         45, 109, 45, 98,\n   *         95, 109, 63, 98,\n   *         156, 109, 70, 98,\n   *         229, 109, 60, 98,\n   *         287, 109, 41, 98\n   *       ]\n   *     },\n   *     frameRate: 7,\n   *     frameIndex: 0\n   *   });\n   * };\n   * imageObj.src = '/path/to/image.jpg'\n   */\n  Konva.Sprite = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Sprite.prototype = {\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Sprite';\n\n      this._updated = true;\n      var that = this;\n      this.anim = new Konva.Animation(function() {\n        // if we don't need to redraw layer we should return false\n        var updated = that._updated;\n        that._updated = false;\n        return updated;\n      });\n      this.on('animationChange.konva', function() {\n        // reset index when animation changes\n        this.frameIndex(0);\n      });\n      this.on('frameIndexChange.konva', function() {\n        this._updated = true;\n      });\n      // smooth change for frameRate\n      this.on('frameRateChange.konva', function() {\n        if (!this.anim.isRunning()) {\n          return;\n        }\n        clearInterval(this.interval);\n        this._setInterval();\n      });\n\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        x = set[ix4 + 0],\n        y = set[ix4 + 1],\n        width = set[ix4 + 2],\n        height = set[ix4 + 3],\n        image = this.getImage();\n\n      if (this.hasFill() || this.hasStroke()) {\n        context.beginPath();\n        context.rect(0, 0, width, height);\n        context.closePath();\n        context.fillStrokeShape(this);\n      }\n\n      if (image) {\n        if (offsets) {\n          var offset = offsets[anim],\n            ix2 = index * 2;\n          context.drawImage(\n            image,\n            x,\n            y,\n            width,\n            height,\n            offset[ix2 + 0],\n            offset[ix2 + 1],\n            width,\n            height\n          );\n        } else {\n          context.drawImage(image, x, y, width, height, 0, 0, width, height);\n        }\n      }\n    },\n    _hitFunc: function(context) {\n      var anim = this.getAnimation(),\n        index = this.frameIndex(),\n        ix4 = index * 4,\n        set = this.getAnimations()[anim],\n        offsets = this.frameOffsets(),\n        width = set[ix4 + 2],\n        height = set[ix4 + 3];\n\n      context.beginPath();\n      if (offsets) {\n        var offset = offsets[anim];\n        var ix2 = index * 2;\n        context.rect(offset[ix2 + 0], offset[ix2 + 1], width, height);\n      } else {\n        context.rect(0, 0, width, height);\n      }\n      context.closePath();\n      context.fillShape(this);\n    },\n    _useBufferCanvas: function() {\n      return (\n        (this.hasShadow() || this.getAbsoluteOpacity() !== 1) &&\n        this.hasStroke()\n      );\n    },\n    _setInterval: function() {\n      var that = this;\n      this.interval = setInterval(function() {\n        that._updateIndex();\n      }, 1000 / this.getFrameRate());\n    },\n    /**\n     * start sprite animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     */\n    start: function() {\n      if (this.isRunning()) {\n        return;\n      }\n      var layer = this.getLayer();\n\n      /*\n       * animation object has no executable function because\n       *  the updates are done with a fixed FPS with the setInterval\n       *  below.  The anim object only needs the layer reference for\n       *  redraw\n       */\n      this.anim.setLayers(layer);\n      this._setInterval();\n      this.anim.start();\n    },\n    /**\n     * stop sprite animation\n     * @method\n     * @memberof Konva.Sprite.prototype\n     */\n    stop: function() {\n      this.anim.stop();\n      clearInterval(this.interval);\n    },\n    /**\n     * determine if animation of sprite is running or not.  returns true or false\n     * @method\n     * @memberof Konva.Sprite.prototype\n     * @returns {Boolean}\n     */\n    isRunning: function() {\n      return this.anim.isRunning();\n    },\n    _updateIndex: function() {\n      var index = this.frameIndex(),\n        animation = this.getAnimation(),\n        animations = this.getAnimations(),\n        anim = animations[animation],\n        len = anim.length / 4;\n\n      if (index < len - 1) {\n        this.frameIndex(index + 1);\n      } else {\n        this.frameIndex(0);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Sprite, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animation');\n\n  /**\n   * get/set animation key\n   * @name animation\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {String} anim animation key\n   * @returns {String}\n   * @example\n   * // get animation key\n   * var animation = sprite.animation();\n   *\n   * // set animation key\n   * sprite.animation('kicking');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'animations');\n\n  /**\n   * get/set animations map\n   * @name animations\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Object} animations\n   * @returns {Object}\n   * @example\n   * // get animations map\n   * var animations = sprite.animations();\n   *\n   * // set animations map\n   * sprite.animations({\n   *   standing: [\n   *     // x, y, width, height (6 frames)\n   *     0, 0, 49, 109,\n   *     52, 0, 49, 109,\n   *     105, 0, 49, 109,\n   *     158, 0, 49, 109,\n   *     210, 0, 49, 109,\n   *     262, 0, 49, 109\n   *   ],\n   *   kicking: [\n   *     // x, y, width, height (6 frames)\n   *     0, 109, 45, 98,\n   *     45, 109, 45, 98,\n   *     95, 109, 63, 98,\n   *     156, 109, 70, 98,\n   *     229, 109, 60, 98,\n   *     287, 109, 41, 98\n   *   ]\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'frameOffsets');\n\n  /**\n   * get/set offsets map\n   * @name offsets\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Object} offsets\n   * @returns {Object}\n   * @example\n   * // get offsets map\n   * var offsets = sprite.offsets();\n   *\n   * // set offsets map\n   * sprite.offsets({\n   *   standing: [\n   *     // x, y (6 frames)\n   *     0, 0,\n   *     0, 0,\n   *     5, 0,\n   *     0, 0,\n   *     0, 3,\n   *     2, 0\n   *   ],\n   *   kicking: [\n   *     // x, y (6 frames)\n   *     0, 5,\n   *     5, 0,\n   *     10, 0,\n   *     0, 0,\n   *     2, 1,\n   *     0, 0\n   *   ]\n   * });\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Sprite, 'image');\n\n  /**\n   * get/set image\n   * @name image\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Image} image\n   * @returns {Image}\n   * @example\n   * // get image\n   * var image = sprite.image();\n   *\n   * // set image\n   * sprite.image(imageObj);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Sprite,\n    'frameIndex',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set/set animation frame index\n   * @name frameIndex\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Integer} frameIndex\n   * @returns {Integer}\n   * @example\n   * // get animation frame index\n   * var frameIndex = sprite.frameIndex();\n   *\n   * // set animation frame index\n   * sprite.frameIndex(3);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Sprite,\n    'frameRate',\n    17,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set frame rate in frames per second.  Increase this number to make the sprite\n   *  animation run faster, and decrease the number to make the sprite animation run slower\n   *  The default is 17 frames per second\n   * @name frameRate\n   * @method\n   * @memberof Konva.Sprite.prototype\n   * @param {Integer} frameRate\n   * @returns {Integer}\n   * @example\n   * // get frame rate\n   * var frameRate = sprite.frameRate();\n   *\n   * // set frame rate to 2 frames per second\n   * sprite.frameRate(2);\n   */\n\n  Konva.Factory.backCompat(Konva.Sprite, {\n    index: 'frameIndex',\n    getIndex: 'getFrameIndex',\n    setIndex: 'setFrameIndex'\n  });\n\n  Konva.Collection.mapMethods(Konva.Sprite);\n})();\n\n/*eslint-disable  no-shadow, max-len, max-depth */\n(function() {\n  'use strict';\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} config.data SVG data string\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var path = new Konva.Path({\n   *   x: 240,\n   *   y: 40,\n   *   data: 'M12.582,9.551C3.251,16.237,0.921,29.021,7.08,38.564l-2.36,1.689l4.893,2.262l4.893,2.262l-0.568-5.36l-0.567-5.359l-2.365,1.694c-4.657-7.375-2.83-17.185,4.352-22.33c7.451-5.338,17.817-3.625,23.156,3.824c5.337,7.449,3.625,17.813-3.821,23.152l2.857,3.988c9.617-6.893,11.827-20.277,4.935-29.896C35.591,4.87,22.204,2.658,12.582,9.551z',\n   *   fill: 'green',\n   *   scale: 2\n   * });\n   */\n  Konva.Path = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Path.prototype = {\n    ___init: function(config) {\n      this.dataArray = [];\n      var that = this;\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Path';\n\n      this.dataArray = Konva.Path.parsePathData(this.getData());\n      this.pathLength = 0;\n      for (var i = 0; i < this.dataArray.length; ++i) {\n        this.pathLength += this.dataArray[i].pathLength;\n      }\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.getData());\n        this.pathLength = 0;\n        for (var i = 0; i < this.dataArray.length; ++i) {\n          this.pathLength += this.dataArray[i].pathLength;\n        }\n      });\n\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var ca = this.dataArray;\n\n      // context position\n      context.beginPath();\n      for (var n = 0; n < ca.length; n++) {\n        var c = ca[n].command;\n        var p = ca[n].points;\n        switch (c) {\n          case 'L':\n            context.lineTo(p[0], p[1]);\n            break;\n          case 'M':\n            context.moveTo(p[0], p[1]);\n            break;\n          case 'C':\n            context.bezierCurveTo(p[0], p[1], p[2], p[3], p[4], p[5]);\n            break;\n          case 'Q':\n            context.quadraticCurveTo(p[0], p[1], p[2], p[3]);\n            break;\n          case 'A':\n            var cx = p[0],\n              cy = p[1],\n              rx = p[2],\n              ry = p[3],\n              theta = p[4],\n              dTheta = p[5],\n              psi = p[6],\n              fs = p[7];\n\n            var r = rx > ry ? rx : ry;\n            var scaleX = rx > ry ? 1 : rx / ry;\n            var scaleY = rx > ry ? ry / rx : 1;\n\n            context.translate(cx, cy);\n            context.rotate(psi);\n            context.scale(scaleX, scaleY);\n            context.arc(0, 0, r, theta, theta + dTheta, 1 - fs);\n            context.scale(1 / scaleX, 1 / scaleY);\n            context.rotate(-psi);\n            context.translate(-cx, -cy);\n\n            break;\n          case 'z':\n            context.closePath();\n            break;\n        }\n      }\n\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var points = [];\n      this.dataArray.forEach(function(data) {\n        points = points.concat(data.points);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[1];\n      var maxY = points[1];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n\n        // skip bad values\n        // TODO: prevent them from parsing function\n        if (!isNaN(x)) {\n          minX = Math.min(minX, x);\n          maxX = Math.max(maxX, x);\n        }\n        if (!isNaN(y)) {\n          minY = Math.min(minY, y);\n          maxY = Math.max(maxY, y);\n        }\n      }\n      return {\n        x: Math.round(minX),\n        y: Math.round(minY),\n        width: Math.round(maxX - minX),\n        height: Math.round(maxY - minY)\n      };\n    },\n    /**\n     * Return length of the path.\n     * @method\n     * @memberof Konva.Path.prototype\n     * @returns {Number} length\n     * @example\n     * var length = path.getLength();\n     */\n    getLength: function() {\n      return this.pathLength;\n    },\n    /**\n     * Get point on path at specific length of the path\n     * @method\n     * @memberof Konva.Path.prototype\n     * @param {Number} length length\n     * @returns {Object} point {x,y} point\n     * @example\n     * var point = path.getPointAtLength(10);\n     */\n    getPointAtLength: function(length) {\n      var point,\n        i = 0,\n        ii = this.dataArray.length;\n\n      if (!ii) {\n        return null;\n      }\n\n      while (i < ii && length > this.dataArray[i].pathLength) {\n        length -= this.dataArray[i].pathLength;\n        ++i;\n      }\n\n      if (i === ii) {\n        point = this.dataArray[i - 1].points.slice(-2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      if (length < 0.01) {\n        point = this.dataArray[i].points.slice(0, 2);\n        return {\n          x: point[0],\n          y: point[1]\n        };\n      }\n\n      var cp = this.dataArray[i];\n      var p = cp.points;\n      switch (cp.command) {\n        case 'L':\n          return Konva.Path.getPointOnLine(\n            length,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1]\n          );\n        case 'C':\n          return Konva.Path.getPointOnCubicBezier(\n            length / cp.pathLength,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1],\n            p[2],\n            p[3],\n            p[4],\n            p[5]\n          );\n        case 'Q':\n          return Konva.Path.getPointOnQuadraticBezier(\n            length / cp.pathLength,\n            cp.start.x,\n            cp.start.y,\n            p[0],\n            p[1],\n            p[2],\n            p[3]\n          );\n        case 'A':\n          var cx = p[0],\n            cy = p[1],\n            rx = p[2],\n            ry = p[3],\n            theta = p[4],\n            dTheta = p[5],\n            psi = p[6];\n          theta += dTheta * length / cp.pathLength;\n          return Konva.Path.getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi);\n      }\n\n      return null;\n    }\n  };\n  Konva.Util.extend(Konva.Path, Konva.Shape);\n\n  Konva.Path.getLineLength = function(x1, y1, x2, y2) {\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  };\n  Konva.Path.getPointOnLine = function(dist, P1x, P1y, P2x, P2y, fromX, fromY) {\n    if (fromX === undefined) {\n      fromX = P1x;\n    }\n    if (fromY === undefined) {\n      fromY = P1y;\n    }\n\n    var m = (P2y - P1y) / (P2x - P1x + 0.00000001);\n    var run = Math.sqrt(dist * dist / (1 + m * m));\n    if (P2x < P1x) {\n      run *= -1;\n    }\n    var rise = m * run;\n    var pt;\n\n    if (P2x === P1x) {\n      // vertical line\n      pt = {\n        x: fromX,\n        y: fromY + rise\n      };\n    } else if ((fromY - P1y) / (fromX - P1x + 0.00000001) === m) {\n      pt = {\n        x: fromX + run,\n        y: fromY + rise\n      };\n    } else {\n      var ix, iy;\n\n      var len = this.getLineLength(P1x, P1y, P2x, P2y);\n      if (len < 0.00000001) {\n        return undefined;\n      }\n      var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);\n      u = u / (len * len);\n      ix = P1x + u * (P2x - P1x);\n      iy = P1y + u * (P2y - P1y);\n\n      var pRise = this.getLineLength(fromX, fromY, ix, iy);\n      var pRun = Math.sqrt(dist * dist - pRise * pRise);\n      run = Math.sqrt(pRun * pRun / (1 + m * m));\n      if (P2x < P1x) {\n        run *= -1;\n      }\n      rise = m * run;\n      pt = {\n        x: ix + run,\n        y: iy + rise\n      };\n    }\n\n    return pt;\n  };\n\n  Konva.Path.getPointOnCubicBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y,\n    P4x,\n    P4y\n  ) {\n    function CB1(t) {\n      return t * t * t;\n    }\n    function CB2(t) {\n      return 3 * t * t * (1 - t);\n    }\n    function CB3(t) {\n      return 3 * t * (1 - t) * (1 - t);\n    }\n    function CB4(t) {\n      return (1 - t) * (1 - t) * (1 - t);\n    }\n    var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);\n    var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnQuadraticBezier = function(\n    pct,\n    P1x,\n    P1y,\n    P2x,\n    P2y,\n    P3x,\n    P3y\n  ) {\n    function QB1(t) {\n      return t * t;\n    }\n    function QB2(t) {\n      return 2 * t * (1 - t);\n    }\n    function QB3(t) {\n      return (1 - t) * (1 - t);\n    }\n    var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);\n    var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);\n\n    return {\n      x: x,\n      y: y\n    };\n  };\n  Konva.Path.getPointOnEllipticalArc = function(cx, cy, rx, ry, theta, psi) {\n    var cosPsi = Math.cos(psi),\n      sinPsi = Math.sin(psi);\n    var pt = {\n      x: rx * Math.cos(theta),\n      y: ry * Math.sin(theta)\n    };\n    return {\n      x: cx + (pt.x * cosPsi - pt.y * sinPsi),\n      y: cy + (pt.x * sinPsi + pt.y * cosPsi)\n    };\n  };\n  /*\n     * get parsed data array from the data\n     *  string.  V, v, H, h, and l data are converted to\n     *  L data for the purpose of high performance Path\n     *  rendering\n     */\n  Konva.Path.parsePathData = function(data) {\n    // Path Data Segment must begin with a moveTo\n    //m (x y)+  Relative moveTo (subsequent points are treated as lineTo)\n    //M (x y)+  Absolute moveTo (subsequent points are treated as lineTo)\n    //l (x y)+  Relative lineTo\n    //L (x y)+  Absolute LineTo\n    //h (x)+    Relative horizontal lineTo\n    //H (x)+    Absolute horizontal lineTo\n    //v (y)+    Relative vertical lineTo\n    //V (y)+    Absolute vertical lineTo\n    //z (closepath)\n    //Z (closepath)\n    //c (x1 y1 x2 y2 x y)+ Relative Bezier curve\n    //C (x1 y1 x2 y2 x y)+ Absolute Bezier curve\n    //q (x1 y1 x y)+       Relative Quadratic Bezier\n    //Q (x1 y1 x y)+       Absolute Quadratic Bezier\n    //t (x y)+    Shorthand/Smooth Relative Quadratic Bezier\n    //T (x y)+    Shorthand/Smooth Absolute Quadratic Bezier\n    //s (x2 y2 x y)+       Shorthand/Smooth Relative Bezier curve\n    //S (x2 y2 x y)+       Shorthand/Smooth Absolute Bezier curve\n    //a (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+     Relative Elliptical Arc\n    //A (rx ry x-axis-rotation large-arc-flag sweep-flag x y)+  Absolute Elliptical Arc\n\n    // return early if data is not defined\n    if (!data) {\n      return [];\n    }\n\n    // command string\n    var cs = data;\n\n    // command chars\n    var cc = [\n      'm',\n      'M',\n      'l',\n      'L',\n      'v',\n      'V',\n      'h',\n      'H',\n      'z',\n      'Z',\n      'c',\n      'C',\n      'q',\n      'Q',\n      't',\n      'T',\n      's',\n      'S',\n      'a',\n      'A'\n    ];\n    // convert white spaces to commas\n    cs = cs.replace(new RegExp(' ', 'g'), ',');\n    // create pipes so that we can split the data\n    for (var n = 0; n < cc.length; n++) {\n      cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n    }\n    // create array\n    var arr = cs.split('|');\n    var ca = [];\n    var coords = [];\n    // init context point\n    var cpx = 0;\n    var cpy = 0;\n\n    var re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/gi;\n    var match;\n    for (n = 1; n < arr.length; n++) {\n      var str = arr[n];\n      var c = str.charAt(0);\n      str = str.slice(1);\n\n      coords.length = 0;\n      while ((match = re.exec(str))) {\n        coords.push(match[0]);\n      }\n\n      // while ((match = re.exec(str))) {\n      //   coords.push(match[0]);\n      // }\n      var p = [];\n\n      for (var j = 0, jlen = coords.length; j < jlen; j++) {\n        var parsed = parseFloat(coords[j]);\n        if (!isNaN(parsed)) {\n          p.push(parsed);\n        } else {\n          p.push(0);\n        }\n      }\n\n      while (p.length > 0) {\n        if (isNaN(p[0])) {\n          // case for a trailing comma before next command\n          break;\n        }\n\n        var cmd = null;\n        var points = [];\n        var startX = cpx,\n          startY = cpy;\n        // Move var from within the switch to up here (jshint)\n        var prevCmd, ctlPtx, ctlPty; // Ss, Tt\n        var rx, ry, psi, fa, fs, x1, y1; // Aa\n\n        // convert l, H, h, V, and v to L\n        switch (c) {\n          // Note: Keep the lineTo's above the moveTo's in this switch\n          case 'l':\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'L':\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          // Note: lineTo handlers need to be above this point\n          case 'm':\n            var dx = p.shift();\n            var dy = p.shift();\n            cpx += dx;\n            cpy += dy;\n            cmd = 'M';\n            // After closing the path move the current position\n            // to the the first point of the path (if any).\n            if (ca.length > 2 && ca[ca.length - 1].command === 'z') {\n              for (var idx = ca.length - 2; idx >= 0; idx--) {\n                if (ca[idx].command === 'M') {\n                  cpx = ca[idx].points[0] + dx;\n                  cpy = ca[idx].points[1] + dy;\n                  break;\n                }\n              }\n            }\n            points.push(cpx, cpy);\n            c = 'l';\n            // subsequent points are treated as relative lineTo\n            break;\n          case 'M':\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'M';\n            points.push(cpx, cpy);\n            c = 'L';\n            // subsequent points are treated as absolute lineTo\n            break;\n\n          case 'h':\n            cpx += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'H':\n            cpx = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'v':\n            cpy += p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'V':\n            cpy = p.shift();\n            cmd = 'L';\n            points.push(cpx, cpy);\n            break;\n          case 'C':\n            points.push(p.shift(), p.shift(), p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'c':\n            points.push(\n              cpx + p.shift(),\n              cpy + p.shift(),\n              cpx + p.shift(),\n              cpy + p.shift()\n            );\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'S':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 's':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'C') {\n              ctlPtx = cpx + (cpx - prevCmd.points[2]);\n              ctlPty = cpy + (cpy - prevCmd.points[3]);\n            }\n            points.push(ctlPtx, ctlPty, cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'C';\n            points.push(cpx, cpy);\n            break;\n          case 'Q':\n            points.push(p.shift(), p.shift());\n            cpx = p.shift();\n            cpy = p.shift();\n            points.push(cpx, cpy);\n            break;\n          case 'q':\n            points.push(cpx + p.shift(), cpy + p.shift());\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(cpx, cpy);\n            break;\n          case 'T':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 't':\n            ctlPtx = cpx;\n            ctlPty = cpy;\n            prevCmd = ca[ca.length - 1];\n            if (prevCmd.command === 'Q') {\n              ctlPtx = cpx + (cpx - prevCmd.points[0]);\n              ctlPty = cpy + (cpy - prevCmd.points[1]);\n            }\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'Q';\n            points.push(ctlPtx, ctlPty, cpx, cpy);\n            break;\n          case 'A':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx = p.shift();\n            cpy = p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n          case 'a':\n            rx = p.shift();\n            ry = p.shift();\n            psi = p.shift();\n            fa = p.shift();\n            fs = p.shift();\n            x1 = cpx;\n            y1 = cpy;\n            cpx += p.shift();\n            cpy += p.shift();\n            cmd = 'A';\n            points = this.convertEndpointToCenterParameterization(\n              x1,\n              y1,\n              cpx,\n              cpy,\n              fa,\n              fs,\n              rx,\n              ry,\n              psi\n            );\n            break;\n        }\n\n        ca.push({\n          command: cmd || c,\n          points: points,\n          start: {\n            x: startX,\n            y: startY\n          },\n          pathLength: this.calcLength(startX, startY, cmd || c, points)\n        });\n      }\n\n      if (c === 'z' || c === 'Z') {\n        ca.push({\n          command: 'z',\n          points: [],\n          start: undefined,\n          pathLength: 0\n        });\n      }\n    }\n\n    return ca;\n  };\n  Konva.Path.calcLength = function(x, y, cmd, points) {\n    var len, p1, p2, t;\n    var path = Konva.Path;\n\n    switch (cmd) {\n      case 'L':\n        return path.getLineLength(x, y, points[0], points[1]);\n      case 'C':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnCubicBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          points[4],\n          points[5]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnCubicBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3],\n            points[4],\n            points[5]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'Q':\n        // Approximates by breaking curve into 100 line segments\n        len = 0.0;\n        p1 = path.getPointOnQuadraticBezier(\n          0,\n          x,\n          y,\n          points[0],\n          points[1],\n          points[2],\n          points[3]\n        );\n        for (t = 0.01; t <= 1; t += 0.01) {\n          p2 = path.getPointOnQuadraticBezier(\n            t,\n            x,\n            y,\n            points[0],\n            points[1],\n            points[2],\n            points[3]\n          );\n          len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n          p1 = p2;\n        }\n        return len;\n      case 'A':\n        // Approximates by breaking curve into line segments\n        len = 0.0;\n        var start = points[4];\n        // 4 = theta\n        var dTheta = points[5];\n        // 5 = dTheta\n        var end = points[4] + dTheta;\n        var inc = Math.PI / 180.0;\n        // 1 degree resolution\n        if (Math.abs(start - end) < inc) {\n          inc = Math.abs(start - end);\n        }\n        // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi\n        p1 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          start,\n          0\n        );\n        if (dTheta < 0) {\n          // clockwise\n          for (t = start - inc; t > end; t -= inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        } else {\n          // counter-clockwise\n          for (t = start + inc; t < end; t += inc) {\n            p2 = path.getPointOnEllipticalArc(\n              points[0],\n              points[1],\n              points[2],\n              points[3],\n              t,\n              0\n            );\n            len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n            p1 = p2;\n          }\n        }\n        p2 = path.getPointOnEllipticalArc(\n          points[0],\n          points[1],\n          points[2],\n          points[3],\n          end,\n          0\n        );\n        len += path.getLineLength(p1.x, p1.y, p2.x, p2.y);\n\n        return len;\n    }\n\n    return 0;\n  };\n  Konva.Path.convertEndpointToCenterParameterization = function(\n    x1,\n    y1,\n    x2,\n    y2,\n    fa,\n    fs,\n    rx,\n    ry,\n    psiDeg\n  ) {\n    // Derived from: http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n    var psi = psiDeg * (Math.PI / 180.0);\n    var xp = Math.cos(psi) * (x1 - x2) / 2.0 + Math.sin(psi) * (y1 - y2) / 2.0;\n    var yp =\n      -1 * Math.sin(psi) * (x1 - x2) / 2.0 + Math.cos(psi) * (y1 - y2) / 2.0;\n\n    var lambda = xp * xp / (rx * rx) + yp * yp / (ry * ry);\n\n    if (lambda > 1) {\n      rx *= Math.sqrt(lambda);\n      ry *= Math.sqrt(lambda);\n    }\n\n    var f = Math.sqrt(\n      (rx * rx * (ry * ry) - rx * rx * (yp * yp) - ry * ry * (xp * xp)) /\n        (rx * rx * (yp * yp) + ry * ry * (xp * xp))\n    );\n\n    if (fa === fs) {\n      f *= -1;\n    }\n    if (isNaN(f)) {\n      f = 0;\n    }\n\n    var cxp = f * rx * yp / ry;\n    var cyp = f * -ry * xp / rx;\n\n    var cx = (x1 + x2) / 2.0 + Math.cos(psi) * cxp - Math.sin(psi) * cyp;\n    var cy = (y1 + y2) / 2.0 + Math.sin(psi) * cxp + Math.cos(psi) * cyp;\n\n    var vMag = function(v) {\n      return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n      return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n      return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vRatio(u, v));\n    };\n    var theta = vAngle([1, 0], [(xp - cxp) / rx, (yp - cyp) / ry]);\n    var u = [(xp - cxp) / rx, (yp - cyp) / ry];\n    var v = [(-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry];\n    var dTheta = vAngle(u, v);\n\n    if (vRatio(u, v) <= -1) {\n      dTheta = Math.PI;\n    }\n    if (vRatio(u, v) >= 1) {\n      dTheta = 0;\n    }\n    if (fs === 0 && dTheta > 0) {\n      dTheta = dTheta - 2 * Math.PI;\n    }\n    if (fs === 1 && dTheta < 0) {\n      dTheta = dTheta + 2 * Math.PI;\n    }\n    return [cx, cy, rx, ry, theta, dTheta, psi, fs];\n  };\n  // add getters setters\n  Konva.Factory.addGetterSetter(Konva.Path, 'data');\n\n  /**\n   * set SVG path data string.  This method\n   *  also automatically parses the data string\n   *  into a data array.  Currently supported SVG data:\n   *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n   * @name setData\n   * @method\n   * @memberof Konva.Path.prototype\n   * @param {String} SVG path command string\n   */\n\n  /**\n   * get SVG path data string\n   * @name getData\n   * @method\n   * @memberof Konva.Path.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Path);\n})();\n\n(function() {\n  'use strict';\n  var EMPTY_STRING = '',\n    //CALIBRI = 'Calibri',\n    NORMAL = 'normal';\n\n  /**\n   * Path constructor.\n   * @author Jason Follas\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {String} [config.fontFamily] default is Calibri\n   * @param {Number} [config.fontSize] default is 12\n   * @param {String} [config.fontStyle] can be normal, bold, or italic.  Default is normal\n   * @param {String} [config.fontVariant] can be normal or small-caps.  Default is normal\n   * @param {String} config.text\n   * @param {String} config.data SVG data string\n   * @param {Function} config.getKerning a getter for kerning values for the specified characters\n   * @param {Function} config.kerningFunc a getter for kerning values for the specified characters\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var kerningPairs = {\n   *   'A': {\n   *     ' ': -0.05517578125,\n   *     'T': -0.07421875,\n   *     'V': -0.07421875,\n   *   },\n   *   'V': {\n   *     ',': -0.091796875,\n   *     \":\": -0.037109375,\n   *     \";\": -0.037109375,\n   *     \"A\": -0.07421875,\n   *   }\n   * }\n   * var textpath = new Konva.TextPath({\n   *   x: 100,\n   *   y: 50,\n   *   fill: '#333',\n   *   fontSize: '24',\n   *   fontFamily: 'Arial',\n   *   text: 'All the world\\'s a stage, and all the men and women merely players.',\n   *   data: 'M10,10 C0,0 10,150 100,100 S300,150 400,50',\n   *   kerningFunc: function(leftChar, rightChar) {\n   *     return kerningPairs.hasOwnProperty(leftChar) ? pairs[leftChar][rightChar] || 0 : 0\n   *   }\n   * });\n   */\n  Konva.TextPath = function(config) {\n    this.___init(config);\n  };\n\n  function _fillFunc(context) {\n    context.fillText(this.partialText, 0, 0);\n  }\n  function _strokeFunc(context) {\n    context.strokeText(this.partialText, 0, 0);\n  }\n\n  Konva.TextPath.prototype = {\n    ___init: function(config) {\n      var that = this;\n      this.dummyCanvas = Konva.Util.createCanvasElement();\n      this.dataArray = [];\n\n      // call super constructor\n      Konva.Shape.call(this, config);\n\n      // overrides\n      // TODO: shouldn't this be on the prototype?\n      this._fillFunc = _fillFunc;\n      this._strokeFunc = _strokeFunc;\n      this._fillFuncHit = _fillFunc;\n      this._strokeFuncHit = _strokeFunc;\n\n      this.className = 'TextPath';\n\n      this.dataArray = Konva.Path.parsePathData(this.attrs.data);\n      this.on('dataChange.konva', function() {\n        that.dataArray = Konva.Path.parsePathData(this.attrs.data);\n        that._setTextData();\n      });\n\n      // update text data for certain attr changes\n      this.on(\n        'textChange.konva alignChange.konva letterSpacingChange.konva kerningFuncChange.konva',\n        that._setTextData\n      );\n\n      if (config && config.getKerning) {\n        Konva.Util.warn(\n          'getKerning TextPath API is deprecated. Please use \"kerningFunc\" instead.'\n        );\n        this.setKerningFunc(config.getKerning);\n      }\n\n      that._setTextData();\n      this.sceneFunc(this._sceneFunc);\n      this.hitFunc(this._hitFunc);\n    },\n    _sceneFunc: function(context) {\n      context.setAttr('font', this._getContextFont());\n      context.setAttr('textBaseline', this.getTextBaseline());\n      context.setAttr('textAlign', 'left');\n      context.save();\n\n      var textDecoration = this.textDecoration();\n      var fill = this.fill();\n      var fontSize = this.fontSize();\n\n      var glyphInfo = this.glyphInfo;\n      if (textDecoration === 'underline') {\n        context.beginPath();\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        context.save();\n\n        var p0 = glyphInfo[i].p0;\n\n        context.translate(p0.x, p0.y);\n        context.rotate(glyphInfo[i].rotation);\n        this.partialText = glyphInfo[i].text;\n\n        context.fillStrokeShape(this);\n        if (textDecoration === 'underline') {\n          if (i === 0) {\n            context.moveTo(0, fontSize / 2 + 1);\n          }\n\n          context.lineTo(fontSize, fontSize / 2 + 1);\n        }\n        context.restore();\n\n        //// To assist with debugging visually, uncomment following\n        //\n        // if (i % 2)\n        // context.strokeStyle = 'cyan';\n        // else\n        // context.strokeStyle = 'green';\n        // var p1 = glyphInfo[i].p1;\n        // context.moveTo(p0.x, p0.y);\n        // context.lineTo(p1.x, p1.y);\n        // context.stroke();\n      }\n      if (textDecoration === 'underline') {\n        context.strokeStyle = fill;\n        context.lineWidth = fontSize / 20;\n        context.stroke();\n      }\n\n      context.restore();\n    },\n    _hitFunc: function(context) {\n      context.beginPath();\n\n      var glyphInfo = this.glyphInfo;\n      if (glyphInfo.length >= 1) {\n        var p0 = glyphInfo[0].p0;\n        context.moveTo(p0.x, p0.y);\n      }\n      for (var i = 0; i < glyphInfo.length; i++) {\n        var p1 = glyphInfo[i].p1;\n        context.lineTo(p1.x, p1.y);\n      }\n      context.setAttr('lineWidth', this.getFontSize());\n      context.setAttr('strokeStyle', this.colorKey);\n      context.stroke();\n    },\n    /**\n     * get text width in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextWidth: function() {\n      return this.textWidth;\n    },\n    /**\n     * get text height in pixels\n     * @method\n     * @memberof Konva.TextPath.prototype\n     */\n    getTextHeight: function() {\n      return this.textHeight;\n    },\n    /**\n     * set text\n     * @method\n     * @memberof Konva.TextPath.prototype\n     * @param {String} text\n     */\n    setText: function(text) {\n      Konva.Text.prototype.setText.call(this, text);\n    },\n    _getTextSize: function(text) {\n      var dummyCanvas = this.dummyCanvas;\n      var _context = dummyCanvas.getContext('2d');\n\n      _context.save();\n\n      _context.font = this._getContextFont();\n      var metrics = _context.measureText(text);\n\n      _context.restore();\n\n      return {\n        width: metrics.width,\n        height: parseInt(this.attrs.fontSize, 10)\n      };\n    },\n    _setTextData: function() {\n      var that = this;\n      var size = this._getTextSize(this.attrs.text);\n      var letterSpacing = this.getLetterSpacing();\n      var align = this.align();\n      var kerningFunc = this.getKerningFunc();\n\n      this.textWidth = size.width;\n      this.textHeight = size.height;\n\n      var textFullWidth = Math.max(\n        this.textWidth + ((this.attrs.text || '').length - 1) * letterSpacing,\n        0\n      );\n\n      this.glyphInfo = [];\n\n      var fullPathWidth = 0;\n      for (var l = 0; l < that.dataArray.length; l++) {\n        if (that.dataArray[l].pathLength > 0) {\n          fullPathWidth += that.dataArray[l].pathLength;\n        }\n      }\n\n      var offset = 0;\n      if (align === 'center') {\n        offset = Math.max(0, fullPathWidth / 2 - textFullWidth / 2);\n      }\n      if (align === 'right') {\n        offset = Math.max(0, fullPathWidth - textFullWidth);\n      }\n\n      var charArr = this.getText().split('');\n      var spacesNumber = this.getText().split(' ').length - 1;\n\n      var p0, p1, pathCmd;\n\n      var pIndex = -1;\n      var currentT = 0;\n      // var sumLength = 0;\n      // for(var j = 0; j < that.dataArray.length; j++) {\n      //   if(that.dataArray[j].pathLength > 0) {\n      //\n      //     if (sumLength + that.dataArray[j].pathLength > offset) {}\n      //       fullPathWidth += that.dataArray[j].pathLength;\n      //   }\n      // }\n\n      var getNextPathSegment = function() {\n        currentT = 0;\n        var pathData = that.dataArray;\n\n        for (var j = pIndex + 1; j < pathData.length; j++) {\n          if (pathData[j].pathLength > 0) {\n            pIndex = j;\n\n            return pathData[j];\n          } else if (pathData[j].command === 'M') {\n            p0 = {\n              x: pathData[j].points[0],\n              y: pathData[j].points[1]\n            };\n          }\n        }\n\n        return {};\n      };\n\n      var findSegmentToFitCharacter = function(c) {\n        var glyphWidth = that._getTextSize(c).width + letterSpacing;\n\n        if (c === ' ' && align === 'justify') {\n          glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;\n        }\n\n        var currLen = 0;\n        var attempts = 0;\n\n        p1 = undefined;\n        while (\n          Math.abs(glyphWidth - currLen) / glyphWidth > 0.01 &&\n          attempts < 25\n        ) {\n          attempts++;\n          var cumulativePathLength = currLen;\n          while (pathCmd === undefined) {\n            pathCmd = getNextPathSegment();\n\n            if (\n              pathCmd &&\n              cumulativePathLength + pathCmd.pathLength < glyphWidth\n            ) {\n              cumulativePathLength += pathCmd.pathLength;\n              pathCmd = undefined;\n            }\n          }\n\n          if (pathCmd === {} || p0 === undefined) {\n            return undefined;\n          }\n\n          var needNewSegment = false;\n\n          switch (pathCmd.command) {\n            case 'L':\n              if (\n                Konva.Path.getLineLength(\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1]\n                ) > glyphWidth\n              ) {\n                p1 = Konva.Path.getPointOnLine(\n                  glyphWidth,\n                  p0.x,\n                  p0.y,\n                  pathCmd.points[0],\n                  pathCmd.points[1],\n                  p0.x,\n                  p0.y\n                );\n              } else {\n                pathCmd = undefined;\n              }\n              break;\n            case 'A':\n              var start = pathCmd.points[4];\n              // 4 = theta\n              var dTheta = pathCmd.points[5];\n              // 5 = dTheta\n              var end = pathCmd.points[4] + dTheta;\n\n              if (currentT === 0) {\n                currentT = start + 0.00000001;\n              } else if (glyphWidth > currLen) {\n                // Just in case start is 0\n                currentT += ((Math.PI / 180.0) * dTheta) / Math.abs(dTheta);\n              } else {\n                currentT -= ((Math.PI / 360.0) * dTheta) / Math.abs(dTheta);\n              }\n\n              // Credit for bug fix: @therth https://github.com/ericdrowell/KonvaJS/issues/249\n              // Old code failed to render text along arc of this path: \"M 50 50 a 150 50 0 0 1 250 50 l 50 0\"\n              if (\n                (dTheta < 0 && currentT < end) ||\n                (dTheta >= 0 && currentT > end)\n              ) {\n                currentT = end;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnEllipticalArc(\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                currentT,\n                pathCmd.points[6]\n              );\n              break;\n            case 'C':\n              if (currentT === 0) {\n                if (glyphWidth > pathCmd.pathLength) {\n                  currentT = 0.00000001;\n                } else {\n                  currentT = glyphWidth / pathCmd.pathLength;\n                }\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnCubicBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3],\n                pathCmd.points[4],\n                pathCmd.points[5]\n              );\n              break;\n            case 'Q':\n              if (currentT === 0) {\n                currentT = glyphWidth / pathCmd.pathLength;\n              } else if (glyphWidth > currLen) {\n                currentT += (glyphWidth - currLen) / pathCmd.pathLength;\n              } else {\n                currentT -= (currLen - glyphWidth) / pathCmd.pathLength;\n              }\n\n              if (currentT > 1.0) {\n                currentT = 1.0;\n                needNewSegment = true;\n              }\n              p1 = Konva.Path.getPointOnQuadraticBezier(\n                currentT,\n                pathCmd.start.x,\n                pathCmd.start.y,\n                pathCmd.points[0],\n                pathCmd.points[1],\n                pathCmd.points[2],\n                pathCmd.points[3]\n              );\n              break;\n          }\n\n          if (p1 !== undefined) {\n            currLen = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n          }\n\n          if (needNewSegment) {\n            needNewSegment = false;\n            pathCmd = undefined;\n          }\n        }\n      };\n\n      // fake search for offset, this is very bad approach\n      // TODO: find other way to add offset from start (for align)\n      var testChar = 'C';\n      var glyphWidth = that._getTextSize(testChar).width + letterSpacing;\n      for (var k = 0; k < offset / glyphWidth; k++) {\n        findSegmentToFitCharacter(testChar);\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n        p0 = p1;\n      }\n\n      for (var i = 0; i < charArr.length; i++) {\n        // Find p1 such that line segment between p0 and p1 is approx. width of glyph\n        findSegmentToFitCharacter(charArr[i]);\n\n        if (p0 === undefined || p1 === undefined) {\n          break;\n        }\n\n        var width = Konva.Path.getLineLength(p0.x, p0.y, p1.x, p1.y);\n\n        var kern = 0;\n        if (kerningFunc) {\n          try {\n            // getKerning is a user provided getter. Make sure it never breaks our logic\n            kern = kerningFunc(charArr[i - 1], charArr[i]) * this.fontSize();\n          } catch (e) {\n            kern = 0;\n          }\n        }\n\n        p0.x += kern;\n        p1.x += kern;\n        this.textWidth += kern;\n\n        var midpoint = Konva.Path.getPointOnLine(\n          kern + width / 2.0,\n          p0.x,\n          p0.y,\n          p1.x,\n          p1.y\n        );\n\n        var rotation = Math.atan2(p1.y - p0.y, p1.x - p0.x);\n        this.glyphInfo.push({\n          transposeX: midpoint.x,\n          transposeY: midpoint.y,\n          text: charArr[i],\n          rotation: rotation,\n          p0: p0,\n          p1: p1\n        });\n        p0 = p1;\n      }\n    },\n    getSelfRect: function() {\n      var points = [];\n\n      this.glyphInfo.forEach(function(info) {\n        points.push(info.p0.x);\n        points.push(info.p0.y);\n        points.push(info.p1.x);\n        points.push(info.p1.y);\n      });\n      var minX = points[0];\n      var maxX = points[0];\n      var minY = points[0];\n      var maxY = points[0];\n      var x, y;\n      for (var i = 0; i < points.length / 2; i++) {\n        x = points[i * 2];\n        y = points[i * 2 + 1];\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n      }\n      var fontSize = this.fontSize();\n      return {\n        x: Math.round(minX) - fontSize / 2,\n        y: Math.round(minY) - fontSize / 2,\n        width: Math.round(maxX - minX) + fontSize,\n        height: Math.round(maxY - minY) + fontSize\n      };\n    }\n  };\n\n  // map TextPath methods to Text\n  Konva.TextPath.prototype._getContextFont =\n    Konva.Text.prototype._getContextFont;\n\n  Konva.Util.extend(Konva.TextPath, Konva.Shape);\n\n  // add setters and getters\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'data');\n\n  /**\n   * set SVG path data string.  This method\n   *  also automatically parses the data string\n   *  into a data array.  Currently supported SVG data:\n   *  M, m, L, l, H, h, V, v, Q, q, T, t, C, c, S, s, A, a, Z, z\n   * @name setData\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} SVG path command string\n   */\n\n  /**\n   * get SVG path data string\n   * @name getData\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontFamily', 'Arial');\n\n  /**\n   * set font family\n   * @name setFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontFamily\n   */\n\n  /**\n   * get font family\n   * @name getFontFamily\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.TextPath,\n    'fontSize',\n    12,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set font size\n   * @name setFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {int} fontSize\n   */\n\n  /**\n   * get font size\n   * @name getFontSize\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontStyle', NORMAL);\n\n  /**\n   * set font style.  Can be 'normal', 'italic', or 'bold'.  'normal' is the default.\n   * @name setFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontStyle\n   */\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'align', 'left');\n\n  /**\n   * get/set horizontal align of text.  Can be 'left', 'center', 'right' or 'justify'\n   * @name align\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} align\n   * @returns {String}\n   * @example\n   * // get text align\n   * var align = text.align();\n   *\n   * // center text\n   * text.align('center');\n   *\n   * // align text to right\n   * text.align('right');\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.TextPath,\n    'letterSpacing',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set letter spacing property. Default value is 0.\n   * @name letterSpacing\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} letterSpacing\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textBaseline', 'middle');\n\n  /**\n   * set textBaseline property. Default value is 'middle'.\n   * Can be 'top', 'bottom', 'middle', 'alphabetic', 'hanging'\n   * @name textBaseline\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {Number} textBaseline\n   */\n\n  /**\n   * get font style\n   * @name getFontStyle\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'fontVariant', NORMAL);\n\n  /**\n   * set font variant.  Can be 'normal' or 'small-caps'.  'normal' is the default.\n   * @name setFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   * @param {String} fontVariant\n   */\n\n  /**\n   * @get font variant\n   * @name getFontVariant\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetter(Konva.TextPath, 'text', EMPTY_STRING);\n\n  /**\n   * get text\n   * @name getText\n   * @method\n   * @memberof Konva.TextPath.prototype\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'textDecoration', null);\n\n  /**\n   * get/set text decoration of a text.  Can be '' or 'underline'\n   * @name textDecoration\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} textDecoration\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var textDecoration = text.textDecoration();\n   *\n   * // center text\n   * text.textDecoration('underline');\n   */\n\n  Konva.Factory.addGetterSetter(Konva.TextPath, 'kerningFunc', null);\n\n  /**\n   * get/set kerning function.\n   * @name kerningFunc\n   * @method\n   * @memberof Konva.Text.prototype\n   * @param {String} kerningFunc\n   * @returns {String}\n   * @example\n   * // get text decoration\n   * var kerningFunc = text.kerningFunc();\n   *\n   * // center text\n   * text.kerningFunc(function(leftChar, rightChar) {\n   *   return 1;\n   * });\n   */\n\n  Konva.Collection.mapMethods(Konva.TextPath);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * RegularPolygon constructor.&nbsp; Examples include triangles, squares, pentagons, hexagons, etc.\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Number} config.sides\n   * @param {Number} config.radius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var hexagon = new Konva.RegularPolygon({\n   *   x: 100,\n   *   y: 200,\n   *   sides: 6,\n   *   radius: 70,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 4\n   * });\n   */\n  Konva.RegularPolygon = function(config) {\n    this.___init(config);\n  };\n\n  Konva.RegularPolygon.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'RegularPolygon';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var sides = this.attrs.sides,\n        radius = this.attrs.radius,\n        n,\n        x,\n        y;\n\n      context.beginPath();\n      context.moveTo(0, 0 - radius);\n\n      for (n = 1; n < sides; n++) {\n        x = radius * Math.sin(n * 2 * Math.PI / sides);\n        y = -1 * radius * Math.cos(n * 2 * Math.PI / sides);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getWidth: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.radius() !== width / 2) {\n        this.setRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.radius() !== height / 2) {\n        this.setRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.RegularPolygon, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.RegularPolygon,\n    'radius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set radius\n   * @name setRadius\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get radius\n   * @name getRadius\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.RegularPolygon,\n    'sides',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set number of sides\n   * @name setSides\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   * @param {int} sides\n   */\n\n  /**\n   * get number of sides\n   * @name getSides\n   * @method\n   * @memberof Konva.RegularPolygon.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.RegularPolygon);\n})();\n\n(function() {\n  'use strict';\n  /**\n   * Star constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Integer} config.numPoints\n   * @param {Number} config.innerRadius\n   * @param {Number} config.outerRadius\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var star = new Konva.Star({\n   *   x: 100,\n   *   y: 200,\n   *   numPoints: 5,\n   *   innerRadius: 70,\n   *   outerRadius: 70,\n   *   fill: 'red',\n   *   stroke: 'black',\n   *   strokeWidth: 4\n   * });\n   */\n  Konva.Star = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Star.prototype = {\n    _centroid: true,\n    ___init: function(config) {\n      // call super constructor\n      Konva.Shape.call(this, config);\n      this.className = 'Star';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var innerRadius = this.innerRadius(),\n        outerRadius = this.outerRadius(),\n        numPoints = this.numPoints();\n\n      context.beginPath();\n      context.moveTo(0, 0 - outerRadius);\n\n      for (var n = 1; n < numPoints * 2; n++) {\n        var radius = n % 2 === 0 ? outerRadius : innerRadius;\n        var x = radius * Math.sin(n * Math.PI / numPoints);\n        var y = -1 * radius * Math.cos(n * Math.PI / numPoints);\n        context.lineTo(x, y);\n      }\n      context.closePath();\n\n      context.fillStrokeShape(this);\n    },\n    // implements Shape.prototype.getWidth()\n    getWidth: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.getHeight()\n    getHeight: function() {\n      return this.getOuterRadius() * 2;\n    },\n    // implements Shape.prototype.setWidth()\n    setWidth: function(width) {\n      Konva.Node.prototype.setWidth.call(this, width);\n      if (this.outerRadius() !== width / 2) {\n        this.setOuterRadius(width / 2);\n      }\n    },\n    // implements Shape.prototype.setHeight()\n    setHeight: function(height) {\n      Konva.Node.prototype.setHeight.call(this, height);\n      if (this.outerRadius() !== height / 2) {\n        this.setOuterRadius(height / 2);\n      }\n    }\n  };\n  Konva.Util.extend(Konva.Star, Konva.Shape);\n\n  // add getters setters\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'numPoints',\n    5,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set number of points\n   * @name setNumPoints\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Integer} points\n   */\n\n  /**\n   * get number of points\n   * @name getNumPoints\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'innerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set inner radius\n   * @name setInnerRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get inner radius\n   * @name getInnerRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Star,\n    'outerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set outer radius\n   * @name setOuterRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   * @param {Number} radius\n   */\n\n  /**\n   * get outer radius\n   * @name getOuterRadius\n   * @method\n   * @memberof Konva.Star.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Star);\n})();\n\n(function() {\n  'use strict';\n  // constants\n  var ATTR_CHANGE_LIST = [\n      'fontFamily',\n      'fontSize',\n      'fontStyle',\n      'padding',\n      'lineHeight',\n      'text',\n      'width'\n    ],\n    CHANGE_KONVA = 'Change.konva',\n    NONE = 'none',\n    UP = 'up',\n    RIGHT = 'right',\n    DOWN = 'down',\n    LEFT = 'left',\n    LABEL = 'Label',\n    // cached variables\n    attrChangeListLen = ATTR_CHANGE_LIST.length;\n\n  /**\n   * Label constructor.&nbsp; Labels are groups that contain a Text and Tag shape\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * // create label\n   * var label = new Konva.Label({\n   *   x: 100,\n   *   y: 100,\n   *   draggable: true\n   * });\n   *\n   * // add a tag to the label\n   * label.add(new Konva.Tag({\n   *   fill: '#bbb',\n   *   stroke: '#333',\n   *   shadowColor: 'black',\n   *   shadowBlur: 10,\n   *   shadowOffset: [10, 10],\n   *   shadowOpacity: 0.2,\n   *   lineJoin: 'round',\n   *   pointerDirection: 'up',\n   *   pointerWidth: 20,\n   *   pointerHeight: 20,\n   *   cornerRadius: 5\n   * }));\n   *\n   * // add text to the label\n   * label.add(new Konva.Text({\n   *   text: 'Hello World!',\n   *   fontSize: 50,\n   *   lineHeight: 1.2,\n   *   padding: 10,\n   *   fill: 'green'\n   *  }));\n   */\n  Konva.Label = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Label.prototype = {\n    ____init: function(config) {\n      var that = this;\n\n      Konva.Group.call(this, config);\n      this.className = LABEL;\n\n      this.on('add.konva', function(evt) {\n        that._addListeners(evt.child);\n        that._sync();\n      });\n    },\n    /**\n     * get Text shape for the label.  You need to access the Text shape in order to update\n     * the text properties\n     * @name getText\n     * @method\n     * @memberof Konva.Label.prototype\n     */\n    getText: function() {\n      return this.find('Text')[0];\n    },\n    /**\n     * get Tag shape for the label.  You need to access the Tag shape in order to update\n     * the pointer properties and the corner radius\n     * @name getTag\n     * @method\n     * @memberof Konva.Label.prototype\n     */\n    getTag: function() {\n      return this.find('Tag')[0];\n    },\n    _addListeners: function(text) {\n      var that = this,\n        n;\n      var func = function() {\n        that._sync();\n      };\n\n      // update text data for certain attr changes\n      for (n = 0; n < attrChangeListLen; n++) {\n        text.on(ATTR_CHANGE_LIST[n] + CHANGE_KONVA, func);\n      }\n    },\n    getWidth: function() {\n      return this.getText().getWidth();\n    },\n    getHeight: function() {\n      return this.getText().getHeight();\n    },\n    _sync: function() {\n      var text = this.getText(),\n        tag = this.getTag(),\n        width,\n        height,\n        pointerDirection,\n        pointerWidth,\n        x,\n        y,\n        pointerHeight;\n\n      if (text && tag) {\n        width = text.getWidth();\n        height = text.getHeight();\n        pointerDirection = tag.getPointerDirection();\n        pointerWidth = tag.getPointerWidth();\n        pointerHeight = tag.getPointerHeight();\n        x = 0;\n        y = 0;\n\n        switch (pointerDirection) {\n          case UP:\n            x = width / 2;\n            y = -1 * pointerHeight;\n            break;\n          case RIGHT:\n            x = width + pointerWidth;\n            y = height / 2;\n            break;\n          case DOWN:\n            x = width / 2;\n            y = height + pointerHeight;\n            break;\n          case LEFT:\n            x = -1 * pointerWidth;\n            y = height / 2;\n            break;\n        }\n\n        tag.setAttrs({\n          x: -1 * x,\n          y: -1 * y,\n          width: width,\n          height: height\n        });\n\n        text.setAttrs({\n          x: -1 * x,\n          y: -1 * y\n        });\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Label, Konva.Group);\n\n  Konva.Collection.mapMethods(Konva.Label);\n\n  /**\n   * Tag constructor.&nbsp; A Tag can be configured\n   *  to have a pointer element that points up, right, down, or left\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {String} [config.pointerDirection] can be up, right, down, left, or none; the default\n   *  is none.  When a pointer is present, the positioning of the label is relative to the tip of the pointer.\n   * @param {Number} [config.pointerWidth]\n   * @param {Number} [config.pointerHeight]\n   * @param {Number} [config.cornerRadius]\n   */\n  Konva.Tag = function(config) {\n    this.___init(config);\n  };\n\n  Konva.Tag.prototype = {\n    ___init: function(config) {\n      Konva.Shape.call(this, config);\n      this.className = 'Tag';\n      this.sceneFunc(this._sceneFunc);\n    },\n    _sceneFunc: function(context) {\n      var width = this.getWidth(),\n        height = this.getHeight(),\n        pointerDirection = this.getPointerDirection(),\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        cornerRadius = Math.min(this.getCornerRadius(), width / 2, height / 2);\n\n      context.beginPath();\n      if (!cornerRadius) {\n        context.moveTo(0, 0);\n      } else {\n        context.moveTo(cornerRadius, 0);\n      }\n\n      if (pointerDirection === UP) {\n        context.lineTo((width - pointerWidth) / 2, 0);\n        context.lineTo(width / 2, -1 * pointerHeight);\n        context.lineTo((width + pointerWidth) / 2, 0);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, 0);\n      } else {\n        context.lineTo(width - cornerRadius, 0);\n        context.arc(\n          width - cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI * 3 / 2,\n          0,\n          false\n        );\n      }\n\n      if (pointerDirection === RIGHT) {\n        context.lineTo(width, (height - pointerHeight) / 2);\n        context.lineTo(width + pointerWidth, height / 2);\n        context.lineTo(width, (height + pointerHeight) / 2);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(width, height);\n      } else {\n        context.lineTo(width, height - cornerRadius);\n        context.arc(\n          width - cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          0,\n          Math.PI / 2,\n          false\n        );\n      }\n\n      if (pointerDirection === DOWN) {\n        context.lineTo((width + pointerWidth) / 2, height);\n        context.lineTo(width / 2, height + pointerHeight);\n        context.lineTo((width - pointerWidth) / 2, height);\n      }\n\n      if (!cornerRadius) {\n        context.lineTo(0, height);\n      } else {\n        context.lineTo(cornerRadius, height);\n        context.arc(\n          cornerRadius,\n          height - cornerRadius,\n          cornerRadius,\n          Math.PI / 2,\n          Math.PI,\n          false\n        );\n      }\n\n      if (pointerDirection === LEFT) {\n        context.lineTo(0, (height + pointerHeight) / 2);\n        context.lineTo(-1 * pointerWidth, height / 2);\n        context.lineTo(0, (height - pointerHeight) / 2);\n      }\n\n      if (cornerRadius) {\n        context.lineTo(0, cornerRadius);\n        context.arc(\n          cornerRadius,\n          cornerRadius,\n          cornerRadius,\n          Math.PI,\n          Math.PI * 3 / 2,\n          false\n        );\n      }\n\n      context.closePath();\n      context.fillStrokeShape(this);\n    },\n    getSelfRect: function() {\n      var x = 0,\n        y = 0,\n        pointerWidth = this.getPointerWidth(),\n        pointerHeight = this.getPointerHeight(),\n        direction = this.pointerDirection(),\n        width = this.getWidth(),\n        height = this.getHeight();\n\n      if (direction === UP) {\n        y -= pointerHeight;\n        height += pointerHeight;\n      } else if (direction === DOWN) {\n        height += pointerHeight;\n      } else if (direction === LEFT) {\n        // ARGH!!! I have no idea why should I used magic 1.5!!!!!!!!!\n        x -= pointerWidth * 1.5;\n        width += pointerWidth;\n      } else if (direction === RIGHT) {\n        width += pointerWidth * 1.5;\n      }\n      return {\n        x: x,\n        y: y,\n        width: width,\n        height: height\n      };\n    }\n  };\n\n  Konva.Util.extend(Konva.Tag, Konva.Shape);\n  Konva.Factory.addGetterSetter(Konva.Tag, 'pointerDirection', NONE);\n\n  /**\n   * set pointer Direction\n   * @name setPointerDirection\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {String} pointerDirection can be up, right, down, left, or none.  The\n   *  default is none\n   */\n\n  /**\n   * get pointer Direction\n   * @name getPointerDirection\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'pointerWidth',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set pointer width\n   * @name setPointerWidth\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} pointerWidth\n   */\n\n  /**\n   * get pointer width\n   * @name getPointerWidth\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'pointerHeight',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set pointer height\n   * @name setPointerHeight\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} pointerHeight\n   */\n\n  /**\n   * get pointer height\n   * @name getPointerHeight\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Tag,\n    'cornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * set corner radius\n   * @name setCornerRadius\n   * @method\n   * @memberof Konva.Tag.prototype\n   * @param {Number} corner radius\n   */\n\n  /**\n   * get corner radius\n   * @name getCornerRadius\n   * @method\n   * @memberof Konva.Tag.prototype\n   */\n\n  Konva.Collection.mapMethods(Konva.Tag);\n})();\n\n(function(Konva) {\n  'use strict';\n  /**\n   * Arrow constructor\n   * @constructor\n   * @memberof Konva\n   * @augments Konva.Shape\n   * @param {Object} config\n   * @param {Array} config.points Flat array of points coordinates. You should define them as [x1, y1, x2, y2, x3, y3].\n   * @param {Number} [config.tension] Higher values will result in a more curvy line.  A value of 0 will result in no interpolation.\n   *   The default is 0\n   * @param {Number} config.pointerLength Arrow pointer length. Default value is 10.\n   * @param {Number} config.pointerWidth Arrow pointer width. Default value is 10.\n   * @param {Boolean} config.pointerAtBeginning Do we need to draw pointer on both sides?. Default false.\n   * @param {String} [config.fill] fill color\n     * @param {Image} [config.fillPatternImage] fill pattern image\n     * @param {Number} [config.fillPatternX]\n     * @param {Number} [config.fillPatternY]\n     * @param {Object} [config.fillPatternOffset] object with x and y component\n     * @param {Number} [config.fillPatternOffsetX] \n     * @param {Number} [config.fillPatternOffsetY] \n     * @param {Object} [config.fillPatternScale] object with x and y component\n     * @param {Number} [config.fillPatternScaleX]\n     * @param {Number} [config.fillPatternScaleY]\n     * @param {Number} [config.fillPatternRotation]\n     * @param {String} [config.fillPatternRepeat] can be \"repeat\", \"repeat-x\", \"repeat-y\", or \"no-repeat\".  The default is \"no-repeat\"\n     * @param {Object} [config.fillLinearGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientStartPointX]\n     * @param {Number} [config.fillLinearGradientStartPointY]\n     * @param {Object} [config.fillLinearGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillLinearGradientEndPointX]\n     * @param {Number} [config.fillLinearGradientEndPointY]\n     * @param {Array} [config.fillLinearGradientColorStops] array of color stops\n     * @param {Object} [config.fillRadialGradientStartPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientStartPointX]\n     * @param {Number} [config.fillRadialGradientStartPointY]\n     * @param {Object} [config.fillRadialGradientEndPoint] object with x and y component\n     * @param {Number} [config.fillRadialGradientEndPointX] \n     * @param {Number} [config.fillRadialGradientEndPointY] \n     * @param {Number} [config.fillRadialGradientStartRadius]\n     * @param {Number} [config.fillRadialGradientEndRadius]\n     * @param {Array} [config.fillRadialGradientColorStops] array of color stops\n     * @param {Boolean} [config.fillEnabled] flag which enables or disables the fill.  The default value is true\n     * @param {String} [config.fillPriority] can be color, linear-gradient, radial-graident, or pattern.  The default value is color.  The fillPriority property makes it really easy to toggle between different fill types.  For example, if you want to toggle between a fill color style and a fill pattern style, simply set the fill property and the fillPattern properties, and then use setFillPriority('color') to render the shape with a color fill, or use setFillPriority('pattern') to render the shape with the pattern fill configuration\n     * @param {String} [config.stroke] stroke color\n     * @param {Number} [config.strokeWidth] stroke width\n     * @param {Boolean} [config.strokeHitEnabled] flag which enables or disables stroke hit region.  The default is true\n     * @param {Boolean} [config.perfectDrawEnabled] flag which enables or disables using buffer canvas.  The default is true\n     * @param {Boolean} [config.shadowForStrokeEnabled] flag which enables or disables shasow for stroke.  The default is true\n     * @param {Boolean} [config.strokeScaleEnabled] flag which enables or disables stroke scale.  The default is true\n     * @param {Boolean} [config.strokeEnabled] flag which enables or disables the stroke.  The default value is true\n     * @param {String} [config.lineJoin] can be miter, round, or bevel.  The default\n     *  is miter\n     * @param {String} [config.lineCap] can be butt, round, or sqare.  The default\n     *  is butt\n     * @param {String} [config.shadowColor]\n     * @param {Number} [config.shadowBlur]\n     * @param {Object} [config.shadowOffset] object with x and y component\n     * @param {Number} [config.shadowOffsetX]\n     * @param {Number} [config.shadowOffsetY]\n     * @param {Number} [config.shadowOpacity] shadow opacity.  Can be any real number\n     *  between 0 and 1\n     * @param {Boolean} [config.shadowEnabled] flag which enables or disables the shadow.  The default value is true\n     * @param {Array} [config.dash]\n     * @param {Boolean} [config.dashEnabled] flag which enables or disables the dashArray.  The default value is true\n   * @param {Number} [config.x]\n     * @param {Number} [config.y]\n     * @param {Number} [config.width]\n     * @param {Number} [config.height]\n     * @param {Boolean} [config.visible]\n     * @param {Boolean} [config.listening] whether or not the node is listening for events\n     * @param {String} [config.id] unique id\n     * @param {String} [config.name] non-unique name\n     * @param {Number} [config.opacity] determines node opacity.  Can be any number between 0 and 1\n     * @param {Object} [config.scale] set scale\n     * @param {Number} [config.scaleX] set scale x\n     * @param {Number} [config.scaleY] set scale y\n     * @param {Number} [config.rotation] rotation in degrees\n     * @param {Object} [config.offset] offset from center point and rotation point\n     * @param {Number} [config.offsetX] set offset x\n     * @param {Number} [config.offsetY] set offset y\n     * @param {Boolean} [config.draggable] makes the node draggable.  When stages are draggable, you can drag and drop\n     *  the entire stage by dragging any portion of the stage\n     * @param {Number} [config.dragDistance]\n     * @param {Function} [config.dragBoundFunc]\n   * @example\n   * var line = new Konva.Line({\n   *   points: [73, 70, 340, 23, 450, 60, 500, 20],\n   *   stroke: 'red',\n   *   tension: 1,\n   *   pointerLength : 10,\n   *   pointerWidth : 12\n   * });\n   */\n  Konva.Arrow = function(config) {\n    this.____init(config);\n  };\n\n  Konva.Arrow.prototype = {\n    ____init: function(config) {\n      // call super constructor\n      Konva.Line.call(this, config);\n      this.className = 'Arrow';\n    },\n    _sceneFunc: function(ctx) {\n      Konva.Line.prototype._sceneFunc.apply(this, arguments);\n      var PI2 = Math.PI * 2;\n      var points = this.points();\n\n      var tp = points;\n      var fromTension = this.getTension() !== 0 && points.length > 4;\n      if (fromTension) {\n        tp = this.getTensionPoints();\n      }\n\n      var n = points.length;\n\n      var dx, dy;\n      if (fromTension) {\n        dx = points[n - 2] - tp[n - 2];\n        dy = points[n - 1] - tp[n - 1];\n      } else {\n        dx = points[n - 2] - points[n - 4];\n        dy = points[n - 1] - points[n - 3];\n      }\n\n      var radians = (Math.atan2(dy, dx) + PI2) % PI2;\n      var length = this.pointerLength();\n      var width = this.pointerWidth();\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.translate(points[n - 2], points[n - 1]);\n      ctx.rotate(radians);\n      ctx.moveTo(0, 0);\n      ctx.lineTo(-length, width / 2);\n      ctx.lineTo(-length, -width / 2);\n      ctx.closePath();\n      ctx.restore();\n\n      if (this.pointerAtBeginning()) {\n        ctx.save();\n        ctx.translate(points[0], points[1]);\n        if (fromTension) {\n          dx = tp[0] - points[0];\n          dy = tp[1] - points[1];\n        } else {\n          dx = points[2] - points[0];\n          dy = points[3] - points[1];\n        }\n\n        ctx.rotate((Math.atan2(-dy, -dx) + PI2) % PI2);\n        ctx.moveTo(0, 0);\n        ctx.lineTo(-length, width / 2);\n        ctx.lineTo(-length, -width / 2);\n        ctx.closePath();\n        ctx.restore();\n      }\n\n      // here is a tricky part\n      // we need to disable dash for arrow pointers\n      var isDashEnabled = this.dashEnabled();\n      if (isDashEnabled) {\n        // manually disable dash for head\n        // it is better not to use setter here,\n        // because it will trigger attr change event\n        this.attrs.dashEnabled = false;\n        ctx.setLineDash([]);\n      }\n\n      ctx.fillStrokeShape(this);\n\n      // restore old value\n      if (isDashEnabled) {\n        this.attrs.dashEnabled = true;\n      }\n    }\n  };\n\n  Konva.Util.extend(Konva.Arrow, Konva.Line);\n  /**\n   * get/set pointerLength\n   * @name pointerLength\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Length of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerLength = line.pointerLength();\n   *\n   * // set tension\n   * line.pointerLength(15);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arrow,\n    'pointerLength',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set pointerWidth\n   * @name pointerWidth\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Width of pointer of arrow.\n   *   The default is 10.\n   * @returns {Number}\n   * @example\n   * // get tension\n   * var pointerWidth = line.pointerWidth();\n   *\n   * // set tension\n   * line.pointerWidth(15);\n   */\n\n  Konva.Factory.addGetterSetter(\n    Konva.Arrow,\n    'pointerWidth',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n  /**\n   * get/set pointerAtBeginning\n   * @name pointerAtBeginning\n   * @method\n   * @memberof Konva.Arrow.prototype\n   * @param {Number} Should pointer displayed at beginning of arrow.\n   *   The default is false.\n   * @returns {Boolean}\n   * @example\n   * // get tension\n   * var pointerAtBeginning = line.pointerAtBeginning();\n   *\n   * // set tension\n   * line.pointerAtBeginning(true);\n   */\n\n  Konva.Factory.addGetterSetter(Konva.Arrow, 'pointerAtBeginning', false);\n  Konva.Collection.mapMethods(Konva.Arrow);\n})(Konva);\n\n(function(Konva) {\n  'use strict';\n\n  var ATTR_CHANGE_LIST = [\n    'resizeEnabledChange',\n    'rotateAnchorOffsetChange',\n    'rotateEnabledChange',\n    'enabledAnchorsChange',\n    'anchorSizeChange',\n    'borderEnabledChange',\n    'borderStrokeChange',\n    'borderStrokeWidthChange',\n    'borderDashChange',\n    'anchorStrokeChange',\n    'anchorStrokeWidthChange',\n    'anchorFillChange',\n    'anchorCornerRadiusChange',\n    'ignoreStrokeChange'\n  ].join(' ');\n\n  var NODE_RECT = 'nodeRect';\n\n  var TRANSFORM_CHANGE_STR = [\n    'xChange.resizer',\n    'yChange.resizer',\n    'widthChange.resizer',\n    'heightChange.resizer',\n    'scaleXChange.resizer',\n    'scaleYChange.resizer',\n    'skewXChange.resizer',\n    'skewYChange.resizer',\n    'rotationChange.resizer',\n    'offsetXChange.resizer',\n    'offsetYChange.resizer',\n    'transformsEnabledChange.resizer'\n  ].join(' ');\n\n  var REDRAW_CHANGE_STR = [\n    'widthChange.resizer',\n    'heightChange.resizer',\n    'scaleXChange.resizer',\n    'scaleYChange.resizer',\n    'skewXChange.resizer',\n    'skewYChange.resizer',\n    'rotationChange.resizer',\n    'offsetXChange.resizer',\n    'offsetYChange.resizer'\n  ].join(' ');\n\n  var ANGLES = {\n    'top-left': -45,\n    'top-center': 0,\n    'top-right': 45,\n    'middle-right': -90,\n    'middle-left': 90,\n    'bottom-left': -135,\n    'bottom-center': 180,\n    'bottom-right': 135\n  };\n\n  function getCursor(anchorName, rad, isMirrored) {\n    if (anchorName === 'rotater') {\n      return 'crosshair';\n    }\n\n    rad += Konva.Util._degToRad(ANGLES[anchorName] || 0);\n    // If we are mirrored, we need to mirror the angle (this is not the same as\n    // rotate).\n    if (isMirrored) {\n      rad *= -1;\n    }\n    var angle = ((Konva.Util._radToDeg(rad) % 360) + 360) % 360;\n\n    if (\n      Konva.Util._inRange(angle, 315 + 22.5, 360) ||\n      Konva.Util._inRange(angle, 0, 22.5)\n    ) {\n      // TOP\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 45 - 22.5, 45 + 22.5)) {\n      // TOP - RIGHT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 90 - 22.5, 90 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 135 - 22.5, 135 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else if (Konva.Util._inRange(angle, 180 - 22.5, 180 + 22.5)) {\n      // BOTTOM\n      return 'ns-resize';\n    } else if (Konva.Util._inRange(angle, 225 - 22.5, 225 + 22.5)) {\n      // BOTTOM - LEFT\n      return 'nesw-resize';\n    } else if (Konva.Util._inRange(angle, 270 - 22.5, 270 + 22.5)) {\n      // RIGHT\n      return 'ew-resize';\n    } else if (Konva.Util._inRange(angle, 315 - 22.5, 315 + 22.5)) {\n      // BOTTOM - RIGHT\n      return 'nwse-resize';\n    } else {\n      // how can we can there?\n      // TODO: throw error\n      Konva.Util.error(\n        'Transformer has unknown angle for cursor detection: ' + angle\n      );\n      return 'pointer';\n    }\n  }\n\n  /**\n   * Transformer constructor.  Transformer is a special type of group that allow you transform Konva\n   * primitives and shapes. Transforming tool is not changing `width` and `height` properties of nodes\n   * when you resize them. Instead it changes `scaleX` and `scaleY` properties.\n   * @constructor\n   * @memberof Konva\n   * @param {Object} config\n   * @param {Boolean} [config.resizeEnabled] Default is true\n   * @param {Boolean} [config.rotateEnabled] Default is true\n   * @param {Array} [config.rotationSnaps] Array of angles for rotation snaps. Default is []\n   * @param {Number} [config.rotateAnchorOffset] Default is 50\n   * @param {Number} [config.padding] Default is 0\n   * @param {Boolean} [config.borderEnabled] Should we draw border? Default is true\n   * @param {String} [config.borderStroke] Border stroke color\n   * @param {Number} [config.borderStrokeWidth] Border stroke size\n   * @param {Array} [config.borderDash] Array for border dash.\n   * @param {String} [config.anchorFill] Anchor fill color\n   * @param {String} [config.anchorStroke] Anchor stroke color\n   * @param {String} [config.anchorCornerRadius] Anchor corner radius\n   * @param {Number} [config.anchorStrokeWidth] Anchor stroke size\n   * @param {Number} [config.anchorSize] Default is 10\n   * @param {Boolean} [config.keepRatio] Should we keep ratio when we are moving edges? Default is true\n   * @param {Boolean} [config.centeredScaling] Should we resize relative to node's center? Default is false\n   * @param {Array} [config.enabledAnchors] Array of names of enabled handles\n   * @param {Function} [config.boundBoxFunc] Bounding box function\n   * @example\n   * var transformer = new Konva.Transformer({\n   *   node: rectangle,\n   *   rotateAnchorOffset: 60,\n   *   enabledAnchors: ['top-left', 'top-right', 'bottom-left', 'bottom-right']\n   * });\n   * layer.add(transformer);\n   */\n\n  Konva.Transformer = function(config) {\n    this.____init(config);\n  };\n\n  var ANCHORS_NAMES = [\n    'top-left',\n    'top-center',\n    'top-right',\n    'middle-right',\n    'middle-left',\n    'bottom-left',\n    'bottom-center',\n    'bottom-right'\n  ];\n\n  Konva.Transformer.prototype = {\n    _centroid: false,\n    ____init: function(config) {\n      // call super constructor\n      Konva.Group.call(this, config);\n      this.className = 'Transformer';\n      this._createElements();\n\n      // bindings\n      this._handleMouseMove = this._handleMouseMove.bind(this);\n      this._handleMouseUp = this._handleMouseUp.bind(this);\n      this.update = this.update.bind(this);\n\n      // update transformer data for certain attr changes\n      this.on(ATTR_CHANGE_LIST, this.update);\n\n      if (this.getNode()) {\n        this.update();\n      }\n    },\n\n    /**\n     * alias to `setNode`\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.attachTo(shape);\n     */\n    attachTo: function(node) {\n      this.setNode(node);\n    },\n\n    /**\n     * attach transformer to a Konva.Node. Transformer will adapt to its size and listen its events\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.setNode(shape);\n     */\n    setNode: function(node) {\n      if (this._node) {\n        this.detach();\n      }\n      this._node = node;\n      this._resetTransformCache();\n\n      node.on(TRANSFORM_CHANGE_STR, this._resetTransformCache.bind(this));\n      node.on(\n        REDRAW_CHANGE_STR,\n        function() {\n          if (!this._transforming) {\n            this.update();\n          }\n        }.bind(this)\n      );\n\n      // TODO: why do we need this?\n      var elementsCreated = !!this.findOne('.top-left');\n      if (elementsCreated) {\n        this.update();\n      }\n      return this;\n    },\n\n    getNode: function() {\n      return this._node;\n    },\n\n    /**\n     * detach transformer from a attached node\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Konva.Transformer}\n     * @example\n     * transformer.detach();\n     */\n    detach: function() {\n      if (this.getNode()) {\n        this.getNode().off('.resizer');\n        this._node = undefined;\n      }\n      this._resetTransformCache();\n    },\n\n    _resetTransformCache: function() {\n      this._clearCache(NODE_RECT);\n      this._clearCache('transform');\n      this._clearSelfAndDescendantCache('absoluteTransform');\n    },\n\n    _getNodeRect: function() {\n      return this._getCache(NODE_RECT, this.__getNodeRect);\n    },\n\n    __getNodeRect: function() {\n      var node = this.getNode();\n      if (!node) {\n        return {\n          x: -Number.MAX_SAFE_INTEGER,\n          y: -Number.MAX_SAFE_INTEGER,\n          width: 0,\n          height: 0,\n          rotation: 0\n        };\n      }\n      var rect = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n      var rotation = Konva.getAngle(node.rotation());\n\n      var dx = rect.x * node.scaleX() - node.offsetX() * node.scaleX();\n      var dy = rect.y * node.scaleY() - node.offsetY() * node.scaleY();\n\n      return {\n        x: node.x() + dx * Math.cos(rotation) + dy * Math.sin(-rotation),\n        y: node.y() + dy * Math.cos(rotation) + dx * Math.sin(rotation),\n        width: rect.width * node.scaleX(),\n        height: rect.height * node.scaleY(),\n        rotation: node.rotation()\n      };\n    },\n\n    getX: function() {\n      return this._getNodeRect().x;\n    },\n\n    getY: function() {\n      return this._getNodeRect().y;\n    },\n\n    getRotation: function() {\n      return this._getNodeRect().rotation;\n    },\n\n    getWidth: function() {\n      return this._getNodeRect().width;\n    },\n\n    getHeight: function() {\n      return this._getNodeRect().height;\n    },\n\n    _createElements: function() {\n      this._createBack();\n\n      ANCHORS_NAMES.forEach(\n        function(name) {\n          this._createAnchor(name);\n        }.bind(this)\n      );\n\n      this._createAnchor('rotater');\n    },\n\n    _createAnchor: function(name) {\n      var anchor = new Konva.Rect({\n        stroke: 'rgb(0, 161, 255)',\n        fill: 'white',\n        strokeWidth: 1,\n        name: name + ' _anchor',\n        dragDistance: 0,\n        draggable: true\n      });\n      var self = this;\n      anchor.on('mousedown touchstart', function(e) {\n        self._handleMouseDown(e);\n      });\n      anchor.on('dragstart', function(e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('dragmove', function(e) {\n        e.cancelBubble = true;\n      });\n      anchor.on('dragend', function(e) {\n        e.cancelBubble = true;\n      });\n\n      // add hover styling\n      anchor.on('mouseenter', function() {\n        var tr = this.getParent();\n\n        var rad = Konva.getAngle(tr.rotation());\n\n        var scale = tr.getNode().getAbsoluteScale();\n        // If scale.y < 0 xor scale.x < 0 we need to flip (not rotate).\n        var isMirrored = scale.y * scale.x < 0;\n        var cursor = getCursor(name, rad, isMirrored);\n        anchor.getStage().content.style.cursor = cursor;\n        tr._cursorChange = true;\n      });\n      anchor.on('mouseout', function() {\n        if (!anchor.getStage() || !this.getParent()) {\n          return;\n        }\n        anchor.getStage().content.style.cursor = '';\n        this.getParent()._cursorChange = false;\n      });\n      this.add(anchor);\n    },\n\n    _createBack: function() {\n      var back = new Konva.Shape({\n        name: 'back',\n        width: 0,\n        height: 0,\n        listening: false,\n        sceneFunc: function(ctx) {\n          var tr = this.getParent();\n          var padding = tr.getPadding();\n          ctx.beginPath();\n          ctx.rect(\n            -padding,\n            -padding,\n            this.width() + padding * 2,\n            this.height() + padding * 2\n          );\n          ctx.moveTo(this.width() / 2, -padding);\n          if (tr.rotateEnabled()) {\n            ctx.lineTo(\n              this.width() / 2,\n              -tr.rotateAnchorOffset() * Konva.Util._sign(this.height())\n            );\n          }\n\n          ctx.fillStrokeShape(this);\n        }\n      });\n      this.add(back);\n    },\n\n    _handleMouseDown: function(e) {\n      this.movingResizer = e.target.name().split(' ')[0];\n\n      // var node = this.getNode();\n      var attrs = this._getNodeRect();\n      var width = attrs.width;\n      var height = attrs.height;\n      var hypotenuse = Math.sqrt(Math.pow(width, 2) + Math.pow(height, 2));\n      this.sin = height / hypotenuse;\n      this.cos = width / hypotenuse;\n\n      window.addEventListener('mousemove', this._handleMouseMove);\n      window.addEventListener('touchmove', this._handleMouseMove);\n      window.addEventListener('mouseup', this._handleMouseUp, true);\n      window.addEventListener('touchend', this._handleMouseUp, true);\n\n      this._transforming = true;\n\n      this._fire('transformstart', { evt: e });\n      this.getNode()._fire('transformstart', { evt: e });\n    },\n\n    _handleMouseMove: function(e) {\n      var x, y, newHypotenuse;\n      var resizerNode = this.findOne('.' + this.movingResizer);\n      var stage = resizerNode.getStage();\n\n      var box = stage.getContent().getBoundingClientRect();\n      var zeroPoint = {\n        x: box.left,\n        y: box.top\n      };\n      var pointerPos = {\n        left: e.clientX !== undefined ? e.clientX : e.touches[0].clientX,\n        top: e.clientX !== undefined ? e.clientY : e.touches[0].clientY\n      };\n      var newAbsPos = {\n        x: pointerPos.left - zeroPoint.x,\n        y: pointerPos.top - zeroPoint.y\n      };\n\n      resizerNode.setAbsolutePosition(newAbsPos);\n\n      var keepProportion = this.keepRatio() || e.shiftKey;\n\n      // console.log(keepProportion);\n\n      if (this.movingResizer === 'top-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-left').x(this.findOne('.bottom-right').x() - x);\n          this.findOne('.top-left').y(this.findOne('.bottom-right').y() - y);\n        }\n      } else if (this.movingResizer === 'top-center') {\n        this.findOne('.top-left').y(resizerNode.y());\n      } else if (this.movingResizer === 'top-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-left').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.bottom-left').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.top-right').x(x);\n          this.findOne('.top-right').y(this.findOne('.bottom-left').y() - y);\n        }\n        var pos = resizerNode.position();\n\n        this.findOne('.top-left').y(pos.y);\n        this.findOne('.bottom-right').x(pos.x);\n      } else if (this.movingResizer === 'middle-left') {\n        this.findOne('.top-left').x(resizerNode.x());\n      } else if (this.movingResizer === 'middle-right') {\n        this.findOne('.bottom-right').x(resizerNode.x());\n      } else if (this.movingResizer === 'bottom-left') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.top-right').x() - resizerNode.x(), 2) +\n              Math.pow(this.findOne('.top-right').y() - resizerNode.y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-left').x(this.findOne('.top-right').x() - x);\n          this.findOne('.bottom-left').y(y);\n        }\n\n        pos = resizerNode.position();\n\n        this.findOne('.top-left').x(pos.x);\n        this.findOne('.bottom-right').y(pos.y);\n      } else if (this.movingResizer === 'bottom-center') {\n        this.findOne('.bottom-right').y(resizerNode.y());\n      } else if (this.movingResizer === 'bottom-right') {\n        if (keepProportion) {\n          newHypotenuse = Math.sqrt(\n            Math.pow(this.findOne('.bottom-right').x(), 2) +\n              Math.pow(this.findOne('.bottom-right').y(), 2)\n          );\n\n          x = newHypotenuse * this.cos;\n          y = newHypotenuse * this.sin;\n\n          this.findOne('.bottom-right').x(x);\n          this.findOne('.bottom-right').y(y);\n        }\n      } else if (this.movingResizer === 'rotater') {\n        var padding = this.getPadding();\n        var attrs = this._getNodeRect();\n        x = resizerNode.x() - attrs.width / 2;\n        y = -resizerNode.y() + attrs.height / 2;\n\n        var dAlpha = Math.atan2(-y, x) + Math.PI / 2;\n\n        if (attrs.height < 0) {\n          dAlpha -= Math.PI;\n        }\n\n        var rot = Konva.getAngle(this.rotation());\n\n        var newRotation =\n          Konva.Util._radToDeg(rot) + Konva.Util._radToDeg(dAlpha);\n\n        var alpha = Konva.getAngle(this.getNode().rotation());\n        var newAlpha = Konva.Util._degToRad(newRotation);\n\n        var snaps = this.rotationSnaps();\n        var offset = 0.1;\n        for (var i = 0; i < snaps.length; i++) {\n          var angle = Konva.getAngle(snaps[i]);\n\n          var dif =\n            Math.abs(angle - Konva.Util._degToRad(newRotation)) % (Math.PI * 2);\n\n          if (dif < offset) {\n            newRotation = Konva.Util._radToDeg(angle);\n            newAlpha = Konva.Util._degToRad(newRotation);\n          }\n        }\n\n        var dx = padding;\n        var dy = padding;\n\n        this._fitNodeInto(\n          {\n            rotation: Konva.angleDeg\n              ? newRotation\n              : Konva.Util._degToRad(newRotation),\n            x:\n              attrs.x +\n              (attrs.width / 2 + padding) *\n                (Math.cos(alpha) - Math.cos(newAlpha)) +\n              (attrs.height / 2 + padding) *\n                (Math.sin(-alpha) - Math.sin(-newAlpha)) -\n              (dx * Math.cos(rot) + dy * Math.sin(-rot)),\n            y:\n              attrs.y +\n              (attrs.height / 2 + padding) *\n                (Math.cos(alpha) - Math.cos(newAlpha)) +\n              (attrs.width / 2 + padding) *\n                (Math.sin(alpha) - Math.sin(newAlpha)) -\n              (dy * Math.cos(rot) + dx * Math.sin(rot)),\n            width: attrs.width + padding * 2,\n            height: attrs.height + padding * 2\n          },\n          e\n        );\n      } else {\n        console.error(\n          new Error(\n            'Wrong position argument of selection resizer: ',\n            this.movingResizer\n          )\n        );\n      }\n\n      if (this.movingResizer === 'rotater') {\n        return;\n      }\n\n      var absPos = this.findOne('.top-left').getAbsolutePosition(\n        this.getParent()\n      );\n\n      var centeredScaling = this.getCenteredScaling() || e.altKey;\n      if (centeredScaling) {\n        var topLeft = this.findOne('.top-left');\n        var bottomRight = this.findOne('.bottom-right');\n        var topOffsetX = topLeft.x();\n        var topOffsetY = topLeft.y();\n\n        var bottomOffsetX = this.getWidth() - bottomRight.x();\n        var bottomOffsetY = this.getHeight() - bottomRight.y();\n\n        // console.log(topOffsetX, topOffsetY, bottomOffsetX, bottomOffsetY);\n\n        bottomRight.move({\n          x: -topOffsetX,\n          y: -topOffsetY\n        });\n\n        topLeft.move({\n          x: bottomOffsetX,\n          y: bottomOffsetY\n        });\n\n        absPos = topLeft.getAbsolutePosition(this.getParent());\n      }\n\n      x = absPos.x;\n      y = absPos.y;\n      var width =\n        this.findOne('.bottom-right').x() - this.findOne('.top-left').x();\n\n      var height =\n        this.findOne('.bottom-right').y() - this.findOne('.top-left').y();\n\n      // console.log(x, y, width, height);\n\n      this._fitNodeInto(\n        {\n          x: x + this.offsetX(),\n          y: y + this.offsetY(),\n          width: width,\n          height: height\n        },\n        e\n      );\n    },\n\n    _handleMouseUp: function(e) {\n      this._removeEvents(e);\n    },\n\n    _removeEvents: function(e) {\n      if (this._transforming) {\n        this._transforming = false;\n        window.removeEventListener('mousemove', this._handleMouseMove);\n        window.removeEventListener('touchmove', this._handleMouseMove);\n        window.removeEventListener('mouseup', this._handleMouseUp, true);\n        window.removeEventListener('touchend', this._handleMouseUp, true);\n        this._fire('transformend', { evt: e });\n        var node = this.getNode();\n        if (node) {\n          node.fire('transformend', { evt: e });\n        }\n      }\n    },\n\n    _fitNodeInto: function(newAttrs, evt) {\n      // waring! in this attrs padding may be included\n      var boundBoxFunc = this.getBoundBoxFunc();\n      if (boundBoxFunc) {\n        var oldAttrs = this._getNodeRect();\n        newAttrs = boundBoxFunc.call(this, oldAttrs, newAttrs);\n      }\n      this._settings = true;\n      var node = this.getNode();\n      if (newAttrs.rotation !== undefined) {\n        this.getNode().rotation(newAttrs.rotation);\n      }\n      var pure = node.getClientRect({\n        skipTransform: true,\n        skipShadow: true,\n        skipStroke: this.ignoreStroke()\n      });\n\n      var padding = this.getPadding();\n      var scaleX = (newAttrs.width - padding * 2) / pure.width;\n      var scaleY = (newAttrs.height - padding * 2) / pure.height;\n\n      var rotation = Konva.getAngle(node.getRotation());\n      var dx = pure.x * scaleX - padding - node.offsetX() * scaleX;\n      var dy = pure.y * scaleY - padding - node.offsetY() * scaleY;\n\n      this.getNode().setAttrs({\n        scaleX: scaleX,\n        scaleY: scaleY,\n        x: newAttrs.x - (dx * Math.cos(rotation) + dy * Math.sin(-rotation)),\n        y: newAttrs.y - (dy * Math.cos(rotation) + dx * Math.sin(rotation))\n      });\n      this._settings = false;\n\n      this._fire('transform', { evt: evt });\n      this.getNode()._fire('transform', { evt: evt });\n      this.update();\n      this.getLayer().batchDraw();\n    },\n    /**\n     * force update of Konva.Transformer.\n     * Use it when you updated attached Konva.Group and now you need to reset transformer size\n     * @method\n     * @memberof Konva.Transformer.prototype\n     */\n    forceUpdate: function() {\n      this._resetTransformCache();\n      this.update();\n    },\n    update: function() {\n      var attrs = this._getNodeRect();\n      var node = this.getNode();\n      var scale = { x: 1, y: 1 };\n      if (node && node.getParent()) {\n        scale = node.getParent().getAbsoluteScale();\n      }\n      var invertedScale = {\n        x: 1 / scale.x,\n        y: 1 / scale.y\n      };\n      var width = attrs.width;\n      var height = attrs.height;\n\n      var enabledAnchors = this.enabledAnchors();\n      var resizeEnabled = this.resizeEnabled();\n      var padding = this.getPadding();\n\n      var anchorSize = this.getAnchorSize();\n      this.find('._anchor').setAttrs({\n        width: anchorSize,\n        height: anchorSize,\n        offsetX: anchorSize / 2,\n        offsetY: anchorSize / 2,\n        stroke: this.getAnchorStroke(),\n        strokeWidth: this.getAnchorStrokeWidth(),\n        fill: this.getAnchorFill(),\n        cornerRadius: this.getAnchorCornerRadius()\n      });\n\n      this.findOne('.top-left').setAttrs({\n        x: -padding,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-left') >= 0\n      });\n      this.findOne('.top-center').setAttrs({\n        x: width / 2,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-center') >= 0\n      });\n      this.findOne('.top-right').setAttrs({\n        x: width + padding,\n        y: -padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('top-right') >= 0\n      });\n      this.findOne('.middle-left').setAttrs({\n        x: -padding,\n        y: height / 2,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-left') >= 0\n      });\n      this.findOne('.middle-right').setAttrs({\n        x: width + padding,\n        y: height / 2,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('middle-right') >= 0\n      });\n      this.findOne('.bottom-left').setAttrs({\n        x: -padding,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-left') >= 0\n      });\n      this.findOne('.bottom-center').setAttrs({\n        x: width / 2,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-center') >= 0\n      });\n      this.findOne('.bottom-right').setAttrs({\n        x: width + padding,\n        y: height + padding,\n        scale: invertedScale,\n        visible: resizeEnabled && enabledAnchors.indexOf('bottom-right') >= 0\n      });\n\n      var scaledRotateAnchorOffset =\n        -this.rotateAnchorOffset() * Math.abs(invertedScale.y);\n      this.findOne('.rotater').setAttrs({\n        x: width / 2,\n        y: scaledRotateAnchorOffset * Konva.Util._sign(height),\n        scale: invertedScale,\n        visible: this.rotateEnabled()\n      });\n\n      this.findOne('.back').setAttrs({\n        width: width * scale.x,\n        height: height * scale.y,\n        scale: invertedScale,\n        visible: this.borderEnabled(),\n        stroke: this.getBorderStroke(),\n        strokeWidth: this.getBorderStrokeWidth(),\n        dash: this.getBorderDash()\n      });\n    },\n    /**\n     * determine if transformer is in active transform\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Boolean}\n     */\n    isTransforming: function() {\n      return this._transforming;\n    },\n    /**\n     * Stop active transform action\n     * @method\n     * @memberof Konva.Transformer.prototype\n     * @returns {Boolean}\n     */\n    stopTransform: function() {\n      if (this._transforming) {\n        this._removeEvents();\n        var resizerNode = this.findOne('.' + this.movingResizer);\n        if (resizerNode) {\n          resizerNode.stopDrag();\n        }\n      }\n    },\n    destroy: function() {\n      // console.log(this.isTransforming() && this.getStage());\n      if (this.getStage() && this._cursorChange) {\n        this.getStage().content.style.cursor = '';\n      }\n      Konva.Group.prototype.destroy.call(this);\n      this.detach();\n      this._removeEvents();\n    },\n    // do not work as a container\n    // we will recreate inner nodes manually\n    toObject: function() {\n      return Konva.Node.prototype.toObject.call(this);\n    }\n  };\n  Konva.Util.extend(Konva.Transformer, Konva.Group);\n\n  function validateResizers(val) {\n    if (!(val instanceof Array)) {\n      Konva.Util.warn('enabledAnchors value should be an array');\n    }\n    if (val instanceof Array) {\n      val.forEach(function(name) {\n        if (ANCHORS_NAMES.indexOf(name) === -1) {\n          Konva.Util.warn(\n            'Unknown anchor name: ' +\n              name +\n              '. Available names are: ' +\n              ANCHORS_NAMES.join(', ')\n          );\n        }\n      });\n    }\n    return val || [];\n  }\n\n  /**\n   * get/set enabled handlers\n   * @name enabledAnchors\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get list of handlers\n   * var enabledAnchors = transformer.enabledAnchors();\n   *\n   * // set handlers\n   * transformer.enabledAnchors(['top-left', 'top-center', 'top-right', 'middle-right', 'middle-left', 'bottom-left', 'bottom-center', 'bottom-right']);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'enabledAnchors',\n    ANCHORS_NAMES,\n    validateResizers\n  );\n\n  /**\n   * get/set resize ability. If false it will automatically hide resizing handlers\n   * @name resizeEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var resizeEnabled = transformer.resizeEnabled();\n   *\n   * // set\n   * transformer.resizeEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'resizeEnabled', true);\n  /**\n   * get/set anchor size. Default is 10\n   * @name validateAnchors\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} 10\n   * @returns {Number}\n   * @example\n   * // get\n   * var anchorSize = transformer.anchorSize();\n   *\n   * // set\n   * transformer.anchorSize(20)\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorSize',\n    10,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set ability to rotate.\n   * @name rotateEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var rotateEnabled = transformer.rotateEnabled();\n   *\n   * // set\n   * transformer.rotateEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotateEnabled', true);\n\n  /**\n   * get/set rotation snaps angles.\n   * @name rotationSnaps\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Array} array\n   * @returns {Array}\n   * @example\n   * // get\n   * var rotationSnaps = transformer.rotationSnaps();\n   *\n   * // set\n   * transformer.rotationSnaps([0, 90, 180, 270]);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'rotationSnaps', []);\n\n  /**\n   * get/set distance for rotation handler\n   * @name rotateAnchorOffset\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} offset\n   * @returns {Number}\n   * @example\n   * // get\n   * var rotateAnchorOffset = transformer.rotateAnchorOffset();\n   *\n   * // set\n   * transformer.rotateAnchorOffset(100);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'rotateAnchorOffset',\n    50,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set visibility of border\n   * @name borderEnabled\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderEnabled = transformer.borderEnabled();\n   *\n   * // set\n   * transformer.borderEnabled(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'borderEnabled', true);\n\n  /**\n   * get/set anchor stroke color\n   * @name anchorStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorStroke = transformer.anchorStroke();\n   *\n   * // set\n   * transformer.anchorStroke('red');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorStroke',\n    'rgb(0, 161, 255)'\n  );\n\n  /**\n   * get/set anchor stroke width\n   * @name anchorStrokeWidth\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorStrokeWidth = transformer.anchorStrokeWidth();\n   *\n   * // set\n   * transformer.anchorStrokeWidth(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorStrokeWidth',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set anchor fill color\n   * @name anchorFill\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var anchorFill = transformer.anchorFill();\n   *\n   * // set\n   * transformer.anchorFill('red');\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'anchorFill', 'white');\n\n  /**\n   * get/set anchor corner radius\n   * @name anchorCornerRadius\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} enabled\n   * @returns {Number}\n   * @example\n   * // get\n   * var anchorCornerRadius = transformer.anchorCornerRadius();\n   *\n   * // set\n   * transformer.anchorCornerRadius(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'anchorCornerRadius',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set border stroke color\n   * @name borderStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderStroke = transformer.borderStroke();\n   *\n   * // set\n   * transformer.borderStroke('red');\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'borderStroke',\n    'rgb(0, 161, 255)'\n  );\n\n  /**\n   * get/set border stroke width\n   * @name borderStrokeWidth\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderStrokeWidth = transformer.borderStrokeWidth();\n   *\n   * // set\n   * transformer.borderStrokeWidth(3);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'borderStrokeWidth',\n    1,\n    Konva.Validators.getNumberValidator()\n  );\n\n  /**\n   * get/set border dash array\n   * @name borderDash\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} enabled\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var borderDash = transformer.borderDash();\n   *\n   * // set\n   * transformer.borderDash([2, 2]);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'borderDash');\n\n  /**\n   * get/set should we keep ratio while resize anchors at corners\n   * @name keepRatio\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} keepRatio\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var keepRatio = transformer.keepRatio();\n   *\n   * // set\n   * transformer.keepRatio(false);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'keepRatio', true);\n\n  /**\n   * get/set should we resize relative to node's center?\n   * @name centeredScaling\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} centeredScaling\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var centeredScaling = transformer.centeredScaling();\n   *\n   * // set\n   * transformer.centeredScaling(true);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'centeredScaling', false);\n\n  /**\n   * get/set should we think about stroke while resize? Good to use when a shape has strokeScaleEnabled = false\n   * default is false\n   * @name ignoreStroke\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Boolean} ignoreStroke\n   * @returns {Boolean}\n   * @example\n   * // get\n   * var ignoreStroke = transformer.ignoreStroke();\n   *\n   * // set\n   * transformer.ignoreStroke(true);\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'ignoreStroke', false);\n\n  /**\n   * get/set padding\n   * @name padding\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Number} padding\n   * @returns {Number}\n   * @example\n   * // get\n   * var padding = transformer.padding();\n   *\n   * // set\n   * transformer.padding(10);\n   */\n  Konva.Factory.addGetterSetter(\n    Konva.Transformer,\n    'padding',\n    0,\n    Konva.Validators.getNumberValidator()\n  );\n\n  Konva.Factory.addOverloadedGetterSetter(Konva.Transformer, 'node');\n\n  /**\n   * get/set bounding box function\n   * @name boundBoxFunc\n   * @method\n   * @memberof Konva.Transformer.prototype\n   * @param {Function} func\n   * @returns {Function}\n   * @example\n   * // get\n   * var boundBoxFunc = transformer.boundBoxFunc();\n   *\n   * // set\n   * transformer.boundBoxFunc(function(oldBox, newBox) {\n   *   if (newBox.width > 200) {\n   *     return oldBox;\n   *   }\n   *   return newBox;\n   * });\n   */\n  Konva.Factory.addGetterSetter(Konva.Transformer, 'boundBoxFunc');\n\n  Konva.Factory.backCompat(Konva.Transformer, {\n    lineEnabled: 'borderEnabled',\n    rotateHandlerOffset: 'rotateAnchorOffset',\n    enabledHandlers: 'enabledAnchors'\n  });\n\n  Konva.Collection.mapMethods(Konva.Transformer);\n})(Konva);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/konva/konva.js\n// module id = 14\n// module chunks = 0","function injectStyle (ssrContext) {\n  require(\"!!vue-style-loader!css-loader?minimize!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0696fa07\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-0696fa07\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = 15\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/index.js?minimize!../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-0696fa07\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./App.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"4c8ec1c0\", content, true, {});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0696fa07\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 16\n// module chunks = 0","exports = module.exports = require(\"../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?minimize!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-0696fa07\",\"scoped\":false,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/App.vue\n// module id = 17\n// module chunks = 0","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader/lib/css-base.js\n// module id = 18\n// module chunks = 0","/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n  Modified by Evan You @yyx990803\n*/\n\nvar hasDocument = typeof document !== 'undefined'\n\nif (typeof DEBUG !== 'undefined' && DEBUG) {\n  if (!hasDocument) {\n    throw new Error(\n    'vue-style-loader cannot be used in a non-browser environment. ' +\n    \"Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.\"\n  ) }\n}\n\nvar listToStyles = require('./listToStyles')\n\n/*\ntype StyleObject = {\n  id: number;\n  parts: Array<StyleObjectPart>\n}\n\ntype StyleObjectPart = {\n  css: string;\n  media: string;\n  sourceMap: ?string\n}\n*/\n\nvar stylesInDom = {/*\n  [id: number]: {\n    id: number,\n    refs: number,\n    parts: Array<(obj?: StyleObjectPart) => void>\n  }\n*/}\n\nvar head = hasDocument && (document.head || document.getElementsByTagName('head')[0])\nvar singletonElement = null\nvar singletonCounter = 0\nvar isProduction = false\nvar noop = function () {}\nvar options = null\nvar ssrIdKey = 'data-vue-ssr-id'\n\n// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n// tags it will allow on a page\nvar isOldIE = typeof navigator !== 'undefined' && /msie [6-9]\\b/.test(navigator.userAgent.toLowerCase())\n\nmodule.exports = function (parentId, list, _isProduction, _options) {\n  isProduction = _isProduction\n\n  options = _options || {}\n\n  var styles = listToStyles(parentId, list)\n  addStylesToDom(styles)\n\n  return function update (newList) {\n    var mayRemove = []\n    for (var i = 0; i < styles.length; i++) {\n      var item = styles[i]\n      var domStyle = stylesInDom[item.id]\n      domStyle.refs--\n      mayRemove.push(domStyle)\n    }\n    if (newList) {\n      styles = listToStyles(parentId, newList)\n      addStylesToDom(styles)\n    } else {\n      styles = []\n    }\n    for (var i = 0; i < mayRemove.length; i++) {\n      var domStyle = mayRemove[i]\n      if (domStyle.refs === 0) {\n        for (var j = 0; j < domStyle.parts.length; j++) {\n          domStyle.parts[j]()\n        }\n        delete stylesInDom[domStyle.id]\n      }\n    }\n  }\n}\n\nfunction addStylesToDom (styles /* Array<StyleObject> */) {\n  for (var i = 0; i < styles.length; i++) {\n    var item = styles[i]\n    var domStyle = stylesInDom[item.id]\n    if (domStyle) {\n      domStyle.refs++\n      for (var j = 0; j < domStyle.parts.length; j++) {\n        domStyle.parts[j](item.parts[j])\n      }\n      for (; j < item.parts.length; j++) {\n        domStyle.parts.push(addStyle(item.parts[j]))\n      }\n      if (domStyle.parts.length > item.parts.length) {\n        domStyle.parts.length = item.parts.length\n      }\n    } else {\n      var parts = []\n      for (var j = 0; j < item.parts.length; j++) {\n        parts.push(addStyle(item.parts[j]))\n      }\n      stylesInDom[item.id] = { id: item.id, refs: 1, parts: parts }\n    }\n  }\n}\n\nfunction createStyleElement () {\n  var styleElement = document.createElement('style')\n  styleElement.type = 'text/css'\n  head.appendChild(styleElement)\n  return styleElement\n}\n\nfunction addStyle (obj /* StyleObjectPart */) {\n  var update, remove\n  var styleElement = document.querySelector('style[' + ssrIdKey + '~=\"' + obj.id + '\"]')\n\n  if (styleElement) {\n    if (isProduction) {\n      // has SSR styles and in production mode.\n      // simply do nothing.\n      return noop\n    } else {\n      // has SSR styles but in dev mode.\n      // for some reason Chrome can't handle source map in server-rendered\n      // style tags - source maps in <style> only works if the style tag is\n      // created and inserted dynamically. So we remove the server rendered\n      // styles and inject new ones.\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  if (isOldIE) {\n    // use singleton mode for IE9.\n    var styleIndex = singletonCounter++\n    styleElement = singletonElement || (singletonElement = createStyleElement())\n    update = applyToSingletonTag.bind(null, styleElement, styleIndex, false)\n    remove = applyToSingletonTag.bind(null, styleElement, styleIndex, true)\n  } else {\n    // use multi-style-tag mode in all other cases\n    styleElement = createStyleElement()\n    update = applyToTag.bind(null, styleElement)\n    remove = function () {\n      styleElement.parentNode.removeChild(styleElement)\n    }\n  }\n\n  update(obj)\n\n  return function updateStyle (newObj /* StyleObjectPart */) {\n    if (newObj) {\n      if (newObj.css === obj.css &&\n          newObj.media === obj.media &&\n          newObj.sourceMap === obj.sourceMap) {\n        return\n      }\n      update(obj = newObj)\n    } else {\n      remove()\n    }\n  }\n}\n\nvar replaceText = (function () {\n  var textStore = []\n\n  return function (index, replacement) {\n    textStore[index] = replacement\n    return textStore.filter(Boolean).join('\\n')\n  }\n})()\n\nfunction applyToSingletonTag (styleElement, index, remove, obj) {\n  var css = remove ? '' : obj.css\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = replaceText(index, css)\n  } else {\n    var cssNode = document.createTextNode(css)\n    var childNodes = styleElement.childNodes\n    if (childNodes[index]) styleElement.removeChild(childNodes[index])\n    if (childNodes.length) {\n      styleElement.insertBefore(cssNode, childNodes[index])\n    } else {\n      styleElement.appendChild(cssNode)\n    }\n  }\n}\n\nfunction applyToTag (styleElement, obj) {\n  var css = obj.css\n  var media = obj.media\n  var sourceMap = obj.sourceMap\n\n  if (media) {\n    styleElement.setAttribute('media', media)\n  }\n  if (options.ssrId) {\n    styleElement.setAttribute(ssrIdKey, obj.id)\n  }\n\n  if (sourceMap) {\n    // https://developer.chrome.com/devtools/docs/javascript-debugging\n    // this makes source maps inside style tags work properly in Chrome\n    css += '\\n/*# sourceURL=' + sourceMap.sources[0] + ' */'\n    // http://stackoverflow.com/a/26603875\n    css += '\\n/*# sourceMappingURL=data:application/json;base64,' + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + ' */'\n  }\n\n  if (styleElement.styleSheet) {\n    styleElement.styleSheet.cssText = css\n  } else {\n    while (styleElement.firstChild) {\n      styleElement.removeChild(styleElement.firstChild)\n    }\n    styleElement.appendChild(document.createTextNode(css))\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/addStylesClient.js\n// module id = 19\n// module chunks = 0","/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nmodule.exports = function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader/lib/listToStyles.js\n// module id = 20\n// module chunks = 0","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file.\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nmodule.exports = function normalizeComponent (\n  rawScriptExports,\n  compiledTemplate,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */\n) {\n  var esModule\n  var scriptExports = rawScriptExports = rawScriptExports || {}\n\n  // ES6 modules interop\n  var type = typeof rawScriptExports.default\n  if (type === 'object' || type === 'function') {\n    esModule = rawScriptExports\n    scriptExports = rawScriptExports.default\n  }\n\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (compiledTemplate) {\n    options.render = compiledTemplate.render\n    options.staticRenderFns = compiledTemplate.staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = injectStyles\n  }\n\n  if (hook) {\n    var functional = options.functional\n    var existing = functional\n      ? options.render\n      : options.beforeCreate\n\n    if (!functional) {\n      // inject component registration as beforeCreate hook\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    } else {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return existing(h, context)\n      }\n    }\n  }\n\n  return {\n    esModule: esModule,\n    exports: scriptExports,\n    options: options\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/component-normalizer.js\n// module id = 21\n// module chunks = 0","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{staticClass:\"container\"},[_c('div',{staticClass:\"row  \"},[_c('div',{staticClass:\"col-lg-5 \"},[_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(0),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.title),expression:\"title\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.title)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.title=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(1),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.subtitle),expression:\"subtitle\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.subtitle)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.subtitle=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(2),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.author),expression:\"author\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.author)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.author=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(3),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.background),expression:\"background\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.background)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.background=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(4),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.publisher),expression:\"publisher\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.publisher)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.publisher=$event.target.value}}})]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(5),_vm._v(\" \"),_c('select',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.year),expression:\"year\"}],staticClass:\"custom-select years\",attrs:{\"id\":\"years\"},on:{\"change\":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = \"_value\" in o ? o._value : o.value;return val}); _vm.year=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.years),function(year){return _c('option',{domProps:{\"value\":year}},[_vm._v(_vm._s(year))])}),0)]),_vm._v(\" \"),_c('div',{staticClass:\"input-group mb-3\"},[_vm._m(6),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.font),expression:\"font\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"aria-label\":\"Sizing example input\",\"aria-describedby\":\"inputGroup-sizing-default\"},domProps:{\"value\":(_vm.font)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.font=$event.target.value}}})])]),_vm._v(\" \"),_c('div',{staticClass:\"col-lg-7 \",style:({ 'background-color' : _vm.background , 'border-radius': _vm.border+'px' })},[_c('div',{staticClass:\"container\"},[_c('div',[_c('v-stage',{ref:\"stage\",attrs:{\"config\":_vm.stageSize}},[_c('v-layer',[_c('v-text',{attrs:{\"config\":{text: this.title, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.subtitle, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.author, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.publisher, fontSize: this.font , draggable:true}}}),_vm._v(\" \"),_c('v-text',{attrs:{\"config\":{text: this.year, fontSize: this.font , draggable:true}}})],1),_vm._v(\" \"),_c('v-layer',{ref:\"dragLayer\"})],1)],1)])])])]),_vm._v(\" \"),_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-body\"},[_c('p',{style:({'font-size' : _vm.font+ 'px'})},[_vm._v(\"\\n  PLAY AND DESIGN YOUR BOOK COVER , YOU CAN DRAG AND DROP THE TEST WHEREVER YOU LIKE! ,\\n     AND YOU CAN ALSO CHANGE THE FONT SIZE DYNAMICALLY!. TRY CHANGING THE SIZE NOW  \\n         \")])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"TITLE\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"SUb Title\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Author Name\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Background Color\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Publisher\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('label',{staticClass:\"input-group-text\",attrs:{\"for\":\"inputGroupSelect01\"}},[_vm._v(\"Year\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"input-group-prepend\"},[_c('span',{staticClass:\"input-group-text\",staticStyle:{\"font-family\":\"cursive\"},attrs:{\"id\":\"inputGroup-sizing-default\"}},[_vm._v(\"Font Size\")])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-0696fa07\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = 22\n// module chunks = 0"],"sourceRoot":""}